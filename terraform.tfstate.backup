{
  "version": 4,
  "terraform_version": "1.9.8",
  "serial": 1352,
  "lineage": "5f2c2495-4da3-3352-44f3-6927a60c8aec",
  "outputs": {
    "cluster_endpoint": {
      "value": "https://6680164C92987A021E277663DFCC63BB.gr7.us-east-2.eks.amazonaws.com",
      "type": "string"
    },
    "cluster_name": {
      "value": "eks-FB8HPPt7",
      "type": "string"
    },
    "cluster_security_group_id": {
      "value": "sg-0a609798a18949091",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "us-east-2"
            ],
            "id": "us-east-2",
            "names": [
              "us-east-2a",
              "us-east-2b",
              "us-east-2c"
            ],
            "state": null,
            "timeouts": null,
            "zone_ids": [
              "use2-az1",
              "use2-az2",
              "use2-az3"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "eks",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-FB8HPPt7",
            "name": "eks-FB8HPPt7",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBNkdCTUhZU1BRTFBEUlQ1RyUyRjIwMjQxMjAzJTJGdXMtZWFzdC0yJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDEyMDNUMDMzNTQwWiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT0yY2Q2NGVkMTg2OWQxOTA4ZWM1NDJjZmYwMTIxMzU1YTdjMjg1N2UzNDA1MzY4N2JlNzkyNzc1MDIwMjNkNGYw"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_zone",
      "name": "walletguru",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:route53:::hostedzone/Z00522293EO3PH1CIDJ",
            "comment": "Managed by Terraform",
            "delegation_set_id": "",
            "force_destroy": false,
            "id": "Z00522293EO3PH1CIDJ",
            "name": "walletguru.co",
            "name_servers": [
              "ns-1212.awsdns-23.org",
              "ns-1687.awsdns-18.co.uk",
              "ns-261.awsdns-32.com",
              "ns-769.awsdns-32.net"
            ],
            "primary_name_server": "ns-261.awsdns-32.com",
            "tags": {},
            "tags_all": {},
            "vpc": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_sqs_queue",
      "name": "queue_notifications",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sqs:us-east-2:975050359967:paystreme-notifications-development",
            "content_based_deduplication": false,
            "deduplication_scope": "",
            "delay_seconds": 0,
            "fifo_queue": false,
            "fifo_throughput_limit": "",
            "id": "https://sqs.us-east-2.amazonaws.com/975050359967/paystreme-notifications-development",
            "kms_data_key_reuse_period_seconds": 300,
            "kms_master_key_id": "",
            "max_message_size": 262144,
            "message_retention_seconds": 60,
            "name": "paystreme-notifications-development",
            "name_prefix": "",
            "policy": "{\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Action\":\"SQS:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::975050359967:root\"},\"Resource\":\"arn:aws:sqs:us-east-2:975050359967:paystreme-notifications-development\",\"Sid\":\"__owner_statement\"}],\"Version\":\"2012-10-17\"}",
            "receive_wait_time_seconds": 0,
            "redrive_allow_policy": "",
            "redrive_policy": "",
            "sqs_managed_sse_enabled": true,
            "tags": {},
            "tags_all": {},
            "url": "https://sqs.us-east-2.amazonaws.com/975050359967/paystreme-notifications-development",
            "visibility_timeout_seconds": 30
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "vpn",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:subnet/subnet-09ee79be0c97f1f70",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.8.0/22",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-09ee79be0c97f1f70",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "975050359967",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "VPN subnet for client connections"
            },
            "tags_all": {
              "Name": "VPN subnet for client connections"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "resources_name",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": "0",
          "schema_version": 0,
          "attributes": {
            "id": "dev",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "dev",
                "resource_version": "70234",
                "uid": "1f8653b1-b383-4313-8458-9e755d2a0d7d"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service_v1",
      "name": "traefik-dashboard",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "traefik/traefik-dashboard",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "traefik-dashboard",
                "namespace": "traefik",
                "resource_version": "151787",
                "uid": "e312cb8a-bbcc-4593-942e-2965a9f44d6b"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.124.164",
                "cluster_ips": [
                  "172.20.124.164"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 9000,
                    "protocol": "TCP",
                    "target_port": "9000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/name": "traefik"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "suffix",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "FB8HPPt7",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "FB8HPPt7",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.cognito",
      "mode": "managed",
      "type": "aws_cognito_user_pool",
      "name": "user_pool",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_recovery_setting": [
              {
                "recovery_mechanism": [
                  {
                    "name": "verified_email",
                    "priority": 1
                  },
                  {
                    "name": "verified_phone_number",
                    "priority": 2
                  }
                ]
              }
            ],
            "admin_create_user_config": [
              {
                "allow_admin_create_user_only": false,
                "invite_message_template": []
              }
            ],
            "alias_attributes": null,
            "arn": "arn:aws:cognito-idp:us-east-2:975050359967:userpool/us-east-2_FfhRE9W1Y",
            "auto_verified_attributes": [],
            "creation_date": "2024-08-21T22:19:48Z",
            "custom_domain": "",
            "deletion_protection": "ACTIVE",
            "device_configuration": [],
            "domain": "",
            "email_configuration": [
              {
                "configuration_set": "",
                "email_sending_account": "DEVELOPER",
                "from_email_address": "no-reply@walletguru.co",
                "reply_to_email_address": "",
                "source_arn": "arn:aws:ses:us-east-2:975050359967:identity/walletguru.co"
              }
            ],
            "email_verification_message": "\u003c!DOCTYPE html\u003e  \u003chtml lang='en'\u003e  \u003chead\u003e  \u003cmeta charset='UTF-8'\u003e  \u003cmeta name='viewport' content='width=device-width, initial-scale=1.0'\u003e  \u003ctitle\u003e\u003c/title\u003e  \u003cstyle\u003e        body {            font-family: Arial, sans-serif;            background-color: #f4f4f4;            margin: 0;            padding: 0;        }        .email-container {            margin: 0 auto;            background-color: #ffffff;            padding: 20px;        }        .header {            display: flex;            justify-content: center; /* Center content horizontally */            align-items: center; /* Center content vertically */            padding-bottom: 20px;        }        .header img {          width: 50px;          height: 50px;          margin-right: 10px;        }        .content {            padding: 20px;            text-align: left;        }        .content h1 {            color: #000000;        }        .content p {            color: #333333;            font-size: 16px;            line-height: 1.5;        }        .activation-code {            font-weight: bold;            color: #000000;        }        .footer {            text-align: left;            color: #999999;            font-size: 12px;            padding-top: 20px;            padding-left: 20px;        }  \u003c/style\u003e  \u003c/head\u003e  \u003cbody\u003e  \u003cdiv class='email-container'\u003e  \u003cdiv class='header'\u003e  \u003cimg src='  https://walletguru-dev.s3.us-east-2.amazonaws.com/logo.png'  alt='Wallet Guru Logo'\u003e  \u003ch2\u003eWallet guru\u003c/h2\u003e  \u003c/div\u003e  \u003cdiv class='content'\u003e  \u003ch1\u003eHi,\u003c/h1\u003e  \u003cp\u003eWe received a request to update the password for your account.\u003c/p\u003e  \u003cp\u003eTo proceed, please use the following verification code (OTP): \u003cspan class='activation-code'\u003e{####}\u003c/span\u003e\u003c/p\u003e  \u003cbr\u003e  \u003cp\u003eThis OTP is valid for the next 05:00 minutes.\u003c/p\u003e  \u003c/div\u003e  \u003cdiv class='footer'\u003e  \u003cp\u003eIf you did not request this update, please disregard this email.\u003c/p\u003e  \u003cp\u003eIf you need further assistance, don't hesitate to contact us.\u003c/p\u003e  \u003cp\u003eBest regards, \u003cbr\u003e Wallet Guru Support Team\u003c/p\u003e  \u003c/div\u003e  \u003c/div\u003e  \u003c/body\u003e  \u003c/html\u003e",
            "email_verification_subject": "Verification Code to Update Your Password",
            "endpoint": "cognito-idp.us-east-2.amazonaws.com/us-east-2_FfhRE9W1Y",
            "estimated_number_of_users": 17,
            "id": "us-east-2_FfhRE9W1Y",
            "lambda_config": [],
            "last_modified_date": "2024-08-30T23:39:57Z",
            "mfa_configuration": "OFF",
            "name": "user-auth",
            "password_policy": [
              {
                "minimum_length": 8,
                "require_lowercase": true,
                "require_numbers": true,
                "require_symbols": true,
                "require_uppercase": true,
                "temporary_password_validity_days": 7
              }
            ],
            "schema": [
              {
                "attribute_data_type": "String",
                "developer_only_attribute": false,
                "mutable": true,
                "name": "email",
                "number_attribute_constraints": [],
                "required": true,
                "string_attribute_constraints": [
                  {
                    "max_length": "256",
                    "min_length": "1"
                  }
                ]
              },
              {
                "attribute_data_type": "String",
                "developer_only_attribute": false,
                "mutable": true,
                "name": "name",
                "number_attribute_constraints": [],
                "required": true,
                "string_attribute_constraints": [
                  {
                    "max_length": "256",
                    "min_length": "1"
                  }
                ]
              }
            ],
            "sms_authentication_message": "",
            "sms_configuration": [],
            "sms_verification_message": "Your verification code is {####}.",
            "software_token_mfa_configuration": [],
            "tags": {},
            "tags_all": {},
            "user_attribute_update_settings": [],
            "user_pool_add_ons": [],
            "username_attributes": [
              "email"
            ],
            "username_configuration": [],
            "verification_message_template": [
              {
                "default_email_option": "CONFIRM_WITH_CODE",
                "email_message": "\u003c!DOCTYPE html\u003e  \u003chtml lang='en'\u003e  \u003chead\u003e  \u003cmeta charset='UTF-8'\u003e  \u003cmeta name='viewport' content='width=device-width, initial-scale=1.0'\u003e  \u003ctitle\u003e\u003c/title\u003e  \u003cstyle\u003e        body {            font-family: Arial, sans-serif;            background-color: #f4f4f4;            margin: 0;            padding: 0;        }        .email-container {            margin: 0 auto;            background-color: #ffffff;            padding: 20px;        }        .header {            display: flex;            justify-content: center; /* Center content horizontally */            align-items: center; /* Center content vertically */            padding-bottom: 20px;        }        .header img {          width: 50px;          height: 50px;          margin-right: 10px;        }        .content {            padding: 20px;            text-align: left;        }        .content h1 {            color: #000000;        }        .content p {            color: #333333;            font-size: 16px;            line-height: 1.5;        }        .activation-code {            font-weight: bold;            color: #000000;        }        .footer {            text-align: left;            color: #999999;            font-size: 12px;            padding-top: 20px;            padding-left: 20px;        }  \u003c/style\u003e  \u003c/head\u003e  \u003cbody\u003e  \u003cdiv class='email-container'\u003e  \u003cdiv class='header'\u003e  \u003cimg src='  https://walletguru-dev.s3.us-east-2.amazonaws.com/logo.png'  alt='Wallet Guru Logo'\u003e  \u003ch2\u003eWallet guru\u003c/h2\u003e  \u003c/div\u003e  \u003cdiv class='content'\u003e  \u003ch1\u003eHi,\u003c/h1\u003e  \u003cp\u003eWe received a request to update the password for your account.\u003c/p\u003e  \u003cp\u003eTo proceed, please use the following verification code (OTP): \u003cspan class='activation-code'\u003e{####}\u003c/span\u003e\u003c/p\u003e  \u003cbr\u003e  \u003cp\u003eThis OTP is valid for the next 05:00 minutes.\u003c/p\u003e  \u003c/div\u003e  \u003cdiv class='footer'\u003e  \u003cp\u003eIf you did not request this update, please disregard this email.\u003c/p\u003e  \u003cp\u003eIf you need further assistance, don't hesitate to contact us.\u003c/p\u003e  \u003cp\u003eBest regards, \u003cbr\u003e Wallet Guru Support Team\u003c/p\u003e  \u003c/div\u003e  \u003c/div\u003e  \u003c/body\u003e  \u003c/html\u003e",
                "email_message_by_link": "",
                "email_subject": "Verification Code to Update Your Password",
                "email_subject_by_link": "",
                "sms_message": "Your verification code is {####}."
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.cognito",
      "mode": "managed",
      "type": "aws_cognito_user_pool_client",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_token_validity": 120,
            "allowed_oauth_flows": [],
            "allowed_oauth_flows_user_pool_client": false,
            "allowed_oauth_scopes": [],
            "analytics_configuration": [],
            "auth_session_validity": 3,
            "callback_urls": [],
            "client_secret": "aif4ne7pcp41qfu07frgs90p8kpnvvr0m37r7hb9q6m0jd1tcc7",
            "default_redirect_uri": "",
            "enable_propagate_additional_user_context_data": false,
            "enable_token_revocation": true,
            "explicit_auth_flows": [
              "ALLOW_ADMIN_USER_PASSWORD_AUTH",
              "ALLOW_CUSTOM_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH",
              "ALLOW_USER_PASSWORD_AUTH",
              "ALLOW_USER_SRP_AUTH"
            ],
            "generate_secret": true,
            "id": "3dvtbmiod1r2h9nrvkup8scm3",
            "id_token_validity": 60,
            "logout_urls": [],
            "name": "cognito-client",
            "prevent_user_existence_errors": "ENABLED",
            "read_attributes": [],
            "refresh_token_validity": 30,
            "supported_identity_providers": [],
            "token_validity_units": [
              {
                "access_token": "minutes",
                "id_token": "minutes",
                "refresh_token": "days"
              }
            ],
            "user_pool_id": "us-east-2_FfhRE9W1Y",
            "write_attributes": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_secret"
              }
            ]
          ],
          "dependencies": [
            "module.cognito.aws_cognito_user_pool.user_pool"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Attempts-AlarmHigh-cc9d8b26-19dd-42e0-bedb-4c37914ff762",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Attempts-AlarmLow-b7166a2c-a604-4475-8eda-80846a5ca92a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Attempts-ProvisionedCapacityHigh-19378c5f-e33a-401d-95bb-2f51f994bb53",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Attempts-ProvisionedCapacityLow-8fa2d5e1-7442-4636-85ba-28f0adad12f3"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:520ba998-8cf9-48bf-bdc3-6ad68e4311cb:resource/dynamodb/table/Attempts:policyName/DynamoDBReadCapacityUtilization:table/Attempts",
            "id": "DynamoDBReadCapacityUtilization:table/Attempts",
            "name": "DynamoDBReadCapacityUtilization:table/Attempts",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Attempts",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Attempts-AlarmHigh-b2c364ed-834e-4d04-84d2-857bc0ac80c3",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Attempts-AlarmLow-0e6f5a41-1fd2-4f02-9f5f-c11dd2c3ea9e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Attempts-ProvisionedCapacityHigh-840d2359-a127-4c69-8cce-5a4b1215ad0f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Attempts-ProvisionedCapacityLow-4a88b83a-b007-4e8f-89d1-07e783c2b4f3"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:5c38ed50-7e56-4f7e-8d00-1c8e61c2d8bd:resource/dynamodb/table/Attempts:policyName/DynamoDBWriteCapacityUtilization:table/Attempts",
            "id": "DynamoDBWriteCapacityUtilization:table/Attempts",
            "name": "DynamoDBWriteCapacityUtilization:table/Attempts",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Attempts",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26520ba9988cf948bfbdc36ad68e4311cb",
            "id": "table/Attempts",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Attempts",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d265c38ed507e564f7e8d001c8e61c2d8bd",
            "id": "table/Attempts",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Attempts",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Attempts",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Attempts",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Attempts",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "Attempts"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "Attempts"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments-AlarmHigh-b606960d-49e0-476c-bce9-fa88c495ea48",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments-AlarmLow-ee488f96-f35c-4b83-9991-c502791508ac",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityHigh-4e22bf16-d177-480a-8eb3-15334bf84c26",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityLow-562aecf2-099d-406b-bc55-a8fd01067387"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:18a03d45-3e3b-44ea-836e-a4fcf3bdf27f:resource/dynamodb/table/ClearPayments:policyName/DynamoDBReadCapacityUtilization:table/ClearPayments",
            "id": "DynamoDBReadCapacityUtilization:table/ClearPayments",
            "name": "DynamoDBReadCapacityUtilization:table/ClearPayments",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmHigh-90b33986-b8d6-42b8-9edb-b38c8e6ca79c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmLow-7b6485c6-1e63-4d9a-b812-9d380cfffccf",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-83520d13-93ff-46ca-8e27-73179b1520bd",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityLow-4edb2fe6-5dbc-4da1-ad35-3d80e217450b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:57a3b07d-f545-4b99-be0b-4083d8f7f603:resource/dynamodb/table/ClearPayments/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments-AlarmHigh-33ab2978-b67c-46da-8503-1ebe115767ad",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments-AlarmLow-c6525e6c-f255-4367-8515-85512def1e1b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityHigh-8c637a9f-ab6a-465c-9142-8d10a967f781",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityLow-34472301-f01f-4b62-87f2-d1b76a48f525"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:b378ce7a-bc1a-473e-b7b9-8d4d84a9fb36:resource/dynamodb/table/ClearPayments:policyName/DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "id": "DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "name": "DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmHigh-7739b5a4-b8e6-4196-99f0-561f99de80cf",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmLow-3b3d61ef-b67c-46bb-b19b-270d7135b07d",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-158f770f-0dc4-4c78-93bf-ff7b26fe6871",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityLow-69f54bd0-b870-4f35-b83a-56d48e4a1d78"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:f074aea2-4c9d-4763-9c98-cb3e45de4c94:resource/dynamodb/table/ClearPayments/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2618a03d453e3b44ea836ea4fcf3bdf27f",
            "id": "table/ClearPayments",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2657a3b07df5454b99be0b4083d8f7f603",
            "id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26b378ce7abc1a473eb7b98d4d84a9fb36",
            "id": "table/ClearPayments",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26f074aea24c9d47639c98cb3e45de4c94",
            "id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/ClearPayments",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "ClearPayments",
            "import_table": [],
            "local_secondary_index": [],
            "name": "ClearPayments",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "ClearPayments"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "ClearPayments"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations-AlarmHigh-59d11d10-9ed6-472c-bd3e-5a190839b068",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations-AlarmLow-7cbdc5e8-2996-426a-a593-98f6d98d349c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityHigh-0aa58c2d-029b-4475-aa3a-3c31ede52670",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityLow-c357581a-b954-4c4b-b8ce-48876fff5a4a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:00bee85b-0741-410f-8507-c1d93586fa35:resource/dynamodb/table/FeeConfigurations:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmHigh-c7e3b0d0-44f5-4b89-9810-483e5a031c55",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmLow-f21ac540-924a-4647-bd2c-161c35c6b8e0",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityHigh-1c37fd85-36b6-4d01-8cb4-367cf479c829",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityLow-7bcfc9e7-c449-4840-989a-22a0eb02d538"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:f04f7477-51c1-4504-85a7-cf7cda535f94:resource/dynamodb/table/FeeConfigurations/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmHigh-d90cf018-09fb-4272-9353-9dfc0fe07683",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmLow-99a49dca-86e9-438b-bcb7-f388e666f5a2",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-5ab60c99-8753-4802-bd8e-68de62cbb465",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityLow-c7a98bdc-5a69-4fed-bd71-8be2e2083d71"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:7a6e3fc1-faec-4274-b12a-f84ee78f02bc:resource/dynamodb/table/FeeConfigurations/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations-AlarmHigh-9611d864-a82f-4a8f-8423-d30ddd56c5aa",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations-AlarmLow-500583c5-1234-4b6f-b24b-71412347b461",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityHigh-4bdedd7b-1ca5-4fa5-9278-cc58c091bed6",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityLow-a1e2db51-4af9-43ca-af1d-615278656cfe"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:496aec55-874f-4e9c-9408-1085986d0ec1:resource/dynamodb/table/FeeConfigurations:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmHigh-132fb977-6335-49ca-b6a4-9b056b3d4042",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmLow-23d0893d-ca54-4475-b2ee-14ff31c04aa7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityHigh-81273135-385f-418f-87cc-b68c83ccaecd",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityLow-15cf5e4b-d2be-4945-a66f-494e44399089"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:fa68ff2d-31dd-46f7-b46f-dd5bc7fa9142:resource/dynamodb/table/FeeConfigurations/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmHigh-1ce7a31a-9491-4815-b5c1-8ce2236c48c7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmLow-727bc149-f368-4916-b43d-2064be287f4a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-a13530da-5aab-4947-9c25-606194ed7a91",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityLow-d2a4485a-aaa5-4261-a4f7-e53deb0ca6bd"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:901238c3-5f58-4513-bcca-1c5c305bf835:resource/dynamodb/table/FeeConfigurations/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2600bee85b0741410f8507c1d93586fa35",
            "id": "table/FeeConfigurations",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26f04f747751c1450485a7cf7cda535f94",
            "id": "table/FeeConfigurations/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d267a6e3fc1faec4274b12af84ee78f02bc",
            "id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26496aec55874f4e9c94081085986d0ec1",
            "id": "table/FeeConfigurations",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26fa68ff2d31dd46f7b46fdd5bc7fa9142",
            "id": "table/FeeConfigurations/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26901238c35f584513bcca1c5c305bf835",
            "id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/FeeConfigurations",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "FeeConfigurations",
            "import_table": [],
            "local_secondary_index": [],
            "name": "FeeConfigurations",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "FeeConfigurations"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "FeeConfigurations"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules-AlarmHigh-bd20582e-fc9a-4422-b857-676f52c643b2",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules-AlarmLow-5c913d42-50d2-4341-af5a-6631761f3ee3",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules-ProvisionedCapacityHigh-6183eb33-c545-453c-89bf-f21e224f9361",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules-ProvisionedCapacityLow-ef97f3aa-008f-4d5b-b9f7-a43a9c4a01fb"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:f35501e3-dab6-453a-aa90-563e58ec43ee:resource/dynamodb/table/Modules:policyName/DynamoDBReadCapacityUtilization:table/Modules",
            "id": "DynamoDBReadCapacityUtilization:table/Modules",
            "name": "DynamoDBReadCapacityUtilization:table/Modules",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmHigh-6b49107f-8386-468e-8949-1a52631539f7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmLow-66388d37-7509-444c-b90e-d6ad129e5470",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityHigh-1b57e448-b017-4849-8dbb-cbb4b045df4e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityLow-5311faf0-e6ec-4ae9-a087-24ff6d7d1d6f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:ed10dc35-28e1-4df5-976b-2a388e79f1b5:resource/dynamodb/table/Modules/index/BelongsIndex:policyName/DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules-AlarmHigh-ce3a179c-a775-48a7-b451-593645260ebd",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules-AlarmLow-f9e861eb-cda6-47e0-94d9-7424ef154e0f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules-ProvisionedCapacityHigh-7810883e-3261-4dd1-8326-56a9ace4890c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules-ProvisionedCapacityLow-002e1eda-6df3-40c3-8521-a76c6e7ab3cf"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:5f00e576-679c-499b-bc97-03952082abee:resource/dynamodb/table/Modules:policyName/DynamoDBWriteCapacityUtilization:table/Modules",
            "id": "DynamoDBWriteCapacityUtilization:table/Modules",
            "name": "DynamoDBWriteCapacityUtilization:table/Modules",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmHigh-d80d0fd0-78e6-46f7-8df7-f4988cd1d0c5",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmLow-519a4b65-8d07-4ed3-8a60-72b533378041",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityHigh-a78324d2-6455-4e3d-9839-8861340c6c09",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityLow-f00c95dc-733c-4f17-8e2a-4824d94903b0"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:fc02c803-9ef3-48d8-a4ce-03eb7d97f5b1:resource/dynamodb/table/Modules/index/BelongsIndex:policyName/DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26f35501e3dab6453aaa90563e58ec43ee",
            "id": "table/Modules",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26ed10dc3528e14df5976b2a388e79f1b5",
            "id": "table/Modules/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules/index/BelongsIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d265f00e576679c499bbc9703952082abee",
            "id": "table/Modules",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26fc02c8039ef348d8a4ce03eb7d97f5b1",
            "id": "table/Modules/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules/index/BelongsIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Modules",
            "attribute": [
              {
                "name": "Belongs",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Belongs",
                "name": "BelongsIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Modules",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Modules",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "Modules"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "Modules"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings-AlarmHigh-79b48f54-ccd7-4d11-97cd-54de3e2346a1",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings-AlarmLow-7ce5eef8-b1cd-443e-b89a-926277efb070",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityHigh-aefadb42-de59-4245-b08c-6d78ff285145",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityLow-a7dfdd42-d9bc-4b67-8b60-a3877b54186d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:93ab360b-722c-4a0a-b13b-1c5a2d055897:resource/dynamodb/table/NotificationSettings:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmHigh-fe5c4144-3b9a-4a0c-82c1-3b515552e2cd",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmLow-eadc2fa0-0b97-4a7d-9577-0c09151fa1b8",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityHigh-ac1a4582-5492-4cc9-8f3d-a34ac8f320c6",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityLow-a1f8f1dc-ec8e-4d51-b8f7-38fb01094e22"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:4615f561-1a07-49e2-a618-e5a7e5c9014d:resource/dynamodb/table/NotificationSettings/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmHigh-142f5dac-31a8-428c-a970-d544af90234e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmLow-530111b8-6069-4cc4-8332-80e7bce33009",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityHigh-30c8599d-ceeb-4c0c-965f-009c41fe0fab",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityLow-d806df00-91ea-4044-931d-8611075fb6a7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:cc9e26b9-7967-4278-9a44-d98c9c53f494:resource/dynamodb/table/NotificationSettings/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings-AlarmHigh-03598cac-298b-47c1-9cb4-3ec0a3851b3d",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings-AlarmLow-dd927771-471c-480a-b282-58cd84f3b877",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityHigh-a4a106ea-9ddf-491f-86af-f59dfee6429e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityLow-8eaf9dc6-710b-41db-9a83-f2f7fc8214dd"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:212b1b86-c846-48af-bdf6-34249cd89104:resource/dynamodb/table/NotificationSettings:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmHigh-47c92038-075a-4547-853b-02bf2ee5f25c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmLow-b879ac60-471f-4e74-8f45-ce884b60baf4",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityHigh-4cd39e0a-75e6-4828-ae46-f9603d498776",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityLow-bde9f67d-6c98-4a75-a89d-bc70054776e0"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:90e1857e-f5b4-4604-99f5-0524fff7159b:resource/dynamodb/table/NotificationSettings/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmHigh-5141ec62-2071-4eb1-aa88-e1eb4a0d15c4",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmLow-3a1a0481-ee84-489a-a4c3-c2b11634d552",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityHigh-81cadf9d-cc77-44c7-9a12-a369017e5cb6",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityLow-d1e2edaa-d881-4d75-a64b-17bdb5912288"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:76e94cdb-4a1e-4494-a831-2ee5e2181f8c:resource/dynamodb/table/NotificationSettings/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2693ab360b722c4a0ab13b1c5a2d055897",
            "id": "table/NotificationSettings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d264615f5611a0749e2a618e5a7e5c9014d",
            "id": "table/NotificationSettings/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26cc9e26b9796742789a44d98c9c53f494",
            "id": "table/NotificationSettings/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26212b1b86c84648afbdf634249cd89104",
            "id": "table/NotificationSettings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2690e1857ef5b4460499f50524fff7159b",
            "id": "table/NotificationSettings/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2676e94cdb4a1e4494a8312ee5e2181f8c",
            "id": "table/NotificationSettings/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/NotificationSettings",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "NotificationSettings",
            "import_table": [],
            "local_secondary_index": [],
            "name": "NotificationSettings",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "NotificationSettings"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "NotificationSettings"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps-AlarmHigh-3ef0315b-0066-41ce-beb2-37213405114f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps-AlarmLow-cbcaea8b-ffee-4234-8119-1387e55399f4",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps-ProvisionedCapacityHigh-0d8f3934-2f33-43b2-abd2-f9535b096297",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps-ProvisionedCapacityLow-92e180a8-5788-4e09-a47d-7ca71d7abd78"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:d644a56d-b7c5-43e6-98a4-0ee9ac4b37b0:resource/dynamodb/table/Otps:policyName/DynamoDBReadCapacityUtilization:table/Otps",
            "id": "DynamoDBReadCapacityUtilization:table/Otps",
            "name": "DynamoDBReadCapacityUtilization:table/Otps",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmHigh-9d07754b-5002-4fb6-a20e-6a3a42d4221b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmLow-fabd5222-a954-4cb5-bf8c-439685e0fbeb",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityHigh-d3a64a06-64df-4345-a8a7-f70c68143f1e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityLow-8621f619-4efc-4382-ab87-8c3511d13602"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:58c7d421-794a-4a2b-9fd3-0666390a35b0:resource/dynamodb/table/Otps/index/EmailIndex:policyName/DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmHigh-b27ce2be-71c5-4086-83f4-41f2f25c003b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmLow-d7d2dd8d-09ab-4412-b0c6-8346c201ba33",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityHigh-c4ddbb9d-a715-48e3-a736-fc19d775e288",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityLow-63c628f3-a5b8-4f89-9473-4ab825b8bd39"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:daa4e573-739d-4b95-aa3e-5a19bb602e86:resource/dynamodb/table/Otps/index/OtpIndex:policyName/DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/OtpIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps-AlarmHigh-4b7bd54d-26e1-46fb-a600-42f106636b4c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps-AlarmLow-71a08b3a-edbd-4dff-b299-ec5515272a1e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps-ProvisionedCapacityHigh-18c2cec7-1d87-4076-8abf-1ead6cb6fc0b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps-ProvisionedCapacityLow-c9872bc7-95f6-455f-93bf-fa37793a6b5a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:7d011ce6-6c20-4666-8809-2828bfcbcac2:resource/dynamodb/table/Otps:policyName/DynamoDBWriteCapacityUtilization:table/Otps",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmHigh-34f8145b-3470-411a-87d4-024cf313a37d",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmLow-6059ed37-5ada-4792-a67e-b929ba48d115",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityHigh-5b6df6bf-cf23-421a-ae3a-a6e26b97b021",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityLow-4156b579-2921-415a-8797-21bb2d7c7a64"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:51b4e444-7904-4e90-88d9-b15c5541f30b:resource/dynamodb/table/Otps/index/EmailIndex:policyName/DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmHigh-226605b6-441b-4978-ab35-5a7686400eac",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmLow-80f141b9-09d4-43d5-817f-ad06aa020e87",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityHigh-c8656736-34f7-4c79-8879-39b7a0737e56",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityLow-ec3f998f-4571-4147-9ec7-a76cae49b765"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:df2d89b9-d782-4b13-aeb5-574e3c73e716:resource/dynamodb/table/Otps/index/OtpIndex:policyName/DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/OtpIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26d644a56db7c543e698a40ee9ac4b37b0",
            "id": "table/Otps",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2658c7d421794a4a2b9fd30666390a35b0",
            "id": "table/Otps/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/EmailIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26daa4e573739d4b95aa3e5a19bb602e86",
            "id": "table/Otps/index/OtpIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/OtpIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d267d011ce66c20466688092828bfcbcac2",
            "id": "table/Otps",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2651b4e44479044e9088d9b15c5541f30b",
            "id": "table/Otps/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/EmailIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26df2d89b9d7824b13aeb5574e3c73e716",
            "id": "table/Otps/index/OtpIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/OtpIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Otps",
            "attribute": [
              {
                "name": "Email",
                "type": "S"
              },
              {
                "name": "Otp",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Email",
                "name": "EmailIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Otp",
                "name": "OtpIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Email",
            "id": "Otps",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Otps",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "Otps"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "Otps"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "Ttl",
                "enabled": true
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters-AlarmHigh-d11687f1-be8a-4672-bd32-766177ede387",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters-AlarmLow-54ace143-f2de-495b-ad08-6f13bc372a27",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityHigh-db32cb24-006b-4304-8578-d0938f648144",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityLow-d713706f-b638-4b1f-b746-1531c29d0061"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:49f11658-63ad-49d1-ac2d-454c6d7ea30f:resource/dynamodb/table/PaymentParameters:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmHigh-623fee15-f294-4959-9590-260f112c56b9",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmLow-bce46e06-452a-4879-a712-3b2d9bc28148",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-e22d2104-f2a4-4b6d-af90-f65e07f07b4a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityLow-1b78d3d4-32f4-4866-8303-710a914182bf"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:566ca3e0-57a1-403d-963f-617dbd69e725:resource/dynamodb/table/PaymentParameters/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmHigh-0dca8fc4-6b3f-40e1-a6f0-ca5a40f67761",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmLow-dd5c158c-7022-4665-8820-6b7ec4f5e3d1",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityHigh-a4688ded-b83a-4913-8f05-2704d63e927b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityLow-7cdf3624-d48c-4e37-a894-647233c34c23"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:f1ff17bd-1e49-4113-bd21-344525d12d2a:resource/dynamodb/table/PaymentParameters/index/IntervalIndex:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters-AlarmHigh-442cead1-792b-45aa-afa0-49a495ddeac9",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters-AlarmLow-7f603e8d-6157-459d-b06b-4ec76a6035f1",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityHigh-0a3b3cef-b352-43e6-833f-5ab157e7e6ed",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityLow-93c77137-5446-4691-a1f2-e6f281462e0b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:6f8725d3-c1ca-4e64-9b07-e18d813c989f:resource/dynamodb/table/PaymentParameters:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmHigh-531fb877-ec07-4a8d-8da1-3d174d2ccc9b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmLow-761d157f-e63d-458e-bb0c-4e790257df6f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-3eec9350-2061-46aa-aab9-1696e2fd6e4c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityLow-0ab92068-35c7-4ac6-bd4c-0394bd6e5a53"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:b00d5f61-a0dd-4a43-ad2c-e2abf4472810:resource/dynamodb/table/PaymentParameters/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmHigh-e14148bf-c66c-4129-8d23-d0e06176c541",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmLow-b07008ab-a127-472e-8ec2-ef63b7c01921",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityHigh-f13b528e-6d37-498a-93c8-287b86616190",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityLow-2f8fcc76-9f28-4348-96e1-abcd915070e1"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:c9c1be9e-2935-469e-a437-ef7a32568a3a:resource/dynamodb/table/PaymentParameters/index/IntervalIndex:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2649f1165863ad49d1ac2d454c6d7ea30f",
            "id": "table/PaymentParameters",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26566ca3e057a1403d963f617dbd69e725",
            "id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26f1ff17bd1e494113bd21344525d12d2a",
            "id": "table/PaymentParameters/index/IntervalIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d266f8725d3c1ca4e649b07e18d813c989f",
            "id": "table/PaymentParameters",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26b00d5f61a0dd4a43ad2ce2abf4472810",
            "id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26c9c1be9e2935469ea437ef7a32568a3a",
            "id": "table/PaymentParameters/index/IntervalIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/PaymentParameters",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "Interval",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Interval",
                "name": "IntervalIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "PaymentParameters",
            "import_table": [],
            "local_secondary_index": [],
            "name": "PaymentParameters",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "PaymentParameters"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "PaymentParameters"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Providers-AlarmHigh-70cd9ee6-986a-4edf-9cee-366c4693f854",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Providers-AlarmLow-57a0b04f-acee-4d95-9110-27920af5968e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Providers-ProvisionedCapacityHigh-1fb324c9-1b45-49a7-820a-ef366ce4bb8f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Providers-ProvisionedCapacityLow-1a1980c3-3ff2-447a-8bb1-60c053ebd8fd"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:1adf4549-01c4-432f-885e-7c4822448ed1:resource/dynamodb/table/Providers:policyName/DynamoDBReadCapacityUtilization:table/Providers",
            "id": "DynamoDBReadCapacityUtilization:table/Providers",
            "name": "DynamoDBReadCapacityUtilization:table/Providers",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Providers",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Providers-AlarmHigh-37617c98-3a3e-4bec-bc16-73a8276dcd4b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Providers-AlarmLow-dc7d6a28-f0e7-4c86-9488-44d3978a6d48",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Providers-ProvisionedCapacityHigh-006d7e9c-54c7-4fa8-8834-68f93667170c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Providers-ProvisionedCapacityLow-fd4aa32a-2fc0-4903-98fa-10812c225d21"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:3003ad28-46bc-4cc5-94c5-deda4fb07240:resource/dynamodb/table/Providers:policyName/DynamoDBWriteCapacityUtilization:table/Providers",
            "id": "DynamoDBWriteCapacityUtilization:table/Providers",
            "name": "DynamoDBWriteCapacityUtilization:table/Providers",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Providers",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d261adf454901c4432f885e7c4822448ed1",
            "id": "table/Providers",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Providers",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d263003ad2846bc4cc594c5deda4fb07240",
            "id": "table/Providers",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Providers",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Providers",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Providers",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Providers",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "Providers"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "Providers"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Rates-AlarmHigh-bccb2f94-940a-49f8-83e5-989f92abe4fc",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Rates-AlarmLow-b1a94914-06ea-40b4-ad0d-75ea8cfbbba2",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Rates-ProvisionedCapacityHigh-008cc237-a89d-49c4-8326-128a3ff4ecd7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Rates-ProvisionedCapacityLow-10f91746-f5a3-4212-ac2f-d65b7f6d7ca1"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:0674ce70-4153-4c18-855e-b090defe1cf2:resource/dynamodb/table/Rates:policyName/DynamoDBReadCapacityUtilization:table/Rates",
            "id": "DynamoDBReadCapacityUtilization:table/Rates",
            "name": "DynamoDBReadCapacityUtilization:table/Rates",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Rates",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Rates-AlarmHigh-313a2e0a-bf0a-47eb-baf8-98c0553ce7ee",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Rates-AlarmLow-cfdb4954-808b-45a9-b2c4-2ae2ef98c9f9",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Rates-ProvisionedCapacityHigh-a13f1733-81ef-4c48-8e01-00209ec5455e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Rates-ProvisionedCapacityLow-6732d076-71e7-432d-9af6-531678218f11"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:2f9ac675-4331-4045-8d32-4068fa6a3db6:resource/dynamodb/table/Rates:policyName/DynamoDBWriteCapacityUtilization:table/Rates",
            "id": "DynamoDBWriteCapacityUtilization:table/Rates",
            "name": "DynamoDBWriteCapacityUtilization:table/Rates",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Rates",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d260674ce7041534c18855eb090defe1cf2",
            "id": "table/Rates",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Rates",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d262f9ac675433140458d324068fa6a3db6",
            "id": "table/Rates",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Rates",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Rates",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Rates",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Rates",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "Rates"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "Rates"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds-AlarmHigh-85945404-553b-4013-8ce1-bee60973abc7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds-AlarmLow-881d76b4-d8fc-4608-923f-d15e6b2b1668",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds-ProvisionedCapacityHigh-bdcc7ae0-2be8-4bfe-9469-ce2b5b7c914d",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds-ProvisionedCapacityLow-4aed8bb0-0c33-413f-9ee8-b0cfb40ce75a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:9eb6e9d4-1a7e-4da4-86d9-2ec39be67c58:resource/dynamodb/table/Refunds:policyName/DynamoDBReadCapacityUtilization:table/Refunds",
            "id": "DynamoDBReadCapacityUtilization:table/Refunds",
            "name": "DynamoDBReadCapacityUtilization:table/Refunds",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmHigh-b4592691-770e-4f2b-851b-9e3c9949f433",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmLow-bcf72d47-eb96-4634-81b8-717af840fdbb",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-0dd4c796-7211-4e6f-a425-2f63552dcabe",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityLow-c8fe90c7-7bca-40e9-9b11-c55bb725103e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:f3f83e96-c68a-4559-acbb-6c5c19b9a7ee:resource/dynamodb/table/Refunds/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds-AlarmHigh-f2a19e7c-530c-472b-b7e6-768a00416957",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds-AlarmLow-ca381d40-0bc3-4639-9a24-d73da91c0ef4",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds-ProvisionedCapacityHigh-a3b6f48f-92d7-4f28-87b8-161bc0392271",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds-ProvisionedCapacityLow-e9dda9c5-8530-43fa-b142-a7078018b2c9"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:ca0ec1e3-8b6d-4d1f-b479-5f4e70b3b544:resource/dynamodb/table/Refunds:policyName/DynamoDBWriteCapacityUtilization:table/Refunds",
            "id": "DynamoDBWriteCapacityUtilization:table/Refunds",
            "name": "DynamoDBWriteCapacityUtilization:table/Refunds",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmHigh-70c7e522-0719-4091-a963-cdbe8469d2df",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmLow-e9a22d33-d033-4cec-a07f-f26b23b9dca1",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-221258c4-ea8e-40ed-844f-e3fa937d8e44",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityLow-97010212-849f-4a47-b911-a02d55f414fd"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:74819e2b-6891-47a2-94bd-71313658eaa8:resource/dynamodb/table/Refunds/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d269eb6e9d41a7e4da486d92ec39be67c58",
            "id": "table/Refunds",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26f3f83e96c68a4559acbb6c5c19b9a7ee",
            "id": "table/Refunds/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26ca0ec1e38b6d4d1fb4795f4e70b3b544",
            "id": "table/Refunds",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2674819e2b689147a294bd71313658eaa8",
            "id": "table/Refunds/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Refunds",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Refunds",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Refunds",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "Refunds"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "Refunds"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles-AlarmHigh-565c47e8-447b-4135-8438-3dd85a95b524",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles-AlarmLow-842b672d-6a45-435c-aca1-a3163e1107f8",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles-ProvisionedCapacityHigh-736b201d-637b-4c93-a092-854a3ec9c436",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles-ProvisionedCapacityLow-0007c606-a8ef-41c5-85d3-26c390e6bd08"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:073e960d-a4c7-4bc3-bb83-3a7720e40101:resource/dynamodb/table/Roles:policyName/DynamoDBReadCapacityUtilization:table/Roles",
            "id": "DynamoDBReadCapacityUtilization:table/Roles",
            "name": "DynamoDBReadCapacityUtilization:table/Roles",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmHigh-98230eba-ea2e-45c7-9deb-3d709b4e5001",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmLow-d07ec366-a81e-40a9-9537-2eb285918a6b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityHigh-99f49682-3cb7-4096-ab8f-c870c768f81c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityLow-6b42b0b4-bbd6-4d14-aaba-321f47af56db"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:3f94cd75-c918-43d5-a7ea-34631103e02b:resource/dynamodb/table/Roles/index/ProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles-AlarmHigh-f45cd864-4847-4540-a4ae-913da059509f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles-AlarmLow-5993b31f-be9e-43c2-a402-7d6f2db737c9",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles-ProvisionedCapacityHigh-f5a8d6ec-daea-4a97-af34-feccf5dc2156",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles-ProvisionedCapacityLow-5dfbb783-7bfb-414d-ad0c-b4b2854764c6"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:b3926b08-e01e-4bc6-8107-ec1384502ce0:resource/dynamodb/table/Roles:policyName/DynamoDBWriteCapacityUtilization:table/Roles",
            "id": "DynamoDBWriteCapacityUtilization:table/Roles",
            "name": "DynamoDBWriteCapacityUtilization:table/Roles",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmHigh-f2109fc9-8182-4df5-a67d-66e9cbe7162c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmLow-e0a4c696-e31b-4a8d-a686-2c041c6df4b2",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityHigh-91d7fb26-697d-4f89-8ac6-cad018263feb",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityLow-be3ab787-8947-41e5-b8be-db21f76afc26"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:bb8b3ce4-35bf-45d9-893a-d3fc407fdf1a:resource/dynamodb/table/Roles/index/ProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26073e960da4c74bc3bb833a7720e40101",
            "id": "table/Roles",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d263f94cd75c91843d5a7ea34631103e02b",
            "id": "table/Roles/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26b3926b08e01e4bc68107ec1384502ce0",
            "id": "table/Roles",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26bb8b3ce435bf45d9893ad3fc407fdf1a",
            "id": "table/Roles/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Roles",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ProviderId",
                "name": "ProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Roles",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Roles",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "Roles"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "Roles"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings-AlarmHigh-8e745327-aed6-4e03-b6ba-38db1795bb1c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings-AlarmLow-5eb35f2a-006e-47eb-9296-21778f062edc",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings-ProvisionedCapacityHigh-a77ee5f6-b35a-4880-85d6-0b88f23b275f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings-ProvisionedCapacityLow-50e69759-8a9c-4414-8830-0f7dbcb2daf6"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:f8289f31-9252-4e82-86a7-8f5344ff351f:resource/dynamodb/table/Settings:policyName/DynamoDBReadCapacityUtilization:table/Settings",
            "id": "DynamoDBReadCapacityUtilization:table/Settings",
            "name": "DynamoDBReadCapacityUtilization:table/Settings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmHigh-f027c3f0-5fc8-4757-a09f-d6f74f2fcd25",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmLow-cfc744bb-4c78-4b05-8dd9-24bb2cd357a5",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityHigh-0bf5e7d1-f1c6-4956-853a-f4c309e7d5c6",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityLow-43e51060-ed65-4576-8c0b-aca2232a9679"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:00240ddd-9ea3-4301-8677-a7c65277880e:resource/dynamodb/table/Settings/index/BelongsIndex:policyName/DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings-AlarmHigh-f9b769bc-c880-4768-bf7d-21ed7cba54c5",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings-AlarmLow-740f5556-386c-4264-8632-9ea381d81532",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings-ProvisionedCapacityHigh-546e222f-83d3-4484-bf94-9c30b48f542d",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings-ProvisionedCapacityLow-0e4c4207-2fd5-4e86-b89f-34c2fcd89ec7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:74034d24-0439-4020-974c-746a4779dd4a:resource/dynamodb/table/Settings:policyName/DynamoDBWriteCapacityUtilization:table/Settings",
            "id": "DynamoDBWriteCapacityUtilization:table/Settings",
            "name": "DynamoDBWriteCapacityUtilization:table/Settings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmHigh-44d1b996-3f09-45dd-b921-c66096c526ee",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmLow-29dd0de7-385b-4b60-a6ac-059abc6f8df6",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityHigh-915797fb-a550-419d-a430-2fae24245b58",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityLow-e25ab40e-d4a5-44aa-a9e5-05019a5e4f8b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:bebc2385-5727-47f3-8055-102a5e06bd81:resource/dynamodb/table/Settings/index/BelongsIndex:policyName/DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26f8289f3192524e8286a78f5344ff351f",
            "id": "table/Settings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2600240ddd9ea343018677a7c65277880e",
            "id": "table/Settings/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings/index/BelongsIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2674034d2404394020974c746a4779dd4a",
            "id": "table/Settings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26bebc2385572747f38055102a5e06bd81",
            "id": "table/Settings/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings/index/BelongsIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Settings",
            "attribute": [
              {
                "name": "Belongs",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Belongs",
                "name": "BelongsIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Settings",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Settings",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "Settings"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "Settings"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys-AlarmHigh-ced9b709-63fa-4381-b22d-5f850c9c9eb0",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys-AlarmLow-dad6b753-8c19-466a-90ca-e165333fade2",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityHigh-f2a32b9a-4f82-4f38-9bbe-f0966cc71358",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityLow-abe26ad8-5533-4ade-a252-32c2fdb71b2c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:6289f842-8ef3-42bf-9594-3a955a366163:resource/dynamodb/table/SocketKeys:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmHigh-490f7332-9277-421e-bac4-b656fb71b491",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmLow-aa5290c2-ab3c-4f3f-b25e-d15957a896eb",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityHigh-1a870156-6380-4429-ba72-12e1d760bc05",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityLow-7bef18ea-6c53-4514-804f-1f019773d060"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:6a551fd5-dbf1-4d0c-b021-1f908da5888e:resource/dynamodb/table/SocketKeys/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmHigh-de507ec9-9721-4aae-95a0-22b6f367e3e2",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmLow-b564f27b-2aac-44a0-8226-9cbb23eced95",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-00a3ddfb-2661-4158-9c08-d8b30d20acac",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityLow-c3e787fb-ba87-4dd4-9b93-ed21761cf17f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:9e9fca4c-6ee2-44d6-a269-7bbd17c301aa:resource/dynamodb/table/SocketKeys/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmHigh-65478b30-4aa5-4100-809a-949178bb3744",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmLow-cd1c37b7-f570-490d-83db-476c767713b8",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityHigh-e80f06f8-7056-4361-94a1-8d24b97e191e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityLow-8304f5ed-4182-4d53-864e-35dc1f2f71e4"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:01ee0ded-8196-4fc2-aa0e-0a028dfe9747:resource/dynamodb/table/SocketKeys/index/PublicKeyIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys-AlarmHigh-ceb18225-7100-44ec-b526-1c07a5dcc721",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys-AlarmLow-ed1c50de-10af-49a9-a370-2dec48624aaa",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityHigh-627f11d4-8137-4bba-8f14-dee8a8024d0a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityLow-8bc88917-fdec-47bd-a182-7e3d7bac797c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:d022db4b-9f21-403c-8b13-cb10f9444fa3:resource/dynamodb/table/SocketKeys:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmHigh-d5eaffc2-22d8-4095-843e-cb3c0cf9e57e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmLow-ab266711-3380-4dec-9041-3e5ad20dee6d",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityHigh-a24f918b-da94-4b92-9f9f-36cf3cfd2d9a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityLow-e797813a-de82-4496-a3ca-da2f2fd1f6d6"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:1cce2e79-b931-4dc6-989a-21a3e94e8e8f:resource/dynamodb/table/SocketKeys/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmHigh-256116ca-57a5-4391-80c1-ec425c3e111e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmLow-d3cacd47-4fba-4c01-b2ea-d4f497c8e8bd",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-b8bc53ec-4a5c-4bb3-aa64-0ba10c706dcd",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityLow-f6f823e3-d5a9-4f91-9e3b-396e3ff445e8"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:c0b1268b-284e-455b-85c7-a56c5a9af2f6:resource/dynamodb/table/SocketKeys/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmHigh-32811322-32ab-4041-a61d-f6b6ce8b3aae",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmLow-86e2e913-5579-462a-892b-d71f80e47e3a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityHigh-7ed1f6aa-ce64-4367-adbd-f5bbb20ceaae",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityLow-6a54d4c6-e6f0-4fde-ab36-44c1400305e5"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:cc757031-fa72-4bed-b2de-a52f7a6f0872:resource/dynamodb/table/SocketKeys/index/PublicKeyIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d266289f8428ef342bf95943a955a366163",
            "id": "table/SocketKeys",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d266a551fd5dbf14d0cb0211f908da5888e",
            "id": "table/SocketKeys/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d269e9fca4c6ee244d6a2697bbd17c301aa",
            "id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2601ee0ded81964fc2aa0e0a028dfe9747",
            "id": "table/SocketKeys/index/PublicKeyIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26d022db4b9f21403c8b13cb10f9444fa3",
            "id": "table/SocketKeys",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d261cce2e79b9314dc6989a21a3e94e8e8f",
            "id": "table/SocketKeys/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26c0b1268b284e455b85c7a56c5a9af2f6",
            "id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26cc757031fa724bedb2dea52f7a6f0872",
            "id": "table/SocketKeys/index/PublicKeyIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/SocketKeys",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "PublicKey",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "PublicKey",
                "name": "PublicKeyIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "SocketKeys",
            "import_table": [],
            "local_secondary_index": [],
            "name": "SocketKeys",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "SocketKeys"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "SocketKeys"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode-AlarmHigh-ba84db82-d96d-4afb-b8cb-3a5ac8a37514",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode-AlarmLow-bd991617-ae05-43b0-a8b2-d95dbbb4b6ad",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityHigh-387db781-c642-4eed-9913-399a5abaa919",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityLow-cbd0da74-2863-4e00-9ad2-5861280cb6a5"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:e7fa9bb1-ce8e-4aba-a550-e4d6185ac2ed:resource/dynamodb/table/StatusCode:policyName/DynamoDBReadCapacityUtilization:table/StatusCode",
            "id": "DynamoDBReadCapacityUtilization:table/StatusCode",
            "name": "DynamoDBReadCapacityUtilization:table/StatusCode",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmHigh-285f3d7f-d0ad-493e-9fa3-9a6ca9fbef13",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmLow-ec30e399-fb62-4113-8286-e61df0e91e56",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityHigh-10186428-753a-47f6-b1f4-e651bdd63e98",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityLow-a433c1ff-dce4-42eb-8fa8-a627a96cb646"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:6e2e5e69-e336-4571-a46d-6f69848252bc:resource/dynamodb/table/StatusCode/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode-AlarmHigh-c7c3e2b5-1a34-4566-a0a7-239204058031",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode-AlarmLow-20389c58-511b-4897-a69e-2587f3bca2ca",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityHigh-6aa38a72-2c61-4414-9054-496fef2c0490",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityLow-150e6369-c166-43e4-85b7-e86e27cd4655"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:37617eb3-db67-4133-b656-d2b710d81051:resource/dynamodb/table/StatusCode:policyName/DynamoDBWriteCapacityUtilization:table/StatusCode",
            "id": "DynamoDBWriteCapacityUtilization:table/StatusCode",
            "name": "DynamoDBWriteCapacityUtilization:table/StatusCode",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmHigh-6f88fd60-09ab-497b-93c0-ed2b6421d631",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmLow-a3b32f88-666c-433d-b152-9c304259a9c9",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityHigh-14fe6092-ecd7-46b9-a44c-7accaf5efd80",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityLow-ad59e481-7f3a-4a0f-8c83-000ed486b0fc"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:f7a077a9-76a7-4e5c-9f46-ca1d93ccd1e5:resource/dynamodb/table/StatusCode/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26e7fa9bb1ce8e4abaa550e4d6185ac2ed",
            "id": "table/StatusCode",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d266e2e5e69e3364571a46d6f69848252bc",
            "id": "table/StatusCode/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2637617eb3db674133b656d2b710d81051",
            "id": "table/StatusCode",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26f7a077a976a74e5c9f46ca1d93ccd1e5",
            "id": "table/StatusCode/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/StatusCode",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "StatusCode",
            "import_table": [],
            "local_secondary_index": [],
            "name": "StatusCode",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "StatusCode"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "StatusCode"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals-AlarmHigh-35064e3c-9aa2-42bb-8744-9f3c1e4425f2",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals-AlarmLow-5a94be9e-87c5-42f9-99dc-7d4c15295079",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityHigh-267352ef-dd85-4424-b23a-4f3db504a6bf",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityLow-26524af0-14a6-4c41-94f6-9bea63e6ae96"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:90946cf3-1efd-45ae-9128-24cc79050523:resource/dynamodb/table/TimeIntervals:policyName/DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "id": "DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "name": "DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmHigh-afefd659-1265-4972-a2f0-85efe4c0b1f5",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmLow-01cf4e41-577f-4265-b469-ba84ed46d970",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityHigh-9c8096db-70da-4661-ada1-b6652118938e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityLow-dfda3f77-1059-482f-a847-5591f21fcceb"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:8c43b2a9-16d3-4b39-84ae-3060d535082d:resource/dynamodb/table/TimeIntervals/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals-AlarmHigh-d8d43061-64f8-4cb0-9ea6-40b82e32887c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals-AlarmLow-07d74865-a06a-4a37-9924-c3126a6be6db",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityHigh-9bfd3061-4aeb-436d-bab4-cb2dc941aa1a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityLow-afa6c1c6-e3f3-4bb1-8ec8-6a8cb559d700"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:137a1e12-681d-4cf6-99db-bead3ea09553:resource/dynamodb/table/TimeIntervals:policyName/DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "id": "DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "name": "DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmHigh-ec867e7c-b329-495c-9b24-29f3d5aac7fc",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmLow-b18c5629-117a-4a7f-8e0c-054406cbd108",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityHigh-bd284a94-ea24-4b42-aa3b-09fa43cb114f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityLow-7f5f0556-3225-4bb2-8e34-d57e1c2a8057"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:25df48b4-d98a-4670-8016-981de8139468:resource/dynamodb/table/TimeIntervals/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2690946cf31efd45ae912824cc79050523",
            "id": "table/TimeIntervals",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d268c43b2a916d34b3984ae3060d535082d",
            "id": "table/TimeIntervals/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26137a1e12681d4cf699dbbead3ea09553",
            "id": "table/TimeIntervals",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2625df48b4d98a46708016981de8139468",
            "id": "table/TimeIntervals/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/TimeIntervals",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "TimeIntervals",
            "import_table": [],
            "local_secondary_index": [],
            "name": "TimeIntervals",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "TimeIntervals"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "TimeIntervals"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions-AlarmHigh-6a248f6a-5cc2-4e6d-9fa8-9c163aa1bf1b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions-AlarmLow-365fce06-5788-4ef3-8767-dc37d6bcf4e5",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions-ProvisionedCapacityHigh-376b074a-d0f7-494b-befb-12a231c1ccbd",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions-ProvisionedCapacityLow-895d4158-786f-4aa8-9c52-7b0e3d56146d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:fa938bcd-9a1a-47cd-a415-e35a04d7d8eb:resource/dynamodb/table/Transactions:policyName/DynamoDBReadCapacityUtilization:table/Transactions",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmHigh-f921f3d8-595e-4a6e-aaf9-86f2d9a54f32",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmLow-64e4a97a-8411-4529-b791-631bd05d3119",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityHigh-f2c52758-7705-4cc9-8a14-5e6a6e42b4ba",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityLow-f8a295af-346c-417e-b2c3-6115fa9b1231"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:1df2bc26-5aad-4b7f-a9b7-c50022c039fe:resource/dynamodb/table/Transactions/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmHigh-8bc27545-f43b-4232-950b-bf218b3ad45f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmLow-83ef1f5b-d10f-4599-a1ec-999ea34fd30b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityHigh-538e8ff6-4546-4462-861d-64810ffd6d91",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityLow-e931b99e-3e06-45e6-9b97-c978ed289430"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:6e116a76-7ed9-4eac-8b08-9fb5d0ddb86d:resource/dynamodb/table/Transactions/index/OutgoingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmHigh-84494b17-9cc6-4f08-87e4-c435a13f12d3",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmLow-3fa0bcba-5932-4e4e-9fe9-75e5935f174a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-9c5d01b7-4c31-444a-b99f-4d641b1e2641",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-d79af3cb-8990-4679-a173-477a7d7c1f63"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:75c99297-c2d0-441a-9d0c-0b88849848f7:resource/dynamodb/table/Transactions/index/IncomingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmHigh-350c11f5-2fb4-4dd7-a3b3-9bc1c58b2be4",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmLow-290bba0e-9cd8-49b8-a47f-662e1798996a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityHigh-976b9fdc-5ac5-4e53-a4f3-c2dbf69aa4d8",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityLow-566b1a7a-e367-4467-ba51-87741b31b0d9"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:8c8516c8-d268-494a-b1bc-17118b477a1c:resource/dynamodb/table/Transactions/index/WalletAddressIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmHigh-bac8f1b6-1fe3-42e9-b97f-78cd7906657c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmLow-4022ceb2-72c5-4d8b-813a-817b3adf6d45",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityHigh-e78a8d81-3b3d-4088-a8bd-13e59d9f9bb2",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityLow-9d81c0df-08e9-431a-8ee4-906b35a35d50"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:3463a524-26cf-401a-a581-ecda5943b863:resource/dynamodb/table/Transactions/index/ReceiverUrlIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions-AlarmHigh-d9cc436e-9999-4690-875f-a59984df3349",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions-AlarmLow-8bddddab-92c3-4581-9548-fd97c53a4229",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions-ProvisionedCapacityHigh-9c89c2db-79e3-4eab-9afa-488229143597",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions-ProvisionedCapacityLow-b50d33fd-eb50-4d0a-b485-14ac5fbddb28"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:bde62106-7a4e-4e16-8088-f63f23b3dc75:resource/dynamodb/table/Transactions:policyName/DynamoDBWriteCapacityUtilization:table/Transactions",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmHigh-0d83c283-9587-485e-9f9f-e4b532164208",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmLow-69214090-9664-48e9-9608-1bb1541bf1ea",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityHigh-8b9323d9-79c7-4f04-b93a-00ad72d277c3",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityLow-9b61491b-4c79-4c5c-b1b4-2cab397bd64b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:6f855a16-9f9b-4219-9a6a-efa93b446128:resource/dynamodb/table/Transactions/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmHigh-ba44f794-612e-43f1-8898-0cae73e82ef6",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmLow-03bd9767-a91f-4055-9acb-666774ed4376",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityHigh-8515f44c-4f40-45e2-8af5-ed45b1ccc6a1",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityLow-6cbe268d-5d32-4274-82bf-defbd8746d11"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:cde2b87f-f5e1-44e5-9625-fcc3f8cd3ef6:resource/dynamodb/table/Transactions/index/OutgoingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmHigh-fe3486bb-908a-4a3d-8275-1eb036c95643",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmLow-82a6fd2e-883f-4eaa-89a3-ade3303633c3",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-c2cc08f7-028d-4d76-9b22-2d6bd72fe0d9",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-e3352f1b-1333-4d30-89a4-c571198d64aa"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:5a41b028-fac4-42ca-b48d-f5230a0945a3:resource/dynamodb/table/Transactions/index/IncomingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmHigh-da0906d6-9180-4f68-9824-a8d9f0143d32",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmLow-d5306a6d-e81e-4ff1-80e8-72478e94c59a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityHigh-c66b2619-bad3-47cc-8221-f1feb2207882",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityLow-7198369f-7125-43ab-ac83-c6f02e853a3f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:e9018b56-3829-4b59-a168-2a95719f40e0:resource/dynamodb/table/Transactions/index/WalletAddressIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmHigh-91dce822-b381-4931-b33c-0589abd09271",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmLow-0d33a30b-a8f3-48c8-9515-122ecb522ed5",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityHigh-477d4606-1fb8-49ba-804e-9cb1349b5f2f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityLow-20645ec3-c9c0-496b-a0e5-24959bd4f1ba"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:d3f90741-c08e-4b0a-b999-1b2f16fc10ed:resource/dynamodb/table/Transactions/index/ReceiverUrlIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26fa938bcd9a1a47cda415e35a04d7d8eb",
            "id": "table/Transactions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d261df2bc265aad4b7fa9b7c50022c039fe",
            "id": "table/Transactions/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d266e116a767ed94eac8b089fb5d0ddb86d",
            "id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2675c99297c2d0441a9d0c0b88849848f7",
            "id": "table/Transactions/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d268c8516c8d268494ab1bc17118b477a1c",
            "id": "table/Transactions/index/WalletAddressIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d263463a52426cf401aa581ecda5943b863",
            "id": "table/Transactions/index/ReceiverUrlIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26bde621067a4e4e168088f63f23b3dc75",
            "id": "table/Transactions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d266f855a169f9b42199a6aefa93b446128",
            "id": "table/Transactions/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26cde2b87ff5e144e59625fcc3f8cd3ef6",
            "id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d265a41b028fac442cab48df5230a0945a3",
            "id": "table/Transactions/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26e9018b5638294b59a1682a95719f40e0",
            "id": "table/Transactions/index/WalletAddressIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26d3f90741c08e4b0ab9991b2f16fc10ed",
            "id": "table/Transactions/index/ReceiverUrlIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Transactions",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "IncomingPaymentId",
                "type": "S"
              },
              {
                "name": "OutgoingPaymentId",
                "type": "S"
              },
              {
                "name": "ReceiverUrl",
                "type": "S"
              },
              {
                "name": "WalletAddressId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "IncomingPaymentId",
                "name": "IncomingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "OutgoingPaymentId",
                "name": "OutgoingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ReceiverUrl",
                "name": "ReceiverUrlIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "WalletAddressId",
                "name": "WalletAddressIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Transactions",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Transactions",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "UserIncoming"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "UserIncoming"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming-AlarmHigh-cc37c676-eca0-4541-9427-dce3607d51f4",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming-AlarmLow-f6867c2f-5515-4b3b-a24d-c76c0c3375d3",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityHigh-8b0cb29d-9572-4e5f-9710-6fafd14b149b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityLow-cc9dacb2-53a8-40cb-8876-7206818bca96"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:9e2de78d-0f7c-4e84-bb2b-808ca2a5624d:resource/dynamodb/table/UserIncoming:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmHigh-96adbc73-78ba-4f5f-8d0f-46b3b1398b94",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmLow-de61a20d-3b8a-43d0-9431-5e499ca27be7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityHigh-f28dcbc0-56fd-498d-8bdc-2f1b5a87a880",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityLow-6e24f9fc-391e-424c-bc04-faa22216881a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:b404540a-d6c2-4844-a995-589f06b83ea6:resource/dynamodb/table/UserIncoming/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmHigh-deea0d8a-af23-4ecf-8ee1-13ade3c5cce7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmLow-9b954cfd-b3b6-42c1-8b68-f086f29f6d1a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityHigh-aca294a3-199d-4e8b-b80b-69e445396472",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityLow-f8110996-b2f8-4859-9ad3-957b37276e6a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:b6280790-9be9-4b61-b8c0-384078867d71:resource/dynamodb/table/UserIncoming/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmHigh-bb760ecb-4b21-4cb7-9a57-aed1231c5f9b",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmLow-230a1407-baee-4dc1-b124-2301af71be12",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-29679d64-5bee-4158-98a6-cbfac576b744",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityLow-753d6c35-284c-436b-bfd6-eac1588aef0c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:08d9aa9f-71be-4c04-94bd-6d8060c21517:resource/dynamodb/table/UserIncoming/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmHigh-8b34f967-6ffa-4bbe-a0a3-280a32399a11",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmLow-9a8ef04a-af57-47e6-8989-4e6e9ddd5d6e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-44d7c49c-919a-42e6-b7ef-f53b03e35460",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-9a296985-9643-4e3e-a940-ce72dd49fb0d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:5b7fa633-86da-4e1c-8701-918f53e8bad5:resource/dynamodb/table/UserIncoming/index/IncomingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming-AlarmHigh-ce979bf6-645c-4bca-a2bc-a433806207c1",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming-AlarmLow-0c7cb73c-969b-4134-affd-b114d30d150f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityHigh-21cd23c3-a8ec-4131-88dc-d4a20532dd16",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityLow-54aea028-b90a-46ec-a125-946b226212e8"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:5646a9fb-0f8d-4193-872e-78290e2a51fa:resource/dynamodb/table/UserIncoming:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmHigh-eb8a6e1a-88da-4047-ab2f-2b85f69d6349",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmLow-41f1419a-69ee-482b-b97d-30c1d913e513",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityHigh-e5ae57b8-593b-4552-8c8a-d00ac5a9f9bf",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityLow-f60fedb8-61e8-43d9-930a-59ff06b9e87d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:238e27b6-94c7-472f-a805-094092ef52c9:resource/dynamodb/table/UserIncoming/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmHigh-3c523496-7f01-4dee-820b-db688a878f91",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmLow-6bbaa639-e97e-4697-9dbc-5947f2d05fb5",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityHigh-59e5fea1-769e-444c-a084-4b11d95a3e69",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityLow-8e12e3ea-ab81-4049-8cb7-913d352ea8b9"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:c0abbe50-935b-41c3-9c50-70e391bb9853:resource/dynamodb/table/UserIncoming/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmHigh-35fb2733-fe3e-4aa5-a085-3391b6e4dcf1",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmLow-e74aee41-6820-47da-a9bc-10d3b210fcf7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-0c786447-b0e4-439c-8301-df025d2b1f5d",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityLow-fdbea0b2-1fac-4609-8025-def0ea82f763"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:0cc5fc85-761e-48d3-a9cd-4e053cbf13d7:resource/dynamodb/table/UserIncoming/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmHigh-705489c8-2bce-4a4d-8009-3775c7f39ec9",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmLow-8b5c2f8c-3a30-4998-a433-843aa761cef3",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-0a98effe-6c4b-4b94-8448-ad5b2171ebcf",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-1357aca7-36c0-4d20-9dd6-89aa942f1948"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:4913c9d3-0c6f-47b5-b992-f65256c73fb0:resource/dynamodb/table/UserIncoming/index/IncomingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d269e2de78d0f7c4e84bb2b808ca2a5624d",
            "id": "table/UserIncoming",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26b404540ad6c24844a995589f06b83ea6",
            "id": "table/UserIncoming/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26b62807909be94b61b8c0384078867d71",
            "id": "table/UserIncoming/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2608d9aa9f71be4c0494bd6d8060c21517",
            "id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d265b7fa63386da4e1c8701918f53e8bad5",
            "id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d265646a9fb0f8d4193872e78290e2a51fa",
            "id": "table/UserIncoming",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26238e27b694c7472fa805094092ef52c9",
            "id": "table/UserIncoming/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26c0abbe50935b41c39c5070e391bb9853",
            "id": "table/UserIncoming/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d260cc5fc85761e48d3a9cd4e053cbf13d7",
            "id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d264913c9d30c6f47b5b992f65256c73fb0",
            "id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/UserIncoming",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "IncomingPaymentId",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "IncomingPaymentId",
                "name": "IncomingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "UserIncoming",
            "import_table": [],
            "local_secondary_index": [],
            "name": "UserIncoming",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "UserIncoming"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "UserIncoming"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users-AlarmHigh-bd66125d-dd4b-4518-b928-46e1b469145e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users-AlarmLow-30c05921-15c7-4122-bf5b-7b1fd91f5c5f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users-ProvisionedCapacityHigh-1ce5a736-7ba8-4dc8-9b15-acea16564144",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users-ProvisionedCapacityLow-52317d66-7616-47d4-80d6-15d399dad4ed"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:86131823-7de3-46d5-9340-b43187a2d003:resource/dynamodb/table/Users:policyName/DynamoDBReadCapacityUtilization:table/Users",
            "id": "DynamoDBReadCapacityUtilization:table/Users",
            "name": "DynamoDBReadCapacityUtilization:table/Users",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmHigh-dfa18c42-246d-4077-b172-04750feb06e0",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmLow-4477a331-68ee-47bb-a3b4-b5fe3c6d243c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityHigh-7b8acf81-bac1-414b-ac6c-761597ba4beb",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityLow-7c87bba8-4e19-4b03-b477-cf18b71697bd"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:8653c14a-284c-4d83-bb64-1e3e504e2bd8:resource/dynamodb/table/Users/index/EmailIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmHigh-5ab0f951-b312-425f-9111-0492a88ee51e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmLow-9cafd5a7-1734-42bf-b0d8-3efa5a7eec91",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityHigh-ae66d1f6-959c-423e-b3d1-6d7f893f58f5",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityLow-d0568f6c-7577-4217-97cd-7ce52e9c2e56"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:b5cfa18c-520b-45a1-ab06-ca16e4239ba1:resource/dynamodb/table/Users/index/UserTypeIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/UserTypeIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmHigh-688cdc66-a59c-4461-b903-1ea2dd2d41b7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmLow-987e10f6-0ada-4ac2-a327-45b2e50a4d84",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityHigh-fc7a77d3-5914-4f7a-991c-74ffd497ee89",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityLow-1a6f0a09-f537-4d5f-87d6-aff7407b36f8"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:a93261ce-7808-41ee-a506-d49d2ef5348d:resource/dynamodb/table/Users/index/PhoneIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/PhoneIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users-AlarmHigh-0b7986be-ab2d-4d80-ad1b-3c91103af9d3",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users-AlarmLow-90b52ccf-bc78-47b8-88b4-62613fa4581d",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users-ProvisionedCapacityHigh-cecfcc3b-d25e-470d-922a-5b15cbd50d22",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users-ProvisionedCapacityLow-007f26ed-83ae-4dd1-a3ea-6c68a4f0c67e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:caf8c57b-f734-44e3-a41c-9fb922be254a:resource/dynamodb/table/Users:policyName/DynamoDBWriteCapacityUtilization:table/Users",
            "id": "DynamoDBWriteCapacityUtilization:table/Users",
            "name": "DynamoDBWriteCapacityUtilization:table/Users",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmHigh-9ead1a71-bce7-4088-adea-3f8075f4e89c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmLow-01dc886d-2aed-4e92-a187-afd60cdf0b79",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityHigh-805a423f-6117-4580-bb00-c82b0934ebc7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityLow-200f7de9-8662-46e3-a903-9094436f091a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:b2f97b04-f2b0-4886-b882-4ff843c0b5af:resource/dynamodb/table/Users/index/EmailIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmHigh-ddbb5a39-f50f-4089-8be0-c6e9ff952095",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmLow-4826c6b2-4f93-4ba0-87ae-8b2569b03102",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityHigh-1e2c2ad3-646a-4376-9696-8b189996f91d",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityLow-735b23d7-d7b8-4dc6-bf11-178ea845b829"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:2abb4626-c8dd-4edb-a5e9-961f87a01e54:resource/dynamodb/table/Users/index/UserTypeIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/UserTypeIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmHigh-df2f8edd-2ce5-4d6e-be38-054cc985c75c",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmLow-4b98cea6-f691-46fb-bc3e-323333e568f9",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityHigh-9e7d9f7d-c249-4e83-abd3-31edd7078f88",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityLow-a62a0e3a-faea-4f58-bfbc-e8e76e90f18a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:6c4c998d-ec5e-4f28-a706-5235d0e87a5f:resource/dynamodb/table/Users/index/PhoneIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/PhoneIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26861318237de346d59340b43187a2d003",
            "id": "table/Users",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d268653c14a284c4d83bb641e3e504e2bd8",
            "id": "table/Users/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/EmailIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26b5cfa18c520b45a1ab06ca16e4239ba1",
            "id": "table/Users/index/UserTypeIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/UserTypeIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26a93261ce780841eea506d49d2ef5348d",
            "id": "table/Users/index/PhoneIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/PhoneIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26caf8c57bf73444e3a41c9fb922be254a",
            "id": "table/Users",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26b2f97b04f2b04886b8824ff843c0b5af",
            "id": "table/Users/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/EmailIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d262abb4626c8dd4edba5e9961f87a01e54",
            "id": "table/Users/index/UserTypeIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/UserTypeIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d266c4c998dec5e4f28a7065235d0e87a5f",
            "id": "table/Users/index/PhoneIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/PhoneIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Users",
            "attribute": [
              {
                "name": "Email",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "Phone",
                "type": "S"
              },
              {
                "name": "Type",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Email",
                "name": "EmailIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Phone",
                "name": "PhoneIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Type",
                "name": "UserTypeIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Users",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Users",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "Users"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "Users"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets-AlarmHigh-9b3b2f87-f71e-48ac-851e-b4392edd8796",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets-AlarmLow-976f79b6-20bf-4e3c-b134-3c40cba385f7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets-ProvisionedCapacityHigh-a9df52f5-d958-4909-b6b5-bef4a4a8b546",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets-ProvisionedCapacityLow-c0ce2f1a-579f-4f21-ae59-a0e3d5742a2d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:da5e7444-587c-4dde-9b1f-a306d464c3fa:resource/dynamodb/table/Wallets:policyName/DynamoDBReadCapacityUtilization:table/Wallets",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmHigh-fc2a056a-09c2-4717-a5e0-dce9d581d823",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmLow-f4bb663b-28ec-474c-8154-be8b597b81b9",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityHigh-2df234f8-8fac-4ccc-9d3b-4d7870c05350",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityLow-417b868b-b797-4efd-9df2-a68be34a3855"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:400f12ea-2210-430d-b2d9-10ddd586d0aa:resource/dynamodb/table/Wallets/index/WalletAddressIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmHigh-274c135b-3804-4cb3-bf4a-7830f5954970",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmLow-5679fad7-c5b0-49f1-8f4c-622670b27efb",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityHigh-461b4599-d107-419e-8ef7-b90d8cd7ccec",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityLow-e912b472-a726-43a1-9aed-cbd16419a558"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:0f169763-c871-4a7c-8b0b-7e3ecb2b1963:resource/dynamodb/table/Wallets/index/RafikiIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmHigh-69b9b507-2d1c-404e-a490-707eeffa802a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmLow-f14deaaf-9c83-4770-bc2f-fff9e18f507f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityHigh-58e931b4-0fe6-4326-bc6f-a7dbcf3a5243",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityLow-b219c9c9-690d-4b84-90c4-f60fdfc8cc78"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:3df7e08a-686e-47c9-b121-4b7a9ecfe906:resource/dynamodb/table/Wallets/index/ProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmHigh-e347c6d9-1a35-4bc9-9734-5085b2ff7980",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmLow-3bd0df77-d1ce-49ca-b129-28a6ad5b4302",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityHigh-01b510ab-cd43-45fd-9836-8c5695fc3238",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityLow-15ca5953-62a3-4164-ad2d-fb4026a16147"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:597fd2cf-1829-4361-93ba-a6d40a07b6fd:resource/dynamodb/table/Wallets/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets-AlarmHigh-c2e36e78-adde-4914-90cc-5154564b981e",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets-AlarmLow-725c9313-e577-42ed-a83b-7313d64a35b0",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets-ProvisionedCapacityHigh-b4bb1559-434d-4615-90ca-8b9728d13736",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets-ProvisionedCapacityLow-b88fa80e-470e-42b1-864a-43d0af79857f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:e506a207-bd5c-40dc-b971-e0cce69ab686:resource/dynamodb/table/Wallets:policyName/DynamoDBWriteCapacityUtilization:table/Wallets",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmHigh-4b444b90-a8d8-441a-9214-6c1ffc7108c2",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmLow-b4c9b1a7-37bd-4df4-98c8-2ebabbbe240a",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityHigh-9f40d09e-b2db-40be-ac60-7cd1fc83b086",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityLow-000ead6a-a541-4867-87e5-a8529b434c2f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:15f6b23d-39ab-434b-ac1b-e8453bf4e7cc:resource/dynamodb/table/Wallets/index/WalletAddressIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmHigh-89535fd0-f577-45b7-95af-b55cfc8c6d0d",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmLow-253b9e3a-cb31-4431-aa3c-bf1d12885867",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityHigh-8e14e2db-15de-41c8-b34f-62967e5607e7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityLow-7fb6fe2d-d901-4172-bf67-76c06ef4b479"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:8d740051-849f-4030-a86e-5b934fb64f9c:resource/dynamodb/table/Wallets/index/RafikiIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmHigh-472f50b1-edbb-432a-bdb9-52fe20f1b069",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmLow-aa0f24d9-1818-4f11-90ec-8e9bd14b3a20",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityHigh-b119aceb-04b4-48ff-8c49-a7a6fe3aae08",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityLow-8a987543-d45f-4ed4-8db5-b7421e9716e3"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:8bf6ffcd-b26d-45ed-b99a-c58386ea79a3:resource/dynamodb/table/Wallets/index/ProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmHigh-8148b183-3dce-48c6-9b55-4d656d3e16a1",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmLow-d02b0d37-1306-4ba1-9589-6e6525d9e87f",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityHigh-9389ef06-6547-4326-9481-e966847ffb34",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityLow-3dde2f68-2775-4201-81cb-57a4ed88a949"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:3ceb3179-d0e8-4581-b1ea-38e5aab5a8e8:resource/dynamodb/table/Wallets/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26da5e7444587c4dde9b1fa306d464c3fa",
            "id": "table/Wallets",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26400f12ea2210430db2d910ddd586d0aa",
            "id": "table/Wallets/index/WalletAddressIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d260f169763c8714a7c8b0b7e3ecb2b1963",
            "id": "table/Wallets/index/RafikiIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d263df7e08a686e47c9b1214b7a9ecfe906",
            "id": "table/Wallets/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26597fd2cf1829436193baa6d40a07b6fd",
            "id": "table/Wallets/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/UserIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26e506a207bd5c40dcb971e0cce69ab686",
            "id": "table/Wallets",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d2615f6b23d39ab434bac1be8453bf4e7cc",
            "id": "table/Wallets/index/WalletAddressIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d268d740051849f4030a86e5b934fb64f9c",
            "id": "table/Wallets/index/RafikiIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d268bf6ffcdb26d45edb99ac58386ea79a3",
            "id": "table/Wallets/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d263ceb3179d0e84581b1ea38e5aab5a8e8",
            "id": "table/Wallets/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/UserIdIndex",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/Wallets",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ProviderId",
                "type": "S"
              },
              {
                "name": "RafikiId",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              },
              {
                "name": "WalletAddress",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ProviderId",
                "name": "ProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "RafikiId",
                "name": "RafikiIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "WalletAddress",
                "name": "WalletAddressIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Wallets",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Wallets",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "Wallets"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "Wallets"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/WebSocketActions-AlarmHigh-89834bd0-abd4-4f7a-a474-c0a91b06ab96",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/WebSocketActions-AlarmLow-fabd15b8-77ec-45d6-9033-c719d7445f62",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityHigh-85b1bb38-5038-479a-a82f-08e468c7dce7",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityLow-934e6b9a-a914-4a26-bd44-86a51ae389eb"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:a0b30c49-c23b-4f93-a517-3a8aace6cb1e:resource/dynamodb/table/WebSocketActions:policyName/DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "id": "DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "name": "DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/WebSocketActions",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/WebSocketActions-AlarmHigh-d2205b3e-27f0-4623-be6a-cdba31039570",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/WebSocketActions-AlarmLow-4ef153a1-2bba-4ffd-b467-f47c7a473dc0",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityHigh-c9288d41-383b-4978-9fb9-a1c98ed82ae3",
              "arn:aws:cloudwatch:us-east-2:975050359967:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityLow-8854549d-d780-4673-8010-47fb031f091e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:975050359967:scalingPolicy:5f71ca81-c4ba-49bb-819b-c65d42fae048:resource/dynamodb/table/WebSocketActions:policyName/DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "id": "DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "name": "DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/WebSocketActions",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d26a0b30c49c23b4f93a5173a8aace6cb1e",
            "id": "table/WebSocketActions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/WebSocketActions",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:975050359967:scalable-target/0d265f71ca81c4ba49bb819bc65d42fae048",
            "id": "table/WebSocketActions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/WebSocketActions",
            "role_arn": "arn:aws:iam::975050359967:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:975050359967:table/WebSocketActions",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "WebSocketActions",
            "import_table": [],
            "local_secondary_index": [],
            "name": "WebSocketActions",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "WebSocketActions"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "WebSocketActions"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_dev_k8s_ecr_login_renew_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "name": "k8s-ecr-login-renew-role"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "namespaces"
                    ],
                    "verbs": [
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "secrets",
                      "serviceaccounts",
                      "serviceaccounts/token"
                    ],
                    "verbs": [
                      "delete",
                      "create",
                      "patch",
                      "get",
                      "list"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-role",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "namespaces"
                    ],
                    "verbs": [
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "secrets",
                      "serviceaccounts",
                      "serviceaccounts/token"
                    ],
                    "verbs": [
                      "delete",
                      "create",
                      "patch",
                      "get",
                      "list"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_dev_k8s_ecr_login_renew_binding",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "name": "k8s-ecr-login-renew-binding"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "k8s-ecr-login-renew-role"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "k8s-ecr-login-renew-account",
                    "namespace": "dev"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-binding",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "k8s-ecr-login-renew-role"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "k8s-ecr-login-renew-account",
                    "namespace": "dev"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "cronjob_dev_k8s_ecr_login_renew_cron",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "batch/v1",
                "kind": "CronJob",
                "metadata": {
                  "name": "k8s-ecr-login-renew-cron",
                  "namespace": "dev"
                },
                "spec": {
                  "jobTemplate": {
                    "spec": {
                      "template": {
                        "metadata": null,
                        "spec": {
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "AWS_ACCESS_KEY_ID",
                                  "value": "AKIA6GBMHYSPQLPDRT5G"
                                },
                                {
                                  "name": "AWS_SECRET_ACCESS_KEY",
                                  "value": "GeAqIRagq9Q5LguN+oPHp3kvLplK14xH5V12NlaO"
                                },
                                {
                                  "name": "AWS_REGION",
                                  "value": "us-east-2"
                                },
                                {
                                  "name": "DOCKER_SECRET_NAME",
                                  "value": "docker-cfg"
                                },
                                {
                                  "name": "TARGET_NAMESPACE",
                                  "value": "dev"
                                }
                              ],
                              "image": "nabsul/k8s-ecr-login-renew:v1.7.1",
                              "imagePullPolicy": "IfNotPresent",
                              "name": "k8s-ecr-login-renew"
                            }
                          ],
                          "restartPolicy": "Never",
                          "serviceAccountName": "k8s-ecr-login-renew-account"
                        }
                      }
                    }
                  },
                  "schedule": "* */6 * * *"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "jobTemplate": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "template": [
                                "object",
                                {
                                  "metadata": "dynamic",
                                  "spec": [
                                    "object",
                                    {
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "image": "string",
                                              "imagePullPolicy": "string",
                                              "name": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "restartPolicy": "string",
                                      "serviceAccountName": "string"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "schedule": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "batch/v1",
                "kind": "CronJob",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-cron",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "concurrencyPolicy": "Allow",
                  "failedJobsHistoryLimit": 1,
                  "jobTemplate": {
                    "metadata": {
                      "annotations": null,
                      "creationTimestamp": null,
                      "deletionGracePeriodSeconds": null,
                      "deletionTimestamp": null,
                      "finalizers": null,
                      "generateName": null,
                      "generation": null,
                      "labels": null,
                      "managedFields": null,
                      "name": null,
                      "namespace": null,
                      "ownerReferences": null,
                      "resourceVersion": null,
                      "selfLink": null,
                      "uid": null
                    },
                    "spec": {
                      "activeDeadlineSeconds": null,
                      "backoffLimit": null,
                      "backoffLimitPerIndex": null,
                      "completionMode": null,
                      "completions": null,
                      "managedBy": null,
                      "manualSelector": null,
                      "maxFailedIndexes": null,
                      "parallelism": null,
                      "podFailurePolicy": {
                        "rules": null
                      },
                      "podReplacementPolicy": null,
                      "selector": {
                        "matchExpressions": null,
                        "matchLabels": null
                      },
                      "successPolicy": {
                        "rules": null
                      },
                      "suspend": null,
                      "template": {
                        "metadata": {
                          "annotations": null,
                          "creationTimestamp": null,
                          "deletionGracePeriodSeconds": null,
                          "deletionTimestamp": null,
                          "finalizers": null,
                          "generateName": null,
                          "generation": null,
                          "labels": null,
                          "managedFields": null,
                          "name": null,
                          "namespace": null,
                          "ownerReferences": null,
                          "resourceVersion": null,
                          "selfLink": null,
                          "uid": null
                        },
                        "spec": {
                          "activeDeadlineSeconds": null,
                          "affinity": {
                            "nodeAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": null
                              }
                            },
                            "podAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": null
                            },
                            "podAntiAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": null
                            }
                          },
                          "automountServiceAccountToken": null,
                          "containers": [
                            {
                              "args": null,
                              "command": null,
                              "env": [
                                {
                                  "name": "AWS_ACCESS_KEY_ID",
                                  "value": "AKIA6GBMHYSPQLPDRT5G",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "AWS_SECRET_ACCESS_KEY",
                                  "value": "GeAqIRagq9Q5LguN+oPHp3kvLplK14xH5V12NlaO",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "AWS_REGION",
                                  "value": "us-east-2",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "DOCKER_SECRET_NAME",
                                  "value": "docker-cfg",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "TARGET_NAMESPACE",
                                  "value": "dev",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                }
                              ],
                              "envFrom": null,
                              "image": "nabsul/k8s-ecr-login-renew:v1.7.1",
                              "imagePullPolicy": "IfNotPresent",
                              "lifecycle": {
                                "postStart": {
                                  "exec": {
                                    "command": null
                                  },
                                  "httpGet": {
                                    "host": null,
                                    "httpHeaders": null,
                                    "path": null,
                                    "port": null,
                                    "scheme": null
                                  },
                                  "sleep": {
                                    "seconds": null
                                  },
                                  "tcpSocket": {
                                    "host": null,
                                    "port": null
                                  }
                                },
                                "preStop": {
                                  "exec": {
                                    "command": null
                                  },
                                  "httpGet": {
                                    "host": null,
                                    "httpHeaders": null,
                                    "path": null,
                                    "port": null,
                                    "scheme": null
                                  },
                                  "sleep": {
                                    "seconds": null
                                  },
                                  "tcpSocket": {
                                    "host": null,
                                    "port": null
                                  }
                                }
                              },
                              "livenessProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "name": "k8s-ecr-login-renew",
                              "ports": null,
                              "readinessProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "resizePolicy": null,
                              "resources": {
                                "claims": null,
                                "limits": null,
                                "requests": null
                              },
                              "restartPolicy": null,
                              "securityContext": {
                                "allowPrivilegeEscalation": null,
                                "appArmorProfile": {
                                  "localhostProfile": null,
                                  "type": null
                                },
                                "capabilities": {
                                  "add": null,
                                  "drop": null
                                },
                                "privileged": null,
                                "procMount": null,
                                "readOnlyRootFilesystem": null,
                                "runAsGroup": null,
                                "runAsNonRoot": null,
                                "runAsUser": null,
                                "seLinuxOptions": {
                                  "level": null,
                                  "role": null,
                                  "type": null,
                                  "user": null
                                },
                                "seccompProfile": {
                                  "localhostProfile": null,
                                  "type": null
                                },
                                "windowsOptions": {
                                  "gmsaCredentialSpec": null,
                                  "gmsaCredentialSpecName": null,
                                  "hostProcess": null,
                                  "runAsUserName": null
                                }
                              },
                              "startupProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "stdin": null,
                              "stdinOnce": null,
                              "terminationMessagePath": "/dev/termination-log",
                              "terminationMessagePolicy": "File",
                              "tty": null,
                              "volumeDevices": null,
                              "volumeMounts": null,
                              "workingDir": null
                            }
                          ],
                          "dnsConfig": {
                            "nameservers": null,
                            "options": null,
                            "searches": null
                          },
                          "dnsPolicy": "ClusterFirst",
                          "enableServiceLinks": null,
                          "ephemeralContainers": null,
                          "hostAliases": null,
                          "hostIPC": null,
                          "hostNetwork": null,
                          "hostPID": null,
                          "hostUsers": null,
                          "hostname": null,
                          "imagePullSecrets": null,
                          "initContainers": null,
                          "nodeName": null,
                          "nodeSelector": null,
                          "os": {
                            "name": null
                          },
                          "overhead": null,
                          "preemptionPolicy": null,
                          "priority": null,
                          "priorityClassName": null,
                          "readinessGates": null,
                          "resourceClaims": null,
                          "restartPolicy": "Never",
                          "runtimeClassName": null,
                          "schedulerName": "default-scheduler",
                          "schedulingGates": null,
                          "securityContext": {
                            "appArmorProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "fsGroup": null,
                            "fsGroupChangePolicy": null,
                            "runAsGroup": null,
                            "runAsNonRoot": null,
                            "runAsUser": null,
                            "seLinuxOptions": {
                              "level": null,
                              "role": null,
                              "type": null,
                              "user": null
                            },
                            "seccompProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "supplementalGroups": null,
                            "supplementalGroupsPolicy": null,
                            "sysctls": null,
                            "windowsOptions": {
                              "gmsaCredentialSpec": null,
                              "gmsaCredentialSpecName": null,
                              "hostProcess": null,
                              "runAsUserName": null
                            }
                          },
                          "serviceAccount": "k8s-ecr-login-renew-account",
                          "serviceAccountName": "k8s-ecr-login-renew-account",
                          "setHostnameAsFQDN": null,
                          "shareProcessNamespace": null,
                          "subdomain": null,
                          "terminationGracePeriodSeconds": 30,
                          "tolerations": null,
                          "topologySpreadConstraints": null,
                          "volumes": null
                        }
                      },
                      "ttlSecondsAfterFinished": null
                    }
                  },
                  "schedule": "* */6 * * *",
                  "startingDeadlineSeconds": null,
                  "successfulJobsHistoryLimit": 3,
                  "suspend": false,
                  "timeZone": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "concurrencyPolicy": "string",
                      "failedJobsHistoryLimit": "number",
                      "jobTemplate": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "creationTimestamp": "string",
                              "deletionGracePeriodSeconds": "number",
                              "deletionTimestamp": "string",
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "generateName": "string",
                              "generation": "number",
                              "labels": [
                                "map",
                                "string"
                              ],
                              "managedFields": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "apiVersion": "string",
                                      "fieldsType": "string",
                                      "fieldsV1": "dynamic",
                                      "manager": "string",
                                      "operation": "string",
                                      "subresource": "string",
                                      "time": "string"
                                    }
                                  ]
                                ]
                              ],
                              "name": "string",
                              "namespace": "string",
                              "ownerReferences": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "blockOwnerDeletion": "bool",
                                    "controller": "bool",
                                    "kind": "string",
                                    "name": "string",
                                    "uid": "string"
                                  }
                                ]
                              ],
                              "resourceVersion": "string",
                              "selfLink": "string",
                              "uid": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "activeDeadlineSeconds": "number",
                              "backoffLimit": "number",
                              "backoffLimitPerIndex": "number",
                              "completionMode": "string",
                              "completions": "number",
                              "managedBy": "string",
                              "manualSelector": "bool",
                              "maxFailedIndexes": "number",
                              "parallelism": "number",
                              "podFailurePolicy": [
                                "object",
                                {
                                  "rules": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "action": "string",
                                        "onExitCodes": [
                                          "object",
                                          {
                                            "containerName": "string",
                                            "operator": "string",
                                            "values": [
                                              "list",
                                              "number"
                                            ]
                                          }
                                        ],
                                        "onPodConditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "podReplacementPolicy": "string",
                              "selector": [
                                "object",
                                {
                                  "matchExpressions": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "key": "string",
                                        "operator": "string",
                                        "values": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ]
                                  ],
                                  "matchLabels": [
                                    "map",
                                    "string"
                                  ]
                                }
                              ],
                              "successPolicy": [
                                "object",
                                {
                                  "rules": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "succeededCount": "number",
                                        "succeededIndexes": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "suspend": "bool",
                              "template": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": [
                                        "map",
                                        "string"
                                      ],
                                      "creationTimestamp": "string",
                                      "deletionGracePeriodSeconds": "number",
                                      "deletionTimestamp": "string",
                                      "finalizers": [
                                        "list",
                                        "string"
                                      ],
                                      "generateName": "string",
                                      "generation": "number",
                                      "labels": [
                                        "map",
                                        "string"
                                      ],
                                      "managedFields": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "apiVersion": "string",
                                              "fieldsType": "string",
                                              "fieldsV1": "dynamic",
                                              "manager": "string",
                                              "operation": "string",
                                              "subresource": "string",
                                              "time": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "name": "string",
                                      "namespace": "string",
                                      "ownerReferences": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "apiVersion": "string",
                                            "blockOwnerDeletion": "bool",
                                            "controller": "bool",
                                            "kind": "string",
                                            "name": "string",
                                            "uid": "string"
                                          }
                                        ]
                                      ],
                                      "resourceVersion": "string",
                                      "selfLink": "string",
                                      "uid": "string"
                                    }
                                  ],
                                  "spec": [
                                    "object",
                                    {
                                      "activeDeadlineSeconds": "number",
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "preference": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchFields": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchFields": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "podAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "podAffinityTerm": [
                                                      "object",
                                                      {
                                                        "labelSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "matchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "mismatchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "namespaceSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "namespaces": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "topologyKey": "string"
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "labelSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "matchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "mismatchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "namespaceSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "namespaces": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "topologyKey": "string"
                                                  }
                                                ]
                                              ]
                                            }
                                          ],
                                          "podAntiAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "podAffinityTerm": [
                                                      "object",
                                                      {
                                                        "labelSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "matchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "mismatchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "namespaceSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "namespaces": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "topologyKey": "string"
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "labelSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "matchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "mismatchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "namespaceSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "namespaces": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "topologyKey": "string"
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "automountServiceAccountToken": "bool",
                                      "containers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "dnsConfig": [
                                        "object",
                                        {
                                          "nameservers": [
                                            "list",
                                            "string"
                                          ],
                                          "options": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "searches": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "dnsPolicy": "string",
                                      "enableServiceLinks": "bool",
                                      "ephemeralContainers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "targetContainerName": "string",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "hostAliases": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "hostnames": [
                                              "list",
                                              "string"
                                            ],
                                            "ip": "string"
                                          }
                                        ]
                                      ],
                                      "hostIPC": "bool",
                                      "hostNetwork": "bool",
                                      "hostPID": "bool",
                                      "hostUsers": "bool",
                                      "hostname": "string",
                                      "imagePullSecrets": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "initContainers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "nodeName": "string",
                                      "nodeSelector": [
                                        "map",
                                        "string"
                                      ],
                                      "os": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "overhead": [
                                        "map",
                                        "string"
                                      ],
                                      "preemptionPolicy": "string",
                                      "priority": "number",
                                      "priorityClassName": "string",
                                      "readinessGates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "conditionType": "string"
                                          }
                                        ]
                                      ],
                                      "resourceClaims": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "resourceClaimName": "string",
                                            "resourceClaimTemplateName": "string"
                                          }
                                        ]
                                      ],
                                      "restartPolicy": "string",
                                      "runtimeClassName": "string",
                                      "schedulerName": "string",
                                      "schedulingGates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "securityContext": [
                                        "object",
                                        {
                                          "appArmorProfile": [
                                            "object",
                                            {
                                              "localhostProfile": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "fsGroup": "number",
                                          "fsGroupChangePolicy": "string",
                                          "runAsGroup": "number",
                                          "runAsNonRoot": "bool",
                                          "runAsUser": "number",
                                          "seLinuxOptions": [
                                            "object",
                                            {
                                              "level": "string",
                                              "role": "string",
                                              "type": "string",
                                              "user": "string"
                                            }
                                          ],
                                          "seccompProfile": [
                                            "object",
                                            {
                                              "localhostProfile": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "supplementalGroups": [
                                            "list",
                                            "number"
                                          ],
                                          "supplementalGroupsPolicy": "string",
                                          "sysctls": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "windowsOptions": [
                                            "object",
                                            {
                                              "gmsaCredentialSpec": "string",
                                              "gmsaCredentialSpecName": "string",
                                              "hostProcess": "bool",
                                              "runAsUserName": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "serviceAccount": "string",
                                      "serviceAccountName": "string",
                                      "setHostnameAsFQDN": "bool",
                                      "shareProcessNamespace": "bool",
                                      "subdomain": "string",
                                      "terminationGracePeriodSeconds": "number",
                                      "tolerations": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "effect": "string",
                                            "key": "string",
                                            "operator": "string",
                                            "tolerationSeconds": "number",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "topologySpreadConstraints": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "matchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "maxSkew": "number",
                                            "minDomains": "number",
                                            "nodeAffinityPolicy": "string",
                                            "nodeTaintsPolicy": "string",
                                            "topologyKey": "string",
                                            "whenUnsatisfiable": "string"
                                          }
                                        ]
                                      ],
                                      "volumes": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "awsElasticBlockStore": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "partition": "number",
                                                  "readOnly": "bool",
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "azureDisk": [
                                                "object",
                                                {
                                                  "cachingMode": "string",
                                                  "diskName": "string",
                                                  "diskURI": "string",
                                                  "fsType": "string",
                                                  "kind": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "azureFile": [
                                                "object",
                                                {
                                                  "readOnly": "bool",
                                                  "secretName": "string",
                                                  "shareName": "string"
                                                }
                                              ],
                                              "cephfs": [
                                                "object",
                                                {
                                                  "monitors": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "path": "string",
                                                  "readOnly": "bool",
                                                  "secretFile": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "user": "string"
                                                }
                                              ],
                                              "cinder": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "configMap": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "csi": [
                                                "object",
                                                {
                                                  "driver": "string",
                                                  "fsType": "string",
                                                  "nodePublishSecretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "readOnly": "bool",
                                                  "volumeAttributes": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "downwardAPI": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "fieldRef": [
                                                          "object",
                                                          {
                                                            "apiVersion": "string",
                                                            "fieldPath": "string"
                                                          }
                                                        ],
                                                        "mode": "number",
                                                        "path": "string",
                                                        "resourceFieldRef": [
                                                          "object",
                                                          {
                                                            "containerName": "string",
                                                            "divisor": "string",
                                                            "resource": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "emptyDir": [
                                                "object",
                                                {
                                                  "medium": "string",
                                                  "sizeLimit": "string"
                                                }
                                              ],
                                              "ephemeral": [
                                                "object",
                                                {
                                                  "volumeClaimTemplate": [
                                                    "object",
                                                    {
                                                      "metadata": [
                                                        "object",
                                                        {
                                                          "annotations": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "creationTimestamp": "string",
                                                          "deletionGracePeriodSeconds": "number",
                                                          "deletionTimestamp": "string",
                                                          "finalizers": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "generateName": "string",
                                                          "generation": "number",
                                                          "labels": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "managedFields": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "apiVersion": "string",
                                                                  "fieldsType": "string",
                                                                  "fieldsV1": "dynamic",
                                                                  "manager": "string",
                                                                  "operation": "string",
                                                                  "subresource": "string",
                                                                  "time": "string"
                                                                }
                                                              ]
                                                            ]
                                                          ],
                                                          "name": "string",
                                                          "namespace": "string",
                                                          "ownerReferences": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "apiVersion": "string",
                                                                "blockOwnerDeletion": "bool",
                                                                "controller": "bool",
                                                                "kind": "string",
                                                                "name": "string",
                                                                "uid": "string"
                                                              }
                                                            ]
                                                          ],
                                                          "resourceVersion": "string",
                                                          "selfLink": "string",
                                                          "uid": "string"
                                                        }
                                                      ],
                                                      "spec": [
                                                        "object",
                                                        {
                                                          "accessModes": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "dataSource": [
                                                            "object",
                                                            {
                                                              "apiGroup": "string",
                                                              "kind": "string",
                                                              "name": "string"
                                                            }
                                                          ],
                                                          "dataSourceRef": [
                                                            "object",
                                                            {
                                                              "apiGroup": "string",
                                                              "kind": "string",
                                                              "name": "string",
                                                              "namespace": "string"
                                                            }
                                                          ],
                                                          "resources": [
                                                            "object",
                                                            {
                                                              "limits": [
                                                                "map",
                                                                "string"
                                                              ],
                                                              "requests": [
                                                                "map",
                                                                "string"
                                                              ]
                                                            }
                                                          ],
                                                          "selector": [
                                                            "object",
                                                            {
                                                              "matchExpressions": [
                                                                "list",
                                                                [
                                                                  "object",
                                                                  {
                                                                    "key": "string",
                                                                    "operator": "string",
                                                                    "values": [
                                                                      "list",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ]
                                                              ],
                                                              "matchLabels": [
                                                                "map",
                                                                "string"
                                                              ]
                                                            }
                                                          ],
                                                          "storageClassName": "string",
                                                          "volumeAttributesClassName": "string",
                                                          "volumeMode": "string",
                                                          "volumeName": "string"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "fc": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "lun": "number",
                                                  "readOnly": "bool",
                                                  "targetWWNs": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "wwids": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "flexVolume": [
                                                "object",
                                                {
                                                  "driver": "string",
                                                  "fsType": "string",
                                                  "options": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "flocker": [
                                                "object",
                                                {
                                                  "datasetName": "string",
                                                  "datasetUUID": "string"
                                                }
                                              ],
                                              "gcePersistentDisk": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "partition": "number",
                                                  "pdName": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "gitRepo": [
                                                "object",
                                                {
                                                  "directory": "string",
                                                  "repository": "string",
                                                  "revision": "string"
                                                }
                                              ],
                                              "glusterfs": [
                                                "object",
                                                {
                                                  "endpoints": "string",
                                                  "path": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "hostPath": [
                                                "object",
                                                {
                                                  "path": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "image": [
                                                "object",
                                                {
                                                  "pullPolicy": "string",
                                                  "reference": "string"
                                                }
                                              ],
                                              "iscsi": [
                                                "object",
                                                {
                                                  "chapAuthDiscovery": "bool",
                                                  "chapAuthSession": "bool",
                                                  "fsType": "string",
                                                  "initiatorName": "string",
                                                  "iqn": "string",
                                                  "iscsiInterface": "string",
                                                  "lun": "number",
                                                  "portals": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "targetPortal": "string"
                                                }
                                              ],
                                              "name": "string",
                                              "nfs": [
                                                "object",
                                                {
                                                  "path": "string",
                                                  "readOnly": "bool",
                                                  "server": "string"
                                                }
                                              ],
                                              "persistentVolumeClaim": [
                                                "object",
                                                {
                                                  "claimName": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "photonPersistentDisk": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "pdID": "string"
                                                }
                                              ],
                                              "portworxVolume": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "projected": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "sources": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "clusterTrustBundle": [
                                                          "object",
                                                          {
                                                            "labelSelector": [
                                                              "object",
                                                              {
                                                                "matchExpressions": [
                                                                  "list",
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "key": "string",
                                                                      "operator": "string",
                                                                      "values": [
                                                                        "list",
                                                                        "string"
                                                                      ]
                                                                    }
                                                                  ]
                                                                ],
                                                                "matchLabels": [
                                                                  "map",
                                                                  "string"
                                                                ]
                                                              }
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool",
                                                            "path": "string",
                                                            "signerName": "string"
                                                          }
                                                        ],
                                                        "configMap": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "mode": "number",
                                                                  "path": "string"
                                                                }
                                                              ]
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool"
                                                          }
                                                        ],
                                                        "downwardAPI": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "fieldRef": [
                                                                    "object",
                                                                    {
                                                                      "apiVersion": "string",
                                                                      "fieldPath": "string"
                                                                    }
                                                                  ],
                                                                  "mode": "number",
                                                                  "path": "string",
                                                                  "resourceFieldRef": [
                                                                    "object",
                                                                    {
                                                                      "containerName": "string",
                                                                      "divisor": "string",
                                                                      "resource": "string"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          }
                                                        ],
                                                        "secret": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "mode": "number",
                                                                  "path": "string"
                                                                }
                                                              ]
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool"
                                                          }
                                                        ],
                                                        "serviceAccountToken": [
                                                          "object",
                                                          {
                                                            "audience": "string",
                                                            "expirationSeconds": "number",
                                                            "path": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "quobyte": [
                                                "object",
                                                {
                                                  "group": "string",
                                                  "readOnly": "bool",
                                                  "registry": "string",
                                                  "tenant": "string",
                                                  "user": "string",
                                                  "volume": "string"
                                                }
                                              ],
                                              "rbd": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "image": "string",
                                                  "keyring": "string",
                                                  "monitors": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "pool": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "user": "string"
                                                }
                                              ],
                                              "scaleIO": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "gateway": "string",
                                                  "protectionDomain": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "sslEnabled": "bool",
                                                  "storageMode": "string",
                                                  "storagePool": "string",
                                                  "system": "string",
                                                  "volumeName": "string"
                                                }
                                              ],
                                              "secret": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "optional": "bool",
                                                  "secretName": "string"
                                                }
                                              ],
                                              "storageos": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "volumeName": "string",
                                                  "volumeNamespace": "string"
                                                }
                                              ],
                                              "vsphereVolume": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "storagePolicyID": "string",
                                                  "storagePolicyName": "string",
                                                  "volumePath": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "ttlSecondsAfterFinished": "number"
                            }
                          ]
                        }
                      ],
                      "schedule": "string",
                      "startingDeadlineSeconds": "number",
                      "successfulJobsHistoryLimit": "number",
                      "suspend": "bool",
                      "timeZone": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_dev_k8s_ecr_login_renew_account",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "name": "k8s-ecr-login-renew-account",
                  "namespace": "dev"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": null,
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-account",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": null
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "975050359967",
            "arn": "arn:aws:iam::975050359967:user/terraform",
            "id": "975050359967",
            "user_id": "AIDA6GBMHYSP6G7NHGH4E"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::975050359967:user/terraform",
            "id": "arn:aws:iam::975050359967:user/terraform",
            "issuer_arn": "arn:aws:iam::975050359967:user/terraform",
            "issuer_id": "",
            "issuer_name": "",
            "session_name": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSTNQG0mfAmRzdKZqfODF5hTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjYwNFoXDTMwMDgyMzIyMjYwNFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALd/pVko\n8vuM475Tf45HV3BbCl/B9Jy89G1CRkFjcPY06WA9lS+7dWbUA7GtWUKoksr69hKM\nwcMsNpxlw7b3jeXFgxB09/nmalcAWtnLzF+LaDKEA5DQmvKzuh1nfIfqEiKCQSmX\nXh09Xs+dO7cm5qbaL2hhNJCSAejciwcvOFgFNgEMR42wm6KIFHsQW28jhA+1u/M0\np6fVwReuEgZfLfdx82Px0LJck3lST3EB/JfbdsdOzzzg5YkY1dfuqf8y5fUeZ7Cz\nWXbTjujwX/TovmeWKA36VLCz75azW6tDNuDn66FOpADZZ9omVaF6BqNJiLMVl6P3\n/c0OiUMC6Z5OfKcCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUVdkYX9IczAHhWLS+q9lVQgHXLgIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAGjeWm2cC+3z2MzSCnte46/7JZvj3iQZDY7EvODNdZF41n71Lrk9kbfNwerK0d\nVNzW36Wefr7j7ZSwBVg50W5ay65jNSN74TTQV1yt4WnSbVvN6KlMs1hiyOZdoHKs\nKDV2UGNxbdoBYCQNa2GYF8FQIWLugNp35aSOpMy6cFlymFQomIrnOQHwK1nvVY4q\nxDSJMU/gNJz17D8ArPN3ngnyZ2TwepJ0uBINz3G5te2rdFUF4i4Y3Bb7FUlHDYm4\nu8aIRGpk2ZpfXmxaoxnbIBZRvGLPSUuPwnwoUOMsJ8jirI5vs2dvchPb7MtI1rle\ni02f2ivH2vxkjDLltSpe2fiC\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:26:04Z",
                "not_before": "2022-08-23T22:26:04Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129356476704345391986644047206454194698629",
                "sha1_fingerprint": "d9fe0a65fa00cabf61f5120d373a8135e1461f15",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF6TCCBNGgAwIBAgIQC1pmj3MJbfdZEwuZaK0yeDANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAzMB4XDTI0MDMyNzAwMDAwMFoXDTI1MDQyNTIzNTk1OVowKDEm\nMCQGA1UEAwwdKi5la3MudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20wggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCyfP2lMr2GZr3NlTFQcpZ1LcOH8Zao627X\ntI4MO+P1IarmDJT7rne8+pjduGWhmddZmN8IcpiDCREoFvyf2jC5Lk0CwRnzLIhZ\nj6vd75gFCWJFzKnfz6F/xtUudATESARr/E8JlsScKY5eoqHPRPqMgzW6HFY46ONu\nBN8pk3iA6S8tN2LvF/aWUc8J546V1Zrruw2h3FvGAQtqDxBgcA/SwXjiIO6+4D8P\ntu0qdTlA7/AS8ph1tJDQ5Xv4wG0ZJ5uMm9S9pS/3SPWMEkTKNp+QpNMGYvX7sure\n0oqX+oJIDC9IbKIscrsmkAwqS7PWFWszpojo8Ur/62RmLQOiJ/PXAgMBAAGjggL5\nMIIC9TAfBgNVHSMEGDAWgBRV2Rhf0hzMAeFYtL6r2VVCAdcuAjAdBgNVHQ4EFgQU\npytkck5Jdaa1DjuIJMpyBxd3ztMwKAYDVR0RBCEwH4IdKi5la3MudXMtZWFzdC0y\nLmFtYXpvbmF3cy5jb20wEwYDVR0gBAwwCjAIBgZngQwBAgEwDgYDVR0PAQH/BAQD\nAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCg\nLqAshipodHRwOi8vY3JsLnIybTAzLmFtYXpvbnRydXN0LmNvbS9yMm0wMy5jcmww\ndQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5yMm0wMy5h\nbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJtMDMuYW1h\nem9udHJ1c3QuY29tL3IybTAzLmNlcjAMBgNVHRMBAf8EAjAAMIIBgQYKKwYBBAHW\neQIEAgSCAXEEggFtAWsAdwBOdaMnXJoQwzhbbNTfP1LrHfDgjhuNacCx+mSxYpo5\n3wAAAY6B4toRAAAEAwBIMEYCIQCL2lZOGqo75PNnFiLldA7Gd39egtnXDTY+HHYO\n++O98gIhALSzX7cp+Y17fzfL5TAFWZm0+/7LFdyrQEEsgntEXCdTAHcAfVkeEuF4\nKnscYWd8Xv340IdcFKBOlZ65Ay/ZDowuebgAAAGOgeLZyAAABAMASDBGAiEA2EeA\nVUmkO2biyHSh0v+5Uo/NRG53wDwMKBRMLB+03oYCIQCBdgI4o8mFSYNASwhYKGWP\nIt5yi7Hmoi1pFefYiBmGbAB3AObSMWNAd4zBEEEG13G5zsHSQPaWhIb7uocyHf0e\nN45QAAABjoHi2dgAAAQDAEgwRgIhAK2MT0pX3Et7hx26gxiJwGj7u3v/9xMJHVhK\nC5fnxlfNAiEAizPUX2b3GrMeYnINHOy98KbPvkCzGHtN6qcdbf7w3T8wDQYJKoZI\nhvcNAQELBQADggEBAKknRf08AG7Hpn2h4HOyZPC0weNsrS/c8VIXRRSFth1nxQsZ\nyscbVOiJ6j7M6VvfjEmvsL7tvj3UlWmxJuadatX9HIX2KT2mq1fJxv/kX0laHtGl\nWbP3+CYHYCnZf8yPV7EaRJB2AtbGwV7rBd6mb9tDy2uAouTeANQi2XNVoCvGNkSQ\n/zIt0K+TA+efYW3wGhFuMHJOnwJ0a4mXwI7rHclijeztb680ga+F+Indpp5pMmsr\neNyO2TImDxtfDd/l8z2qNDzpyXIeSt2JgORnO5AjGC0EWD2p/hIsLCbG+QnB5IYo\nwHAg3LNrgxkdOWoY23z/WYylg4DdPzPT1SuHKYk=\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "not_after": "2025-04-25T23:59:59Z",
                "not_before": "2024-03-27T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "15090894841911196861235261040086561400",
                "sha1_fingerprint": "32f9e66ae934e90332545a9e7494591af3f34938",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=*.eks.us-east-2.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "41c9ad86376859231a2244535dff0f089ba892cb",
            "url": "https://oidc.eks.us-east-2.amazonaws.com/id/6680164C92987A021E277663DFCC63BB",
            "verify_chain": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:975050359967:log-group:/aws/eks/eks-FB8HPPt7/cluster",
            "id": "/aws/eks/eks-FB8HPPt7/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/eks-FB8HPPt7/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/eks-FB8HPPt7/cluster"
            },
            "tags_all": {
              "Name": "/aws/eks/eks-FB8HPPt7/cluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": false
              }
            ],
            "arn": "arn:aws:eks:us-east-2:975050359967:cluster/eks-FB8HPPt7",
            "bootstrap_self_managed_addons": true,
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRStKWDh5KzlOdDR3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBNE1USXhOREV6TWpKYUZ3MHpOREE0TVRBeE5ERTRNakphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURGbVh0bWVnSGpLNFFYY29uRVQvek9uL2Q0WlVkUlNMMFhBVjhSWkNuTDVGR0NBdEFrcllMN3V5YVgKcTQ0V0FpRTNQdmxNdmRQRHpxRG9MVDJ3RTVESFhrY1R2Z2RhMDNDVXk0V0tDRk15TituM2JiRkNXRjNTWm9XWgpTM1NqR0llMEFLdDhCMldZd3BrSUdaK09sQVMxVmRqYitLejhXZURDU1dDbWtvd2Z5S3JPUDc3bTN4eUhPSnk2CjdVLzUzMGovN25jRlBOcnhhMFhjUHZrbHJxVnhhdlVGWEM4T2xhYy9WeDdLRjRlQVNxSmx5dzNjQmlWUEdJN3AKME1zcmJpeTN6Y3F2Y0lWUDJkTTZHUW45K0M5VDA3ekpHUjZwSkNxWktXUmFWcy9OWjBTdmx4QWM4ajZxUGNxVwpGS2huR1ZDdkRGajlKOGNrdVlhWFdKanB4clY3QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUdUpiT3NISXVtQTJmRVhXT3lhOE83M0doK21qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1NpbzlOS3ZLWApkVllNTXR5RE1TV0hBRXRGamF5MW9WSHVRY1lCTHlJdnQrRmNuS0FvYTVBeGo5eWhxM04wdU83V3lkT0MyYktvCnZ0cEUyUkFYRUhiL0MwV0QwMUxUckYxNHJ3OHRnTGdYWjZYcklZUmcybkExQkRRcTVBRzg4aDRsRXM2a1JSZHcKUldJSmx0c0NLSlpNTVB5akJYL0JSZk94ZEpaOFl4SmRPVUh1b25oUkE0S2RNcUxCSC9ZcEQ0a0V0R0x0dG0rMwpZWEd4ZnNOQ2VGR2RNM2dZVXA3THFMQjI4ZVRodVFEOURaNGVWbElwMXVwdS9MWjJFekFaZXFkWjlKNXRlVXcrCkhpbzZYdG8rbUVyRC8xV0l3amNWWHVKSTVWVGE4anFuNFNXMTRrbG8wa0xBZll2TVpnRmpSRnNmWkNlU2dWR2YKSklUcTZNWlNGQStSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-08-12 14:13:20.783 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:us-east-2:975050359967:key/7a1c6bdb-028c-4b66-9adc-11c02546f039"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://6680164C92987A021E277663DFCC63BB.gr7.us-east-2.eks.amazonaws.com",
            "id": "eks-FB8HPPt7",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-2.amazonaws.com/id/6680164C92987A021E277663DFCC63BB"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "eks-FB8HPPt7",
            "outpost_config": [],
            "platform_version": "eks.12",
            "role_arn": "arn:aws:iam::975050359967:role/eks-FB8HPPt7-cluster-20240812141249669200000002",
            "status": "ACTIVE",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.31",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-01e5d157769caae39",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0a609798a18949091"
                ],
                "subnet_ids": [
                  "subnet-022bbaddb0f874b55",
                  "subnet-0b5849cfc646eb106",
                  "subnet-0bf89288418baa7fc"
                ],
                "vpc_id": "vpc-0d9da5850d9f71105"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::975050359967:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/6680164C92987A021E277663DFCC63BB",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::975050359967:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/6680164C92987A021E277663DFCC63BB",
            "tags": {
              "Name": "eks-FB8HPPt7-eks-irsa"
            },
            "tags_all": {
              "Name": "eks-FB8HPPt7-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-east-2.amazonaws.com/id/6680164C92987A021E277663DFCC63BB"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::975050359967:policy/eks-FB8HPPt7-cluster-ClusterEncryption20240812141318104600000011",
            "attachment_count": 1,
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::975050359967:policy/eks-FB8HPPt7-cluster-ClusterEncryption20240812141318104600000011",
            "name": "eks-FB8HPPt7-cluster-ClusterEncryption20240812141318104600000011",
            "name_prefix": "eks-FB8HPPt7-cluster-ClusterEncryption",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-2:975050359967:key/7a1c6bdb-028c-4b66-9adc-11c02546f039\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA6GBMHYSP3MXXFWB5R",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::975050359967:role/eks-FB8HPPt7-cluster-20240812141249669200000002",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-08-12T14:12:50Z",
            "description": "",
            "force_detach_policies": true,
            "id": "eks-FB8HPPt7-cluster-20240812141249669200000002",
            "inline_policy": [
              {
                "name": "eks-FB8HPPt7-cluster",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::975050359967:policy/eks-FB8HPPt7-cluster-ClusterEncryption20240812141318104600000011",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "eks-FB8HPPt7-cluster-20240812141249669200000002",
            "name_prefix": "eks-FB8HPPt7-cluster-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA6GBMHYSP3BA4QDYQP"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "eks-FB8HPPt7-cluster-20240812141249669200000002-20240812141318806500000012",
            "policy_arn": "arn:aws:iam::975050359967:policy/eks-FB8HPPt7-cluster-ClusterEncryption20240812141318104600000011",
            "role": "eks-FB8HPPt7-cluster-20240812141249669200000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "eks-FB8HPPt7-cluster-20240812141249669200000002-2024081214125193700000000a",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "eks-FB8HPPt7-cluster-20240812141249669200000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "eks-FB8HPPt7-cluster-20240812141249669200000002-2024081214125193720000000b",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "eks-FB8HPPt7-cluster-20240812141249669200000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:security-group/sg-0a609798a18949091",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-0a609798a18949091",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-09ab63b78f0a68320"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "eks-FB8HPPt7-cluster-2024081214130430850000000e",
            "name_prefix": "eks-FB8HPPt7-cluster-",
            "owner_id": "975050359967",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-FB8HPPt7-cluster"
            },
            "tags_all": {
              "Name": "eks-FB8HPPt7-cluster"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:security-group/sg-09ab63b78f0a68320",
            "description": "EKS node shared security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all egress",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-09ab63b78f0a68320",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [
                  "sg-09b1b71659a00742c"
                ],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 4443/tcp webhook",
                "from_port": 4443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0a609798a18949091"
                ],
                "self": false,
                "to_port": 4443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 6443/tcp webhook",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0a609798a18949091"
                ],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 8443/tcp webhook",
                "from_port": 8443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0a609798a18949091"
                ],
                "self": false,
                "to_port": 8443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 9443/tcp webhook",
                "from_port": 9443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0a609798a18949091"
                ],
                "self": false,
                "to_port": 9443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0a609798a18949091"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0a609798a18949091"
                ],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS UDP",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node ingress on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 65535
              }
            ],
            "name": "eks-FB8HPPt7-node-2024081214130430860000000f",
            "name_prefix": "eks-FB8HPPt7-node-",
            "owner_id": "975050359967",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-FB8HPPt7-node",
              "kubernetes.io/cluster/eks-FB8HPPt7": "owned"
            },
            "tags_all": {
              "Name": "eks-FB8HPPt7-node",
              "kubernetes.io/cluster/eks-FB8HPPt7": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-3210875248",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0a609798a18949091",
            "security_group_rule_id": "sgr-04e5b98c9a31503f8",
            "self": false,
            "source_security_group_id": "sg-09ab63b78f0a68320",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-220471529",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-09ab63b78f0a68320",
            "security_group_rule_id": "sgr-000afed2a3d3e9dd9",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-571161431",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-09ab63b78f0a68320",
            "security_group_rule_id": "sgr-06c7eee575de64597",
            "self": false,
            "source_security_group_id": "sg-0a609798a18949091",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-2281153644",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-09ab63b78f0a68320",
            "security_group_rule_id": "sgr-0a078a9b826a81f12",
            "self": false,
            "source_security_group_id": "sg-0a609798a18949091",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-1320535034",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-09ab63b78f0a68320",
            "security_group_rule_id": "sgr-06abd823330d73f3c",
            "self": false,
            "source_security_group_id": "sg-0a609798a18949091",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-1575616475",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-09ab63b78f0a68320",
            "security_group_rule_id": "sgr-09eca07de91faef96",
            "self": false,
            "source_security_group_id": "sg-0a609798a18949091",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-961072144",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-09ab63b78f0a68320",
            "security_group_rule_id": "sgr-0509a63b951445745",
            "self": false,
            "source_security_group_id": "sg-0a609798a18949091",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-1620293619",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-09ab63b78f0a68320",
            "security_group_rule_id": "sgr-0d5e4870e868f7e63",
            "self": false,
            "source_security_group_id": "sg-0a609798a18949091",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-3043752687",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-09ab63b78f0a68320",
            "security_group_rule_id": "sgr-0ac5ffee2d43d10e9",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-4149349452",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-09ab63b78f0a68320",
            "security_group_rule_id": "sgr-00f9b966d2bcc4721",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-1393405859",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-09ab63b78f0a68320",
            "security_group_rule_id": "sgr-0bc4ef34df3d55500",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2024-11-13T16:03:43Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRStKWDh5KzlOdDR3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBNE1USXhOREV6TWpKYUZ3MHpOREE0TVRBeE5ERTRNakphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURGbVh0bWVnSGpLNFFYY29uRVQvek9uL2Q0WlVkUlNMMFhBVjhSWkNuTDVGR0NBdEFrcllMN3V5YVgKcTQ0V0FpRTNQdmxNdmRQRHpxRG9MVDJ3RTVESFhrY1R2Z2RhMDNDVXk0V0tDRk15TituM2JiRkNXRjNTWm9XWgpTM1NqR0llMEFLdDhCMldZd3BrSUdaK09sQVMxVmRqYitLejhXZURDU1dDbWtvd2Z5S3JPUDc3bTN4eUhPSnk2CjdVLzUzMGovN25jRlBOcnhhMFhjUHZrbHJxVnhhdlVGWEM4T2xhYy9WeDdLRjRlQVNxSmx5dzNjQmlWUEdJN3AKME1zcmJpeTN6Y3F2Y0lWUDJkTTZHUW45K0M5VDA3ekpHUjZwSkNxWktXUmFWcy9OWjBTdmx4QWM4ajZxUGNxVwpGS2huR1ZDdkRGajlKOGNrdVlhWFdKanB4clY3QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUdUpiT3NISXVtQTJmRVhXT3lhOE83M0doK21qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1NpbzlOS3ZLWApkVllNTXR5RE1TV0hBRXRGamF5MW9WSHVRY1lCTHlJdnQrRmNuS0FvYTVBeGo5eWhxM04wdU83V3lkT0MyYktvCnZ0cEUyUkFYRUhiL0MwV0QwMUxUckYxNHJ3OHRnTGdYWjZYcklZUmcybkExQkRRcTVBRzg4aDRsRXM2a1JSZHcKUldJSmx0c0NLSlpNTVB5akJYL0JSZk94ZEpaOFl4SmRPVUh1b25oUkE0S2RNcUxCSC9ZcEQ0a0V0R0x0dG0rMwpZWEd4ZnNOQ2VGR2RNM2dZVXA3THFMQjI4ZVRodVFEOURaNGVWbElwMXVwdS9MWjJFekFaZXFkWjlKNXRlVXcrCkhpbzZYdG8rbUVyRC8xV0l3amNWWHVKSTVWVGE4anFuNFNXMTRrbG8wa0xBZll2TVpnRmpSRnNmWkNlU2dWR2YKSklUcTZNWlNGQStSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "cluster_endpoint": "https://6680164C92987A021E277663DFCC63BB.gr7.us-east-2.eks.amazonaws.com",
              "cluster_name": "eks-FB8HPPt7",
              "cluster_service_cidr": "172.20.0.0/16",
              "cluster_version": "1.31"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "975050359967",
            "arn": "arn:aws:iam::975050359967:user/terraform",
            "id": "975050359967",
            "user_id": "AIDA6GBMHYSP6G7NHGH4E"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:us-east-2:975050359967:nodegroup/eks-FB8HPPt7/node-group-1-20240812142324246500000017/9ec8a37c-76db-9b4d-8c68-162ae8b8f084",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "eks-FB8HPPt7",
            "disk_size": 0,
            "force_update_version": null,
            "id": "eks-FB8HPPt7:node-group-1-20240812142324246500000017",
            "instance_types": [
              "t3.large"
            ],
            "labels": {},
            "launch_template": [
              {
                "id": "lt-0377def49fd51cd7d",
                "name": "one-20240812142322996700000015",
                "version": "1"
              }
            ],
            "node_group_name": "node-group-1-20240812142324246500000017",
            "node_group_name_prefix": "node-group-1-",
            "node_role_arn": "arn:aws:iam::975050359967:role/node-group-1-eks-node-group-20240812141249669200000001",
            "release_version": "1.31.0-20241109",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-node-group-1-20240812142324246500000017-9ec8a37c-76db-9b4d-8c68-162ae8b8f084"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 3,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-022bbaddb0f874b55",
              "subnet-0b5849cfc646eb106",
              "subnet-0bf89288418baa7fc"
            ],
            "tags": {
              "Name": "node-group-1"
            },
            "tags_all": {
              "Name": "node-group-1"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.31"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::975050359967:role/node-group-1-eks-node-group-20240812141249669200000001",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-08-12T14:12:50Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "node-group-1-eks-node-group-20240812141249669200000001",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AdministratorAccess",
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "node-group-1-eks-node-group-20240812141249669200000001",
            "name_prefix": "node-group-1-eks-node-group-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA6GBMHYSPVVFY5BXSI"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240812141249669200000001-20240812141251255900000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "node-group-1-eks-node-group-20240812141249669200000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240812141249669200000001-20240812141251528000000008",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "node-group-1-eks-node-group-20240812141249669200000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240812141249669200000001-20240812141251175400000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "node-group-1-eks-node-group-20240812141249669200000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:launch-template/lt-0377def49fd51cd7d",
            "block_device_mappings": [],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "default_version": 1,
            "description": "Custom launch template for node-group-1 EKS managed node group",
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_optimized": "",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-0377def49fd51cd7d",
            "image_id": "",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_requirements": [],
            "instance_type": "",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "maintenance_options": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": ""
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "one-20240812142322996700000015",
            "name_prefix": "one-",
            "network_interfaces": [],
            "placement": [],
            "private_dns_name_options": [],
            "ram_disk_id": "",
            "security_group_names": [],
            "tag_specifications": [
              {
                "resource_type": "instance",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "network-interface",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "volume",
                "tags": {
                  "Name": "node-group-1"
                }
              }
            ],
            "tags": {},
            "tags_all": {},
            "update_default_version": true,
            "user_data": "",
            "vpc_security_group_ids": [
              "sg-09ab63b78f0a68320"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"].module.user_data",
      "mode": "managed",
      "type": "null_resource",
      "name": "validate_cluster_service_cidr",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2708278840081992363",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "975050359967",
            "arn": "arn:aws:iam::975050359967:user/terraform",
            "id": "975050359967",
            "user_id": "AIDA6GBMHYSP6G7NHGH4E"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2539714752",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Default\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::975050359967:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:ReplicateKey\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:ImportKeyMaterial\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::975050359967:user/terraform\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::975050359967:role/eks-FB8HPPt7-cluster-20240812141249669200000002\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Default\",\"Effect\":\"Allow\",\"Action\":\"kms:*\",\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::975050359967:root\"}},{\"Sid\":\"KeyAdministration\",\"Effect\":\"Allow\",\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::975050359967:user/terraform\"}},{\"Sid\":\"KeyUsage\",\"Effect\":\"Allow\",\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::975050359967:role/eks-FB8HPPt7-cluster-20240812141249669200000002\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::975050359967:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "Default"
              },
              {
                "actions": [
                  "kms:CancelKeyDeletion",
                  "kms:Create*",
                  "kms:Delete*",
                  "kms:Describe*",
                  "kms:Disable*",
                  "kms:Enable*",
                  "kms:Get*",
                  "kms:ImportKeyMaterial",
                  "kms:List*",
                  "kms:Put*",
                  "kms:ReplicateKey",
                  "kms:Revoke*",
                  "kms:ScheduleKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:Update*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::975050359967:user/terraform"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyAdministration"
              },
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::975050359967:role/eks-FB8HPPt7-cluster-20240812141249669200000002"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyUsage"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-2:975050359967:alias/eks/eks-FB8HPPt7",
            "id": "alias/eks/eks-FB8HPPt7",
            "name": "alias/eks/eks-FB8HPPt7",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:us-east-2:975050359967:key/7a1c6bdb-028c-4b66-9adc-11c02546f039",
            "target_key_id": "7a1c6bdb-028c-4b66-9adc-11c02546f039"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-2:975050359967:key/7a1c6bdb-028c-4b66-9adc-11c02546f039",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "eks-FB8HPPt7 cluster encryption key",
            "enable_key_rotation": true,
            "id": "7a1c6bdb-028c-4b66-9adc-11c02546f039",
            "is_enabled": true,
            "key_id": "7a1c6bdb-028c-4b66-9adc-11c02546f039",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::975050359967:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::975050359967:user/terraform\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::975050359967:role/eks-FB8HPPt7-cluster-20240812141249669200000002\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
            "rotation_period_in_days": 365,
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": null,
            "xks_key_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "dev",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "dev",
                "resource_version": "70234",
                "uid": "1f8653b1-b383-4313-8458-9e755d2a0d7d"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "dev/backend-auth",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 271,
                "labels": {},
                "name": "backend-auth",
                "namespace": "dev",
                "resource_version": "27587576",
                "uid": "e9341225-c775-4097-998d-f1db9ff72580"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-auth"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-auth"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "975050359967.dkr.ecr.us-east-2.amazonaws.com/backend-auth:development-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-auth",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "dev/backend-auth",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-auth",
                "namespace": "dev",
                "resource_version": "143824",
                "uid": "5c6a7f67-66a8-4551-a3da-b8e315ee3440"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.106.183",
                "cluster_ips": [
                  "172.20.106.183"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-auth"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "dev",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "dev",
                "resource_version": "70234",
                "uid": "1f8653b1-b383-4313-8458-9e755d2a0d7d"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "dev/backend-notification",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 57,
                "labels": {},
                "name": "backend-notification",
                "namespace": "dev",
                "resource_version": "27587692",
                "uid": "250b9102-e96a-42e4-8adf-8ac5398043af"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-notification"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-notification"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "975050359967.dkr.ecr.us-east-2.amazonaws.com/backend-notification:development-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-notification",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "dev/backend-notification",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-notification",
                "namespace": "dev",
                "resource_version": "159529",
                "uid": "df0b0989-5a5d-446e-b898-7275f0c7b299"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.169.36",
                "cluster_ips": [
                  "172.20.169.36"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-notification"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "dev",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "dev",
                "resource_version": "70234",
                "uid": "1f8653b1-b383-4313-8458-9e755d2a0d7d"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "dev/backend-wallet",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 284,
                "labels": {},
                "name": "backend-wallet",
                "namespace": "dev",
                "resource_version": "29203530",
                "uid": "1702eb6a-69ed-4b04-8dc3-dd56fc3290ad"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-wallet"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-wallet"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "975050359967.dkr.ecr.us-east-2.amazonaws.com/backend-wallet:development-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-wallet",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "dev/backend-wallet",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-wallet",
                "namespace": "dev",
                "resource_version": "2178083",
                "uid": "4bbae7f9-f356-4d2a-9daa-2aae4ad51114"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.109.49",
                "cluster_ips": [
                  "172.20.109.49"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-wallet"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "dev",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "dev",
                "resource_version": "70234",
                "uid": "1f8653b1-b383-4313-8458-9e755d2a0d7d"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "dev/backend-ws",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 3,
                "labels": {},
                "name": "backend-ws",
                "namespace": "dev",
                "resource_version": "27591043",
                "uid": "b69cbc99-65e4-4082-b432-afcab1ad49d1"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-ws"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-ws"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "975050359967.dkr.ecr.us-east-2.amazonaws.com/ws:development-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-ws",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "dev/backend-ws",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-ws",
                "namespace": "dev",
                "resource_version": "27589200",
                "uid": "e93d26d4-1302-4c6f-b191-23d3e851c8ff"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.250.25",
                "cluster_ips": [
                  "172.20.250.25"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-ws"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "dev",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "dev",
                "resource_version": "70234",
                "uid": "1f8653b1-b383-4313-8458-9e755d2a0d7d"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "dev/frontend-admin",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 193,
                "labels": {},
                "name": "frontend-admin",
                "namespace": "dev",
                "resource_version": "29203580",
                "uid": "6d71ee0a-0720-4890-b913-d0d648ee215a"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "frontend-admin"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "frontend-admin"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "975050359967.dkr.ecr.us-east-2.amazonaws.com/frontend-admin:development-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "frontend-admin",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "dev/frontend-admin",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "frontend-admin",
                "namespace": "dev",
                "resource_version": "269692",
                "uid": "7208bd4f-1cad-4ebd-90b1-7928b669b143"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.66.79",
                "cluster_ips": [
                  "172.20.66.79"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "frontend-admin"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"42m4w6dscge274szhjoq2u5noc3bdyzx._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "42m4w6dscge274szhjoq2u5noc3bdyzx._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_42m4w6dscge274szhjoq2u5noc3bdyzx._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "42m4w6dscge274szhjoq2u5noc3bdyzx._domainkey.walletguru.co",
            "records": [
              "42m4w6dscge274szhjoq2u5noc3bdyzx.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"44mh5smaunivxhr63elcbyi57l7l4lwi._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "44mh5smaunivxhr63elcbyi57l7l4lwi._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_44mh5smaunivxhr63elcbyi57l7l4lwi._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "44mh5smaunivxhr63elcbyi57l7l4lwi._domainkey.walletguru.co",
            "records": [
              "44mh5smaunivxhr63elcbyi57l7l4lwi.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"5ktwxsaan2cfxvfhv4t5mq525n4v24qj._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "5ktwxsaan2cfxvfhv4t5mq525n4v24qj._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_5ktwxsaan2cfxvfhv4t5mq525n4v24qj._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "5ktwxsaan2cfxvfhv4t5mq525n4v24qj._domainkey.walletguru.co",
            "records": [
              "5ktwxsaan2cfxvfhv4t5mq525n4v24qj.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"_dmarc.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "_dmarc.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ__dmarc.walletguru.co_TXT",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "_dmarc.walletguru.co",
            "records": [
              "v=DMARC1; p=none;"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "TXT",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"czzabqsuluhcffeu4jwnvmxoe3gwobls._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "czzabqsuluhcffeu4jwnvmxoe3gwobls._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_czzabqsuluhcffeu4jwnvmxoe3gwobls._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "czzabqsuluhcffeu4jwnvmxoe3gwobls._domainkey.walletguru.co",
            "records": [
              "czzabqsuluhcffeu4jwnvmxoe3gwobls.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.admin.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_dev.admin.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.admin.walletguru.co",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.auth.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_dev.auth.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.auth.walletguru.co",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.graphql.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_dev.graphql.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.graphql.walletguru.co",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.interaction.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_dev.interaction.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.interaction.walletguru.co",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.mock.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_dev.mock.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.mock.walletguru.co",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.notification.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_dev.notification.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.notification.walletguru.co",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.rafiki-auth.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_dev.rafiki-auth.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.rafiki-auth.walletguru.co",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.rafiki.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_dev.rafiki.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.rafiki.walletguru.co",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.wallet.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_dev.wallet.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.wallet.walletguru.co",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.walletguru.me\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.walletguru.me",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z005616523M0XVD03LD0M_dev.walletguru.me_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.walletguru.me",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z005616523M0XVD03LD0M"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"dev.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "dev.websocket.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_dev.websocket.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "dev.websocket.walletguru.co",
            "records": [
              "a19ddf081adf74c94978f8903bc54031-411375565.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"eicaqbslgkarw4ip4drlikgliva6qahj._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "eicaqbslgkarw4ip4drlikgliva6qahj._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_eicaqbslgkarw4ip4drlikgliva6qahj._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "eicaqbslgkarw4ip4drlikgliva6qahj._domainkey.walletguru.co",
            "records": [
              "eicaqbslgkarw4ip4drlikgliva6qahj.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"o5v7iuqf6dvyv23b6qwlav3yhrhnqd36._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "o5v7iuqf6dvyv23b6qwlav3yhrhnqd36._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_o5v7iuqf6dvyv23b6qwlav3yhrhnqd36._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "o5v7iuqf6dvyv23b6qwlav3yhrhnqd36._domainkey.walletguru.co",
            "records": [
              "o5v7iuqf6dvyv23b6qwlav3yhrhnqd36.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"shm3eq3wwx3ivumsiyfflual6qcl67yj._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "shm3eq3wwx3ivumsiyfflual6qcl67yj._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_shm3eq3wwx3ivumsiyfflual6qcl67yj._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "shm3eq3wwx3ivumsiyfflual6qcl67yj._domainkey.walletguru.co",
            "records": [
              "shm3eq3wwx3ivumsiyfflual6qcl67yj.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"ugcymohpz7tvyjr5zcsymxsamw55stib._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "ugcymohpz7tvyjr5zcsymxsamw55stib._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_ugcymohpz7tvyjr5zcsymxsamw55stib._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "ugcymohpz7tvyjr5zcsymxsamw55stib._domainkey.walletguru.co",
            "records": [
              "ugcymohpz7tvyjr5zcsymxsamw55stib.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"vftimymc7xgnksuvqe7glwbcfjvutsz7._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "vftimymc7xgnksuvqe7glwbcfjvutsz7._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_vftimymc7xgnksuvqe7glwbcfjvutsz7._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "vftimymc7xgnksuvqe7glwbcfjvutsz7._domainkey.walletguru.co",
            "records": [
              "vftimymc7xgnksuvqe7glwbcfjvutsz7.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-auth\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:975050359967:repository/backend-auth",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-auth",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-auth",
            "registry_id": "975050359967",
            "repository_url": "975050359967.dkr.ecr.us-east-2.amazonaws.com/backend-auth",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-notification\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:975050359967:repository/backend-notification",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-notification",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-notification",
            "registry_id": "975050359967",
            "repository_url": "975050359967.dkr.ecr.us-east-2.amazonaws.com/backend-notification",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-wallet\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:975050359967:repository/backend-wallet",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-wallet",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-wallet",
            "registry_id": "975050359967",
            "repository_url": "975050359967.dkr.ecr.us-east-2.amazonaws.com/backend-wallet",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"frontend-admin\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:975050359967:repository/frontend-admin",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "frontend-admin",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "frontend-admin",
            "registry_id": "975050359967",
            "repository_url": "975050359967.dkr.ecr.us-east-2.amazonaws.com/frontend-admin",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"ws\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:975050359967:repository/ws",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "ws",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "ws",
            "registry_id": "975050359967",
            "repository_url": "975050359967.dkr.ecr.us-east-2.amazonaws.com/ws",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-dev\"]",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::walletguru-dev",
            "bucket": "walletguru-dev",
            "bucket_domain_name": "walletguru-dev.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "walletguru-dev.s3.us-east-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [
              {
                "id": "",
                "permissions": [
                  "READ"
                ],
                "type": "Group",
                "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
              },
              {
                "id": "257d759f8ac861a720feea6d2a5e005e0fc3ab40183f6fe8bf7157ad61600e0e",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z2O1EMRO9K5GLX",
            "id": "walletguru-dev",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "us-east-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-dev\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_acl",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_control_policy": [
              {
                "grant": [
                  {
                    "grantee": [
                      {
                        "display_name": "",
                        "email_address": "",
                        "id": "",
                        "type": "Group",
                        "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
                      }
                    ],
                    "permission": "READ"
                  },
                  {
                    "grantee": [
                      {
                        "display_name": "",
                        "email_address": "",
                        "id": "257d759f8ac861a720feea6d2a5e005e0fc3ab40183f6fe8bf7157ad61600e0e",
                        "type": "CanonicalUser",
                        "uri": ""
                      }
                    ],
                    "permission": "FULL_CONTROL"
                  }
                ],
                "owner": [
                  {
                    "display_name": "",
                    "id": "257d759f8ac861a720feea6d2a5e005e0fc3ab40183f6fe8bf7157ad61600e0e"
                  }
                ]
              }
            ],
            "acl": "public-read",
            "bucket": "walletguru-dev",
            "expected_bucket_owner": "",
            "id": "walletguru-dev,public-read"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example",
            "module.s3.aws_s3_bucket_ownership_controls.example",
            "module.s3.aws_s3_bucket_public_access_block.example"
          ]
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-dev\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_ownership_controls",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "walletguru-dev",
            "id": "walletguru-dev",
            "rule": [
              {
                "object_ownership": "BucketOwnerPreferred"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example"
          ]
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-dev\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": false,
            "block_public_policy": false,
            "bucket": "walletguru-dev",
            "id": "walletguru-dev",
            "ignore_public_acls": false,
            "restrict_public_buckets": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example"
          ]
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "managed",
      "type": "helm_release",
      "name": "traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "traefik",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "traefik",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.9.7",
                "chart": "traefik",
                "first_deployed": 1723524457,
                "last_deployed": 1723524457,
                "name": "traefik",
                "namespace": "traefik",
                "notes": "\n\nTraefik Proxy v2.9.7 has been deployed successfully\non traefik namespace !\n",
                "revision": 1,
                "values": "{\"additionalArguments\":[\"--log.level=DEBUG\",\"--certificatesresolvers.le.acme.email=youremmail@gmail.com\",\"--certificatesresolvers.le.acme.storage=/data/acme.json\",\"--certificatesresolvers.le.acme.tlschallenge=true\",\"--certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory\"],\"dashboard\":{\"domain\":\"traefik.ui.kube\",\"enabled\":true},\"deployment\":{\"replicas\":1},\"rbac\":{\"enabled\":true}}",
                "version": "21.1.0"
              }
            ],
            "name": "traefik",
            "namespace": "traefik",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://traefik.github.io/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "deployment.replicas",
                "type": "",
                "value": "1"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 800,
            "values": [
              "dashboard:\n  enabled: true\n  domain: traefik.ui.kube\nrbac:\n  enabled: true\nadditionalArguments:\n  - \"--log.level=DEBUG\"\n  - \"--certificatesresolvers.le.acme.email=youremmail@gmail.com\"\n  - \"--certificatesresolvers.le.acme.storage=/data/acme.json\"\n  - \"--certificatesresolvers.le.acme.tlschallenge=true\"\n  - \"--certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory\""
            ],
            "verify": false,
            "version": "21.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "admin",
                  "namespace": "dev"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin",
                          "namespace": "dev"
                        },
                        {
                          "name": "admin-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "services": [
                        {
                          "name": "frontend-admin",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin",
                          "namespace": "dev"
                        },
                        {
                          "name": "admin-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "frontend-admin",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "admin-http",
                  "namespace": "dev"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "services": [
                        {
                          "name": "frontend-admin",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin-http",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "frontend-admin",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "admin",
                  "namespace": "dev"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "admin-to-https",
                  "namespace": "dev"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin-to-https",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "auth",
                  "namespace": "dev"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth",
                          "namespace": "dev"
                        },
                        {
                          "name": "auth-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-auth",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth",
                          "namespace": "dev"
                        },
                        {
                          "name": "auth-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "auth-http",
                  "namespace": "dev"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-auth",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth-http",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "auth",
                  "namespace": "dev"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "auth-to-https",
                  "namespace": "dev"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth-to-https",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "graphql-backend",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend",
                          "namespace": "default"
                        },
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "3001"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend",
                          "namespace": "default"
                        },
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3001",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "graphql-backend-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "3001"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3001",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "graphql-backend",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "graphql-backend-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-interaction",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3009"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3009",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-interaction-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3009"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3009",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-interaction",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-interaction-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-mock",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-mock",
                          "port": "3030"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-mock",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3030",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-mock-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-mock",
                          "port": "3030"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-mock",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3030",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-mock",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-mock-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "notification",
                  "namespace": "dev"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification",
                          "namespace": "dev"
                        },
                        {
                          "name": "notification-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-notification",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification",
                          "namespace": "dev"
                        },
                        {
                          "name": "notification-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-notification",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "notification-http",
                  "namespace": "dev"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-notification",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification-http",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-notification",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "notification",
                  "namespace": "dev"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "notification-to-https",
                  "namespace": "dev"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification-to-https",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-auth",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3006"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3006",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-auth-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3006"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3006",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-auth",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-auth-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-frontend",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-frontend",
                          "port": "3010"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-frontend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3010",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-frontend-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-frontend",
                          "port": "3010"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-frontend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3010",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-frontend",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-frontend-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "wallet",
                  "namespace": "dev"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet",
                          "namespace": "dev"
                        },
                        {
                          "name": "wallet-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-wallet",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet",
                          "namespace": "dev"
                        },
                        {
                          "name": "wallet-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-wallet",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "wallet-http",
                  "namespace": "dev"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-wallet",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet-http",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-wallet",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "wallet",
                  "namespace": "dev"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "wallet-to-https",
                  "namespace": "dev"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet-to-https",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-open-payments",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "80"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "80",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-open-payments-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "80"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "80",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-open-payments",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-open-payments-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "ws",
                  "namespace": "dev"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws",
                          "namespace": "dev"
                        },
                        {
                          "name": "ws-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-ws",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws",
                          "namespace": "dev"
                        },
                        {
                          "name": "ws-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-ws",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "ws-http",
                  "namespace": "dev"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-ws",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws-http",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`dev.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws-to-https",
                          "namespace": "dev"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-ws",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "ws",
                  "namespace": "dev"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"dev.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "ws-to-https",
                  "namespace": "dev"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws-to-https",
                  "namespace": "dev",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:network-acl/acl-09374006a8c16de9a",
            "default_network_acl_id": "acl-09374006a8c16de9a",
            "egress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "id": "acl-09374006a8c16de9a",
            "ingress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "owner_id": "975050359967",
            "subnet_ids": [
              "subnet-00a4b1784f7c1867a",
              "subnet-022bbaddb0f874b55",
              "subnet-047d268c73c3b7996",
              "subnet-09ee79be0c97f1f70",
              "subnet-0a9fe448ed70e7e74",
              "subnet-0b5849cfc646eb106",
              "subnet-0bf89288418baa7fc"
            ],
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:route-table/rtb-07d595756c3e8ca49",
            "default_route_table_id": "rtb-07d595756c3e8ca49",
            "id": "rtb-07d595756c3e8ca49",
            "owner_id": "975050359967",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "timeouts": {
              "create": "5m",
              "update": "5m"
            },
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:security-group/sg-013537c932d7edf4b",
            "description": "default VPC security group",
            "egress": [],
            "id": "sg-013537c932d7edf4b",
            "ingress": [],
            "name": "default",
            "name_prefix": "",
            "owner_id": "975050359967",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-0ca6dc368d620fdd5",
            "arn": "arn:aws:ec2:us-east-2:975050359967:elastic-ip/eipalloc-0ca6dc368d620fdd5",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-093d051846448830d",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0ca6dc368d620fdd5",
            "instance": "",
            "network_border_group": "us-east-2",
            "network_interface": "eni-07f58fb68c20968f9",
            "private_dns": "ip-10-0-4-164.us-east-2.compute.internal",
            "private_ip": "10.0.4.164",
            "ptr_record": "",
            "public_dns": "ec2-18-222-15-32.us-east-2.compute.amazonaws.com",
            "public_ip": "18.222.15.32",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "vpc-us-east-2a"
            },
            "tags_all": {
              "Name": "vpc-us-east-2a"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:internet-gateway/igw-0b8beba648b691d0f",
            "id": "igw-0b8beba648b691d0f",
            "owner_id": "975050359967",
            "tags": {
              "Name": "vpc"
            },
            "tags_all": {
              "Name": "vpc"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0ca6dc368d620fdd5",
            "association_id": "eipassoc-093d051846448830d",
            "connectivity_type": "public",
            "id": "nat-05f84dd4d48f001b3",
            "network_interface_id": "eni-07f58fb68c20968f9",
            "private_ip": "10.0.4.164",
            "public_ip": "18.222.15.32",
            "secondary_allocation_ids": [],
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-00a4b1784f7c1867a",
            "tags": {
              "Name": "vpc-us-east-2a"
            },
            "tags_all": {
              "Name": "vpc-us-east-2a"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0f34d97481c898edf1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-05f84dd4d48f001b3",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0f34d97481c898edf",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0b8beba648b691d0f",
            "id": "r-rtb-0812d5c6353e501ec1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0812d5c6353e501ec",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:route-table/rtb-0f34d97481c898edf",
            "id": "rtb-0f34d97481c898edf",
            "owner_id": "975050359967",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-05f84dd4d48f001b3",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "vpc-private"
            },
            "tags_all": {
              "Name": "vpc-private"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:route-table/rtb-0812d5c6353e501ec",
            "id": "rtb-0812d5c6353e501ec",
            "owner_id": "975050359967",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-0b8beba648b691d0f",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "vpc-public"
            },
            "tags_all": {
              "Name": "vpc-public"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0c9c475f4675e619f",
            "route_table_id": "rtb-0f34d97481c898edf",
            "subnet_id": "subnet-0bf89288418baa7fc",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0c1761d4f957b1b29",
            "route_table_id": "rtb-0f34d97481c898edf",
            "subnet_id": "subnet-0b5849cfc646eb106",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0ae7d4eaf0044221f",
            "route_table_id": "rtb-0f34d97481c898edf",
            "subnet_id": "subnet-022bbaddb0f874b55",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-079345f1ad372564f",
            "route_table_id": "rtb-0812d5c6353e501ec",
            "subnet_id": "subnet-00a4b1784f7c1867a",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-04f71da606d0b5680",
            "route_table_id": "rtb-0812d5c6353e501ec",
            "subnet_id": "subnet-047d268c73c3b7996",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0b303a751011bafad",
            "route_table_id": "rtb-0812d5c6353e501ec",
            "subnet_id": "subnet-0a9fe448ed70e7e74",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:subnet/subnet-0bf89288418baa7fc",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0bf89288418baa7fc",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "975050359967",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2a",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2a",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:subnet/subnet-0b5849cfc646eb106",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0b5849cfc646eb106",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "975050359967",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2b",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2b",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:subnet/subnet-022bbaddb0f874b55",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-022bbaddb0f874b55",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "975050359967",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2c",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2c",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:subnet/subnet-00a4b1784f7c1867a",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-00a4b1784f7c1867a",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "975050359967",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2a",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2a",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:subnet/subnet-047d268c73c3b7996",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.5.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-047d268c73c3b7996",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "975050359967",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2b",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2b",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:subnet/subnet-0a9fe448ed70e7e74",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.6.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0a9fe448ed70e7e74",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "975050359967",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2c",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2c",
              "kubernetes.io/cluster/eks-FB8HPPt7": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:vpc/vpc-0d9da5850d9f71105",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-09374006a8c16de9a",
            "default_route_table_id": "rtb-07d595756c3e8ca49",
            "default_security_group_id": "sg-013537c932d7edf4b",
            "dhcp_options_id": "dopt-0a6edbfc003128a1c",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-0d9da5850d9f71105",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-07d595756c3e8ca49",
            "owner_id": "975050359967",
            "tags": {
              "Name": "vpc"
            },
            "tags_all": {
              "Name": "vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3562847522",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::wg-dev-vpn-config-files/*\",\n        \"arn:aws:s3:::wg-dev-vpn-config-files\"\n      ],\n      \"Principal\": \"*\",\n      \"Condition\": {\n        \"Bool\": {\n          \"aws:SecureTransport\": \"false\"\n        }\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Deny\",\"Action\":\"s3:*\",\"Resource\":[\"arn:aws:s3:::wg-dev-vpn-config-files/*\",\"arn:aws:s3:::wg-dev-vpn-config-files\"],\"Principal\":\"*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:*"
                ],
                "condition": [
                  {
                    "test": "Bool",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:SecureTransport"
                  }
                ],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "*"
                  }
                ],
                "resources": [
                  "arn:aws:s3:::wg-dev-vpn-config-files",
                  "arn:aws:s3:::wg-dev-vpn-config-files/*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (Ohio)",
            "endpoint": "ec2.us-east-2.amazonaws.com",
            "id": "us-east-2",
            "name": "us-east-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:975050359967:certificate/9fa8e947-fb00-49fb-8c88-0489a6c03191",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "certificate_chain": null,
            "domain_name": "wg.dev.vpn.ca",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:975050359967:certificate/9fa8e947-fb00-49fb-8c88-0489a6c03191",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-11T20:12:21Z",
            "not_before": "2024-11-13T20:12:21Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAnNSaUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11\nLu7cXpyLbnteyC7AuQG4EaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stB\njcK7Y3whaDJ8SEsGCy40Qv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaa\nUCoNqU8idpsR2QeyP1bqKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuY\nU4VfOLZBu54wX4H9c3F1urfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f\n/r7kxYp3g6Ds+RxN931fr0QaiqXyi6CGQ4n06wIDAQABAoIBABxcpnukU/MSnBqs\nlGwL21AgvBrLmyb6YDoUrAE4qR14LdewLd0K/XduwBh+3yk8q0XJ9cvbIvaNoPea\nl8GGP5GL1/Oqfr8A83AHROXvKL7FDiEhSP2mFdVsAW6ikq9QQguLk4/6URlIPkSL\nug9BdmegL/S357+7PM/7T53a09AtSaATYxf5hhpGcW1piJQ2zzJC5fMk7F/lYyl6\nN+B8/YwYbpE5JxOS4R6Xd5DMSDRrdNf3V/YV/EjQJcQ4a0htbK96QkTx+ROcIJxX\nKyyA0cmSDdzCkgXYrTFBzaMAIk9cHM4MvFU0/GPrz0nOTndynX7CFSfvHx+xsayW\nZw3wbwECgYEA0JxTQTRI1T8Z/3KqevPr508LRc9o8hG5h6qGRHtHQl5jQmpbNBeH\nJ63NTQO7hYQJAqfBTFWNqBzgC3QXLfN/UcsDSeAQZrjdGendl0PRHJ4C1U1ZaZUc\nv8I5hKoYeNAv8Jsn75ybthGXZXxwAEhPbUAW+Q8pcjVZgfB/Ix4wliECgYEAwHUF\nbyeHwKuZietsyb8FFSHX3OfX0h6xsVEiAeMdUkf0Qf4W2iB3TT8h6Re3wqGBzY6A\nzMgvek9SOaQZjYGCK9q8wa/hr5P/e3pXWsfQxZychXOmfIn+KGuPIXFam5snlRGB\n0tYOaYVgS7UqAbvsIkN2NreDIlqjPcEO0bqoUYsCgYEAo9s2VdAQqVdgP1K878iq\nckyXCSWKRCGB/jsGLcI7Tbk/9AoAS2FzqsoMqUKWR6BXR3unDCNjGjpcDQMJtfE9\n/2wb0CosF9N68ADPKiJ9nSHMDeksow8ZvtF7RmYoxLSaAz6L1tzHPfKBXZipjL8/\njAu8P7MWFfwrqzHRWy86cKECgYEAl7kpiZGucfRWXOaeowXWqew+U0brXBkamOGP\nX9F+gil7pLL9rQS/SMSmpS4vjl7pB/Z6D/cZhuEVv59hDa+1wYD2IfPYhiS02tF+\nIHE6Yy+uLX8ZF0Fqfs8czY6hkd7le52LrX1Xa1Tcr5KpBSjzZaetgEF4PhMackrK\ntgjjPTUCgYBkFxJ+sTBvBSbHS3mvAiLQqbd02L538PlMO4A74Wun3GSw3S9Vcpdj\nZmmV7nZEa3+QE9Ya506zuWAYRGZdpj5IWHXtIeaSv+ftl7p7A8J2BAK1jFspVflC\nkV+0jtXzcIJTqpmE3f993FeJZvYfmeQFW6TY5Jn0hBwkTeFfqPfPPw==\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.dev.vpn.ca"
            ],
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:975050359967:certificate/c9819657-7cd4-45b2-a072-954a9e44d146",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDOzCCAiOgAwIBAgIQAIqg+2lYz5jL+3893gCrhjANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjNaFw0zNDExMTEyMDEyMjNaMDYxCzAJBgNVBAoTAndnMScwJQYDVQQDEx53\nZy5kZXYudnBuLmRhbmllbC5nb21lei1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUA\nA4IBDwAwggEKAoIBAQDNiS5lwKJcuKIAG6ogoN2vbFPcbfajtCRFH7XKAZ5qwL74\nQIEyuKV7UXRUfU6IFbronz2b15/xYwwNyb3N3HyCBqaQD3bqDs70BycrJgf+s2L0\nxktpgHhVIPShVcB8fPiyha35T199WVo4LcdgQQx3YzOsfahNOMQvkOjWMTR/7CfW\nt9v3mOxDr0X0WlHJajtMf/8Y9GzWTj/AsFjGT13S5M+oXxtpOH6sZwersh2pVoG9\nV6QePac/lNDYrdzozrjokXYM0Xi+POjzTJ1SK/GGT459pC0o+q3HL2o/9mot3wZm\n8rH9+CBw+IthjMKHmFpWCNwcdZe+kgIz3bFuUXp7AgMBAAGjVjBUMA4GA1UdDwEB\n/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1Ud\nIwQYMBaAFD9lm7J3xIJ+CGpl3lTD9jtzBt1dMA0GCSqGSIb3DQEBCwUAA4IBAQCR\nYmP0SZKSO4fj5o4ig1Gzf74bZoqW0v5qRdldjyVT4PXNCZ3LfpXcvpvVbxUyPsfZ\nGBYKw5cksmEH+KS61v+Eer6un61if5L6tC2jdsOSTeqKbwuNS5M2gGZkNoUXEy7f\no2F7zrVXDqPy/pPPEtxriDfz1yEex/1lhopYuYq554LG6SMxI7CuulP7Abmb4Yav\nnwTad3MNisbu+vBBWzFl7e9BODqWZbwTVxyYUtAsU0JEhvBfSMlvLgCyLFV0iUXL\nFM+dub96aGxlRzc819Hcki1csVCINmTETD+qhh887rEST6P4s96cv0i/GNApdYi7\nXgENGbkVGRqS1PxZ805T\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.dev.vpn.daniel.gomez-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:975050359967:certificate/c9819657-7cd4-45b2-a072-954a9e44d146",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-11T20:12:23Z",
            "not_before": "2024-11-13T20:12:23Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAzYkuZcCiXLiiABuqIKDdr2xT3G32o7QkRR+1ygGeasC++ECB\nMrile1F0VH1OiBW66J89m9ef8WMMDcm9zdx8ggamkA926g7O9AcnKyYH/rNi9MZL\naYB4VSD0oVXAfHz4soWt+U9ffVlaOC3HYEEMd2MzrH2oTTjEL5Do1jE0f+wn1rfb\n95jsQ69F9FpRyWo7TH//GPRs1k4/wLBYxk9d0uTPqF8baTh+rGcHq7IdqVaBvVek\nHj2nP5TQ2K3c6M646JF2DNF4vjzo80ydUivxhk+OfaQtKPqtxy9qP/ZqLd8GZvKx\n/fggcPiLYYzCh5haVgjcHHWXvpICM92xblF6ewIDAQABAoIBAQCfMHu+FXfrRpk6\najLXOKDaiJVfKdAYNKLO4uOCxMQ0vHpsflFSvo50t77Y3YCgh+wO1Z77AAOCCwu/\n9hvKwNWyQ4JoG4IngDar7IpasgcJL1kaaiboXLdWf8LY3jjKcmSQqFb5vI8h372v\nu00rcNY99ZiFJYHf5XKVwK+FjfCyjgnn1gMcoLwnGp8s0yrxRxUXpO/TCG7Fz12V\n/fQBFaRVX0BxnKobuKJsJMU+1gkA8Ys5LgRTUnuzq5rdyyV33+g0EVLN5AYcZzS/\nSKCnem9XVF46uW5uCbKqsGjeDKMeG4kNyKheEybiaHkKpVhFWncIAxfwXorz6tBp\nwrldG1ypAoGBANEb2EB5NW9xwxdXwYdGf25WkV5DoHJPewd3MTlj3QTKHCnlsrqP\nSPRF8EbJ4JOk0Qh1oyC8Lz7ItLlcnzYeaLDxJP8nJq23q+Ro5/Dk9l+tJwmbg562\nCXXkKuOLhFYLuudlqo1ITImidjwVOUbawFYYEJk69LSQiEmNt+qOKwoVAoGBAPug\nOrjy/7BntsKzMybaw4Km6U9jDrkbYkuU3O+G8+/X3AUxb9VOtTE9Bqft3F+NT9X+\nvER5eAmqxVQa0IkCTZ7XVax81xHF24ddbyOVF6NHk2bia+EjjYVkdlVrBUpxQmGF\ndjWcj7ggOJZnr1CCh9qr77Ke+mHdG2gu3U1PMWZPAoGACYcFQVrEboF2bBfZf3pc\n0AAtu2fFZa/tYRezLHQ6W7+BrP8EN6/TmR2epvsHunJl+8awWgt485ldcpyfvG2C\nQ52ZG+8CuiOGN2/4MWedOhq/jpaBVrfgkniE4701mF4MdAKT1MAYjKTUUkR9SZcp\n8EJEb1baU2fKbd+BI7S6jUkCgYEApYW+e0FmTz26bJODF5EawUxY95765WuNGpj/\nSRWmS+TcWBIwNcpDyPMS+M6wg66qkOO0JvscqodKrUvCWA5Kzy1pr0CkHY3hHkep\nP2fpF8CSx0A0pPJFOzVd3ky7O0AL4ajwnM2zgPS5JL9qBPUItyEZWY/Ytx3C1KLX\ncu6gWWMCgYEAxIrjOzhYW8YLT0xwwp2h/6l0NRi/xqG8Ix69ABlA/ub0HOulZk5g\nu/uj26nYTqe7uzLcTmBsgDht+W9m5O/wUmdBmhy0/Wrf0u4agYX3unTbjwTQx3/9\nT2+F6XtETbMgSQvVyFOambKOaKKMTTQYSySbYrRv1PrWotDGOMrDcss=\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.dev.vpn.daniel.gomez-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:975050359967:certificate/a3a5dacc-91c7-4aa8-805a-c5727cb2cb02",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDMzCCAhugAwIBAgIQZQcnlnNxoL09Qpmwnbk84TANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjJaFw0zNDExMTEyMDEyMjJaMC4xCzAJBgNVBAoTAndnMR8wHQYDVQQDExZ3\nZy5kZXYudnBuLnJvb3QtY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAzzMtZfm3dKHPka4IpMkIhBFWcfsMFLuHukAdycFNhOsbY2JFmcimmm4n\nGRBBz4B328xiJPqlNiy5S5UIlkcUuYRdsZCveGXi0y0TewhO8WwK6p/C7UZzkzcO\nNfn9dGMmKefX7SFkhAtevwdsVOQg90q67cmAq8MiIH7teM33BVRwfcvDbgc7wm0i\nJA1VGZiQ3Dld8UpIo1w9gZsVXwrewluxwF1+OB6B7N/U4iQkpypZygmIGhIFD5Pc\nl2fEHTKhKijxG5GMXS0KOfv7/NQbiC6sNL7ODLIOMIMmHXiDwvXpaWF3xgmoQ6q9\nLjzrTbATA0G1Liss9WfNSJmIyURwUwIDAQABo1YwVDAOBgNVHQ8BAf8EBAMCBaAw\nEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQ/\nZZuyd8SCfghqZd5Uw/Y7cwbdXTANBgkqhkiG9w0BAQsFAAOCAQEAhK6lqVmtmbb2\noUgaRPOxgoSkerraga3VGfMbhfdeaH89NQMylWMvGArNCiuEKkZJDIt7pCcoiGLl\nllnKMeYvdGajM1eDjxiIY/ncQTsRuUhKSerUPfMtXCaodYNtVRYXVypabwtwu2YS\nKqIaP8id7aylxUrZyTzn5W+nuAuoluW6FaBVgaOj1QMuJ4tsQPqBvjf3BuB3yEPp\nJDGQHhSH5OvyFijbcphsBCvyCo4M7D5pM4GPTRJYFFZPCnn4dCNvYUC2Usa9f5AD\n/cwyRqFJTqny2xretSl6FS+lpwWI8lvzL/uhbf0V0s/LXEDVgcJmTQTO3N2tfgyF\nUn7xtrLGUg==\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.dev.vpn.root-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:975050359967:certificate/a3a5dacc-91c7-4aa8-805a-c5727cb2cb02",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-11T20:12:22Z",
            "not_before": "2024-11-13T20:12:22Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAzzMtZfm3dKHPka4IpMkIhBFWcfsMFLuHukAdycFNhOsbY2JF\nmcimmm4nGRBBz4B328xiJPqlNiy5S5UIlkcUuYRdsZCveGXi0y0TewhO8WwK6p/C\n7UZzkzcONfn9dGMmKefX7SFkhAtevwdsVOQg90q67cmAq8MiIH7teM33BVRwfcvD\nbgc7wm0iJA1VGZiQ3Dld8UpIo1w9gZsVXwrewluxwF1+OB6B7N/U4iQkpypZygmI\nGhIFD5Pcl2fEHTKhKijxG5GMXS0KOfv7/NQbiC6sNL7ODLIOMIMmHXiDwvXpaWF3\nxgmoQ6q9LjzrTbATA0G1Liss9WfNSJmIyURwUwIDAQABAoIBAQCDwvu/uYlcdfnV\nnmKIx/7OXWgnm4oXNRoe6t8GihKN0CTekoPIQ70Ov7XFTn1LQ1r1P4e6FFozlUVQ\nNzn6tsELKI2ceXHcko4n1KZquuHYzOg0Q9xln0On/n7e/FadSN/gDjtV5MJS5hge\nSs4tPdVo7PDqfhWBJNny6ESDahcIH4FQ1TWpiaynZf5+/F1mLh5P6nRnijn9GuIA\nVe2kHD/dpzdYAWQb6Mq5BuWDEnwaQTlp1zXB8oktVNLikoxJwurI0JYK7eRbo+3t\nTmnMRleJstwpwcEu27hi4+lE2n4i4J4m9dzMr3Y2TNItFSUK8XokQtvK+gOgQBQV\nAm64ii+hAoGBAN/8jjLI6wbZuqqwLb3p0QpqLIA9ze6+CYyWj59QBWv2NMl9Unmn\n4mMR8WmIf1gFcufU8OnsgpCXjTWqmMqPmT+pFXpP0k149k0nVDHByEYahb0l1krx\n29EQb3E8p9qTEppuhJID9G6xm8JAuW1uxY6LBmHvN6x3KMvOG4KQuCqVAoGBAOzQ\nampY5YYbnZHvAM65kt4ZvTsnsCLpP7poO1yKvycCp6zUpK5Wajkia+jq+m6+SK7y\ndpo9VTQk5EbPGA3x2gXCdkTfIjIIHAud/hyTDo/rDZApxs7TzErYG7Dkn/4xS8zu\nTqkNqP+lpasJk8ser4RcVoyIdHslvrieysJ2Nt1HAoGAGVei4x4WcWz7EMrkMgOd\ncjc3F79maGe5/t0eHOFZ67Asost6JGeZVqo2DUGzXssnCBHwvBbVYvSytmq55NlA\ndpJz6qXTXo6cF3imrwaE2WGw1gjM6SfaPhpE8aPyPem8BhsRBtBJvKh9vgnCsR4C\nXjFepIADZZEJ3Z1RQYGMRM0CgYEAyhP++sjo80tVZlZApicNAKGOLJBtaR0I2JRh\nM1LiUvOdCYpbDLmI40BQPO1mzmFpvIACXRPBRUHF2faWXC/pD8klCxgtIexxoigr\n005Zus2lQUOk9pEdXzCSUJyHOm3udO1WCkQx1hUQDaeailWhCJ2S7VDztLI80WYP\nN2mQ37kCgYB2Lo48G3CuejiKzG6NZwHXP5i1NcWe5W3E+RoxTDV8+RVXmcb1j1DI\n/CPbDOqBIgVIoBnRJ9a6DqPkKD0zY/BVZrfj6QRTpO/hIRdDB/ECtf1OCKXl7UBF\nvRwN3uP56PSpVzCpTTV+hT+FyqkPXYoVez3QvSE7aF7SvJxurp6zPg==\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.dev.vpn.root-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:975050359967:certificate/6e2a4275-86e8-414c-b283-29a1c8699a3b",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDODCCAiCgAwIBAgIQOYRVxL2Pv7bXr3+NH+5CMDANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjNaFw0zNDExMTEyMDEyMjNaMDMxCzAJBgNVBAoTAndnMSQwIgYDVQQDExt3\nZy5kZXYudnBuLnRlcnJhZm9ybS1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IB\nDwAwggEKAoIBAQCyj/5nUsRNNFCfndjTWXEwGgteYJH3/DbY2IOpYpiTHjlJjwA3\nLT85d3bM9ylIcEjSTMXmFFE9YI4ztyRTPjY5KNXhsmaild8nLwMr+8mm8Q6iS6MG\nyt31qPR5no6bRT5kDlcGC0D4C8YYCdmAly+D1XFOBIJougdTY1BPM0T1v6kKuAMY\naipjaqc1mRZeXOXw79o3QgOcXUiXFHo/ZtYrogbU1mEBFpYjmUUChmNhaj3XaaIi\nqPr08FnyipzRZWbPAmwVYD0oIfDaoVbMqjE1NWyIXfJCXTduMXjFYz4khA4o1MiL\n1n/abViSYkBXgzImugR4aKr/6APrQNilEXWnAgMBAAGjVjBUMA4GA1UdDwEB/wQE\nAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQY\nMBaAFD9lm7J3xIJ+CGpl3lTD9jtzBt1dMA0GCSqGSIb3DQEBCwUAA4IBAQA3ZOhH\nWP2jc83nZYMEkTagXawB2B99IE0tqC4UBpR4Kz0UT7iNzeX2PNzTvpepMYq36A9p\nT1WdqIuM55TUI74f1n34yoSiJLywGzPkdeA6sTeFoOQbe4RT3IMG3BW0N7aW6V1N\nIGI6Tm2pFWGTXOaFFO1F7wxwtChsNsvvRFqzJCq5W3R6o6w0eerIbAFpdXoAb2Mr\n4Y7F9+P1T0++aDzDHyRiftY8pahJd/TUOtI55lfnBS6+Ogz22+0OC94KB9+PT+za\nbuKdTFGGi5OkQuOhAuidqCiBVkd7tm2XVNZqQf/oaVIkHYy1BeokuHrqtWPEIZMe\n0qy9tKcHPCahjrA3\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.dev.vpn.terraform-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:975050359967:certificate/6e2a4275-86e8-414c-b283-29a1c8699a3b",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-11T20:12:23Z",
            "not_before": "2024-11-13T20:12:23Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAso/+Z1LETTRQn53Y01lxMBoLXmCR9/w22NiDqWKYkx45SY8A\nNy0/OXd2zPcpSHBI0kzF5hRRPWCOM7ckUz42OSjV4bJmopXfJy8DK/vJpvEOokuj\nBsrd9aj0eZ6Om0U+ZA5XBgtA+AvGGAnZgJcvg9VxTgSCaLoHU2NQTzNE9b+pCrgD\nGGoqY2qnNZkWXlzl8O/aN0IDnF1IlxR6P2bWK6IG1NZhARaWI5lFAoZjYWo912mi\nIqj69PBZ8oqc0WVmzwJsFWA9KCHw2qFWzKoxNTVsiF3yQl03bjF4xWM+JIQOKNTI\ni9Z/2m1YkmJAV4MyJroEeGiq/+gD60DYpRF1pwIDAQABAoIBACzrqp2FpdqiSZIO\nHKj2vFHUi32fn7kaGxYsSdsH8cg490J5Fh3LZTdoxVtE5n7RuJAnPjXmcJWXP87k\nyN+kK/HvQvc3cTh/qZbq7cpX2mAEDqFnk8i2qmYNrgsWh1uqbMqxDNV5aUu9coVD\nnRMLdamdvZZZ7hC4k/U3a9Gw3S1RMU+jJr4sQdiXyckmjcVDPeHLXCoMAytg1wpr\nXJbAHU2qyID04ZPzTuFx2vPsxlxxJzJaIDVu+0mel7GiqDD5QBzsGa83jWif0Nkw\nUSHw+x4MUTaGd+MUEIHMAF1PTxiGy9XkhKne3L2mie551TYFaha+kpj5gFAcvvwo\nt6zioxECgYEA4jqq/kc3dmrMPOvVgZP8Ftuzu3ly/ZTSiTJHgnis3N1cQ/n8Riz1\noyPe+m3IWGYhw9OOCcRb2AvVtdFLX4049HSiWNTIEZ+6780npQslap6yJgpK7+X4\nEu1rs1ShC2ZNdiwcntf9oWliE2NSPZ/+t3ygQ1UzX43USSnRHUhQDYkCgYEAyg+B\nDI9wiGNcF4M5vu9JXD3pr5MXETf4xKdMVsFrsxAxUw/PVgWJ4srMh6NbnECe1Hw8\nkg45QAfVqeMR5uybmxwXdbDmev/N8X5/I7UYUOfKunQUXoXikE/ShEhgfl0rNN19\nAq0Zn8fWd9V9HGLKVczLRhMS3bQ9A+wQUZSWTa8CgYEAiNaFwWKgWJ9GxH692TAC\n5myj7X0LofjX1Ca2fGOz47B9c5yNDIF7Xt9+qymmaln0iHe5TY0ZJLgb32smVTid\nv7egz2x9S7O7JfuIxFrWmgQ9q6bEJxGKGSDE6WcCNlv99MG/2hC5mF2e9i04fI//\nSUs3wSKS/XRTeKGznCu2SEkCgYEAvFZjNO/mNlpWllvsUTn8qQvUa6CwmY4QREyj\n7SFwX4EyWHeeDFIxScE5jxwG4cehw/DhDEpRtosW7rkGELZt+8/dVgfDbNZOgVAk\n9YVw2siSv+Q+sDQfD+A3GrHTrzTsduQUB5CNF89O6neFnBXA/uRafEB/D0NWs/cu\n5ruWtWUCgYAxbsfnidbbveFen830sTfDk8IhgLu5VJJNlvAzrUTEo6tD5pFUFLfz\nXfImrl6ArL1TmzK4u0OJkExP9ZfCHFaQXEhAO0HE0G7m+3NMrtxcaTQWY7DrSEs2\n8N4K7WS+Bxg56SO4TM2Rc7C+tog5l+143ylIlbJectNAN+LQXfhmOg==\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.dev.vpn.terraform-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:975050359967:certificate/720662c4-68cb-48bc-9c01-a210fe160d98",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDLjCCAhagAwIBAgIQRDq0j0Ta69XQ+MM62ML+GjANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjNaFw0zNDExMTEyMDEyMjNaMCkxCzAJBgNVBAoTAndnMRowGAYDVQQDExF3\nZy5kZXYudnBuLnNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAKxlH8KSYxCnuaWI51o1SIhtKllsCL1t4o2zfyn+praEy6buLFKrSrimhNDFBS+x\n3ZIbz1IhFBwBQ3Ms1k5Jr6WobP3zcvr1r8LdIPCB3PrVpHr5fTg0LdvXBh3zKoyS\nGuPIgn6993T2mDNV8G5dmbUmH1yuPy/EikhqNBOhPowLhBMxtMXjGswPSNhzUH/x\nLVfWJPnRDnmhWLZAMiOOXMIs7s50odBA1jSwil2gG8I5jgGLz+AAtDK88AtT9Jeu\n1FwVF+AiVwmb5JMjabY1iWDtcCG2uG7jqLlTP+2kZffoUml7f0NSKwB0X1EkIUI7\nMb7XbohOKfYX5JACKWhTROcCAwEAAaNWMFQwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUP2WbsnfE\ngn4IamXeVMP2O3MG3V0wDQYJKoZIhvcNAQELBQADggEBAHbVdS1LqCaqulCcmFvn\niY45bZG/LxhuwxCZ09SqC7mBx5y3EVVrpEXQ32esYJ3Y+gPq85NzrDWzHh4mbrNd\nyAqgf3kiFvMzp7qJxTEuIZSnRlAWb59Rt9icsfoomC9d7StyDLjD+WeBRLTuHeOa\nnz/NGtRLyWq+tPXTql3tK9yO4ORlacCk1riWL/zNz23ULYAtnpg7KXydCb76sDb8\n9+n2DMdVY+kVVWjenHO3cugcZca6Xi/tKspaJIQGsr2XksRkAYOtwoTCRWKYOq2o\ncsSZJxMXoCwBEEotrop6vqGBQRS+StAc6lCOuuMkAaW/yx3poXLFhBn+23IYzVuC\neeU=\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.dev.vpn.server",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:975050359967:certificate/720662c4-68cb-48bc-9c01-a210fe160d98",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-11T20:12:23Z",
            "not_before": "2024-11-13T20:12:23Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArGUfwpJjEKe5pYjnWjVIiG0qWWwIvW3ijbN/Kf6mtoTLpu4s\nUqtKuKaE0MUFL7HdkhvPUiEUHAFDcyzWTkmvpahs/fNy+vWvwt0g8IHc+tWkevl9\nODQt29cGHfMqjJIa48iCfr33dPaYM1Xwbl2ZtSYfXK4/L8SKSGo0E6E+jAuEEzG0\nxeMazA9I2HNQf/EtV9Yk+dEOeaFYtkAyI45cwizuznSh0EDWNLCKXaAbwjmOAYvP\n4AC0MrzwC1P0l67UXBUX4CJXCZvkkyNptjWJYO1wIba4buOouVM/7aRl9+hSaXt/\nQ1IrAHRfUSQhQjsxvtduiE4p9hfkkAIpaFNE5wIDAQABAoIBAAGH7F5H+oU9WBK2\nQoe0jW5YudWNdg5omWh0vZ5b2pMoXr6ewtoBF2rIX8mS1lb0F2miwZaTIKCXCkhN\nj6GmWd74ve8LaGv+Ho92c0JvhMzddNZ6vLfxDq8zG6TMcgZJjd+T+kSx3y60uelK\nzBXO0vye2Ax0p67+6dN2zfuWpP2NYOH5sYwRNpJS9seRYN6uLyJiCe7Rly3zQnBN\nXOkwSEVnNuZP3Qmdhotq2bhelcP8oqURt9nPmcDnC/U4l2PZxa9x4RFsqd4rk6sb\n29S8N3EYqRBmN0dN+IoPg3ePFV/rDkRrxGtv4iK7kLmnl+asSVtVwY3Nl+lPTC4S\nI59h9SECgYEAwF2XHm6HcvWR/HmUBN17Zybk4XSt2I31JA2mS1e1QAOAHIrojaf0\ndKw4ELpMweB6xFlJBjLwZygzD8sggLCEX9bSuEOzIZw4G8nB58t4m3M7XKVP8OYe\nHrz6UiFizQfXYhAJSDJjcIY5Q8RZklFu9s+lF/6HrMB1/15j0R51SSkCgYEA5WxV\nTIyv1AcUICaAF7R4fq8bWgQHD2oo9KGmkFczFPc0KnHWQwMaKpNLG9m7+p61tm7r\nSlKxe3H+gD4zLxcKHANAY2+vvWr+r9pNvXocvdiJichf4iMNvsFh7xXpNtkBBbFn\nSePu6pdksXJCZXnzzgPSDpg529KSSOFsVdwWD48CgYAI/lcqXRCIF2MT4rtA3vn+\nAJuCzumxzjE/1kOIEjmvHHrI2tW0ib2sFsEoRw1/ovcaZvI7D/adXAvHGUATxCzs\nLib75m5hi+QzqGMgayrgWarU0gXCxX9zAHLTlCwCWfN/6jAE6BYuFJhoyq1FYflG\nIL8fOA8vzG+32Lnh9QKWwQKBgFMc4fHvbatEPThAelscGCLc0O3VU7Fz5g5pmWvl\nCy5nN9DAmLyCHTKbVbRrNrxeTroeiMLOHln4PBi9b9F5aUIos2TSizn1zvpp/YvM\n9yiXj4wIuSO1Sz9100LID0q9Zq9nS2HrXxxBaEsYd5FHktlpbOm4oA1QxYn9kD+y\nkZNlAoGAV65w4OKEZ7u0aROnAonJXacN4KGbZ8sFJa6g7/O9If268hc6gERLnX4h\nfhQ9foHvhHVj59NWaaZ2g1v/PstMT2HH6hG5QosnNn4c/UpR+xrZHA0BrdqBg2kt\nvPr2FJxIEvMiSH/63yWa42ajey8zkHB9C4hRDAskjL23u12yXrE=\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.dev.vpn.server"
            ],
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "vpn-logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:975050359967:log-group:wg/dev/vpn/logs/",
            "id": "wg/dev/vpn/logs/",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "wg/dev/vpn/logs/",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_cloudwatch_log_stream",
      "name": "vpn-logs-stream",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:975050359967:log-group:wg/dev/vpn/logs/:log-stream:connection_logs",
            "id": "connection_logs",
            "log_group_name": "wg/dev/vpn/logs/",
            "name": "connection_logs"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_authorization_rule",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_group_id": "",
            "authorize_all_groups": true,
            "client_vpn_endpoint_id": "cvpn-endpoint-028ef82dbd004bf32",
            "description": "",
            "id": "cvpn-endpoint-028ef82dbd004bf32,0.0.0.0/0",
            "target_network_cidr": "0.0.0.0/0",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_ec2_client_vpn_network_association.vpn-client",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_endpoint",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:client-vpn-endpoint/cvpn-endpoint-028ef82dbd004bf32",
            "authentication_options": [
              {
                "active_directory_id": "",
                "root_certificate_chain_arn": "arn:aws:acm:us-east-2:975050359967:certificate/a3a5dacc-91c7-4aa8-805a-c5727cb2cb02",
                "saml_provider_arn": "",
                "self_service_saml_provider_arn": "",
                "type": "certificate-authentication"
              }
            ],
            "client_cidr_block": "10.0.0.0/22",
            "client_connect_options": [
              {
                "enabled": false,
                "lambda_function_arn": ""
              }
            ],
            "client_login_banner_options": [
              {
                "banner_text": "",
                "enabled": false
              }
            ],
            "connection_log_options": [
              {
                "cloudwatch_log_group": "wg/dev/vpn/logs/",
                "cloudwatch_log_stream": "connection_logs",
                "enabled": true
              }
            ],
            "description": "wg-dev-vpn-client",
            "dns_name": "*.cvpn-endpoint-028ef82dbd004bf32.prod.clientvpn.us-east-2.amazonaws.com",
            "dns_servers": [],
            "id": "cvpn-endpoint-028ef82dbd004bf32",
            "security_group_ids": [
              "sg-0d03abd0928ec2841"
            ],
            "self_service_portal": "disabled",
            "self_service_portal_url": "",
            "server_certificate_arn": "arn:aws:acm:us-east-2:975050359967:certificate/720662c4-68cb-48bc-9c01-a210fe160d98",
            "session_timeout_hours": 8,
            "split_tunnel": true,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "transport_protocol": "udp",
            "vpc_id": "vpc-0d9da5850d9f71105",
            "vpn_port": 443
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_network_association",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "association_id": "cvpn-assoc-0fe534f1db14abd11",
            "client_vpn_endpoint_id": "cvpn-endpoint-028ef82dbd004bf32",
            "id": "cvpn-assoc-0fe534f1db14abd11",
            "subnet_id": "subnet-09ee79be0c97f1f70",
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::wg-dev-vpn-config-files",
            "bucket": "wg-dev-vpn-config-files",
            "bucket_domain_name": "wg-dev-vpn-config-files.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "wg-dev-vpn-config-files.s3.us-east-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": true,
            "grant": [
              {
                "id": "257d759f8ac861a720feea6d2a5e005e0fc3ab40183f6fe8bf7157ad61600e0e",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z2O1EMRO9K5GLX",
            "id": "wg-dev-vpn-config-files",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "{\"Statement\":[{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::wg-dev-vpn-config-files/*\",\"arn:aws:s3:::wg-dev-vpn-config-files\"]}],\"Version\":\"2012-10-17\"}",
            "region": "us-east-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "wg-dev-vpn-config-files",
              "Terraform": "true"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "wg-dev-vpn-config-files",
              "Terraform": "true"
            },
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "wg-dev-vpn-config-files",
            "id": "wg-dev-vpn-config-files",
            "policy": "{\"Statement\":[{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::wg-dev-vpn-config-files/*\",\"arn:aws:s3:::wg-dev-vpn-config-files\"]}],\"Version\":\"2012-10-17\"}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.data.aws_iam_policy_document.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": true,
            "block_public_policy": true,
            "bucket": "wg-dev-vpn-config-files",
            "id": "wg-dev-vpn-config-files",
            "ignore_public_acls": true,
            "restrict_public_buckets": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_server_side_encryption_configuration",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "wg-dev-vpn-config-files",
            "expected_bucket_owner": "",
            "id": "wg-dev-vpn-config-files",
            "rule": [
              {
                "apply_server_side_encryption_by_default": [
                  {
                    "kms_master_key_id": "",
                    "sse_algorithm": "AES256"
                  }
                ],
                "bucket_key_enabled": false
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_object",
      "name": "vpn-config-file",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-dev-vpn-config-files/daniel.gomez-wg-dev-vpn.ovpn",
            "bucket": "wg-dev-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTAyOGVmODJkYmQwMDRiZjMyLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZqQ0NBZjZnQXdJQkFnSVFWWTFOWlVQeWd3R09xNjhCVEZyWXVUQU5CZ2txaGtpRzl3MEJBUXNGQURBbApNUXN3Q1FZRFZRUUtFd0ozWnpFV01CUUdBMVVFQXhNTmQyY3VaR1YyTG5ad2JpNWpZVEFlRncweU5ERXhNVE15Ck1ERXlNakZhRncwek5ERXhNVEV5TURFeU1qRmFNQ1V4Q3pBSkJnTlZCQW9UQW5kbk1SWXdGQVlEVlFRREV3MTMKWnk1a1pYWXVkbkJ1TG1OaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbk5TYQpVSldpVktQTGFTbUowZDUyb0JrbHFPZFUvR2Q5SFpGZU56a28vOFROUisxMUx1N2NYcHlMYm50ZXlDN0F1UUc0CkVhVkJjTU5zaXkzZEx3dFhoSVh6WUFyRC9ERWdsL0tnMEh0WllNNUE3c3RCamNLN1kzd2hhREo4U0VzR0N5NDAKUXYvdjFiR0tRVnhVa0FSRStFZXp1clIvV0JyaHZsYm9uRzlSWGNYUlNxYWFVQ29OcVU4aWRwc1IyUWV5UDFicQpLeTBPbUtkc0cwOGo5RG96NkF3OElMcDIzUTdqTTh0UTVZaTYvR2kyaWZ1WVU0VmZPTFpCdTU0d1g0SDljM0YxCnVyZmwzVmkrV3NqWmxtT05uQk80dXZZRjdPRVYxdGhEWHVFQjYwTzlpTzFmL3I3a3hZcDNnNkRzK1J4TjkzMWYKcjBRYWlxWHlpNkNHUTRuMDZ3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVQMldic25mRWduNElhbVhlVk1QMk8zTUczVjB3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFCS0tiaFB4K0xYTUsxRlFuOVVrWUg5L3FDbVZ4a28vZmdVck92ckFzRmJEUnQrZ3JQWkIKTmdZQVpKcmZBbnM2Z2hDdUFoSDdTcjBuMkpweU8vZlNCWmRrRDZaQjBWZlFmalNYSTg4VkxMTDF6NmZlV2NyZQpZaUlTMm94MmNiTmx0SERqRVVYOVlDUUswQm9PTjkvMXBnQW9mUWtDTVpNU2xTZzJxTzExb0RyNDBrN1drNWxMCnRtLzVtcXdmaU9TL1h6OEMvckpxcWZYRUtFV0ZuYS9NVHArMm9OZEtiYU1WcksrSTEwL0pMaDB1ZUFsZ2tXemUKekJMYnVXTDJjWTdRUVJiV2hObGo1b0ZNbG1BV2pKV3kzVFhYZDdwNWY4dHdqOGV6SEx1dE5zQldQN0pTUzgyNgozcmZCelFSYnlqVjYrQ3ZMRWk5QU4wNWNnRGJoUkVsOGVjMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPekNDQWlPZ0F3SUJBZ0lRQUlxZysybFl6NWpMKzM4OTNnQ3JoakFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVFzd0NRWURWUVFLRXdKM1p6RVdNQlFHQTFVRUF4TU5kMmN1WkdWMkxuWndiaTVqWVRBZUZ3MHlOREV4TVRNeQpNREV5TWpOYUZ3MHpOREV4TVRFeU1ERXlNak5hTURZeEN6QUpCZ05WQkFvVEFuZG5NU2N3SlFZRFZRUURFeDUzClp5NWtaWFl1ZG5CdUxtUmhibWxsYkM1bmIyMWxlaTFqYkdsbGJuUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRE5pUzVsd0tKY3VLSUFHNm9nb04ydmJGUGNiZmFqdENSRkg3WEtBWjVxd0w3NApRSUV5dUtWN1VYUlVmVTZJRmJyb256MmIxNS94WXd3TnliM04zSHlDQnFhUUQzYnFEczcwQnljckpnZitzMkwwCnhrdHBnSGhWSVBTaFZjQjhmUGl5aGEzNVQxOTlXVm80TGNkZ1FReDNZek9zZmFoTk9NUXZrT2pXTVRSLzdDZlcKdDl2M21PeERyMFgwV2xISmFqdE1mLzhZOUd6V1RqL0FzRmpHVDEzUzVNK29YeHRwT0g2c1p3ZXJzaDJwVm9HOQpWNlFlUGFjL2xORFlyZHpvenJqb2tYWU0wWGkrUE9qelRKMVNLL0dHVDQ1OXBDMG8rcTNITDJvLzltb3Qzd1ptCjhySDkrQ0J3K0l0aGpNS0htRnBXQ053Y2RaZStrZ0l6M2JGdVVYcDdBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZApJd1FZTUJhQUZEOWxtN0ozeElKK0NHcGwzbFREOWp0ekJ0MWRNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNSClltUDBTWktTTzRmajVvNGlnMUd6Zjc0YlpvcVcwdjVxUmRsZGp5VlQ0UFhOQ1ozTGZwWGN2cHZWYnhVeVBzZloKR0JZS3c1Y2tzbUVIK0tTNjF2K0VlcjZ1bjYxaWY1TDZ0QzJqZHNPU1RlcUtid3VOUzVNMmdHWmtOb1VYRXk3ZgpvMkY3enJWWERxUHkvcFBQRXR4cmlEZnoxeUVleC8xbGhvcFl1WXE1NTRMRzZTTXhJN0N1dWxQN0FibWI0WWF2Cm53VGFkM01OaXNidSt2QkJXekZsN2U5Qk9EcVdaYndUVnh5WVV0QXNVMEpFaHZCZlNNbHZMZ0N5TEZWMGlVWEwKRk0rZHViOTZhR3hsUnpjODE5SGNraTFjc1ZDSU5tVEVURCtxaGg4ODdyRVNUNlA0czk2Y3YwaS9HTkFwZFlpNwpYZ0VOR2JrVkdScVMxUHhaODA1VAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgo8L2NlcnQ+Cgo8a2V5PgotLS0tLUJFR0lOIFJTQSBQUklWQVRFIEtFWS0tLS0tCk1JSUVwUUlCQUFLQ0FRRUF6WWt1WmNDaVhMaWlBQnVxSUtEZHIyeFQzRzMybzdRa1JSKzF5Z0dlYXNDKytFQ0IKTXJpbGUxRjBWSDFPaUJXNjZKODltOWVmOFdNTURjbTl6ZHg4Z2dhbWtBOTI2ZzdPOUFjbkt5WUgvck5pOU1aTAphWUI0VlNEMG9WWEFmSHo0c29XdCtVOWZmVmxhT0MzSFlFRU1kMk16ckgyb1RUakVMNURvMWpFMGYrd24xcmZiCjk1anNRNjlGOUZwUnlXbzdUSC8vR1BSczFrNC93TEJZeGs5ZDB1VFBxRjhiYVRoK3JHY0hxN0lkcVZhQnZWZWsKSGoyblA1VFEySzNjNk02NDZKRjJETkY0dmp6bzgweWRVaXZ4aGsrT2ZhUXRLUHF0eHk5cVAvWnFMZDhHWnZLeAovZmdnY1BpTFlZekNoNWhhVmdqY0hIV1h2cElDTTkyeGJsRjZld0lEQVFBQkFvSUJBUUNmTUh1K0ZYZnJScGs2CmFqTFhPS0RhaUpWZktkQVlOS0xPNHVPQ3hNUTB2SHBzZmxGU3ZvNTB0NzdZM1lDZ2grd08xWjc3QUFPQ0N3dS8KOWh2S3dOV3lRNEpvRzRJbmdEYXI3SXBhc2djSkwxa2FhaWJvWExkV2Y4TFkzampLY21TUXFGYjV2SThoMzcydgp1MDByY05ZOTlaaUZKWUhmNVhLVndLK0ZqZkN5amdubjFnTWNvTHduR3A4czB5cnhSeFVYcE8vVENHN0Z6MTJWCi9mUUJGYVJWWDBCeG5Lb2J1S0pzSk1VKzFna0E4WXM1TGdSVFVudXpxNXJkeXlWMzMrZzBFVkxONUFZY1p6Uy8KU0tDbmVtOVhWRjQ2dVc1dUNiS3FzR2plREtNZUc0a055S2hlRXliaWFIa0twVmhGV25jSUF4ZndYb3J6NnRCcAp3cmxkRzF5cEFvR0JBTkViMkVCNU5XOXh3eGRYd1lkR2YyNVdrVjVEb0hKUGV3ZDNNVGxqM1FUS0hDbmxzcnFQClNQUkY4RWJKNEpPazBRaDFveUM4THo3SXRMbGNuelllYUxEeEpQOG5KcTIzcStSbzUvRGs5bCt0SndtYmc1NjIKQ1hYa0t1T0xoRllMdXVkbHFvMUlUSW1pZGp3Vk9VYmF3RllZRUprNjlMU1FpRW1OdCtxT0t3b1ZBb0dCQVB1ZwpPcmp5LzdCbnRzS3pNeWJhdzRLbTZVOWpEcmtiWWt1VTNPK0c4Ky9YM0FVeGI5Vk90VEU5QnFmdDNGK05UOVgrCnZFUjVlQW1xeFZRYTBJa0NUWjdYVmF4ODF4SEYyNGRkYnlPVkY2TkhrMmJpYStFampZVmtkbFZyQlVweFFtR0YKZGpXY2o3Z2dPSlpucjFDQ2g5cXI3N0tlK21IZEcyZ3UzVTFQTVdaUEFvR0FDWWNGUVZyRWJvRjJiQmZaZjNwYwowQUF0dTJmRlphL3RZUmV6TEhRNlc3K0JyUDhFTjYvVG1SMmVwdnNIdW5KbCs4YXdXZ3Q0ODVsZGNweWZ2RzJDClE1MlpHKzhDdWlPR04yLzRNV2VkT2hxL2pwYUJWcmZna25pRTQ3MDFtRjRNZEFLVDFNQVlqS1RVVWtSOVNaY3AKOEVKRWIxYmFVMmZLYmQrQkk3UzZqVWtDZ1lFQXBZVytlMEZtVHoyNmJKT0RGNUVhd1V4WTk1NzY1V3VOR3BqLwpTUldtUytUY1dCSXdOY3BEeVBNUytNNndnNjZxa09PMEp2c2Nxb2RLclV2Q1dBNUt6eTFwcjBDa0hZM2hIa2VwClAyZnBGOENTeDBBMHBQSkZPelZkM2t5N08wQUw0YWp3bk0yemdQUzVKTDlxQlBVSXR5RVpXWS9ZdHgzQzFLTFgKY3U2Z1dXTUNnWUVBeElyak96aFlXOFlMVDB4d3dwMmgvNmwwTlJpL3hxRzhJeDY5QUJsQS91YjBIT3VsWms1Zwp1L3VqMjZuWVRxZTd1ekxjVG1Cc2dEaHQrVzltNU8vd1VtZEJtaHkwL1dyZjB1NGFnWVgzdW5UYmp3VFF4My85ClQyK0Y2WHRFVGJNZ1NRdlZ5Rk9hbWJLT2FLS01UVFFZU3lTYllyUnYxUHJXb3RER09NckRjc3M9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCgo8L2tleT4K",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "d2e119161597c688211f510355381633",
            "force_destroy": false,
            "id": "daniel.gomez-wg-dev-vpn.ovpn",
            "key": "daniel.gomez-wg-dev-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-dev-vpn-config-files/root-wg-dev-vpn.ovpn",
            "bucket": "wg-dev-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTAyOGVmODJkYmQwMDRiZjMyLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZqQ0NBZjZnQXdJQkFnSVFWWTFOWlVQeWd3R09xNjhCVEZyWXVUQU5CZ2txaGtpRzl3MEJBUXNGQURBbApNUXN3Q1FZRFZRUUtFd0ozWnpFV01CUUdBMVVFQXhNTmQyY3VaR1YyTG5ad2JpNWpZVEFlRncweU5ERXhNVE15Ck1ERXlNakZhRncwek5ERXhNVEV5TURFeU1qRmFNQ1V4Q3pBSkJnTlZCQW9UQW5kbk1SWXdGQVlEVlFRREV3MTMKWnk1a1pYWXVkbkJ1TG1OaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbk5TYQpVSldpVktQTGFTbUowZDUyb0JrbHFPZFUvR2Q5SFpGZU56a28vOFROUisxMUx1N2NYcHlMYm50ZXlDN0F1UUc0CkVhVkJjTU5zaXkzZEx3dFhoSVh6WUFyRC9ERWdsL0tnMEh0WllNNUE3c3RCamNLN1kzd2hhREo4U0VzR0N5NDAKUXYvdjFiR0tRVnhVa0FSRStFZXp1clIvV0JyaHZsYm9uRzlSWGNYUlNxYWFVQ29OcVU4aWRwc1IyUWV5UDFicQpLeTBPbUtkc0cwOGo5RG96NkF3OElMcDIzUTdqTTh0UTVZaTYvR2kyaWZ1WVU0VmZPTFpCdTU0d1g0SDljM0YxCnVyZmwzVmkrV3NqWmxtT05uQk80dXZZRjdPRVYxdGhEWHVFQjYwTzlpTzFmL3I3a3hZcDNnNkRzK1J4TjkzMWYKcjBRYWlxWHlpNkNHUTRuMDZ3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVQMldic25mRWduNElhbVhlVk1QMk8zTUczVjB3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFCS0tiaFB4K0xYTUsxRlFuOVVrWUg5L3FDbVZ4a28vZmdVck92ckFzRmJEUnQrZ3JQWkIKTmdZQVpKcmZBbnM2Z2hDdUFoSDdTcjBuMkpweU8vZlNCWmRrRDZaQjBWZlFmalNYSTg4VkxMTDF6NmZlV2NyZQpZaUlTMm94MmNiTmx0SERqRVVYOVlDUUswQm9PTjkvMXBnQW9mUWtDTVpNU2xTZzJxTzExb0RyNDBrN1drNWxMCnRtLzVtcXdmaU9TL1h6OEMvckpxcWZYRUtFV0ZuYS9NVHArMm9OZEtiYU1WcksrSTEwL0pMaDB1ZUFsZ2tXemUKekJMYnVXTDJjWTdRUVJiV2hObGo1b0ZNbG1BV2pKV3kzVFhYZDdwNWY4dHdqOGV6SEx1dE5zQldQN0pTUzgyNgozcmZCelFSYnlqVjYrQ3ZMRWk5QU4wNWNnRGJoUkVsOGVjMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lRWlFjbmxuTnhvTDA5UXBtd25iazg0VEFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVFzd0NRWURWUVFLRXdKM1p6RVdNQlFHQTFVRUF4TU5kMmN1WkdWMkxuWndiaTVqWVRBZUZ3MHlOREV4TVRNeQpNREV5TWpKYUZ3MHpOREV4TVRFeU1ERXlNakphTUM0eEN6QUpCZ05WQkFvVEFuZG5NUjh3SFFZRFZRUURFeFozClp5NWtaWFl1ZG5CdUxuSnZiM1F0WTJ4cFpXNTBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUF6ek10WmZtM2RLSFBrYTRJcE1rSWhCRldjZnNNRkx1SHVrQWR5Y0ZOaE9zYlkySkZtY2ltbW00bgpHUkJCejRCMzI4eGlKUHFsTml5NVM1VUlsa2NVdVlSZHNaQ3ZlR1hpMHkwVGV3aE84V3dLNnAvQzdVWnpremNPCk5mbjlkR01tS2VmWDdTRmtoQXRldndkc1ZPUWc5MHE2N2NtQXE4TWlJSDd0ZU0zM0JWUndmY3ZEYmdjN3dtMGkKSkExVkdaaVEzRGxkOFVwSW8xdzlnWnNWWHdyZXdsdXh3RjErT0I2QjdOL1U0aVFrcHlwWnlnbUlHaElGRDVQYwpsMmZFSFRLaEtpanhHNUdNWFMwS09mdjcvTlFiaUM2c05MN09ETElPTUlNbUhYaUR3dlhwYVdGM3hnbW9RNnE5CkxqenJUYkFUQTBHMUxpc3M5V2ZOU0ptSXlVUndVd0lEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXcKRXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRLwpaWnV5ZDhTQ2ZnaHFaZDVVdy9ZN2N3YmRYVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaEs2bHFWbXRtYmIyCm9VZ2FSUE94Z29Ta2VycmFnYTNWR2ZNYmhmZGVhSDg5TlFNeWxXTXZHQXJOQ2l1RUtrWkpESXQ3cENjb2lHTGwKbGxuS01lWXZkR2FqTTFlRGp4aUlZL25jUVRzUnVVaEtTZXJVUGZNdFhDYW9kWU50VlJZWFZ5cGFid3R3dTJZUwpLcUlhUDhpZDdheWx4VXJaeVR6bjVXK251QXVvbHVXNkZhQlZnYU9qMVFNdUo0dHNRUHFCdmpmM0J1QjN5RVBwCkpER1FIaFNINU92eUZpamJjcGhzQkN2eUNvNE03RDVwTTRHUFRSSllGRlpQQ25uNGRDTnZZVUMyVXNhOWY1QUQKL2N3eVJxRkpUcW55MnhyZXRTbDZGUytscHdXSThsdnpML3VoYmYwVjBzL0xYRURWZ2NKbVRRVE8zTjJ0Zmd5RgpVbjd4dHJMR1VnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jZXJ0PgoKPGtleT4KLS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBenpNdFpmbTNkS0hQa2E0SXBNa0loQkZXY2ZzTUZMdUh1a0FkeWNGTmhPc2JZMkpGCm1jaW1tbTRuR1JCQno0QjMyOHhpSlBxbE5peTVTNVVJbGtjVXVZUmRzWkN2ZUdYaTB5MFRld2hPOFd3SzZwL0MKN1Vaemt6Y09OZm45ZEdNbUtlZlg3U0ZraEF0ZXZ3ZHNWT1FnOTBxNjdjbUFxOE1pSUg3dGVNMzNCVlJ3ZmN2RApiZ2M3d20waUpBMVZHWmlRM0RsZDhVcElvMXc5Z1pzVlh3cmV3bHV4d0YxK09CNkI3Ti9VNGlRa3B5cFp5Z21JCkdoSUZENVBjbDJmRUhUS2hLaWp4RzVHTVhTMEtPZnY3L05RYmlDNnNOTDdPRExJT01JTW1IWGlEd3ZYcGFXRjMKeGdtb1E2cTlManpyVGJBVEEwRzFMaXNzOVdmTlNKbUl5VVJ3VXdJREFRQUJBb0lCQVFDRHd2dS91WWxjZGZuVgpubUtJeC83T1hXZ25tNG9YTlJvZTZ0OEdpaEtOMENUZWtvUElRNzBPdjdYRlRuMUxRMXIxUDRlNkZGb3psVVZRCk56bjZ0c0VMS0kyY2VYSGNrbzRuMUtacXV1SFl6T2cwUTl4bG4wT24vbjdlL0ZhZFNOL2dEanRWNU1KUzVoZ2UKU3M0dFBkVm83UERxZmhXQkpObnk2RVNEYWhjSUg0RlExVFdwaWF5blpmNSsvRjFtTGg1UDZuUm5pam45R3VJQQpWZTJrSEQvZHB6ZFlBV1FiNk1xNUJ1V0RFbndhUVRscDF6WEI4b2t0Vk5MaWtveEp3dXJJMEpZSzdlUmJvKzN0ClRtbk1SbGVKc3R3cHdjRXUyN2hpNCtsRTJuNGk0SjRtOWR6TXIzWTJUTkl0RlNVSzhYb2tRdHZLK2dPZ1FCUVYKQW02NGlpK2hBb0dCQU4vOGpqTEk2d2JadXFxd0xiM3AwUXBxTElBOXplNitDWXlXajU5UUJXdjJOTWw5VW5tbgo0bU1SOFdtSWYxZ0ZjdWZVOE9uc2dwQ1hqVFdxbU1xUG1UK3BGWHBQMGsxNDlrMG5WREhCeUVZYWhiMGwxa3J4CjI5RVFiM0U4cDlxVEVwcHVoSklEOUc2eG04SkF1VzF1eFk2TEJtSHZONngzS012T0c0S1F1Q3FWQW9HQkFPelEKYW1wWTVZWWJuWkh2QU02NWt0NFp2VHNuc0NMcFA3cG9PMXlLdnljQ3A2elVwSzVXYWpraWEranErbTYrU0s3eQpkcG85VlRRazVFYlBHQTN4MmdYQ2RrVGZJaklJSEF1ZC9oeVREby9yRFpBcHhzN1R6RXJZRzdEa24vNHhTOHp1ClRxa05xUCtscGFzSms4c2VyNFJjVm95SWRIc2x2cmlleXNKMk50MUhBb0dBR1ZlaTR4NFdjV3o3RU1ya01nT2QKY2pjM0Y3OW1hR2U1L3QwZUhPRlo2N0Fzb3N0NkpHZVpWcW8yRFVHelhzc25DQkh3dkJiVll2U3l0bXE1NU5sQQpkcEp6NnFYVFhvNmNGM2ltcndhRTJXR3cxZ2pNNlNmYVBocEU4YVB5UGVtOEJoc1JCdEJKdktoOXZnbkNzUjRDClhqRmVwSUFEWlpFSjNaMVJRWUdNUk0wQ2dZRUF5aFArK3NqbzgwdFZabFpBcGljTkFLR09MSkJ0YVIwSTJKUmgKTTFMaVV2T2RDWXBiRExtSTQwQlFQTzFtem1GcHZJQUNYUlBCUlVIRjJmYVdYQy9wRDhrbEN4Z3RJZXh4b2lncgowMDVadXMybFFVT2s5cEVkWHpDU1VKeUhPbTN1ZE8xV0NrUXgxaFVRRGFlYWlsV2hDSjJTN1ZEenRMSTgwV1lQCk4ybVEzN2tDZ1lCMkxvNDhHM0N1ZWppS3pHNk5ad0hYUDVpMU5jV2U1VzNFK1JveFREVjgrUlZYbWNiMWoxREkKL0NQYkRPcUJJZ1ZJb0JuUko5YTZEcVBrS0QwelkvQlZacmZqNlFSVHBPL2hJUmREQi9FQ3RmMU9DS1hsN1VCRgp2UndOM3VQNTZQU3BWekNwVFRWK2hUK0Z5cWtQWFlvVmV6M1F2U0U3YUY3U3ZKeHVycDZ6UGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQoKPC9rZXk+Cg==",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "a1cafa592c0e9289d9e563d6a82363c1",
            "force_destroy": false,
            "id": "root-wg-dev-vpn.ovpn",
            "key": "root-wg-dev-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-dev-vpn-config-files/terraform-wg-dev-vpn.ovpn",
            "bucket": "wg-dev-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTAyOGVmODJkYmQwMDRiZjMyLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZqQ0NBZjZnQXdJQkFnSVFWWTFOWlVQeWd3R09xNjhCVEZyWXVUQU5CZ2txaGtpRzl3MEJBUXNGQURBbApNUXN3Q1FZRFZRUUtFd0ozWnpFV01CUUdBMVVFQXhNTmQyY3VaR1YyTG5ad2JpNWpZVEFlRncweU5ERXhNVE15Ck1ERXlNakZhRncwek5ERXhNVEV5TURFeU1qRmFNQ1V4Q3pBSkJnTlZCQW9UQW5kbk1SWXdGQVlEVlFRREV3MTMKWnk1a1pYWXVkbkJ1TG1OaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbk5TYQpVSldpVktQTGFTbUowZDUyb0JrbHFPZFUvR2Q5SFpGZU56a28vOFROUisxMUx1N2NYcHlMYm50ZXlDN0F1UUc0CkVhVkJjTU5zaXkzZEx3dFhoSVh6WUFyRC9ERWdsL0tnMEh0WllNNUE3c3RCamNLN1kzd2hhREo4U0VzR0N5NDAKUXYvdjFiR0tRVnhVa0FSRStFZXp1clIvV0JyaHZsYm9uRzlSWGNYUlNxYWFVQ29OcVU4aWRwc1IyUWV5UDFicQpLeTBPbUtkc0cwOGo5RG96NkF3OElMcDIzUTdqTTh0UTVZaTYvR2kyaWZ1WVU0VmZPTFpCdTU0d1g0SDljM0YxCnVyZmwzVmkrV3NqWmxtT05uQk80dXZZRjdPRVYxdGhEWHVFQjYwTzlpTzFmL3I3a3hZcDNnNkRzK1J4TjkzMWYKcjBRYWlxWHlpNkNHUTRuMDZ3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVQMldic25mRWduNElhbVhlVk1QMk8zTUczVjB3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFCS0tiaFB4K0xYTUsxRlFuOVVrWUg5L3FDbVZ4a28vZmdVck92ckFzRmJEUnQrZ3JQWkIKTmdZQVpKcmZBbnM2Z2hDdUFoSDdTcjBuMkpweU8vZlNCWmRrRDZaQjBWZlFmalNYSTg4VkxMTDF6NmZlV2NyZQpZaUlTMm94MmNiTmx0SERqRVVYOVlDUUswQm9PTjkvMXBnQW9mUWtDTVpNU2xTZzJxTzExb0RyNDBrN1drNWxMCnRtLzVtcXdmaU9TL1h6OEMvckpxcWZYRUtFV0ZuYS9NVHArMm9OZEtiYU1WcksrSTEwL0pMaDB1ZUFsZ2tXemUKekJMYnVXTDJjWTdRUVJiV2hObGo1b0ZNbG1BV2pKV3kzVFhYZDdwNWY4dHdqOGV6SEx1dE5zQldQN0pTUzgyNgozcmZCelFSYnlqVjYrQ3ZMRWk5QU4wNWNnRGJoUkVsOGVjMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQWlDZ0F3SUJBZ0lRT1lSVnhMMlB2N2JYcjMrTkgrNUNNREFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVFzd0NRWURWUVFLRXdKM1p6RVdNQlFHQTFVRUF4TU5kMmN1WkdWMkxuWndiaTVqWVRBZUZ3MHlOREV4TVRNeQpNREV5TWpOYUZ3MHpOREV4TVRFeU1ERXlNak5hTURNeEN6QUpCZ05WQkFvVEFuZG5NU1F3SWdZRFZRUURFeHQzClp5NWtaWFl1ZG5CdUxuUmxjbkpoWm05eWJTMWpiR2xsYm5Rd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDeWovNW5Vc1JOTkZDZm5kalRXWEV3R2d0ZVlKSDMvRGJZMklPcFlwaVRIamxKandBMwpMVDg1ZDNiTTl5bEljRWpTVE1YbUZGRTlZSTR6dHlSVFBqWTVLTlhoc21haWxkOG5Md01yKzhtbThRNmlTNk1HCnl0MzFxUFI1bm82YlJUNWtEbGNHQzBENEM4WVlDZG1BbHkrRDFYRk9CSUpvdWdkVFkxQlBNMFQxdjZrS3VBTVkKYWlwamFxYzFtUlplWE9Ydzc5bzNRZ09jWFVpWEZIby9adFlyb2diVTFtRUJGcFlqbVVVQ2htTmhhajNYYWFJaQpxUHIwOEZueWlwelJaV2JQQW13VllEMG9JZkRhb1ZiTXFqRTFOV3lJWGZKQ1hUZHVNWGpGWXo0a2hBNG8xTWlMCjFuL2FiVmlTWWtCWGd6SW11Z1I0YUtyLzZBUHJRTmlsRVhXbkFnTUJBQUdqVmpCVU1BNEdBMVVkRHdFQi93UUUKQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWQpNQmFBRkQ5bG03SjN4SUorQ0dwbDNsVEQ5anR6QnQxZE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTNaT2hICldQMmpjODNuWllNRWtUYWdYYXdCMkI5OUlFMHRxQzRVQnBSNEt6MFVUN2lOemVYMlBOelR2cGVwTVlxMzZBOXAKVDFXZHFJdU01NVRVSTc0ZjFuMzR5b1NpSkx5d0d6UGtkZUE2c1RlRm9PUWJlNFJUM0lNRzNCVzBON2FXNlYxTgpJR0k2VG0ycEZXR1RYT2FGRk8xRjd3eHd0Q2hzTnN2dlJGcXpKQ3E1VzNSNm82dzBlZXJJYkFGcGRYb0FiMk1yCjRZN0Y5K1AxVDArK2FEekRIeVJpZnRZOHBhaEpkL1RVT3RJNTVsZm5CUzYrT2d6MjIrME9DOTRLQjkrUFQremEKYnVLZFRGR0dpNU9rUXVPaEF1aWRxQ2lCVmtkN3RtMlhWTlpxUWYvb2FWSWtIWXkxQmVva3VIcnF0V1BFSVpNZQowcXk5dEtjSFBDYWhqckEzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCjwvY2VydD4KCjxrZXk+Ci0tLS0tQkVHSU4gUlNBIFBSSVZBVEUgS0VZLS0tLS0KTUlJRXBBSUJBQUtDQVFFQXNvLytaMUxFVFRSUW41M1kwMWx4TUJvTFhtQ1I5L3cyMk5pRHFXS1lreDQ1U1k4QQpOeTAvT1hkMnpQY3BTSEJJMGt6RjVoUlJQV0NPTTdja1V6NDJPU2pWNGJKbW9wWGZKeThESy92SnB2RU9va3VqCkJzcmQ5YWowZVo2T20wVStaQTVYQmd0QStBdkdHQW5aZ0pjdmc5VnhUZ1NDYUxvSFUyTlFUek5FOWIrcENyZ0QKR0dvcVkycW5OWmtXWGx6bDhPL2FOMElEbkYxSWx4UjZQMmJXSzZJRzFOWmhBUmFXSTVsRkFvWmpZV285MTJtaQpJcWo2OVBCWjhvcWMwV1ZtendKc0ZXQTlLQ0h3MnFGV3pLb3hOVFZzaUYzeVFsMDNiakY0eFdNK0pJUU9LTlRJCmk5Wi8ybTFZa21KQVY0TXlKcm9FZUdpcS8rZ0Q2MERZcFJGMXB3SURBUUFCQW9JQkFDenJxcDJGcGRxaVNaSU8KSEtqMnZGSFVpMzJmbjdrYUd4WXNTZHNIOGNnNDkwSjVGaDNMWlRkb3hWdEU1bjdSdUpBblBqWG1jSldYUDg3awp5TitrSy9IdlF2YzNjVGgvcVpicTdjcFgybUFFRHFGbms4aTJxbVlOcmdzV2gxdXFiTXF4RE5WNWFVdTljb1ZECm5STUxkYW1kdlpaWjdoQzRrL1UzYTlHdzNTMVJNVStqSnI0c1FkaVh5Y2ttamNWRFBlSExYQ29NQXl0ZzF3cHIKWEpiQUhVMnF5SUQwNFpQelR1RngydlBzeGx4eEp6SmFJRFZ1KzBtZWw3R2lxREQ1UUJ6c0dhODNqV2lmME5rdwpVU0h3K3g0TVVUYUdkK01VRUlITUFGMVBUeGlHeTlYa2hLbmUzTDJtaWU1NTFUWUZhaGEra3BqNWdGQWN2dndvCnQ2emlveEVDZ1lFQTRqcXEva2MzZG1yTVBPdlZnWlA4RnR1enUzbHkvWlRTaVRKSGduaXMzTjFjUS9uOFJpejEKb3lQZSttM0lXR1lodzlPT0NjUmIyQXZWdGRGTFg0MDQ5SFNpV05USUVaKzY3ODBucFFzbGFwNnlKZ3BLNytYNApFdTFyczFTaEMyWk5kaXdjbnRmOW9XbGlFMk5TUFovK3QzeWdRMVV6WDQzVVNTblJIVWhRRFlrQ2dZRUF5ZytCCkRJOXdpR05jRjRNNXZ1OUpYRDNwcjVNWEVUZjR4S2RNVnNGcnN4QXhVdy9QVmdXSjRzck1oNk5ibkVDZTFIdzgKa2c0NVFBZlZxZU1SNXV5Ym14d1hkYkRtZXYvTjhYNS9JN1VZVU9mS3VuUVVYb1hpa0UvU2hFaGdmbDByTk4xOQpBcTBabjhmV2Q5VjlIR0xLVmN6TFJoTVMzYlE5QSt3UVVaU1dUYThDZ1lFQWlOYUZ3V0tnV0o5R3hINjkyVEFDCjVteWo3WDBMb2ZqWDFDYTJmR096NDdCOWM1eU5ESUY3WHQ5K3F5bW1hbG4waUhlNVRZMFpKTGdiMzJzbVZUaWQKdjdlZ3oyeDlTN083SmZ1SXhGcldtZ1E5cTZiRUp4R0tHU0RFNldjQ05sdjk5TUcvMmhDNW1GMmU5aTA0ZkkvLwpTVXMzd1NLUy9YUlRlS0d6bkN1MlNFa0NnWUVBdkZaak5PL21ObHBXbGx2c1VUbjhxUXZVYTZDd21ZNFFSRXlqCjdTRndYNEV5V0hlZURGSXhTY0U1anh3RzRjZWh3L0RoREVwUnRvc1c3cmtHRUxadCs4L2RWZ2ZEYk5aT2dWQWsKOVlWdzJzaVN2K1Erc0RRZkQrQTNHckhUcnpUc2R1UVVCNUNORjg5TzZuZUZuQlhBL3VSYWZFQi9EME5Xcy9jdQo1cnVXdFdVQ2dZQXhic2ZuaWRiYnZlRmVuODMwc1RmRGs4SWhnTHU1VkpKTmx2QXpyVVRFbzZ0RDVwRlVGTGZ6ClhmSW1ybDZBckwxVG16SzR1ME9Ka0V4UDlaZkNIRmFRWEVoQU8wSEUwRzdtKzNOTXJ0eGNhVFFXWTdEclNFczIKOE40SzdXUytCeGc1NlNPNFRNMlJjN0MrdG9nNWwrMTQzeWxJbGJKZWN0TkFOK0xRWGZobU9nPT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0KCjwva2V5Pgo=",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "4616f988d4487855f80f2b25d90bfa4b",
            "force_destroy": false,
            "id": "terraform-wg-dev-vpn.ovpn",
            "key": "terraform-wg-dev-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "vpn",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:975050359967:security-group/sg-0d03abd0928ec2841",
            "description": "wg-dev-vpn-security-group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0d03abd0928ec2841",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "wg-dev-vpn-security-group",
            "name_prefix": "",
            "owner_id": "975050359967",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "production",
              "Name": "wg-dev-vpn-security-group",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Name": "wg-dev-vpn-security-group",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0d9da5850d9f71105"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_ca_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:975050359967:parameter/wg/dev/acm/vpn/ca_cert",
            "data_type": "text",
            "description": "VPN CA cert",
            "id": "/wg/dev/acm/vpn/ca_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/dev/acm/vpn/ca_cert",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_ca_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:975050359967:parameter/wg/dev/acm/vpn/ca_key",
            "data_type": "text",
            "description": "VPN CA key",
            "id": "/wg/dev/acm/vpn/ca_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/dev/acm/vpn/ca_key",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAnNSaUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11\nLu7cXpyLbnteyC7AuQG4EaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stB\njcK7Y3whaDJ8SEsGCy40Qv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaa\nUCoNqU8idpsR2QeyP1bqKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuY\nU4VfOLZBu54wX4H9c3F1urfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f\n/r7kxYp3g6Ds+RxN931fr0QaiqXyi6CGQ4n06wIDAQABAoIBABxcpnukU/MSnBqs\nlGwL21AgvBrLmyb6YDoUrAE4qR14LdewLd0K/XduwBh+3yk8q0XJ9cvbIvaNoPea\nl8GGP5GL1/Oqfr8A83AHROXvKL7FDiEhSP2mFdVsAW6ikq9QQguLk4/6URlIPkSL\nug9BdmegL/S357+7PM/7T53a09AtSaATYxf5hhpGcW1piJQ2zzJC5fMk7F/lYyl6\nN+B8/YwYbpE5JxOS4R6Xd5DMSDRrdNf3V/YV/EjQJcQ4a0htbK96QkTx+ROcIJxX\nKyyA0cmSDdzCkgXYrTFBzaMAIk9cHM4MvFU0/GPrz0nOTndynX7CFSfvHx+xsayW\nZw3wbwECgYEA0JxTQTRI1T8Z/3KqevPr508LRc9o8hG5h6qGRHtHQl5jQmpbNBeH\nJ63NTQO7hYQJAqfBTFWNqBzgC3QXLfN/UcsDSeAQZrjdGendl0PRHJ4C1U1ZaZUc\nv8I5hKoYeNAv8Jsn75ybthGXZXxwAEhPbUAW+Q8pcjVZgfB/Ix4wliECgYEAwHUF\nbyeHwKuZietsyb8FFSHX3OfX0h6xsVEiAeMdUkf0Qf4W2iB3TT8h6Re3wqGBzY6A\nzMgvek9SOaQZjYGCK9q8wa/hr5P/e3pXWsfQxZychXOmfIn+KGuPIXFam5snlRGB\n0tYOaYVgS7UqAbvsIkN2NreDIlqjPcEO0bqoUYsCgYEAo9s2VdAQqVdgP1K878iq\nckyXCSWKRCGB/jsGLcI7Tbk/9AoAS2FzqsoMqUKWR6BXR3unDCNjGjpcDQMJtfE9\n/2wb0CosF9N68ADPKiJ9nSHMDeksow8ZvtF7RmYoxLSaAz6L1tzHPfKBXZipjL8/\njAu8P7MWFfwrqzHRWy86cKECgYEAl7kpiZGucfRWXOaeowXWqew+U0brXBkamOGP\nX9F+gil7pLL9rQS/SMSmpS4vjl7pB/Z6D/cZhuEVv59hDa+1wYD2IfPYhiS02tF+\nIHE6Yy+uLX8ZF0Fqfs8czY6hkd7le52LrX1Xa1Tcr5KpBSjzZaetgEF4PhMackrK\ntgjjPTUCgYBkFxJ+sTBvBSbHS3mvAiLQqbd02L538PlMO4A74Wun3GSw3S9Vcpdj\nZmmV7nZEa3+QE9Ya506zuWAYRGZdpj5IWHXtIeaSv+ftl7p7A8J2BAK1jFspVflC\nkV+0jtXzcIJTqpmE3f993FeJZvYfmeQFW6TY5Jn0hBwkTeFfqPfPPw==\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_client_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:975050359967:parameter/wg/dev/acm/vpn/daniel.gomez_client_cert",
            "data_type": "text",
            "description": "VPN daniel.gomez client cert",
            "id": "/wg/dev/acm/vpn/daniel.gomez_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/dev/acm/vpn/daniel.gomez_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDOzCCAiOgAwIBAgIQAIqg+2lYz5jL+3893gCrhjANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjNaFw0zNDExMTEyMDEyMjNaMDYxCzAJBgNVBAoTAndnMScwJQYDVQQDEx53\nZy5kZXYudnBuLmRhbmllbC5nb21lei1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUA\nA4IBDwAwggEKAoIBAQDNiS5lwKJcuKIAG6ogoN2vbFPcbfajtCRFH7XKAZ5qwL74\nQIEyuKV7UXRUfU6IFbronz2b15/xYwwNyb3N3HyCBqaQD3bqDs70BycrJgf+s2L0\nxktpgHhVIPShVcB8fPiyha35T199WVo4LcdgQQx3YzOsfahNOMQvkOjWMTR/7CfW\nt9v3mOxDr0X0WlHJajtMf/8Y9GzWTj/AsFjGT13S5M+oXxtpOH6sZwersh2pVoG9\nV6QePac/lNDYrdzozrjokXYM0Xi+POjzTJ1SK/GGT459pC0o+q3HL2o/9mot3wZm\n8rH9+CBw+IthjMKHmFpWCNwcdZe+kgIz3bFuUXp7AgMBAAGjVjBUMA4GA1UdDwEB\n/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1Ud\nIwQYMBaAFD9lm7J3xIJ+CGpl3lTD9jtzBt1dMA0GCSqGSIb3DQEBCwUAA4IBAQCR\nYmP0SZKSO4fj5o4ig1Gzf74bZoqW0v5qRdldjyVT4PXNCZ3LfpXcvpvVbxUyPsfZ\nGBYKw5cksmEH+KS61v+Eer6un61if5L6tC2jdsOSTeqKbwuNS5M2gGZkNoUXEy7f\no2F7zrVXDqPy/pPPEtxriDfz1yEex/1lhopYuYq554LG6SMxI7CuulP7Abmb4Yav\nnwTad3MNisbu+vBBWzFl7e9BODqWZbwTVxyYUtAsU0JEhvBfSMlvLgCyLFV0iUXL\nFM+dub96aGxlRzc819Hcki1csVCINmTETD+qhh887rEST6P4s96cv0i/GNApdYi7\nXgENGbkVGRqS1PxZ805T\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:975050359967:parameter/wg/dev/acm/vpn/root_client_cert",
            "data_type": "text",
            "description": "VPN root client cert",
            "id": "/wg/dev/acm/vpn/root_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/dev/acm/vpn/root_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDMzCCAhugAwIBAgIQZQcnlnNxoL09Qpmwnbk84TANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjJaFw0zNDExMTEyMDEyMjJaMC4xCzAJBgNVBAoTAndnMR8wHQYDVQQDExZ3\nZy5kZXYudnBuLnJvb3QtY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAzzMtZfm3dKHPka4IpMkIhBFWcfsMFLuHukAdycFNhOsbY2JFmcimmm4n\nGRBBz4B328xiJPqlNiy5S5UIlkcUuYRdsZCveGXi0y0TewhO8WwK6p/C7UZzkzcO\nNfn9dGMmKefX7SFkhAtevwdsVOQg90q67cmAq8MiIH7teM33BVRwfcvDbgc7wm0i\nJA1VGZiQ3Dld8UpIo1w9gZsVXwrewluxwF1+OB6B7N/U4iQkpypZygmIGhIFD5Pc\nl2fEHTKhKijxG5GMXS0KOfv7/NQbiC6sNL7ODLIOMIMmHXiDwvXpaWF3xgmoQ6q9\nLjzrTbATA0G1Liss9WfNSJmIyURwUwIDAQABo1YwVDAOBgNVHQ8BAf8EBAMCBaAw\nEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQ/\nZZuyd8SCfghqZd5Uw/Y7cwbdXTANBgkqhkiG9w0BAQsFAAOCAQEAhK6lqVmtmbb2\noUgaRPOxgoSkerraga3VGfMbhfdeaH89NQMylWMvGArNCiuEKkZJDIt7pCcoiGLl\nllnKMeYvdGajM1eDjxiIY/ncQTsRuUhKSerUPfMtXCaodYNtVRYXVypabwtwu2YS\nKqIaP8id7aylxUrZyTzn5W+nuAuoluW6FaBVgaOj1QMuJ4tsQPqBvjf3BuB3yEPp\nJDGQHhSH5OvyFijbcphsBCvyCo4M7D5pM4GPTRJYFFZPCnn4dCNvYUC2Usa9f5AD\n/cwyRqFJTqny2xretSl6FS+lpwWI8lvzL/uhbf0V0s/LXEDVgcJmTQTO3N2tfgyF\nUn7xtrLGUg==\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:975050359967:parameter/wg/dev/acm/vpn/terraform_client_cert",
            "data_type": "text",
            "description": "VPN terraform client cert",
            "id": "/wg/dev/acm/vpn/terraform_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/dev/acm/vpn/terraform_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDODCCAiCgAwIBAgIQOYRVxL2Pv7bXr3+NH+5CMDANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjNaFw0zNDExMTEyMDEyMjNaMDMxCzAJBgNVBAoTAndnMSQwIgYDVQQDExt3\nZy5kZXYudnBuLnRlcnJhZm9ybS1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IB\nDwAwggEKAoIBAQCyj/5nUsRNNFCfndjTWXEwGgteYJH3/DbY2IOpYpiTHjlJjwA3\nLT85d3bM9ylIcEjSTMXmFFE9YI4ztyRTPjY5KNXhsmaild8nLwMr+8mm8Q6iS6MG\nyt31qPR5no6bRT5kDlcGC0D4C8YYCdmAly+D1XFOBIJougdTY1BPM0T1v6kKuAMY\naipjaqc1mRZeXOXw79o3QgOcXUiXFHo/ZtYrogbU1mEBFpYjmUUChmNhaj3XaaIi\nqPr08FnyipzRZWbPAmwVYD0oIfDaoVbMqjE1NWyIXfJCXTduMXjFYz4khA4o1MiL\n1n/abViSYkBXgzImugR4aKr/6APrQNilEXWnAgMBAAGjVjBUMA4GA1UdDwEB/wQE\nAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQY\nMBaAFD9lm7J3xIJ+CGpl3lTD9jtzBt1dMA0GCSqGSIb3DQEBCwUAA4IBAQA3ZOhH\nWP2jc83nZYMEkTagXawB2B99IE0tqC4UBpR4Kz0UT7iNzeX2PNzTvpepMYq36A9p\nT1WdqIuM55TUI74f1n34yoSiJLywGzPkdeA6sTeFoOQbe4RT3IMG3BW0N7aW6V1N\nIGI6Tm2pFWGTXOaFFO1F7wxwtChsNsvvRFqzJCq5W3R6o6w0eerIbAFpdXoAb2Mr\n4Y7F9+P1T0++aDzDHyRiftY8pahJd/TUOtI55lfnBS6+Ogz22+0OC94KB9+PT+za\nbuKdTFGGi5OkQuOhAuidqCiBVkd7tm2XVNZqQf/oaVIkHYy1BeokuHrqtWPEIZMe\n0qy9tKcHPCahjrA3\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_client_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:975050359967:parameter/wg/dev/acm/vpn/daniel.gomez_client_key",
            "data_type": "text",
            "description": "VPN daniel.gomez client key",
            "id": "/wg/dev/acm/vpn/daniel.gomez_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/dev/acm/vpn/daniel.gomez_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAzYkuZcCiXLiiABuqIKDdr2xT3G32o7QkRR+1ygGeasC++ECB\nMrile1F0VH1OiBW66J89m9ef8WMMDcm9zdx8ggamkA926g7O9AcnKyYH/rNi9MZL\naYB4VSD0oVXAfHz4soWt+U9ffVlaOC3HYEEMd2MzrH2oTTjEL5Do1jE0f+wn1rfb\n95jsQ69F9FpRyWo7TH//GPRs1k4/wLBYxk9d0uTPqF8baTh+rGcHq7IdqVaBvVek\nHj2nP5TQ2K3c6M646JF2DNF4vjzo80ydUivxhk+OfaQtKPqtxy9qP/ZqLd8GZvKx\n/fggcPiLYYzCh5haVgjcHHWXvpICM92xblF6ewIDAQABAoIBAQCfMHu+FXfrRpk6\najLXOKDaiJVfKdAYNKLO4uOCxMQ0vHpsflFSvo50t77Y3YCgh+wO1Z77AAOCCwu/\n9hvKwNWyQ4JoG4IngDar7IpasgcJL1kaaiboXLdWf8LY3jjKcmSQqFb5vI8h372v\nu00rcNY99ZiFJYHf5XKVwK+FjfCyjgnn1gMcoLwnGp8s0yrxRxUXpO/TCG7Fz12V\n/fQBFaRVX0BxnKobuKJsJMU+1gkA8Ys5LgRTUnuzq5rdyyV33+g0EVLN5AYcZzS/\nSKCnem9XVF46uW5uCbKqsGjeDKMeG4kNyKheEybiaHkKpVhFWncIAxfwXorz6tBp\nwrldG1ypAoGBANEb2EB5NW9xwxdXwYdGf25WkV5DoHJPewd3MTlj3QTKHCnlsrqP\nSPRF8EbJ4JOk0Qh1oyC8Lz7ItLlcnzYeaLDxJP8nJq23q+Ro5/Dk9l+tJwmbg562\nCXXkKuOLhFYLuudlqo1ITImidjwVOUbawFYYEJk69LSQiEmNt+qOKwoVAoGBAPug\nOrjy/7BntsKzMybaw4Km6U9jDrkbYkuU3O+G8+/X3AUxb9VOtTE9Bqft3F+NT9X+\nvER5eAmqxVQa0IkCTZ7XVax81xHF24ddbyOVF6NHk2bia+EjjYVkdlVrBUpxQmGF\ndjWcj7ggOJZnr1CCh9qr77Ke+mHdG2gu3U1PMWZPAoGACYcFQVrEboF2bBfZf3pc\n0AAtu2fFZa/tYRezLHQ6W7+BrP8EN6/TmR2epvsHunJl+8awWgt485ldcpyfvG2C\nQ52ZG+8CuiOGN2/4MWedOhq/jpaBVrfgkniE4701mF4MdAKT1MAYjKTUUkR9SZcp\n8EJEb1baU2fKbd+BI7S6jUkCgYEApYW+e0FmTz26bJODF5EawUxY95765WuNGpj/\nSRWmS+TcWBIwNcpDyPMS+M6wg66qkOO0JvscqodKrUvCWA5Kzy1pr0CkHY3hHkep\nP2fpF8CSx0A0pPJFOzVd3ky7O0AL4ajwnM2zgPS5JL9qBPUItyEZWY/Ytx3C1KLX\ncu6gWWMCgYEAxIrjOzhYW8YLT0xwwp2h/6l0NRi/xqG8Ix69ABlA/ub0HOulZk5g\nu/uj26nYTqe7uzLcTmBsgDht+W9m5O/wUmdBmhy0/Wrf0u4agYX3unTbjwTQx3/9\nT2+F6XtETbMgSQvVyFOambKOaKKMTTQYSySbYrRv1PrWotDGOMrDcss=\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:975050359967:parameter/wg/dev/acm/vpn/root_client_key",
            "data_type": "text",
            "description": "VPN root client key",
            "id": "/wg/dev/acm/vpn/root_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/dev/acm/vpn/root_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAzzMtZfm3dKHPka4IpMkIhBFWcfsMFLuHukAdycFNhOsbY2JF\nmcimmm4nGRBBz4B328xiJPqlNiy5S5UIlkcUuYRdsZCveGXi0y0TewhO8WwK6p/C\n7UZzkzcONfn9dGMmKefX7SFkhAtevwdsVOQg90q67cmAq8MiIH7teM33BVRwfcvD\nbgc7wm0iJA1VGZiQ3Dld8UpIo1w9gZsVXwrewluxwF1+OB6B7N/U4iQkpypZygmI\nGhIFD5Pcl2fEHTKhKijxG5GMXS0KOfv7/NQbiC6sNL7ODLIOMIMmHXiDwvXpaWF3\nxgmoQ6q9LjzrTbATA0G1Liss9WfNSJmIyURwUwIDAQABAoIBAQCDwvu/uYlcdfnV\nnmKIx/7OXWgnm4oXNRoe6t8GihKN0CTekoPIQ70Ov7XFTn1LQ1r1P4e6FFozlUVQ\nNzn6tsELKI2ceXHcko4n1KZquuHYzOg0Q9xln0On/n7e/FadSN/gDjtV5MJS5hge\nSs4tPdVo7PDqfhWBJNny6ESDahcIH4FQ1TWpiaynZf5+/F1mLh5P6nRnijn9GuIA\nVe2kHD/dpzdYAWQb6Mq5BuWDEnwaQTlp1zXB8oktVNLikoxJwurI0JYK7eRbo+3t\nTmnMRleJstwpwcEu27hi4+lE2n4i4J4m9dzMr3Y2TNItFSUK8XokQtvK+gOgQBQV\nAm64ii+hAoGBAN/8jjLI6wbZuqqwLb3p0QpqLIA9ze6+CYyWj59QBWv2NMl9Unmn\n4mMR8WmIf1gFcufU8OnsgpCXjTWqmMqPmT+pFXpP0k149k0nVDHByEYahb0l1krx\n29EQb3E8p9qTEppuhJID9G6xm8JAuW1uxY6LBmHvN6x3KMvOG4KQuCqVAoGBAOzQ\nampY5YYbnZHvAM65kt4ZvTsnsCLpP7poO1yKvycCp6zUpK5Wajkia+jq+m6+SK7y\ndpo9VTQk5EbPGA3x2gXCdkTfIjIIHAud/hyTDo/rDZApxs7TzErYG7Dkn/4xS8zu\nTqkNqP+lpasJk8ser4RcVoyIdHslvrieysJ2Nt1HAoGAGVei4x4WcWz7EMrkMgOd\ncjc3F79maGe5/t0eHOFZ67Asost6JGeZVqo2DUGzXssnCBHwvBbVYvSytmq55NlA\ndpJz6qXTXo6cF3imrwaE2WGw1gjM6SfaPhpE8aPyPem8BhsRBtBJvKh9vgnCsR4C\nXjFepIADZZEJ3Z1RQYGMRM0CgYEAyhP++sjo80tVZlZApicNAKGOLJBtaR0I2JRh\nM1LiUvOdCYpbDLmI40BQPO1mzmFpvIACXRPBRUHF2faWXC/pD8klCxgtIexxoigr\n005Zus2lQUOk9pEdXzCSUJyHOm3udO1WCkQx1hUQDaeailWhCJ2S7VDztLI80WYP\nN2mQ37kCgYB2Lo48G3CuejiKzG6NZwHXP5i1NcWe5W3E+RoxTDV8+RVXmcb1j1DI\n/CPbDOqBIgVIoBnRJ9a6DqPkKD0zY/BVZrfj6QRTpO/hIRdDB/ECtf1OCKXl7UBF\nvRwN3uP56PSpVzCpTTV+hT+FyqkPXYoVez3QvSE7aF7SvJxurp6zPg==\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:975050359967:parameter/wg/dev/acm/vpn/terraform_client_key",
            "data_type": "text",
            "description": "VPN terraform client key",
            "id": "/wg/dev/acm/vpn/terraform_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/dev/acm/vpn/terraform_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAso/+Z1LETTRQn53Y01lxMBoLXmCR9/w22NiDqWKYkx45SY8A\nNy0/OXd2zPcpSHBI0kzF5hRRPWCOM7ckUz42OSjV4bJmopXfJy8DK/vJpvEOokuj\nBsrd9aj0eZ6Om0U+ZA5XBgtA+AvGGAnZgJcvg9VxTgSCaLoHU2NQTzNE9b+pCrgD\nGGoqY2qnNZkWXlzl8O/aN0IDnF1IlxR6P2bWK6IG1NZhARaWI5lFAoZjYWo912mi\nIqj69PBZ8oqc0WVmzwJsFWA9KCHw2qFWzKoxNTVsiF3yQl03bjF4xWM+JIQOKNTI\ni9Z/2m1YkmJAV4MyJroEeGiq/+gD60DYpRF1pwIDAQABAoIBACzrqp2FpdqiSZIO\nHKj2vFHUi32fn7kaGxYsSdsH8cg490J5Fh3LZTdoxVtE5n7RuJAnPjXmcJWXP87k\nyN+kK/HvQvc3cTh/qZbq7cpX2mAEDqFnk8i2qmYNrgsWh1uqbMqxDNV5aUu9coVD\nnRMLdamdvZZZ7hC4k/U3a9Gw3S1RMU+jJr4sQdiXyckmjcVDPeHLXCoMAytg1wpr\nXJbAHU2qyID04ZPzTuFx2vPsxlxxJzJaIDVu+0mel7GiqDD5QBzsGa83jWif0Nkw\nUSHw+x4MUTaGd+MUEIHMAF1PTxiGy9XkhKne3L2mie551TYFaha+kpj5gFAcvvwo\nt6zioxECgYEA4jqq/kc3dmrMPOvVgZP8Ftuzu3ly/ZTSiTJHgnis3N1cQ/n8Riz1\noyPe+m3IWGYhw9OOCcRb2AvVtdFLX4049HSiWNTIEZ+6780npQslap6yJgpK7+X4\nEu1rs1ShC2ZNdiwcntf9oWliE2NSPZ/+t3ygQ1UzX43USSnRHUhQDYkCgYEAyg+B\nDI9wiGNcF4M5vu9JXD3pr5MXETf4xKdMVsFrsxAxUw/PVgWJ4srMh6NbnECe1Hw8\nkg45QAfVqeMR5uybmxwXdbDmev/N8X5/I7UYUOfKunQUXoXikE/ShEhgfl0rNN19\nAq0Zn8fWd9V9HGLKVczLRhMS3bQ9A+wQUZSWTa8CgYEAiNaFwWKgWJ9GxH692TAC\n5myj7X0LofjX1Ca2fGOz47B9c5yNDIF7Xt9+qymmaln0iHe5TY0ZJLgb32smVTid\nv7egz2x9S7O7JfuIxFrWmgQ9q6bEJxGKGSDE6WcCNlv99MG/2hC5mF2e9i04fI//\nSUs3wSKS/XRTeKGznCu2SEkCgYEAvFZjNO/mNlpWllvsUTn8qQvUa6CwmY4QREyj\n7SFwX4EyWHeeDFIxScE5jxwG4cehw/DhDEpRtosW7rkGELZt+8/dVgfDbNZOgVAk\n9YVw2siSv+Q+sDQfD+A3GrHTrzTsduQUB5CNF89O6neFnBXA/uRafEB/D0NWs/cu\n5ruWtWUCgYAxbsfnidbbveFen830sTfDk8IhgLu5VJJNlvAzrUTEo6tD5pFUFLfz\nXfImrl6ArL1TmzK4u0OJkExP9ZfCHFaQXEhAO0HE0G7m+3NMrtxcaTQWY7DrSEs2\n8N4K7WS+Bxg56SO4TM2Rc7C+tog5l+143ylIlbJectNAN+LQXfhmOg==\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_server_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:975050359967:parameter/wg/dev/acm/vpn/server_cert",
            "data_type": "text",
            "description": "VPN server cert",
            "id": "/wg/dev/acm/vpn/server_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/dev/acm/vpn/server_cert",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDLjCCAhagAwIBAgIQRDq0j0Ta69XQ+MM62ML+GjANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjNaFw0zNDExMTEyMDEyMjNaMCkxCzAJBgNVBAoTAndnMRowGAYDVQQDExF3\nZy5kZXYudnBuLnNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAKxlH8KSYxCnuaWI51o1SIhtKllsCL1t4o2zfyn+praEy6buLFKrSrimhNDFBS+x\n3ZIbz1IhFBwBQ3Ms1k5Jr6WobP3zcvr1r8LdIPCB3PrVpHr5fTg0LdvXBh3zKoyS\nGuPIgn6993T2mDNV8G5dmbUmH1yuPy/EikhqNBOhPowLhBMxtMXjGswPSNhzUH/x\nLVfWJPnRDnmhWLZAMiOOXMIs7s50odBA1jSwil2gG8I5jgGLz+AAtDK88AtT9Jeu\n1FwVF+AiVwmb5JMjabY1iWDtcCG2uG7jqLlTP+2kZffoUml7f0NSKwB0X1EkIUI7\nMb7XbohOKfYX5JACKWhTROcCAwEAAaNWMFQwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUP2WbsnfE\ngn4IamXeVMP2O3MG3V0wDQYJKoZIhvcNAQELBQADggEBAHbVdS1LqCaqulCcmFvn\niY45bZG/LxhuwxCZ09SqC7mBx5y3EVVrpEXQ32esYJ3Y+gPq85NzrDWzHh4mbrNd\nyAqgf3kiFvMzp7qJxTEuIZSnRlAWb59Rt9icsfoomC9d7StyDLjD+WeBRLTuHeOa\nnz/NGtRLyWq+tPXTql3tK9yO4ORlacCk1riWL/zNz23ULYAtnpg7KXydCb76sDb8\n9+n2DMdVY+kVVWjenHO3cugcZca6Xi/tKspaJIQGsr2XksRkAYOtwoTCRWKYOq2o\ncsSZJxMXoCwBEEotrop6vqGBQRS+StAc6lCOuuMkAaW/yx3poXLFhBn+23IYzVuC\neeU=\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_server_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:975050359967:parameter/wg/dev/acm/vpn/server_key",
            "data_type": "text",
            "description": "VPN server key",
            "id": "/wg/dev/acm/vpn/server_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/dev/acm/vpn/server_key",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArGUfwpJjEKe5pYjnWjVIiG0qWWwIvW3ijbN/Kf6mtoTLpu4s\nUqtKuKaE0MUFL7HdkhvPUiEUHAFDcyzWTkmvpahs/fNy+vWvwt0g8IHc+tWkevl9\nODQt29cGHfMqjJIa48iCfr33dPaYM1Xwbl2ZtSYfXK4/L8SKSGo0E6E+jAuEEzG0\nxeMazA9I2HNQf/EtV9Yk+dEOeaFYtkAyI45cwizuznSh0EDWNLCKXaAbwjmOAYvP\n4AC0MrzwC1P0l67UXBUX4CJXCZvkkyNptjWJYO1wIba4buOouVM/7aRl9+hSaXt/\nQ1IrAHRfUSQhQjsxvtduiE4p9hfkkAIpaFNE5wIDAQABAoIBAAGH7F5H+oU9WBK2\nQoe0jW5YudWNdg5omWh0vZ5b2pMoXr6ewtoBF2rIX8mS1lb0F2miwZaTIKCXCkhN\nj6GmWd74ve8LaGv+Ho92c0JvhMzddNZ6vLfxDq8zG6TMcgZJjd+T+kSx3y60uelK\nzBXO0vye2Ax0p67+6dN2zfuWpP2NYOH5sYwRNpJS9seRYN6uLyJiCe7Rly3zQnBN\nXOkwSEVnNuZP3Qmdhotq2bhelcP8oqURt9nPmcDnC/U4l2PZxa9x4RFsqd4rk6sb\n29S8N3EYqRBmN0dN+IoPg3ePFV/rDkRrxGtv4iK7kLmnl+asSVtVwY3Nl+lPTC4S\nI59h9SECgYEAwF2XHm6HcvWR/HmUBN17Zybk4XSt2I31JA2mS1e1QAOAHIrojaf0\ndKw4ELpMweB6xFlJBjLwZygzD8sggLCEX9bSuEOzIZw4G8nB58t4m3M7XKVP8OYe\nHrz6UiFizQfXYhAJSDJjcIY5Q8RZklFu9s+lF/6HrMB1/15j0R51SSkCgYEA5WxV\nTIyv1AcUICaAF7R4fq8bWgQHD2oo9KGmkFczFPc0KnHWQwMaKpNLG9m7+p61tm7r\nSlKxe3H+gD4zLxcKHANAY2+vvWr+r9pNvXocvdiJichf4iMNvsFh7xXpNtkBBbFn\nSePu6pdksXJCZXnzzgPSDpg529KSSOFsVdwWD48CgYAI/lcqXRCIF2MT4rtA3vn+\nAJuCzumxzjE/1kOIEjmvHHrI2tW0ib2sFsEoRw1/ovcaZvI7D/adXAvHGUATxCzs\nLib75m5hi+QzqGMgayrgWarU0gXCxX9zAHLTlCwCWfN/6jAE6BYuFJhoyq1FYflG\nIL8fOA8vzG+32Lnh9QKWwQKBgFMc4fHvbatEPThAelscGCLc0O3VU7Fz5g5pmWvl\nCy5nN9DAmLyCHTKbVbRrNrxeTroeiMLOHln4PBi9b9F5aUIos2TSizn1zvpp/YvM\n9yiXj4wIuSO1Sz9100LID0q9Zq9nS2HrXxxBaEsYd5FHktlpbOm4oA1QxYn9kD+y\nkZNlAoGAV65w4OKEZ7u0aROnAonJXacN4KGbZ8sFJa6g7/O9If268hc6gERLnX4h\nfhQ9foHvhHVj59NWaaZ2g1v/PstMT2HH6hG5QosnNn4c/UpR+xrZHA0BrdqBg2kt\nvPr2FJxIEvMiSH/63yWa42ajey8zkHB9C4hRDAskjL23u12yXrE=\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.server"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_cert_request",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICezCCAWMCAQAwNjELMAkGA1UEChMCd2cxJzAlBgNVBAMTHndnLmRldi52cG4u\nZGFuaWVsLmdvbWV6LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAM2JLmXAoly4ogAbqiCg3a9sU9xt9qO0JEUftcoBnmrAvvhAgTK4pXtRdFR9\nTogVuuifPZvXn/FjDA3Jvc3cfIIGppAPduoOzvQHJysmB/6zYvTGS2mAeFUg9KFV\nwHx8+LKFrflPX31ZWjgtx2BBDHdjM6x9qE04xC+Q6NYxNH/sJ9a32/eY7EOvRfRa\nUclqO0x//xj0bNZOP8CwWMZPXdLkz6hfG2k4fqxnB6uyHalWgb1XpB49pz+U0Nit\n3OjOuOiRdgzReL486PNMnVIr8YZPjn2kLSj6rccvaj/2ai3fBmbysf34IHD4i2GM\nwoeYWlYI3Bx1l76SAjPdsW5RensCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQC2\nCE7rD+lzmXFcRjcYFk7gQtRcEjNCkmWo5VUYh0YS13V/QAzH1Fez1RhGBMkue9gF\n42IslBxua826JyIAYY53yLA4eirb0jozZ07fsoQGSPkq2hRAlIlzEGzrTTKM8gqS\nbSmj8OMapkAy1Cel0WC2/kbpFE++KgjCbjZ50Ush78L3kcB4OmM4y3W2cdYZ5vN0\nalMa4o4Jfhp61gi/sjk0NEd5elI9jt0DJTFQLjFTctTZ1i6+x8mKOW280S73njxl\nkUO+cNyOZv/Jun0rhkucHah2nzJjwlWpgFG6JmbIAvxkLz2UYSZHJ6bGdsErvtxT\nwAbjnQl3o+HCMKMV5QXA\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "479a24108d95c346f2772449f521c816a824ccbd",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAzYkuZcCiXLiiABuqIKDdr2xT3G32o7QkRR+1ygGeasC++ECB\nMrile1F0VH1OiBW66J89m9ef8WMMDcm9zdx8ggamkA926g7O9AcnKyYH/rNi9MZL\naYB4VSD0oVXAfHz4soWt+U9ffVlaOC3HYEEMd2MzrH2oTTjEL5Do1jE0f+wn1rfb\n95jsQ69F9FpRyWo7TH//GPRs1k4/wLBYxk9d0uTPqF8baTh+rGcHq7IdqVaBvVek\nHj2nP5TQ2K3c6M646JF2DNF4vjzo80ydUivxhk+OfaQtKPqtxy9qP/ZqLd8GZvKx\n/fggcPiLYYzCh5haVgjcHHWXvpICM92xblF6ewIDAQABAoIBAQCfMHu+FXfrRpk6\najLXOKDaiJVfKdAYNKLO4uOCxMQ0vHpsflFSvo50t77Y3YCgh+wO1Z77AAOCCwu/\n9hvKwNWyQ4JoG4IngDar7IpasgcJL1kaaiboXLdWf8LY3jjKcmSQqFb5vI8h372v\nu00rcNY99ZiFJYHf5XKVwK+FjfCyjgnn1gMcoLwnGp8s0yrxRxUXpO/TCG7Fz12V\n/fQBFaRVX0BxnKobuKJsJMU+1gkA8Ys5LgRTUnuzq5rdyyV33+g0EVLN5AYcZzS/\nSKCnem9XVF46uW5uCbKqsGjeDKMeG4kNyKheEybiaHkKpVhFWncIAxfwXorz6tBp\nwrldG1ypAoGBANEb2EB5NW9xwxdXwYdGf25WkV5DoHJPewd3MTlj3QTKHCnlsrqP\nSPRF8EbJ4JOk0Qh1oyC8Lz7ItLlcnzYeaLDxJP8nJq23q+Ro5/Dk9l+tJwmbg562\nCXXkKuOLhFYLuudlqo1ITImidjwVOUbawFYYEJk69LSQiEmNt+qOKwoVAoGBAPug\nOrjy/7BntsKzMybaw4Km6U9jDrkbYkuU3O+G8+/X3AUxb9VOtTE9Bqft3F+NT9X+\nvER5eAmqxVQa0IkCTZ7XVax81xHF24ddbyOVF6NHk2bia+EjjYVkdlVrBUpxQmGF\ndjWcj7ggOJZnr1CCh9qr77Ke+mHdG2gu3U1PMWZPAoGACYcFQVrEboF2bBfZf3pc\n0AAtu2fFZa/tYRezLHQ6W7+BrP8EN6/TmR2epvsHunJl+8awWgt485ldcpyfvG2C\nQ52ZG+8CuiOGN2/4MWedOhq/jpaBVrfgkniE4701mF4MdAKT1MAYjKTUUkR9SZcp\n8EJEb1baU2fKbd+BI7S6jUkCgYEApYW+e0FmTz26bJODF5EawUxY95765WuNGpj/\nSRWmS+TcWBIwNcpDyPMS+M6wg66qkOO0JvscqodKrUvCWA5Kzy1pr0CkHY3hHkep\nP2fpF8CSx0A0pPJFOzVd3ky7O0AL4ajwnM2zgPS5JL9qBPUItyEZWY/Ytx3C1KLX\ncu6gWWMCgYEAxIrjOzhYW8YLT0xwwp2h/6l0NRi/xqG8Ix69ABlA/ub0HOulZk5g\nu/uj26nYTqe7uzLcTmBsgDht+W9m5O/wUmdBmhy0/Wrf0u4agYX3unTbjwTQx3/9\nT2+F6XtETbMgSQvVyFOambKOaKKMTTQYSySbYrRv1PrWotDGOMrDcss=\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.dev.vpn.daniel.gomez-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICczCCAVsCAQAwLjELMAkGA1UEChMCd2cxHzAdBgNVBAMTFndnLmRldi52cG4u\ncm9vdC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDPMy1l\n+bd0oc+RrgikyQiEEVZx+wwUu4e6QB3JwU2E6xtjYkWZyKaabicZEEHPgHfbzGIk\n+qU2LLlLlQiWRxS5hF2xkK94ZeLTLRN7CE7xbArqn8LtRnOTNw41+f10YyYp59ft\nIWSEC16/B2xU5CD3SrrtyYCrwyIgfu14zfcFVHB9y8NuBzvCbSIkDVUZmJDcOV3x\nSkijXD2BmxVfCt7CW7HAXX44HoHs39TiJCSnKlnKCYgaEgUPk9yXZ8QdMqEqKPEb\nkYxdLQo5+/v81BuILqw0vs4Msg4wgyYdeIPC9elpYXfGCahDqr0uPOtNsBMDQbUu\nKyz1Z81ImYjJRHBTAgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEAtYZ7oAsAnCDy\n+TrI/GXygoZjVHkwgX/aOG7XaDVexRggXmxau7FYDJ5lDj44mO/cuG2buyX1VMWX\nDHP397Fbr5DUPLaFxLktnlyQc9pRyNSuZ4dDvOp1bpkbkRZJZ1DsCiFRPZpC/nP1\naAmHZ1M8XJSLPADk4iVtukL4QXFXKqNb80+xnl244ZzRZ3AzXz7Avirm7ZZ4OPF1\n/Ae28GDO6WuyG4cRDAwDsZsbFJPvv+cjxqQZ80GQvDMIWXbQQwxjGawmdL3Wdx88\nIMDlA1o8m/0EEToIERe9FOXblGxepuQ7qBzb9af7LJxQjxM8WlP+tW5G03BDn+D4\ncDtX/cYolQ==\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "8bd4e4bea56c591e7bbdcd0c504b16b45e85430c",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAzzMtZfm3dKHPka4IpMkIhBFWcfsMFLuHukAdycFNhOsbY2JF\nmcimmm4nGRBBz4B328xiJPqlNiy5S5UIlkcUuYRdsZCveGXi0y0TewhO8WwK6p/C\n7UZzkzcONfn9dGMmKefX7SFkhAtevwdsVOQg90q67cmAq8MiIH7teM33BVRwfcvD\nbgc7wm0iJA1VGZiQ3Dld8UpIo1w9gZsVXwrewluxwF1+OB6B7N/U4iQkpypZygmI\nGhIFD5Pcl2fEHTKhKijxG5GMXS0KOfv7/NQbiC6sNL7ODLIOMIMmHXiDwvXpaWF3\nxgmoQ6q9LjzrTbATA0G1Liss9WfNSJmIyURwUwIDAQABAoIBAQCDwvu/uYlcdfnV\nnmKIx/7OXWgnm4oXNRoe6t8GihKN0CTekoPIQ70Ov7XFTn1LQ1r1P4e6FFozlUVQ\nNzn6tsELKI2ceXHcko4n1KZquuHYzOg0Q9xln0On/n7e/FadSN/gDjtV5MJS5hge\nSs4tPdVo7PDqfhWBJNny6ESDahcIH4FQ1TWpiaynZf5+/F1mLh5P6nRnijn9GuIA\nVe2kHD/dpzdYAWQb6Mq5BuWDEnwaQTlp1zXB8oktVNLikoxJwurI0JYK7eRbo+3t\nTmnMRleJstwpwcEu27hi4+lE2n4i4J4m9dzMr3Y2TNItFSUK8XokQtvK+gOgQBQV\nAm64ii+hAoGBAN/8jjLI6wbZuqqwLb3p0QpqLIA9ze6+CYyWj59QBWv2NMl9Unmn\n4mMR8WmIf1gFcufU8OnsgpCXjTWqmMqPmT+pFXpP0k149k0nVDHByEYahb0l1krx\n29EQb3E8p9qTEppuhJID9G6xm8JAuW1uxY6LBmHvN6x3KMvOG4KQuCqVAoGBAOzQ\nampY5YYbnZHvAM65kt4ZvTsnsCLpP7poO1yKvycCp6zUpK5Wajkia+jq+m6+SK7y\ndpo9VTQk5EbPGA3x2gXCdkTfIjIIHAud/hyTDo/rDZApxs7TzErYG7Dkn/4xS8zu\nTqkNqP+lpasJk8ser4RcVoyIdHslvrieysJ2Nt1HAoGAGVei4x4WcWz7EMrkMgOd\ncjc3F79maGe5/t0eHOFZ67Asost6JGeZVqo2DUGzXssnCBHwvBbVYvSytmq55NlA\ndpJz6qXTXo6cF3imrwaE2WGw1gjM6SfaPhpE8aPyPem8BhsRBtBJvKh9vgnCsR4C\nXjFepIADZZEJ3Z1RQYGMRM0CgYEAyhP++sjo80tVZlZApicNAKGOLJBtaR0I2JRh\nM1LiUvOdCYpbDLmI40BQPO1mzmFpvIACXRPBRUHF2faWXC/pD8klCxgtIexxoigr\n005Zus2lQUOk9pEdXzCSUJyHOm3udO1WCkQx1hUQDaeailWhCJ2S7VDztLI80WYP\nN2mQ37kCgYB2Lo48G3CuejiKzG6NZwHXP5i1NcWe5W3E+RoxTDV8+RVXmcb1j1DI\n/CPbDOqBIgVIoBnRJ9a6DqPkKD0zY/BVZrfj6QRTpO/hIRdDB/ECtf1OCKXl7UBF\nvRwN3uP56PSpVzCpTTV+hT+FyqkPXYoVez3QvSE7aF7SvJxurp6zPg==\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.dev.vpn.root-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICeDCCAWACAQAwMzELMAkGA1UEChMCd2cxJDAiBgNVBAMTG3dnLmRldi52cG4u\ndGVycmFmb3JtLWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nALKP/mdSxE00UJ+d2NNZcTAaC15gkff8NtjYg6limJMeOUmPADctPzl3dsz3KUhw\nSNJMxeYUUT1gjjO3JFM+Njko1eGyZqKV3ycvAyv7yabxDqJLowbK3fWo9HmejptF\nPmQOVwYLQPgLxhgJ2YCXL4PVcU4Egmi6B1NjUE8zRPW/qQq4AxhqKmNqpzWZFl5c\n5fDv2jdCA5xdSJcUej9m1iuiBtTWYQEWliOZRQKGY2FqPddpoiKo+vTwWfKKnNFl\nZs8CbBVgPSgh8NqhVsyqMTU1bIhd8kJdN24xeMVjPiSEDijUyIvWf9ptWJJiQFeD\nMia6BHhoqv/oA+tA2KURdacCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQAGLEr+\nikihvxY7jvMJa4J7tfc/V9SaEUdt493N7aIvHLhAB6Uy5a9c4DykX0Kyk65SHAYZ\n65mVirQGVqzcvI2BYTbnWoaa/84iLWfWozvQkCqbEEFLGw2tFOVMct4J21VaW/2x\nti7cEhTqqFPAXYJrLGa7YeeG4zZrpscIuFtJoiWrKfUWlT/fbKQbEN177uzo8VVJ\nwkREPciQrlh+pDiLAUgLVg4QhOh99vvzB4/x/oP/ZQog6M5ihnnm8QW0wavg5LgQ\nwL2raQ4d05mv41cfMpo1z5+3B5x76LpPuoLCmRtJoB/9znlFufARRtOLXHgzWSvA\n7l35yynVTnaIZ+oL\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "f50c5ff37334f61eeda4a834f5d396906bf6bd4a",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAso/+Z1LETTRQn53Y01lxMBoLXmCR9/w22NiDqWKYkx45SY8A\nNy0/OXd2zPcpSHBI0kzF5hRRPWCOM7ckUz42OSjV4bJmopXfJy8DK/vJpvEOokuj\nBsrd9aj0eZ6Om0U+ZA5XBgtA+AvGGAnZgJcvg9VxTgSCaLoHU2NQTzNE9b+pCrgD\nGGoqY2qnNZkWXlzl8O/aN0IDnF1IlxR6P2bWK6IG1NZhARaWI5lFAoZjYWo912mi\nIqj69PBZ8oqc0WVmzwJsFWA9KCHw2qFWzKoxNTVsiF3yQl03bjF4xWM+JIQOKNTI\ni9Z/2m1YkmJAV4MyJroEeGiq/+gD60DYpRF1pwIDAQABAoIBACzrqp2FpdqiSZIO\nHKj2vFHUi32fn7kaGxYsSdsH8cg490J5Fh3LZTdoxVtE5n7RuJAnPjXmcJWXP87k\nyN+kK/HvQvc3cTh/qZbq7cpX2mAEDqFnk8i2qmYNrgsWh1uqbMqxDNV5aUu9coVD\nnRMLdamdvZZZ7hC4k/U3a9Gw3S1RMU+jJr4sQdiXyckmjcVDPeHLXCoMAytg1wpr\nXJbAHU2qyID04ZPzTuFx2vPsxlxxJzJaIDVu+0mel7GiqDD5QBzsGa83jWif0Nkw\nUSHw+x4MUTaGd+MUEIHMAF1PTxiGy9XkhKne3L2mie551TYFaha+kpj5gFAcvvwo\nt6zioxECgYEA4jqq/kc3dmrMPOvVgZP8Ftuzu3ly/ZTSiTJHgnis3N1cQ/n8Riz1\noyPe+m3IWGYhw9OOCcRb2AvVtdFLX4049HSiWNTIEZ+6780npQslap6yJgpK7+X4\nEu1rs1ShC2ZNdiwcntf9oWliE2NSPZ/+t3ygQ1UzX43USSnRHUhQDYkCgYEAyg+B\nDI9wiGNcF4M5vu9JXD3pr5MXETf4xKdMVsFrsxAxUw/PVgWJ4srMh6NbnECe1Hw8\nkg45QAfVqeMR5uybmxwXdbDmev/N8X5/I7UYUOfKunQUXoXikE/ShEhgfl0rNN19\nAq0Zn8fWd9V9HGLKVczLRhMS3bQ9A+wQUZSWTa8CgYEAiNaFwWKgWJ9GxH692TAC\n5myj7X0LofjX1Ca2fGOz47B9c5yNDIF7Xt9+qymmaln0iHe5TY0ZJLgb32smVTid\nv7egz2x9S7O7JfuIxFrWmgQ9q6bEJxGKGSDE6WcCNlv99MG/2hC5mF2e9i04fI//\nSUs3wSKS/XRTeKGznCu2SEkCgYEAvFZjNO/mNlpWllvsUTn8qQvUa6CwmY4QREyj\n7SFwX4EyWHeeDFIxScE5jxwG4cehw/DhDEpRtosW7rkGELZt+8/dVgfDbNZOgVAk\n9YVw2siSv+Q+sDQfD+A3GrHTrzTsduQUB5CNF89O6neFnBXA/uRafEB/D0NWs/cu\n5ruWtWUCgYAxbsfnidbbveFen830sTfDk8IhgLu5VJJNlvAzrUTEo6tD5pFUFLfz\nXfImrl6ArL1TmzK4u0OJkExP9ZfCHFaQXEhAO0HE0G7m+3NMrtxcaTQWY7DrSEs2\n8N4K7WS+Bxg56SO4TM2Rc7C+tog5l+143ylIlbJectNAN+LQXfhmOg==\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.dev.vpn.terraform-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_cert_request",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICbjCCAVYCAQAwKTELMAkGA1UEChMCd2cxGjAYBgNVBAMTEXdnLmRldi52cG4u\nc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArGUfwpJjEKe5\npYjnWjVIiG0qWWwIvW3ijbN/Kf6mtoTLpu4sUqtKuKaE0MUFL7HdkhvPUiEUHAFD\ncyzWTkmvpahs/fNy+vWvwt0g8IHc+tWkevl9ODQt29cGHfMqjJIa48iCfr33dPaY\nM1Xwbl2ZtSYfXK4/L8SKSGo0E6E+jAuEEzG0xeMazA9I2HNQf/EtV9Yk+dEOeaFY\ntkAyI45cwizuznSh0EDWNLCKXaAbwjmOAYvP4AC0MrzwC1P0l67UXBUX4CJXCZvk\nkyNptjWJYO1wIba4buOouVM/7aRl9+hSaXt/Q1IrAHRfUSQhQjsxvtduiE4p9hfk\nkAIpaFNE5wIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAJzY0Tcqk88B0KqBxlB8\nw5WZsJ/SISsdOfKIU8gR+sxd9AbikIAJA++DOMFQfZNHYzY0q8XhihHEvDTqPYu/\nNYfAr76fqbv6vYV+c0VANu48cCNUTBni/mI1QWNpJTQzkQLGf6YnUaqIJFmbP7bl\nt5b1hW58745wOle/QrS3B3KIO/dJQ9RiyuYJlFPKRliT5pxwGdewDbcNDLQOS7vS\nfTi9TO7WZ1Eb6ONUetr1w++IfIQz057XpSEXY9Yb/s2dLOUg980nw4Gai1V6KFxE\nNlMGr+FtK7lfqX2wHKcDGJfPHhERuRrNsW5efmnjfabv99OkDCIpfBqkswuBh8X6\n3w4=\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "cbfebdd17cbbcc1ddf11ab349025834ba7d5b135",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArGUfwpJjEKe5pYjnWjVIiG0qWWwIvW3ijbN/Kf6mtoTLpu4s\nUqtKuKaE0MUFL7HdkhvPUiEUHAFDcyzWTkmvpahs/fNy+vWvwt0g8IHc+tWkevl9\nODQt29cGHfMqjJIa48iCfr33dPaYM1Xwbl2ZtSYfXK4/L8SKSGo0E6E+jAuEEzG0\nxeMazA9I2HNQf/EtV9Yk+dEOeaFYtkAyI45cwizuznSh0EDWNLCKXaAbwjmOAYvP\n4AC0MrzwC1P0l67UXBUX4CJXCZvkkyNptjWJYO1wIba4buOouVM/7aRl9+hSaXt/\nQ1IrAHRfUSQhQjsxvtduiE4p9hfkkAIpaFNE5wIDAQABAoIBAAGH7F5H+oU9WBK2\nQoe0jW5YudWNdg5omWh0vZ5b2pMoXr6ewtoBF2rIX8mS1lb0F2miwZaTIKCXCkhN\nj6GmWd74ve8LaGv+Ho92c0JvhMzddNZ6vLfxDq8zG6TMcgZJjd+T+kSx3y60uelK\nzBXO0vye2Ax0p67+6dN2zfuWpP2NYOH5sYwRNpJS9seRYN6uLyJiCe7Rly3zQnBN\nXOkwSEVnNuZP3Qmdhotq2bhelcP8oqURt9nPmcDnC/U4l2PZxa9x4RFsqd4rk6sb\n29S8N3EYqRBmN0dN+IoPg3ePFV/rDkRrxGtv4iK7kLmnl+asSVtVwY3Nl+lPTC4S\nI59h9SECgYEAwF2XHm6HcvWR/HmUBN17Zybk4XSt2I31JA2mS1e1QAOAHIrojaf0\ndKw4ELpMweB6xFlJBjLwZygzD8sggLCEX9bSuEOzIZw4G8nB58t4m3M7XKVP8OYe\nHrz6UiFizQfXYhAJSDJjcIY5Q8RZklFu9s+lF/6HrMB1/15j0R51SSkCgYEA5WxV\nTIyv1AcUICaAF7R4fq8bWgQHD2oo9KGmkFczFPc0KnHWQwMaKpNLG9m7+p61tm7r\nSlKxe3H+gD4zLxcKHANAY2+vvWr+r9pNvXocvdiJichf4iMNvsFh7xXpNtkBBbFn\nSePu6pdksXJCZXnzzgPSDpg529KSSOFsVdwWD48CgYAI/lcqXRCIF2MT4rtA3vn+\nAJuCzumxzjE/1kOIEjmvHHrI2tW0ib2sFsEoRw1/ovcaZvI7D/adXAvHGUATxCzs\nLib75m5hi+QzqGMgayrgWarU0gXCxX9zAHLTlCwCWfN/6jAE6BYuFJhoyq1FYflG\nIL8fOA8vzG+32Lnh9QKWwQKBgFMc4fHvbatEPThAelscGCLc0O3VU7Fz5g5pmWvl\nCy5nN9DAmLyCHTKbVbRrNrxeTroeiMLOHln4PBi9b9F5aUIos2TSizn1zvpp/YvM\n9yiXj4wIuSO1Sz9100LID0q9Zq9nS2HrXxxBaEsYd5FHktlpbOm4oA1QxYn9kD+y\nkZNlAoGAV65w4OKEZ7u0aROnAonJXacN4KGbZ8sFJa6g7/O9If268hc6gERLnX4h\nfhQ9foHvhHVj59NWaaZ2g1v/PstMT2HH6hG5QosnNn4c/UpR+xrZHA0BrdqBg2kt\nvPr2FJxIEvMiSH/63yWa42ajey8zkHB9C4hRDAskjL23u12yXrE=\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.dev.vpn.server",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.server"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_locally_signed_cert",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAnNSaUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11\nLu7cXpyLbnteyC7AuQG4EaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stB\njcK7Y3whaDJ8SEsGCy40Qv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaa\nUCoNqU8idpsR2QeyP1bqKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuY\nU4VfOLZBu54wX4H9c3F1urfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f\n/r7kxYp3g6Ds+RxN931fr0QaiqXyi6CGQ4n06wIDAQABAoIBABxcpnukU/MSnBqs\nlGwL21AgvBrLmyb6YDoUrAE4qR14LdewLd0K/XduwBh+3yk8q0XJ9cvbIvaNoPea\nl8GGP5GL1/Oqfr8A83AHROXvKL7FDiEhSP2mFdVsAW6ikq9QQguLk4/6URlIPkSL\nug9BdmegL/S357+7PM/7T53a09AtSaATYxf5hhpGcW1piJQ2zzJC5fMk7F/lYyl6\nN+B8/YwYbpE5JxOS4R6Xd5DMSDRrdNf3V/YV/EjQJcQ4a0htbK96QkTx+ROcIJxX\nKyyA0cmSDdzCkgXYrTFBzaMAIk9cHM4MvFU0/GPrz0nOTndynX7CFSfvHx+xsayW\nZw3wbwECgYEA0JxTQTRI1T8Z/3KqevPr508LRc9o8hG5h6qGRHtHQl5jQmpbNBeH\nJ63NTQO7hYQJAqfBTFWNqBzgC3QXLfN/UcsDSeAQZrjdGendl0PRHJ4C1U1ZaZUc\nv8I5hKoYeNAv8Jsn75ybthGXZXxwAEhPbUAW+Q8pcjVZgfB/Ix4wliECgYEAwHUF\nbyeHwKuZietsyb8FFSHX3OfX0h6xsVEiAeMdUkf0Qf4W2iB3TT8h6Re3wqGBzY6A\nzMgvek9SOaQZjYGCK9q8wa/hr5P/e3pXWsfQxZychXOmfIn+KGuPIXFam5snlRGB\n0tYOaYVgS7UqAbvsIkN2NreDIlqjPcEO0bqoUYsCgYEAo9s2VdAQqVdgP1K878iq\nckyXCSWKRCGB/jsGLcI7Tbk/9AoAS2FzqsoMqUKWR6BXR3unDCNjGjpcDQMJtfE9\n/2wb0CosF9N68ADPKiJ9nSHMDeksow8ZvtF7RmYoxLSaAz6L1tzHPfKBXZipjL8/\njAu8P7MWFfwrqzHRWy86cKECgYEAl7kpiZGucfRWXOaeowXWqew+U0brXBkamOGP\nX9F+gil7pLL9rQS/SMSmpS4vjl7pB/Z6D/cZhuEVv59hDa+1wYD2IfPYhiS02tF+\nIHE6Yy+uLX8ZF0Fqfs8czY6hkd7le52LrX1Xa1Tcr5KpBSjzZaetgEF4PhMackrK\ntgjjPTUCgYBkFxJ+sTBvBSbHS3mvAiLQqbd02L538PlMO4A74Wun3GSw3S9Vcpdj\nZmmV7nZEa3+QE9Ya506zuWAYRGZdpj5IWHXtIeaSv+ftl7p7A8J2BAK1jFspVflC\nkV+0jtXzcIJTqpmE3f993FeJZvYfmeQFW6TY5Jn0hBwkTeFfqPfPPw==\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDOzCCAiOgAwIBAgIQAIqg+2lYz5jL+3893gCrhjANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjNaFw0zNDExMTEyMDEyMjNaMDYxCzAJBgNVBAoTAndnMScwJQYDVQQDEx53\nZy5kZXYudnBuLmRhbmllbC5nb21lei1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUA\nA4IBDwAwggEKAoIBAQDNiS5lwKJcuKIAG6ogoN2vbFPcbfajtCRFH7XKAZ5qwL74\nQIEyuKV7UXRUfU6IFbronz2b15/xYwwNyb3N3HyCBqaQD3bqDs70BycrJgf+s2L0\nxktpgHhVIPShVcB8fPiyha35T199WVo4LcdgQQx3YzOsfahNOMQvkOjWMTR/7CfW\nt9v3mOxDr0X0WlHJajtMf/8Y9GzWTj/AsFjGT13S5M+oXxtpOH6sZwersh2pVoG9\nV6QePac/lNDYrdzozrjokXYM0Xi+POjzTJ1SK/GGT459pC0o+q3HL2o/9mot3wZm\n8rH9+CBw+IthjMKHmFpWCNwcdZe+kgIz3bFuUXp7AgMBAAGjVjBUMA4GA1UdDwEB\n/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1Ud\nIwQYMBaAFD9lm7J3xIJ+CGpl3lTD9jtzBt1dMA0GCSqGSIb3DQEBCwUAA4IBAQCR\nYmP0SZKSO4fj5o4ig1Gzf74bZoqW0v5qRdldjyVT4PXNCZ3LfpXcvpvVbxUyPsfZ\nGBYKw5cksmEH+KS61v+Eer6un61if5L6tC2jdsOSTeqKbwuNS5M2gGZkNoUXEy7f\no2F7zrVXDqPy/pPPEtxriDfz1yEex/1lhopYuYq554LG6SMxI7CuulP7Abmb4Yav\nnwTad3MNisbu+vBBWzFl7e9BODqWZbwTVxyYUtAsU0JEhvBfSMlvLgCyLFV0iUXL\nFM+dub96aGxlRzc819Hcki1csVCINmTETD+qhh887rEST6P4s96cv0i/GNApdYi7\nXgENGbkVGRqS1PxZ805T\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICezCCAWMCAQAwNjELMAkGA1UEChMCd2cxJzAlBgNVBAMTHndnLmRldi52cG4u\nZGFuaWVsLmdvbWV6LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAM2JLmXAoly4ogAbqiCg3a9sU9xt9qO0JEUftcoBnmrAvvhAgTK4pXtRdFR9\nTogVuuifPZvXn/FjDA3Jvc3cfIIGppAPduoOzvQHJysmB/6zYvTGS2mAeFUg9KFV\nwHx8+LKFrflPX31ZWjgtx2BBDHdjM6x9qE04xC+Q6NYxNH/sJ9a32/eY7EOvRfRa\nUclqO0x//xj0bNZOP8CwWMZPXdLkz6hfG2k4fqxnB6uyHalWgb1XpB49pz+U0Nit\n3OjOuOiRdgzReL486PNMnVIr8YZPjn2kLSj6rccvaj/2ai3fBmbysf34IHD4i2GM\nwoeYWlYI3Bx1l76SAjPdsW5RensCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQC2\nCE7rD+lzmXFcRjcYFk7gQtRcEjNCkmWo5VUYh0YS13V/QAzH1Fez1RhGBMkue9gF\n42IslBxua826JyIAYY53yLA4eirb0jozZ07fsoQGSPkq2hRAlIlzEGzrTTKM8gqS\nbSmj8OMapkAy1Cel0WC2/kbpFE++KgjCbjZ50Ush78L3kcB4OmM4y3W2cdYZ5vN0\nalMa4o4Jfhp61gi/sjk0NEd5elI9jt0DJTFQLjFTctTZ1i6+x8mKOW280S73njxl\nkUO+cNyOZv/Jun0rhkucHah2nzJjwlWpgFG6JmbIAvxkLz2UYSZHJ6bGdsErvtxT\nwAbjnQl3o+HCMKMV5QXA\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "719802070886473412186630549604969350",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T15:12:23.044244-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T15:12:23.044244-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAnNSaUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11\nLu7cXpyLbnteyC7AuQG4EaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stB\njcK7Y3whaDJ8SEsGCy40Qv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaa\nUCoNqU8idpsR2QeyP1bqKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuY\nU4VfOLZBu54wX4H9c3F1urfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f\n/r7kxYp3g6Ds+RxN931fr0QaiqXyi6CGQ4n06wIDAQABAoIBABxcpnukU/MSnBqs\nlGwL21AgvBrLmyb6YDoUrAE4qR14LdewLd0K/XduwBh+3yk8q0XJ9cvbIvaNoPea\nl8GGP5GL1/Oqfr8A83AHROXvKL7FDiEhSP2mFdVsAW6ikq9QQguLk4/6URlIPkSL\nug9BdmegL/S357+7PM/7T53a09AtSaATYxf5hhpGcW1piJQ2zzJC5fMk7F/lYyl6\nN+B8/YwYbpE5JxOS4R6Xd5DMSDRrdNf3V/YV/EjQJcQ4a0htbK96QkTx+ROcIJxX\nKyyA0cmSDdzCkgXYrTFBzaMAIk9cHM4MvFU0/GPrz0nOTndynX7CFSfvHx+xsayW\nZw3wbwECgYEA0JxTQTRI1T8Z/3KqevPr508LRc9o8hG5h6qGRHtHQl5jQmpbNBeH\nJ63NTQO7hYQJAqfBTFWNqBzgC3QXLfN/UcsDSeAQZrjdGendl0PRHJ4C1U1ZaZUc\nv8I5hKoYeNAv8Jsn75ybthGXZXxwAEhPbUAW+Q8pcjVZgfB/Ix4wliECgYEAwHUF\nbyeHwKuZietsyb8FFSHX3OfX0h6xsVEiAeMdUkf0Qf4W2iB3TT8h6Re3wqGBzY6A\nzMgvek9SOaQZjYGCK9q8wa/hr5P/e3pXWsfQxZychXOmfIn+KGuPIXFam5snlRGB\n0tYOaYVgS7UqAbvsIkN2NreDIlqjPcEO0bqoUYsCgYEAo9s2VdAQqVdgP1K878iq\nckyXCSWKRCGB/jsGLcI7Tbk/9AoAS2FzqsoMqUKWR6BXR3unDCNjGjpcDQMJtfE9\n/2wb0CosF9N68ADPKiJ9nSHMDeksow8ZvtF7RmYoxLSaAz6L1tzHPfKBXZipjL8/\njAu8P7MWFfwrqzHRWy86cKECgYEAl7kpiZGucfRWXOaeowXWqew+U0brXBkamOGP\nX9F+gil7pLL9rQS/SMSmpS4vjl7pB/Z6D/cZhuEVv59hDa+1wYD2IfPYhiS02tF+\nIHE6Yy+uLX8ZF0Fqfs8czY6hkd7le52LrX1Xa1Tcr5KpBSjzZaetgEF4PhMackrK\ntgjjPTUCgYBkFxJ+sTBvBSbHS3mvAiLQqbd02L538PlMO4A74Wun3GSw3S9Vcpdj\nZmmV7nZEa3+QE9Ya506zuWAYRGZdpj5IWHXtIeaSv+ftl7p7A8J2BAK1jFspVflC\nkV+0jtXzcIJTqpmE3f993FeJZvYfmeQFW6TY5Jn0hBwkTeFfqPfPPw==\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDMzCCAhugAwIBAgIQZQcnlnNxoL09Qpmwnbk84TANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjJaFw0zNDExMTEyMDEyMjJaMC4xCzAJBgNVBAoTAndnMR8wHQYDVQQDExZ3\nZy5kZXYudnBuLnJvb3QtY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAzzMtZfm3dKHPka4IpMkIhBFWcfsMFLuHukAdycFNhOsbY2JFmcimmm4n\nGRBBz4B328xiJPqlNiy5S5UIlkcUuYRdsZCveGXi0y0TewhO8WwK6p/C7UZzkzcO\nNfn9dGMmKefX7SFkhAtevwdsVOQg90q67cmAq8MiIH7teM33BVRwfcvDbgc7wm0i\nJA1VGZiQ3Dld8UpIo1w9gZsVXwrewluxwF1+OB6B7N/U4iQkpypZygmIGhIFD5Pc\nl2fEHTKhKijxG5GMXS0KOfv7/NQbiC6sNL7ODLIOMIMmHXiDwvXpaWF3xgmoQ6q9\nLjzrTbATA0G1Liss9WfNSJmIyURwUwIDAQABo1YwVDAOBgNVHQ8BAf8EBAMCBaAw\nEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQ/\nZZuyd8SCfghqZd5Uw/Y7cwbdXTANBgkqhkiG9w0BAQsFAAOCAQEAhK6lqVmtmbb2\noUgaRPOxgoSkerraga3VGfMbhfdeaH89NQMylWMvGArNCiuEKkZJDIt7pCcoiGLl\nllnKMeYvdGajM1eDjxiIY/ncQTsRuUhKSerUPfMtXCaodYNtVRYXVypabwtwu2YS\nKqIaP8id7aylxUrZyTzn5W+nuAuoluW6FaBVgaOj1QMuJ4tsQPqBvjf3BuB3yEPp\nJDGQHhSH5OvyFijbcphsBCvyCo4M7D5pM4GPTRJYFFZPCnn4dCNvYUC2Usa9f5AD\n/cwyRqFJTqny2xretSl6FS+lpwWI8lvzL/uhbf0V0s/LXEDVgcJmTQTO3N2tfgyF\nUn7xtrLGUg==\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICczCCAVsCAQAwLjELMAkGA1UEChMCd2cxHzAdBgNVBAMTFndnLmRldi52cG4u\ncm9vdC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDPMy1l\n+bd0oc+RrgikyQiEEVZx+wwUu4e6QB3JwU2E6xtjYkWZyKaabicZEEHPgHfbzGIk\n+qU2LLlLlQiWRxS5hF2xkK94ZeLTLRN7CE7xbArqn8LtRnOTNw41+f10YyYp59ft\nIWSEC16/B2xU5CD3SrrtyYCrwyIgfu14zfcFVHB9y8NuBzvCbSIkDVUZmJDcOV3x\nSkijXD2BmxVfCt7CW7HAXX44HoHs39TiJCSnKlnKCYgaEgUPk9yXZ8QdMqEqKPEb\nkYxdLQo5+/v81BuILqw0vs4Msg4wgyYdeIPC9elpYXfGCahDqr0uPOtNsBMDQbUu\nKyz1Z81ImYjJRHBTAgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEAtYZ7oAsAnCDy\n+TrI/GXygoZjVHkwgX/aOG7XaDVexRggXmxau7FYDJ5lDj44mO/cuG2buyX1VMWX\nDHP397Fbr5DUPLaFxLktnlyQc9pRyNSuZ4dDvOp1bpkbkRZJZ1DsCiFRPZpC/nP1\naAmHZ1M8XJSLPADk4iVtukL4QXFXKqNb80+xnl244ZzRZ3AzXz7Avirm7ZZ4OPF1\n/Ae28GDO6WuyG4cRDAwDsZsbFJPvv+cjxqQZ80GQvDMIWXbQQwxjGawmdL3Wdx88\nIMDlA1o8m/0EEToIERe9FOXblGxepuQ7qBzb9af7LJxQjxM8WlP+tW5G03BDn+D4\ncDtX/cYolQ==\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "134289176586213310328038684180059077857",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T15:12:22.746859-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T15:12:22.746859-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAnNSaUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11\nLu7cXpyLbnteyC7AuQG4EaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stB\njcK7Y3whaDJ8SEsGCy40Qv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaa\nUCoNqU8idpsR2QeyP1bqKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuY\nU4VfOLZBu54wX4H9c3F1urfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f\n/r7kxYp3g6Ds+RxN931fr0QaiqXyi6CGQ4n06wIDAQABAoIBABxcpnukU/MSnBqs\nlGwL21AgvBrLmyb6YDoUrAE4qR14LdewLd0K/XduwBh+3yk8q0XJ9cvbIvaNoPea\nl8GGP5GL1/Oqfr8A83AHROXvKL7FDiEhSP2mFdVsAW6ikq9QQguLk4/6URlIPkSL\nug9BdmegL/S357+7PM/7T53a09AtSaATYxf5hhpGcW1piJQ2zzJC5fMk7F/lYyl6\nN+B8/YwYbpE5JxOS4R6Xd5DMSDRrdNf3V/YV/EjQJcQ4a0htbK96QkTx+ROcIJxX\nKyyA0cmSDdzCkgXYrTFBzaMAIk9cHM4MvFU0/GPrz0nOTndynX7CFSfvHx+xsayW\nZw3wbwECgYEA0JxTQTRI1T8Z/3KqevPr508LRc9o8hG5h6qGRHtHQl5jQmpbNBeH\nJ63NTQO7hYQJAqfBTFWNqBzgC3QXLfN/UcsDSeAQZrjdGendl0PRHJ4C1U1ZaZUc\nv8I5hKoYeNAv8Jsn75ybthGXZXxwAEhPbUAW+Q8pcjVZgfB/Ix4wliECgYEAwHUF\nbyeHwKuZietsyb8FFSHX3OfX0h6xsVEiAeMdUkf0Qf4W2iB3TT8h6Re3wqGBzY6A\nzMgvek9SOaQZjYGCK9q8wa/hr5P/e3pXWsfQxZychXOmfIn+KGuPIXFam5snlRGB\n0tYOaYVgS7UqAbvsIkN2NreDIlqjPcEO0bqoUYsCgYEAo9s2VdAQqVdgP1K878iq\nckyXCSWKRCGB/jsGLcI7Tbk/9AoAS2FzqsoMqUKWR6BXR3unDCNjGjpcDQMJtfE9\n/2wb0CosF9N68ADPKiJ9nSHMDeksow8ZvtF7RmYoxLSaAz6L1tzHPfKBXZipjL8/\njAu8P7MWFfwrqzHRWy86cKECgYEAl7kpiZGucfRWXOaeowXWqew+U0brXBkamOGP\nX9F+gil7pLL9rQS/SMSmpS4vjl7pB/Z6D/cZhuEVv59hDa+1wYD2IfPYhiS02tF+\nIHE6Yy+uLX8ZF0Fqfs8czY6hkd7le52LrX1Xa1Tcr5KpBSjzZaetgEF4PhMackrK\ntgjjPTUCgYBkFxJ+sTBvBSbHS3mvAiLQqbd02L538PlMO4A74Wun3GSw3S9Vcpdj\nZmmV7nZEa3+QE9Ya506zuWAYRGZdpj5IWHXtIeaSv+ftl7p7A8J2BAK1jFspVflC\nkV+0jtXzcIJTqpmE3f993FeJZvYfmeQFW6TY5Jn0hBwkTeFfqPfPPw==\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDODCCAiCgAwIBAgIQOYRVxL2Pv7bXr3+NH+5CMDANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjNaFw0zNDExMTEyMDEyMjNaMDMxCzAJBgNVBAoTAndnMSQwIgYDVQQDExt3\nZy5kZXYudnBuLnRlcnJhZm9ybS1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IB\nDwAwggEKAoIBAQCyj/5nUsRNNFCfndjTWXEwGgteYJH3/DbY2IOpYpiTHjlJjwA3\nLT85d3bM9ylIcEjSTMXmFFE9YI4ztyRTPjY5KNXhsmaild8nLwMr+8mm8Q6iS6MG\nyt31qPR5no6bRT5kDlcGC0D4C8YYCdmAly+D1XFOBIJougdTY1BPM0T1v6kKuAMY\naipjaqc1mRZeXOXw79o3QgOcXUiXFHo/ZtYrogbU1mEBFpYjmUUChmNhaj3XaaIi\nqPr08FnyipzRZWbPAmwVYD0oIfDaoVbMqjE1NWyIXfJCXTduMXjFYz4khA4o1MiL\n1n/abViSYkBXgzImugR4aKr/6APrQNilEXWnAgMBAAGjVjBUMA4GA1UdDwEB/wQE\nAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQY\nMBaAFD9lm7J3xIJ+CGpl3lTD9jtzBt1dMA0GCSqGSIb3DQEBCwUAA4IBAQA3ZOhH\nWP2jc83nZYMEkTagXawB2B99IE0tqC4UBpR4Kz0UT7iNzeX2PNzTvpepMYq36A9p\nT1WdqIuM55TUI74f1n34yoSiJLywGzPkdeA6sTeFoOQbe4RT3IMG3BW0N7aW6V1N\nIGI6Tm2pFWGTXOaFFO1F7wxwtChsNsvvRFqzJCq5W3R6o6w0eerIbAFpdXoAb2Mr\n4Y7F9+P1T0++aDzDHyRiftY8pahJd/TUOtI55lfnBS6+Ogz22+0OC94KB9+PT+za\nbuKdTFGGi5OkQuOhAuidqCiBVkd7tm2XVNZqQf/oaVIkHYy1BeokuHrqtWPEIZMe\n0qy9tKcHPCahjrA3\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICeDCCAWACAQAwMzELMAkGA1UEChMCd2cxJDAiBgNVBAMTG3dnLmRldi52cG4u\ndGVycmFmb3JtLWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nALKP/mdSxE00UJ+d2NNZcTAaC15gkff8NtjYg6limJMeOUmPADctPzl3dsz3KUhw\nSNJMxeYUUT1gjjO3JFM+Njko1eGyZqKV3ycvAyv7yabxDqJLowbK3fWo9HmejptF\nPmQOVwYLQPgLxhgJ2YCXL4PVcU4Egmi6B1NjUE8zRPW/qQq4AxhqKmNqpzWZFl5c\n5fDv2jdCA5xdSJcUej9m1iuiBtTWYQEWliOZRQKGY2FqPddpoiKo+vTwWfKKnNFl\nZs8CbBVgPSgh8NqhVsyqMTU1bIhd8kJdN24xeMVjPiSEDijUyIvWf9ptWJJiQFeD\nMia6BHhoqv/oA+tA2KURdacCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQAGLEr+\nikihvxY7jvMJa4J7tfc/V9SaEUdt493N7aIvHLhAB6Uy5a9c4DykX0Kyk65SHAYZ\n65mVirQGVqzcvI2BYTbnWoaa/84iLWfWozvQkCqbEEFLGw2tFOVMct4J21VaW/2x\nti7cEhTqqFPAXYJrLGa7YeeG4zZrpscIuFtJoiWrKfUWlT/fbKQbEN177uzo8VVJ\nwkREPciQrlh+pDiLAUgLVg4QhOh99vvzB4/x/oP/ZQog6M5ihnnm8QW0wavg5LgQ\nwL2raQ4d05mv41cfMpo1z5+3B5x76LpPuoLCmRtJoB/9znlFufARRtOLXHgzWSvA\n7l35yynVTnaIZ+oL\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "76453118537269413783565772363932779056",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T15:12:23.045707-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T15:12:23.045707-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_locally_signed_cert",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "server_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAnNSaUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11\nLu7cXpyLbnteyC7AuQG4EaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stB\njcK7Y3whaDJ8SEsGCy40Qv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaa\nUCoNqU8idpsR2QeyP1bqKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuY\nU4VfOLZBu54wX4H9c3F1urfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f\n/r7kxYp3g6Ds+RxN931fr0QaiqXyi6CGQ4n06wIDAQABAoIBABxcpnukU/MSnBqs\nlGwL21AgvBrLmyb6YDoUrAE4qR14LdewLd0K/XduwBh+3yk8q0XJ9cvbIvaNoPea\nl8GGP5GL1/Oqfr8A83AHROXvKL7FDiEhSP2mFdVsAW6ikq9QQguLk4/6URlIPkSL\nug9BdmegL/S357+7PM/7T53a09AtSaATYxf5hhpGcW1piJQ2zzJC5fMk7F/lYyl6\nN+B8/YwYbpE5JxOS4R6Xd5DMSDRrdNf3V/YV/EjQJcQ4a0htbK96QkTx+ROcIJxX\nKyyA0cmSDdzCkgXYrTFBzaMAIk9cHM4MvFU0/GPrz0nOTndynX7CFSfvHx+xsayW\nZw3wbwECgYEA0JxTQTRI1T8Z/3KqevPr508LRc9o8hG5h6qGRHtHQl5jQmpbNBeH\nJ63NTQO7hYQJAqfBTFWNqBzgC3QXLfN/UcsDSeAQZrjdGendl0PRHJ4C1U1ZaZUc\nv8I5hKoYeNAv8Jsn75ybthGXZXxwAEhPbUAW+Q8pcjVZgfB/Ix4wliECgYEAwHUF\nbyeHwKuZietsyb8FFSHX3OfX0h6xsVEiAeMdUkf0Qf4W2iB3TT8h6Re3wqGBzY6A\nzMgvek9SOaQZjYGCK9q8wa/hr5P/e3pXWsfQxZychXOmfIn+KGuPIXFam5snlRGB\n0tYOaYVgS7UqAbvsIkN2NreDIlqjPcEO0bqoUYsCgYEAo9s2VdAQqVdgP1K878iq\nckyXCSWKRCGB/jsGLcI7Tbk/9AoAS2FzqsoMqUKWR6BXR3unDCNjGjpcDQMJtfE9\n/2wb0CosF9N68ADPKiJ9nSHMDeksow8ZvtF7RmYoxLSaAz6L1tzHPfKBXZipjL8/\njAu8P7MWFfwrqzHRWy86cKECgYEAl7kpiZGucfRWXOaeowXWqew+U0brXBkamOGP\nX9F+gil7pLL9rQS/SMSmpS4vjl7pB/Z6D/cZhuEVv59hDa+1wYD2IfPYhiS02tF+\nIHE6Yy+uLX8ZF0Fqfs8czY6hkd7le52LrX1Xa1Tcr5KpBSjzZaetgEF4PhMackrK\ntgjjPTUCgYBkFxJ+sTBvBSbHS3mvAiLQqbd02L538PlMO4A74Wun3GSw3S9Vcpdj\nZmmV7nZEa3+QE9Ya506zuWAYRGZdpj5IWHXtIeaSv+ftl7p7A8J2BAK1jFspVflC\nkV+0jtXzcIJTqpmE3f993FeJZvYfmeQFW6TY5Jn0hBwkTeFfqPfPPw==\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDLjCCAhagAwIBAgIQRDq0j0Ta69XQ+MM62ML+GjANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjNaFw0zNDExMTEyMDEyMjNaMCkxCzAJBgNVBAoTAndnMRowGAYDVQQDExF3\nZy5kZXYudnBuLnNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAKxlH8KSYxCnuaWI51o1SIhtKllsCL1t4o2zfyn+praEy6buLFKrSrimhNDFBS+x\n3ZIbz1IhFBwBQ3Ms1k5Jr6WobP3zcvr1r8LdIPCB3PrVpHr5fTg0LdvXBh3zKoyS\nGuPIgn6993T2mDNV8G5dmbUmH1yuPy/EikhqNBOhPowLhBMxtMXjGswPSNhzUH/x\nLVfWJPnRDnmhWLZAMiOOXMIs7s50odBA1jSwil2gG8I5jgGLz+AAtDK88AtT9Jeu\n1FwVF+AiVwmb5JMjabY1iWDtcCG2uG7jqLlTP+2kZffoUml7f0NSKwB0X1EkIUI7\nMb7XbohOKfYX5JACKWhTROcCAwEAAaNWMFQwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUP2WbsnfE\ngn4IamXeVMP2O3MG3V0wDQYJKoZIhvcNAQELBQADggEBAHbVdS1LqCaqulCcmFvn\niY45bZG/LxhuwxCZ09SqC7mBx5y3EVVrpEXQ32esYJ3Y+gPq85NzrDWzHh4mbrNd\nyAqgf3kiFvMzp7qJxTEuIZSnRlAWb59Rt9icsfoomC9d7StyDLjD+WeBRLTuHeOa\nnz/NGtRLyWq+tPXTql3tK9yO4ORlacCk1riWL/zNz23ULYAtnpg7KXydCb76sDb8\n9+n2DMdVY+kVVWjenHO3cugcZca6Xi/tKspaJIQGsr2XksRkAYOtwoTCRWKYOq2o\ncsSZJxMXoCwBEEotrop6vqGBQRS+StAc6lCOuuMkAaW/yx3poXLFhBn+23IYzVuC\neeU=\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICbjCCAVYCAQAwKTELMAkGA1UEChMCd2cxGjAYBgNVBAMTEXdnLmRldi52cG4u\nc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArGUfwpJjEKe5\npYjnWjVIiG0qWWwIvW3ijbN/Kf6mtoTLpu4sUqtKuKaE0MUFL7HdkhvPUiEUHAFD\ncyzWTkmvpahs/fNy+vWvwt0g8IHc+tWkevl9ODQt29cGHfMqjJIa48iCfr33dPaY\nM1Xwbl2ZtSYfXK4/L8SKSGo0E6E+jAuEEzG0xeMazA9I2HNQf/EtV9Yk+dEOeaFY\ntkAyI45cwizuznSh0EDWNLCKXaAbwjmOAYvP4AC0MrzwC1P0l67UXBUX4CJXCZvk\nkyNptjWJYO1wIba4buOouVM/7aRl9+hSaXt/Q1IrAHRfUSQhQjsxvtduiE4p9hfk\nkAIpaFNE5wIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAJzY0Tcqk88B0KqBxlB8\nw5WZsJ/SISsdOfKIU8gR+sxd9AbikIAJA++DOMFQfZNHYzY0q8XhihHEvDTqPYu/\nNYfAr76fqbv6vYV+c0VANu48cCNUTBni/mI1QWNpJTQzkQLGf6YnUaqIJFmbP7bl\nt5b1hW58745wOle/QrS3B3KIO/dJQ9RiyuYJlFPKRliT5pxwGdewDbcNDLQOS7vS\nfTi9TO7WZ1Eb6ONUetr1w++IfIQz057XpSEXY9Yb/s2dLOUg980nw4Gai1V6KFxE\nNlMGr+FtK7lfqX2wHKcDGJfPHhERuRrNsW5efmnjfabv99OkDCIpfBqkswuBh8X6\n3w4=\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "90692319115834836397255651179930779162",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T15:12:23.221857-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T15:12:23.221857-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "3037eca063a175f9a8a4234a76006a5c02a3ce07",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAnNSaUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko\n/8TNR+11Lu7cXpyLbnteyC7AuQG4EaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZ\nYM5A7stBjcK7Y3whaDJ8SEsGCy40Qv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9R\nXcXRSqaaUCoNqU8idpsR2QeyP1bqKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6\n/Gi2ifuYU4VfOLZBu54wX4H9c3F1urfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB\n60O9iO1f/r7kxYp3g6Ds+RxN931fr0QaiqXyi6CGQ4n06wAAA7jRVqes0VanrAAA\nAAdzc2gtcnNhAAABAQCc1JpQlaJUo8tpKYnR3nagGSWo51T8Z30dkV43OSj/xM1H\n7XUu7txenItue17ILsC5AbgRpUFww2yLLd0vC1eEhfNgCsP8MSCX8qDQe1lgzkDu\ny0GNwrtjfCFoMnxISwYLLjRC/+/VsYpBXFSQBET4R7O6tH9YGuG+Vuicb1FdxdFK\npppQKg2pTyJ2mxHZB7I/VuorLQ6Yp2wbTyP0OjPoDDwgunbdDuMzy1DliLr8aLaJ\n+5hThV84tkG7njBfgf1zcXW6t+XdWL5ayNmWY42cE7i69gXs4RXW2ENe4QHrQ72I\n7V/+vuTFineDoOz5HE33fV+vRBqKpfKLoIZDifTrAAAAAwEAAQAAAQAcXKZ7pFPz\nEpwarJRsC9tQILway5sm+mA6FKwBOKkdeC3XsC3dCv13bsAYft8pPKtFyfXL2yL2\njaD3mpfBhj+Ri9fzqn6/APNwB0Tl7yi+xQ4hIUj9phXVbAFuopKvUEILi5OP+lEZ\nSD5Ei7oPQXZnoC/0t+e/uzzP+0+d2tPQLUmgE2MX+YYaRnFtaYiUNs8yQuXzJOxf\n5WMpejfgfP2MGG6ROScTkuEel3eQzEg0a3TX91f2FfxI0CXEOGtIbWyvekJE8fkT\nnCCcVyssgNHJkg3cwpIF2K0xQc2jACJPXBzODLxVNPxj689Jzk53cp1+whUn7x8f\nsbGslmcN8G8BAAAAgGQXEn6xMG8FJsdLea8CItCpt3TYvnfw+Uw7gDvha6fcZLDd\nL1Vyl2NmaZXudkRrf5AT1hrnTrO5YBhEZl2mPkhYde0h5pK/5+2XunsDwnYEArWM\nWylV+UKRX7SO1fNwglOqmYTd/33cV4lm9h+Z5AVbpNjkmfSEHCRN4V+o988/AAAA\ngQDQnFNBNEjVPxn/cqp68+vnTwtFz2jyEbmHqoZEe0dCXmNCals0F4cnrc1NA7uF\nhAkCp8FMVY2oHOALdBct839RywNJ4BBmuN0Z6d2XQ9EcngLVTVlplRy/wjmEqhh4\n0C/wmyfvnJu2EZdlfHAASE9tQBb5DylyNVmB8H8jHjCWIQAAAIEAwHUFbyeHwKuZ\nietsyb8FFSHX3OfX0h6xsVEiAeMdUkf0Qf4W2iB3TT8h6Re3wqGBzY6AzMgvek9S\nOaQZjYGCK9q8wa/hr5P/e3pXWsfQxZychXOmfIn+KGuPIXFam5snlRGB0tYOaYVg\nS7UqAbvsIkN2NreDIlqjPcEO0bqoUYsAAAAAAQID\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAnNSaUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11\nLu7cXpyLbnteyC7AuQG4EaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stB\njcK7Y3whaDJ8SEsGCy40Qv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaa\nUCoNqU8idpsR2QeyP1bqKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuY\nU4VfOLZBu54wX4H9c3F1urfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f\n/r7kxYp3g6Ds+RxN931fr0QaiqXyi6CGQ4n06wIDAQABAoIBABxcpnukU/MSnBqs\nlGwL21AgvBrLmyb6YDoUrAE4qR14LdewLd0K/XduwBh+3yk8q0XJ9cvbIvaNoPea\nl8GGP5GL1/Oqfr8A83AHROXvKL7FDiEhSP2mFdVsAW6ikq9QQguLk4/6URlIPkSL\nug9BdmegL/S357+7PM/7T53a09AtSaATYxf5hhpGcW1piJQ2zzJC5fMk7F/lYyl6\nN+B8/YwYbpE5JxOS4R6Xd5DMSDRrdNf3V/YV/EjQJcQ4a0htbK96QkTx+ROcIJxX\nKyyA0cmSDdzCkgXYrTFBzaMAIk9cHM4MvFU0/GPrz0nOTndynX7CFSfvHx+xsayW\nZw3wbwECgYEA0JxTQTRI1T8Z/3KqevPr508LRc9o8hG5h6qGRHtHQl5jQmpbNBeH\nJ63NTQO7hYQJAqfBTFWNqBzgC3QXLfN/UcsDSeAQZrjdGendl0PRHJ4C1U1ZaZUc\nv8I5hKoYeNAv8Jsn75ybthGXZXxwAEhPbUAW+Q8pcjVZgfB/Ix4wliECgYEAwHUF\nbyeHwKuZietsyb8FFSHX3OfX0h6xsVEiAeMdUkf0Qf4W2iB3TT8h6Re3wqGBzY6A\nzMgvek9SOaQZjYGCK9q8wa/hr5P/e3pXWsfQxZychXOmfIn+KGuPIXFam5snlRGB\n0tYOaYVgS7UqAbvsIkN2NreDIlqjPcEO0bqoUYsCgYEAo9s2VdAQqVdgP1K878iq\nckyXCSWKRCGB/jsGLcI7Tbk/9AoAS2FzqsoMqUKWR6BXR3unDCNjGjpcDQMJtfE9\n/2wb0CosF9N68ADPKiJ9nSHMDeksow8ZvtF7RmYoxLSaAz6L1tzHPfKBXZipjL8/\njAu8P7MWFfwrqzHRWy86cKECgYEAl7kpiZGucfRWXOaeowXWqew+U0brXBkamOGP\nX9F+gil7pLL9rQS/SMSmpS4vjl7pB/Z6D/cZhuEVv59hDa+1wYD2IfPYhiS02tF+\nIHE6Yy+uLX8ZF0Fqfs8czY6hkd7le52LrX1Xa1Tcr5KpBSjzZaetgEF4PhMackrK\ntgjjPTUCgYBkFxJ+sTBvBSbHS3mvAiLQqbd02L538PlMO4A74Wun3GSw3S9Vcpdj\nZmmV7nZEa3+QE9Ya506zuWAYRGZdpj5IWHXtIeaSv+ftl7p7A8J2BAK1jFspVflC\nkV+0jtXzcIJTqpmE3f993FeJZvYfmeQFW6TY5Jn0hBwkTeFfqPfPPw==\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCc1JpQlaJUo8tp\nKYnR3nagGSWo51T8Z30dkV43OSj/xM1H7XUu7txenItue17ILsC5AbgRpUFww2yL\nLd0vC1eEhfNgCsP8MSCX8qDQe1lgzkDuy0GNwrtjfCFoMnxISwYLLjRC/+/VsYpB\nXFSQBET4R7O6tH9YGuG+Vuicb1FdxdFKpppQKg2pTyJ2mxHZB7I/VuorLQ6Yp2wb\nTyP0OjPoDDwgunbdDuMzy1DliLr8aLaJ+5hThV84tkG7njBfgf1zcXW6t+XdWL5a\nyNmWY42cE7i69gXs4RXW2ENe4QHrQ72I7V/+vuTFineDoOz5HE33fV+vRBqKpfKL\noIZDifTrAgMBAAECggEAHFyme6RT8xKcGqyUbAvbUCC8GsubJvpgOhSsATipHXgt\n17At3Qr9d27AGH7fKTyrRcn1y9si9o2g95qXwYY/kYvX86p+vwDzcAdE5e8ovsUO\nISFI/aYV1WwBbqKSr1BCC4uTj/pRGUg+RIu6D0F2Z6Av9Lfnv7s8z/tPndrT0C1J\noBNjF/mGGkZxbWmIlDbPMkLl8yTsX+VjKXo34Hz9jBhukTknE5LhHpd3kMxINGt0\n1/dX9hX8SNAlxDhrSG1sr3pCRPH5E5wgnFcrLIDRyZIN3MKSBditMUHNowAiT1wc\nzgy8VTT8Y+vPSc5Od3KdfsIVJ+8fH7GxrJZnDfBvAQKBgQDQnFNBNEjVPxn/cqp6\n8+vnTwtFz2jyEbmHqoZEe0dCXmNCals0F4cnrc1NA7uFhAkCp8FMVY2oHOALdBct\n839RywNJ4BBmuN0Z6d2XQ9EcngLVTVlplRy/wjmEqhh40C/wmyfvnJu2EZdlfHAA\nSE9tQBb5DylyNVmB8H8jHjCWIQKBgQDAdQVvJ4fAq5mJ62zJvwUVIdfc59fSHrGx\nUSIB4x1SR/RB/hbaIHdNPyHpF7fCoYHNjoDMyC96T1I5pBmNgYIr2rzBr+Gvk/97\neldax9DFnJyFc6Z8if4oa48hcVqbmyeVEYHS1g5phWBLtSoBu+wiQ3Y2t4MiWqM9\nwQ7RuqhRiwKBgQCj2zZV0BCpV2A/UrzvyKpyTJcJJYpEIYH+OwYtwjtNuT/0CgBL\nYXOqygypQpZHoFdHe6cMI2MaOlwNAwm18T3/bBvQKiwX03rwAM8qIn2dIcwN6Syj\nDxm+0XtGZijEtJoDPovW3Mc98oFdmKmMvz+MC7w/sxYV/CurMdFbLzpwoQKBgQCX\nuSmJka5x9FZc5p6jBdap7D5TRutcGRqY4Y9f0X6CKXuksv2tBL9IxKalLi+OXukH\n9noP9xmG4RW/n2ENr7XBgPYh89iGJLTa0X4gcTpjL64tfxkXQWp+zxzNjqGR3uV7\nnYutfVdrVNyvkqkFKPNlp62AQXg+ExpySsq2COM9NQKBgGQXEn6xMG8FJsdLea8C\nItCpt3TYvnfw+Uw7gDvha6fcZLDdL1Vyl2NmaZXudkRrf5AT1hrnTrO5YBhEZl2m\nPkhYde0h5pK/5+2XunsDwnYEArWMWylV+UKRX7SO1fNwglOqmYTd/33cV4lm9h+Z\n5AVbpNjkmfSEHCRN4V+o988/\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "fd:e1:4b:61:46:c9:07:5c:24:b5:8b:48:cc:92:35:bf",
            "public_key_fingerprint_sha256": "SHA256:gFxwTtd03IT6v5V99E8nrAeTnAY91/DM1jzDITL9wt0",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCc1JpQlaJUo8tpKYnR3nagGSWo51T8Z30dkV43OSj/xM1H7XUu7txenItue17ILsC5AbgRpUFww2yLLd0vC1eEhfNgCsP8MSCX8qDQe1lgzkDuy0GNwrtjfCFoMnxISwYLLjRC/+/VsYpBXFSQBET4R7O6tH9YGuG+Vuicb1FdxdFKpppQKg2pTyJ2mxHZB7I/VuorLQ6Yp2wbTyP0OjPoDDwgunbdDuMzy1DliLr8aLaJ+5hThV84tkG7njBfgf1zcXW6t+XdWL5ayNmWY42cE7i69gXs4RXW2ENe4QHrQ72I7V/+vuTFineDoOz5HE33fV+vRBqKpfKLoIZDifTr\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSaUJWiVKPLaSmJ0d52\noBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4EaVBcMNsiy3dLwtX\nhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40Qv/v1bGKQVxUkARE\n+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bqKy0OmKdsG08j9Doz\n6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1urfl3Vi+WsjZlmON\nnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931fr0QaiqXyi6CGQ4n0\n6wIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "875f4f57e16cea5d50e232d7242a9c67adfe635b",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAzYkuZcCiXLiiABuqIKDdr2xT3G32o7QkRR+1ygGe\nasC++ECBMrile1F0VH1OiBW66J89m9ef8WMMDcm9zdx8ggamkA926g7O9AcnKyYH\n/rNi9MZLaYB4VSD0oVXAfHz4soWt+U9ffVlaOC3HYEEMd2MzrH2oTTjEL5Do1jE0\nf+wn1rfb95jsQ69F9FpRyWo7TH//GPRs1k4/wLBYxk9d0uTPqF8baTh+rGcHq7Id\nqVaBvVekHj2nP5TQ2K3c6M646JF2DNF4vjzo80ydUivxhk+OfaQtKPqtxy9qP/Zq\nLd8GZvKx/fggcPiLYYzCh5haVgjcHHWXvpICM92xblF6ewAAA7gndmzUJ3Zs1AAA\nAAdzc2gtcnNhAAABAQDNiS5lwKJcuKIAG6ogoN2vbFPcbfajtCRFH7XKAZ5qwL74\nQIEyuKV7UXRUfU6IFbronz2b15/xYwwNyb3N3HyCBqaQD3bqDs70BycrJgf+s2L0\nxktpgHhVIPShVcB8fPiyha35T199WVo4LcdgQQx3YzOsfahNOMQvkOjWMTR/7CfW\nt9v3mOxDr0X0WlHJajtMf/8Y9GzWTj/AsFjGT13S5M+oXxtpOH6sZwersh2pVoG9\nV6QePac/lNDYrdzozrjokXYM0Xi+POjzTJ1SK/GGT459pC0o+q3HL2o/9mot3wZm\n8rH9+CBw+IthjMKHmFpWCNwcdZe+kgIz3bFuUXp7AAAAAwEAAQAAAQEAnzB7vhV3\n60aZOmoy1zig2oiVXynQGDSizuLjgsTENLx6bH5RUr6OdLe+2N2AoIfsDtWe+wAD\nggsLv/YbysDVskOCaBuCJ4A2q+yKWrIHCS9ZGmom6Fy3Vn/C2N44ynJkkKhW+byP\nId+9r7tNK3DWPfWYhSWB3+VylcCvhY3wso4J59YDHKC8JxqfLNMq8UcVF6Tv0whu\nxc9dlf30ARWkVV9AcZyqG7iibCTFPtYJAPGLOS4EU1J7s6ua3csld9/oNBFSzeQG\nHGc0v0igp3pvV1ReOrlubgmyqrBo3gyjHhuJDcioXhMm4mh5CqVYRVp3CAMX8F6K\n8+rQacK5XRtcqQAAAIEAxIrjOzhYW8YLT0xwwp2h/6l0NRi/xqG8Ix69ABlA/ub0\nHOulZk5gu/uj26nYTqe7uzLcTmBsgDht+W9m5O/wUmdBmhy0/Wrf0u4agYX3unTb\njwTQx3/9T2+F6XtETbMgSQvVyFOambKOaKKMTTQYSySbYrRv1PrWotDGOMrDcssA\nAACBANEb2EB5NW9xwxdXwYdGf25WkV5DoHJPewd3MTlj3QTKHCnlsrqPSPRF8EbJ\n4JOk0Qh1oyC8Lz7ItLlcnzYeaLDxJP8nJq23q+Ro5/Dk9l+tJwmbg562CXXkKuOL\nhFYLuudlqo1ITImidjwVOUbawFYYEJk69LSQiEmNt+qOKwoVAAAAgQD7oDq48v+w\nZ7bCszMm2sOCpulPYw65G2JLlNzvhvPv19wFMW/VTrUxPQan7dxfjU/V/rxEeXgJ\nqsVUGtCJAk2e11WsfNcRxduHXW8jlRejR5Nm4mvhI42FZHZVawVKcUJhhXY1nI+4\nIDiWZ69Qgofaq++ynvph3RtoLt1NTzFmTwAAAAAB\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAzYkuZcCiXLiiABuqIKDdr2xT3G32o7QkRR+1ygGeasC++ECB\nMrile1F0VH1OiBW66J89m9ef8WMMDcm9zdx8ggamkA926g7O9AcnKyYH/rNi9MZL\naYB4VSD0oVXAfHz4soWt+U9ffVlaOC3HYEEMd2MzrH2oTTjEL5Do1jE0f+wn1rfb\n95jsQ69F9FpRyWo7TH//GPRs1k4/wLBYxk9d0uTPqF8baTh+rGcHq7IdqVaBvVek\nHj2nP5TQ2K3c6M646JF2DNF4vjzo80ydUivxhk+OfaQtKPqtxy9qP/ZqLd8GZvKx\n/fggcPiLYYzCh5haVgjcHHWXvpICM92xblF6ewIDAQABAoIBAQCfMHu+FXfrRpk6\najLXOKDaiJVfKdAYNKLO4uOCxMQ0vHpsflFSvo50t77Y3YCgh+wO1Z77AAOCCwu/\n9hvKwNWyQ4JoG4IngDar7IpasgcJL1kaaiboXLdWf8LY3jjKcmSQqFb5vI8h372v\nu00rcNY99ZiFJYHf5XKVwK+FjfCyjgnn1gMcoLwnGp8s0yrxRxUXpO/TCG7Fz12V\n/fQBFaRVX0BxnKobuKJsJMU+1gkA8Ys5LgRTUnuzq5rdyyV33+g0EVLN5AYcZzS/\nSKCnem9XVF46uW5uCbKqsGjeDKMeG4kNyKheEybiaHkKpVhFWncIAxfwXorz6tBp\nwrldG1ypAoGBANEb2EB5NW9xwxdXwYdGf25WkV5DoHJPewd3MTlj3QTKHCnlsrqP\nSPRF8EbJ4JOk0Qh1oyC8Lz7ItLlcnzYeaLDxJP8nJq23q+Ro5/Dk9l+tJwmbg562\nCXXkKuOLhFYLuudlqo1ITImidjwVOUbawFYYEJk69LSQiEmNt+qOKwoVAoGBAPug\nOrjy/7BntsKzMybaw4Km6U9jDrkbYkuU3O+G8+/X3AUxb9VOtTE9Bqft3F+NT9X+\nvER5eAmqxVQa0IkCTZ7XVax81xHF24ddbyOVF6NHk2bia+EjjYVkdlVrBUpxQmGF\ndjWcj7ggOJZnr1CCh9qr77Ke+mHdG2gu3U1PMWZPAoGACYcFQVrEboF2bBfZf3pc\n0AAtu2fFZa/tYRezLHQ6W7+BrP8EN6/TmR2epvsHunJl+8awWgt485ldcpyfvG2C\nQ52ZG+8CuiOGN2/4MWedOhq/jpaBVrfgkniE4701mF4MdAKT1MAYjKTUUkR9SZcp\n8EJEb1baU2fKbd+BI7S6jUkCgYEApYW+e0FmTz26bJODF5EawUxY95765WuNGpj/\nSRWmS+TcWBIwNcpDyPMS+M6wg66qkOO0JvscqodKrUvCWA5Kzy1pr0CkHY3hHkep\nP2fpF8CSx0A0pPJFOzVd3ky7O0AL4ajwnM2zgPS5JL9qBPUItyEZWY/Ytx3C1KLX\ncu6gWWMCgYEAxIrjOzhYW8YLT0xwwp2h/6l0NRi/xqG8Ix69ABlA/ub0HOulZk5g\nu/uj26nYTqe7uzLcTmBsgDht+W9m5O/wUmdBmhy0/Wrf0u4agYX3unTbjwTQx3/9\nT2+F6XtETbMgSQvVyFOambKOaKKMTTQYSySbYrRv1PrWotDGOMrDcss=\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDNiS5lwKJcuKIA\nG6ogoN2vbFPcbfajtCRFH7XKAZ5qwL74QIEyuKV7UXRUfU6IFbronz2b15/xYwwN\nyb3N3HyCBqaQD3bqDs70BycrJgf+s2L0xktpgHhVIPShVcB8fPiyha35T199WVo4\nLcdgQQx3YzOsfahNOMQvkOjWMTR/7CfWt9v3mOxDr0X0WlHJajtMf/8Y9GzWTj/A\nsFjGT13S5M+oXxtpOH6sZwersh2pVoG9V6QePac/lNDYrdzozrjokXYM0Xi+POjz\nTJ1SK/GGT459pC0o+q3HL2o/9mot3wZm8rH9+CBw+IthjMKHmFpWCNwcdZe+kgIz\n3bFuUXp7AgMBAAECggEBAJ8we74Vd+tGmTpqMtc4oNqIlV8p0Bg0os7i44LExDS8\nemx+UVK+jnS3vtjdgKCH7A7VnvsAA4ILC7/2G8rA1bJDgmgbgieANqvsilqyBwkv\nWRpqJuhct1Z/wtjeOMpyZJCoVvm8jyHfva+7TStw1j31mIUlgd/lcpXAr4WN8LKO\nCefWAxygvCcanyzTKvFHFRek79MIbsXPXZX99AEVpFVfQHGcqhu4omwkxT7WCQDx\nizkuBFNSe7Ormt3LJXff6DQRUs3kBhxnNL9IoKd6b1dUXjq5bm4JsqqwaN4Mox4b\niQ3IqF4TJuJoeQqlWEVadwgDF/BeivPq0GnCuV0bXKkCgYEA0RvYQHk1b3HDF1fB\nh0Z/blaRXkOgck97B3cxOWPdBMocKeWyuo9I9EXwRsngk6TRCHWjILwvPsi0uVyf\nNh5osPEk/ycmrber5Gjn8OT2X60nCZuDnrYJdeQq44uEVgu652WqjUhMiaJ2PBU5\nRtrAVhgQmTr0tJCISY236o4rChUCgYEA+6A6uPL/sGe2wrMzJtrDgqbpT2MOuRti\nS5Tc74bz79fcBTFv1U61MT0Gp+3cX41P1f68RHl4CarFVBrQiQJNntdVrHzXEcXb\nh11vI5UXo0eTZuJr4SONhWR2VWsFSnFCYYV2NZyPuCA4lmevUIKH2qvvsp76Yd0b\naC7dTU8xZk8CgYAJhwVBWsRugXZsF9l/elzQAC27Z8Vlr+1hF7MsdDpbv4Gs/wQ3\nr9OZHZ6m+we6cmX7xrBaC3jzmV1ynJ+8bYJDnZkb7wK6I4Y3b/gxZ506Gr+OloFW\nt+CSeITjvTWYXgx0ApPUwBiMpNRSRH1JlynwQkRvVtpTZ8pt34EjtLqNSQKBgQCl\nhb57QWZPPbpsk4MXkRrBTFj3nvrla40amP9JFaZL5NxYEjA1ykPI8xL4zrCDrqqQ\n47Qm+xyqh0qtS8JYDkrPLWmvQKQdjeEeR6k/Z+kXwJLHQDSk8kU7NV3eTLs7QAvh\nqPCczbOA9Lkkv2oE9Qi3IRlZj9i3HcLUotdy7qBZYwKBgQDEiuM7OFhbxgtPTHDC\nnaH/qXQ1GL/GobwjHr0AGUD+5vQc66VmTmC7+6PbqdhOp7u7MtxOYGyAOG35b2bk\n7/BSZ0GaHLT9at/S7hqBhfe6dNuPBNDHf/1Pb4Xpe0RNsyBJC9XIU5qZso5oooxN\nNBhLJJtitG/U+tai0MY4ysNyyw==\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "00:22:af:57:a7:17:9f:7e:50:fc:b8:eb:a1:2d:54:95",
            "public_key_fingerprint_sha256": "SHA256:Yw1LKass7eRZiuAI2oGqMWryXMdKUUv8KV73JnhLZwA",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNiS5lwKJcuKIAG6ogoN2vbFPcbfajtCRFH7XKAZ5qwL74QIEyuKV7UXRUfU6IFbronz2b15/xYwwNyb3N3HyCBqaQD3bqDs70BycrJgf+s2L0xktpgHhVIPShVcB8fPiyha35T199WVo4LcdgQQx3YzOsfahNOMQvkOjWMTR/7CfWt9v3mOxDr0X0WlHJajtMf/8Y9GzWTj/AsFjGT13S5M+oXxtpOH6sZwersh2pVoG9V6QePac/lNDYrdzozrjokXYM0Xi+POjzTJ1SK/GGT459pC0o+q3HL2o/9mot3wZm8rH9+CBw+IthjMKHmFpWCNwcdZe+kgIz3bFuUXp7\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzYkuZcCiXLiiABuqIKDd\nr2xT3G32o7QkRR+1ygGeasC++ECBMrile1F0VH1OiBW66J89m9ef8WMMDcm9zdx8\nggamkA926g7O9AcnKyYH/rNi9MZLaYB4VSD0oVXAfHz4soWt+U9ffVlaOC3HYEEM\nd2MzrH2oTTjEL5Do1jE0f+wn1rfb95jsQ69F9FpRyWo7TH//GPRs1k4/wLBYxk9d\n0uTPqF8baTh+rGcHq7IdqVaBvVekHj2nP5TQ2K3c6M646JF2DNF4vjzo80ydUivx\nhk+OfaQtKPqtxy9qP/ZqLd8GZvKx/fggcPiLYYzCh5haVgjcHHWXvpICM92xblF6\newIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "2ea8b7c5c049fb4358557716807e09e0d27593e7",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAzzMtZfm3dKHPka4IpMkIhBFWcfsMFLuHukAdycFN\nhOsbY2JFmcimmm4nGRBBz4B328xiJPqlNiy5S5UIlkcUuYRdsZCveGXi0y0TewhO\n8WwK6p/C7UZzkzcONfn9dGMmKefX7SFkhAtevwdsVOQg90q67cmAq8MiIH7teM33\nBVRwfcvDbgc7wm0iJA1VGZiQ3Dld8UpIo1w9gZsVXwrewluxwF1+OB6B7N/U4iQk\npypZygmIGhIFD5Pcl2fEHTKhKijxG5GMXS0KOfv7/NQbiC6sNL7ODLIOMIMmHXiD\nwvXpaWF3xgmoQ6q9LjzrTbATA0G1Liss9WfNSJmIyURwUwAAA7hwT+TlcE/k5QAA\nAAdzc2gtcnNhAAABAQDPMy1l+bd0oc+RrgikyQiEEVZx+wwUu4e6QB3JwU2E6xtj\nYkWZyKaabicZEEHPgHfbzGIk+qU2LLlLlQiWRxS5hF2xkK94ZeLTLRN7CE7xbArq\nn8LtRnOTNw41+f10YyYp59ftIWSEC16/B2xU5CD3SrrtyYCrwyIgfu14zfcFVHB9\ny8NuBzvCbSIkDVUZmJDcOV3xSkijXD2BmxVfCt7CW7HAXX44HoHs39TiJCSnKlnK\nCYgaEgUPk9yXZ8QdMqEqKPEbkYxdLQo5+/v81BuILqw0vs4Msg4wgyYdeIPC9elp\nYXfGCahDqr0uPOtNsBMDQbUuKyz1Z81ImYjJRHBTAAAAAwEAAQAAAQEAg8L7v7mJ\nXHX51Z5iiMf+zl1oJ5uKFzUaHurfBooSjdAk3pKDyEO9Dr+1xU59S0Na9T+HuhRa\nM5VFUDc5+rbBCyiNnHlx3JKOJ9Smarrh2MzoNEPcZZ9Dp/5+3vxWnUjf4A47VeTC\nUuYYHkrOLT3VaOzw6n4VgSTZ8uhEg2oXCB+BUNU1qYmsp2X+fvxdZi4eT+p0Z4o5\n/RriAFXtpBw/3ac3WAFkG+jKuQblgxJ8GkE5adc1wfKJLVTS4pKMScLqyNCWCu3k\nW6Pt7U5pzEZXibLcKcHBLtu4YuPpRNp+IuCeJvXczK92NkzSLRUlCvF6JELbyvoD\noEAUFQJuuIovoQAAAIB2Lo48G3CuejiKzG6NZwHXP5i1NcWe5W3E+RoxTDV8+RVX\nmcb1j1DI/CPbDOqBIgVIoBnRJ9a6DqPkKD0zY/BVZrfj6QRTpO/hIRdDB/ECtf1O\nCKXl7UBFvRwN3uP56PSpVzCpTTV+hT+FyqkPXYoVez3QvSE7aF7SvJxurp6zPgAA\nAIEA3/yOMsjrBtm6qrAtvenRCmosgD3N7r4JjJaPn1AFa/Y0yX1SeafiYxHxaYh/\nWAVy59Tw6eyCkJeNNaqYyo+ZP6kVek/STXj2TSdUMcHIRhqFvSXWSvHb0RBvcTyn\n2pMSmm6EkgP0brGbwkC5bW7FjosGYe83rHcoy84bgpC4KpUAAACBAOzQampY5YYb\nnZHvAM65kt4ZvTsnsCLpP7poO1yKvycCp6zUpK5Wajkia+jq+m6+SK7ydpo9VTQk\n5EbPGA3x2gXCdkTfIjIIHAud/hyTDo/rDZApxs7TzErYG7Dkn/4xS8zuTqkNqP+l\npasJk8ser4RcVoyIdHslvrieysJ2Nt1HAAAAAAEC\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAzzMtZfm3dKHPka4IpMkIhBFWcfsMFLuHukAdycFNhOsbY2JF\nmcimmm4nGRBBz4B328xiJPqlNiy5S5UIlkcUuYRdsZCveGXi0y0TewhO8WwK6p/C\n7UZzkzcONfn9dGMmKefX7SFkhAtevwdsVOQg90q67cmAq8MiIH7teM33BVRwfcvD\nbgc7wm0iJA1VGZiQ3Dld8UpIo1w9gZsVXwrewluxwF1+OB6B7N/U4iQkpypZygmI\nGhIFD5Pcl2fEHTKhKijxG5GMXS0KOfv7/NQbiC6sNL7ODLIOMIMmHXiDwvXpaWF3\nxgmoQ6q9LjzrTbATA0G1Liss9WfNSJmIyURwUwIDAQABAoIBAQCDwvu/uYlcdfnV\nnmKIx/7OXWgnm4oXNRoe6t8GihKN0CTekoPIQ70Ov7XFTn1LQ1r1P4e6FFozlUVQ\nNzn6tsELKI2ceXHcko4n1KZquuHYzOg0Q9xln0On/n7e/FadSN/gDjtV5MJS5hge\nSs4tPdVo7PDqfhWBJNny6ESDahcIH4FQ1TWpiaynZf5+/F1mLh5P6nRnijn9GuIA\nVe2kHD/dpzdYAWQb6Mq5BuWDEnwaQTlp1zXB8oktVNLikoxJwurI0JYK7eRbo+3t\nTmnMRleJstwpwcEu27hi4+lE2n4i4J4m9dzMr3Y2TNItFSUK8XokQtvK+gOgQBQV\nAm64ii+hAoGBAN/8jjLI6wbZuqqwLb3p0QpqLIA9ze6+CYyWj59QBWv2NMl9Unmn\n4mMR8WmIf1gFcufU8OnsgpCXjTWqmMqPmT+pFXpP0k149k0nVDHByEYahb0l1krx\n29EQb3E8p9qTEppuhJID9G6xm8JAuW1uxY6LBmHvN6x3KMvOG4KQuCqVAoGBAOzQ\nampY5YYbnZHvAM65kt4ZvTsnsCLpP7poO1yKvycCp6zUpK5Wajkia+jq+m6+SK7y\ndpo9VTQk5EbPGA3x2gXCdkTfIjIIHAud/hyTDo/rDZApxs7TzErYG7Dkn/4xS8zu\nTqkNqP+lpasJk8ser4RcVoyIdHslvrieysJ2Nt1HAoGAGVei4x4WcWz7EMrkMgOd\ncjc3F79maGe5/t0eHOFZ67Asost6JGeZVqo2DUGzXssnCBHwvBbVYvSytmq55NlA\ndpJz6qXTXo6cF3imrwaE2WGw1gjM6SfaPhpE8aPyPem8BhsRBtBJvKh9vgnCsR4C\nXjFepIADZZEJ3Z1RQYGMRM0CgYEAyhP++sjo80tVZlZApicNAKGOLJBtaR0I2JRh\nM1LiUvOdCYpbDLmI40BQPO1mzmFpvIACXRPBRUHF2faWXC/pD8klCxgtIexxoigr\n005Zus2lQUOk9pEdXzCSUJyHOm3udO1WCkQx1hUQDaeailWhCJ2S7VDztLI80WYP\nN2mQ37kCgYB2Lo48G3CuejiKzG6NZwHXP5i1NcWe5W3E+RoxTDV8+RVXmcb1j1DI\n/CPbDOqBIgVIoBnRJ9a6DqPkKD0zY/BVZrfj6QRTpO/hIRdDB/ECtf1OCKXl7UBF\nvRwN3uP56PSpVzCpTTV+hT+FyqkPXYoVez3QvSE7aF7SvJxurp6zPg==\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPMy1l+bd0oc+R\nrgikyQiEEVZx+wwUu4e6QB3JwU2E6xtjYkWZyKaabicZEEHPgHfbzGIk+qU2LLlL\nlQiWRxS5hF2xkK94ZeLTLRN7CE7xbArqn8LtRnOTNw41+f10YyYp59ftIWSEC16/\nB2xU5CD3SrrtyYCrwyIgfu14zfcFVHB9y8NuBzvCbSIkDVUZmJDcOV3xSkijXD2B\nmxVfCt7CW7HAXX44HoHs39TiJCSnKlnKCYgaEgUPk9yXZ8QdMqEqKPEbkYxdLQo5\n+/v81BuILqw0vs4Msg4wgyYdeIPC9elpYXfGCahDqr0uPOtNsBMDQbUuKyz1Z81I\nmYjJRHBTAgMBAAECggEBAIPC+7+5iVx1+dWeYojH/s5daCebihc1Gh7q3waKEo3Q\nJN6Sg8hDvQ6/tcVOfUtDWvU/h7oUWjOVRVA3Ofq2wQsojZx5cdySjifUpmq64djM\n6DRD3GWfQ6f+ft78Vp1I3+AOO1XkwlLmGB5Kzi091Wjs8Op+FYEk2fLoRINqFwgf\ngVDVNamJrKdl/n78XWYuHk/qdGeKOf0a4gBV7aQcP92nN1gBZBvoyrkG5YMSfBpB\nOWnXNcHyiS1U0uKSjEnC6sjQlgrt5Fuj7e1OacxGV4my3CnBwS7buGLj6UTafiLg\nnib13MyvdjZM0i0VJQrxeiRC28r6A6BAFBUCbriKL6ECgYEA3/yOMsjrBtm6qrAt\nvenRCmosgD3N7r4JjJaPn1AFa/Y0yX1SeafiYxHxaYh/WAVy59Tw6eyCkJeNNaqY\nyo+ZP6kVek/STXj2TSdUMcHIRhqFvSXWSvHb0RBvcTyn2pMSmm6EkgP0brGbwkC5\nbW7FjosGYe83rHcoy84bgpC4KpUCgYEA7NBqaljlhhudke8AzrmS3hm9OyewIuk/\numg7XIq/JwKnrNSkrlZqOSJr6Or6br5IrvJ2mj1VNCTkRs8YDfHaBcJ2RN8iMggc\nC53+HJMOj+sNkCnGztPMStgbsOSf/jFLzO5OqQ2o/6WlqwmTyx6vhFxWjIh0eyW+\nuJ7KwnY23UcCgYAZV6LjHhZxbPsQyuQyA51yNzcXv2ZoZ7n+3R4c4VnrsCyiy3ok\nZ5lWqjYNQbNeyycIEfC8FtVi9LK2arnk2UB2knPqpdNejpwXeKavBoTZYbDWCMzp\nJ9o+GkTxo/I96bwGGxEG0Em8qH2+CcKxHgJeMV6kgANlkQndnVFBgYxEzQKBgQDK\nE/76yOjzS1VmVkCmJw0AoY4skG1pHQjYlGEzUuJS850JilsMuYjjQFA87WbOYWm8\ngAJdE8FFQcXZ9pZcL+kPySULGC0h7HGiKCvTTlm6zaVBQ6T2kR1fMJJQnIc6be50\n7VYKRDHWFRANp5qKVaEInZLtUPO0sjzRZg83aZDfuQKBgHYujjwbcK56OIrMbo1n\nAdc/mLU1xZ7lbcT5GjFMNXz5FVeZxvWPUMj8I9sM6oEiBUigGdEn1roOo+QoPTNj\n8FVmt+PpBFOk7+EhF0MH8QK1/U4IpeXtQEW9HA3e4/no9KlXMKlNNX6FP4XKqQ9d\nihV7PdC9ITtoXtK8nG6unrM+\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "e3:b6:a1:7f:a4:8c:79:98:64:9e:a3:b3:c0:10:00:21",
            "public_key_fingerprint_sha256": "SHA256:x5YWMwFUHBSBZFBC9FIdeAIY3gjvQIAcSivRRb8SIXM",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDPMy1l+bd0oc+RrgikyQiEEVZx+wwUu4e6QB3JwU2E6xtjYkWZyKaabicZEEHPgHfbzGIk+qU2LLlLlQiWRxS5hF2xkK94ZeLTLRN7CE7xbArqn8LtRnOTNw41+f10YyYp59ftIWSEC16/B2xU5CD3SrrtyYCrwyIgfu14zfcFVHB9y8NuBzvCbSIkDVUZmJDcOV3xSkijXD2BmxVfCt7CW7HAXX44HoHs39TiJCSnKlnKCYgaEgUPk9yXZ8QdMqEqKPEbkYxdLQo5+/v81BuILqw0vs4Msg4wgyYdeIPC9elpYXfGCahDqr0uPOtNsBMDQbUuKyz1Z81ImYjJRHBT\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzzMtZfm3dKHPka4IpMkI\nhBFWcfsMFLuHukAdycFNhOsbY2JFmcimmm4nGRBBz4B328xiJPqlNiy5S5UIlkcU\nuYRdsZCveGXi0y0TewhO8WwK6p/C7UZzkzcONfn9dGMmKefX7SFkhAtevwdsVOQg\n90q67cmAq8MiIH7teM33BVRwfcvDbgc7wm0iJA1VGZiQ3Dld8UpIo1w9gZsVXwre\nwluxwF1+OB6B7N/U4iQkpypZygmIGhIFD5Pcl2fEHTKhKijxG5GMXS0KOfv7/NQb\niC6sNL7ODLIOMIMmHXiDwvXpaWF3xgmoQ6q9LjzrTbATA0G1Liss9WfNSJmIyURw\nUwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "96e0b97274f44088bed1a92f859e3800a7c5a81b",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAso/+Z1LETTRQn53Y01lxMBoLXmCR9/w22NiDqWKY\nkx45SY8ANy0/OXd2zPcpSHBI0kzF5hRRPWCOM7ckUz42OSjV4bJmopXfJy8DK/vJ\npvEOokujBsrd9aj0eZ6Om0U+ZA5XBgtA+AvGGAnZgJcvg9VxTgSCaLoHU2NQTzNE\n9b+pCrgDGGoqY2qnNZkWXlzl8O/aN0IDnF1IlxR6P2bWK6IG1NZhARaWI5lFAoZj\nYWo912miIqj69PBZ8oqc0WVmzwJsFWA9KCHw2qFWzKoxNTVsiF3yQl03bjF4xWM+\nJIQOKNTIi9Z/2m1YkmJAV4MyJroEeGiq/+gD60DYpRF1pwAAA7iadsYSmnbGEgAA\nAAdzc2gtcnNhAAABAQCyj/5nUsRNNFCfndjTWXEwGgteYJH3/DbY2IOpYpiTHjlJ\njwA3LT85d3bM9ylIcEjSTMXmFFE9YI4ztyRTPjY5KNXhsmaild8nLwMr+8mm8Q6i\nS6MGyt31qPR5no6bRT5kDlcGC0D4C8YYCdmAly+D1XFOBIJougdTY1BPM0T1v6kK\nuAMYaipjaqc1mRZeXOXw79o3QgOcXUiXFHo/ZtYrogbU1mEBFpYjmUUChmNhaj3X\naaIiqPr08FnyipzRZWbPAmwVYD0oIfDaoVbMqjE1NWyIXfJCXTduMXjFYz4khA4o\n1MiL1n/abViSYkBXgzImugR4aKr/6APrQNilEXWnAAAAAwEAAQAAAQAs66qdhaXa\nokmSDhyo9rxR1It9n5+5GhsWLEnbB/HIOPdCeRYdy2U3aMVbROZ+0biQJz415nCV\nlz/O5MjfpCvx70L3N3E4f6mW6u3KV9pgBA6hZ5PItqpmDa4LFodbqmzKsQzVeWlL\nvXKFQ50TC3Wpnb2WWe4QuJP1N2vRsN0tUTFPoya+LEHYl8nJJo3FQz3hy1wqDAMr\nYNcKa1yWwB1NqsiA9OGT807hcdrz7MZccScyWiA1bvtJnpexoqgw+UAc7BmvN41o\nn9DZMFEh8PseDFE2hnfjFBCBzABdT08YhsvV5ISp3ty9ponuedU2BWoWvpKY+YBQ\nHL78KLes4qMRAAAAgDFux+eJ1tu94V6fzfSxN8OTwiGAu7lUkk2W8DOtRMSjq0Pm\nkVQUt/Nd8iauXoCsvVObMri7Q4mQTE/1l8IcVpBcSEA7QcTQbub7c0yu3FxpNBZj\nsOtISzbw3grtZL4HGDnpI7hMzZFzsL62iDmX7XjfKUiVsl5y00A34tBd+GY6AAAA\ngQDiOqr+Rzd2asw869WBk/wW27O7eXL9lNKJMkeCeKzc3VxD+fxGLPWjI976bchY\nZiHD044JxFvYC9W10UtfjTj0dKJY1MgRn7rvzSelCyVqnrImCkrv5fgS7WuzVKEL\nZk12LBye1/2haWITY1I9n/63fKBDVTNfjdRJKdEdSFANiQAAAIEAyg+BDI9wiGNc\nF4M5vu9JXD3pr5MXETf4xKdMVsFrsxAxUw/PVgWJ4srMh6NbnECe1Hw8kg45QAfV\nqeMR5uybmxwXdbDmev/N8X5/I7UYUOfKunQUXoXikE/ShEhgfl0rNN19Aq0Zn8fW\nd9V9HGLKVczLRhMS3bQ9A+wQUZSWTa8AAAAAAQID\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAso/+Z1LETTRQn53Y01lxMBoLXmCR9/w22NiDqWKYkx45SY8A\nNy0/OXd2zPcpSHBI0kzF5hRRPWCOM7ckUz42OSjV4bJmopXfJy8DK/vJpvEOokuj\nBsrd9aj0eZ6Om0U+ZA5XBgtA+AvGGAnZgJcvg9VxTgSCaLoHU2NQTzNE9b+pCrgD\nGGoqY2qnNZkWXlzl8O/aN0IDnF1IlxR6P2bWK6IG1NZhARaWI5lFAoZjYWo912mi\nIqj69PBZ8oqc0WVmzwJsFWA9KCHw2qFWzKoxNTVsiF3yQl03bjF4xWM+JIQOKNTI\ni9Z/2m1YkmJAV4MyJroEeGiq/+gD60DYpRF1pwIDAQABAoIBACzrqp2FpdqiSZIO\nHKj2vFHUi32fn7kaGxYsSdsH8cg490J5Fh3LZTdoxVtE5n7RuJAnPjXmcJWXP87k\nyN+kK/HvQvc3cTh/qZbq7cpX2mAEDqFnk8i2qmYNrgsWh1uqbMqxDNV5aUu9coVD\nnRMLdamdvZZZ7hC4k/U3a9Gw3S1RMU+jJr4sQdiXyckmjcVDPeHLXCoMAytg1wpr\nXJbAHU2qyID04ZPzTuFx2vPsxlxxJzJaIDVu+0mel7GiqDD5QBzsGa83jWif0Nkw\nUSHw+x4MUTaGd+MUEIHMAF1PTxiGy9XkhKne3L2mie551TYFaha+kpj5gFAcvvwo\nt6zioxECgYEA4jqq/kc3dmrMPOvVgZP8Ftuzu3ly/ZTSiTJHgnis3N1cQ/n8Riz1\noyPe+m3IWGYhw9OOCcRb2AvVtdFLX4049HSiWNTIEZ+6780npQslap6yJgpK7+X4\nEu1rs1ShC2ZNdiwcntf9oWliE2NSPZ/+t3ygQ1UzX43USSnRHUhQDYkCgYEAyg+B\nDI9wiGNcF4M5vu9JXD3pr5MXETf4xKdMVsFrsxAxUw/PVgWJ4srMh6NbnECe1Hw8\nkg45QAfVqeMR5uybmxwXdbDmev/N8X5/I7UYUOfKunQUXoXikE/ShEhgfl0rNN19\nAq0Zn8fWd9V9HGLKVczLRhMS3bQ9A+wQUZSWTa8CgYEAiNaFwWKgWJ9GxH692TAC\n5myj7X0LofjX1Ca2fGOz47B9c5yNDIF7Xt9+qymmaln0iHe5TY0ZJLgb32smVTid\nv7egz2x9S7O7JfuIxFrWmgQ9q6bEJxGKGSDE6WcCNlv99MG/2hC5mF2e9i04fI//\nSUs3wSKS/XRTeKGznCu2SEkCgYEAvFZjNO/mNlpWllvsUTn8qQvUa6CwmY4QREyj\n7SFwX4EyWHeeDFIxScE5jxwG4cehw/DhDEpRtosW7rkGELZt+8/dVgfDbNZOgVAk\n9YVw2siSv+Q+sDQfD+A3GrHTrzTsduQUB5CNF89O6neFnBXA/uRafEB/D0NWs/cu\n5ruWtWUCgYAxbsfnidbbveFen830sTfDk8IhgLu5VJJNlvAzrUTEo6tD5pFUFLfz\nXfImrl6ArL1TmzK4u0OJkExP9ZfCHFaQXEhAO0HE0G7m+3NMrtxcaTQWY7DrSEs2\n8N4K7WS+Bxg56SO4TM2Rc7C+tog5l+143ylIlbJectNAN+LQXfhmOg==\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCyj/5nUsRNNFCf\nndjTWXEwGgteYJH3/DbY2IOpYpiTHjlJjwA3LT85d3bM9ylIcEjSTMXmFFE9YI4z\ntyRTPjY5KNXhsmaild8nLwMr+8mm8Q6iS6MGyt31qPR5no6bRT5kDlcGC0D4C8YY\nCdmAly+D1XFOBIJougdTY1BPM0T1v6kKuAMYaipjaqc1mRZeXOXw79o3QgOcXUiX\nFHo/ZtYrogbU1mEBFpYjmUUChmNhaj3XaaIiqPr08FnyipzRZWbPAmwVYD0oIfDa\noVbMqjE1NWyIXfJCXTduMXjFYz4khA4o1MiL1n/abViSYkBXgzImugR4aKr/6APr\nQNilEXWnAgMBAAECggEALOuqnYWl2qJJkg4cqPa8UdSLfZ+fuRobFixJ2wfxyDj3\nQnkWHctlN2jFW0TmftG4kCc+NeZwlZc/zuTI36Qr8e9C9zdxOH+plurtylfaYAQO\noWeTyLaqZg2uCxaHW6psyrEM1XlpS71yhUOdEwt1qZ29llnuELiT9Tdr0bDdLVEx\nT6MmvixB2JfJySaNxUM94ctcKgwDK2DXCmtclsAdTarIgPThk/NO4XHa8+zGXHEn\nMlogNW77SZ6XsaKoMPlAHOwZrzeNaJ/Q2TBRIfD7HgxRNoZ34xQQgcwAXU9PGIbL\n1eSEqd7cvaaJ7nnVNgVqFr6SmPmAUBy+/Ci3rOKjEQKBgQDiOqr+Rzd2asw869WB\nk/wW27O7eXL9lNKJMkeCeKzc3VxD+fxGLPWjI976bchYZiHD044JxFvYC9W10Utf\njTj0dKJY1MgRn7rvzSelCyVqnrImCkrv5fgS7WuzVKELZk12LBye1/2haWITY1I9\nn/63fKBDVTNfjdRJKdEdSFANiQKBgQDKD4EMj3CIY1wXgzm+70lcPemvkxcRN/jE\np0xWwWuzEDFTD89WBYniysyHo1ucQJ7UfDySDjlAB9Wp4xHm7JubHBd1sOZ6/83x\nfn8jtRhQ58q6dBReheKQT9KESGB+XSs03X0CrRmfx9Z31X0cYspVzMtGExLdtD0D\n7BBRlJZNrwKBgQCI1oXBYqBYn0bEfr3ZMALmbKPtfQuh+NfUJrZ8Y7PjsH1znI0M\ngXte336rKaZqWfSId7lNjRkkuBvfayZVOJ2/t6DPbH1Ls7sl+4jEWtaaBD2rpsQn\nEYoZIMTpZwI2W/30wb/aELmYXZ72LTh8j/9JSzfBIpL9dFN4obOcK7ZISQKBgQC8\nVmM07+Y2WlaWW+xROfypC9RroLCZjhBETKPtIXBfgTJYd54MUjFJwTmPHAbhx6HD\n8OEMSlG2ixbuuQYQtm37z91WB8Ns1k6BUCT1hXDayJK/5D6wNB8P4DcasdOvNOx2\n5BQHkI0Xz07qd4WcFcD+5Fp8QH8PQ1az9y7mu5a1ZQKBgDFux+eJ1tu94V6fzfSx\nN8OTwiGAu7lUkk2W8DOtRMSjq0PmkVQUt/Nd8iauXoCsvVObMri7Q4mQTE/1l8Ic\nVpBcSEA7QcTQbub7c0yu3FxpNBZjsOtISzbw3grtZL4HGDnpI7hMzZFzsL62iDmX\n7XjfKUiVsl5y00A34tBd+GY6\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "eb:24:ab:ae:bc:f5:5c:d4:c8:d2:6f:01:03:6e:6e:fa",
            "public_key_fingerprint_sha256": "SHA256:Ne9q2n46j1ZHAcZe7H71bUV8ZyvESmTUZNc5dEBp3dQ",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyj/5nUsRNNFCfndjTWXEwGgteYJH3/DbY2IOpYpiTHjlJjwA3LT85d3bM9ylIcEjSTMXmFFE9YI4ztyRTPjY5KNXhsmaild8nLwMr+8mm8Q6iS6MGyt31qPR5no6bRT5kDlcGC0D4C8YYCdmAly+D1XFOBIJougdTY1BPM0T1v6kKuAMYaipjaqc1mRZeXOXw79o3QgOcXUiXFHo/ZtYrogbU1mEBFpYjmUUChmNhaj3XaaIiqPr08FnyipzRZWbPAmwVYD0oIfDaoVbMqjE1NWyIXfJCXTduMXjFYz4khA4o1MiL1n/abViSYkBXgzImugR4aKr/6APrQNilEXWn\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAso/+Z1LETTRQn53Y01lx\nMBoLXmCR9/w22NiDqWKYkx45SY8ANy0/OXd2zPcpSHBI0kzF5hRRPWCOM7ckUz42\nOSjV4bJmopXfJy8DK/vJpvEOokujBsrd9aj0eZ6Om0U+ZA5XBgtA+AvGGAnZgJcv\ng9VxTgSCaLoHU2NQTzNE9b+pCrgDGGoqY2qnNZkWXlzl8O/aN0IDnF1IlxR6P2bW\nK6IG1NZhARaWI5lFAoZjYWo912miIqj69PBZ8oqc0WVmzwJsFWA9KCHw2qFWzKox\nNTVsiF3yQl03bjF4xWM+JIQOKNTIi9Z/2m1YkmJAV4MyJroEeGiq/+gD60DYpRF1\npwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "be763d20cf3140cec7ada8067f96a91cfb84c12e",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEArGUfwpJjEKe5pYjnWjVIiG0qWWwIvW3ijbN/Kf6m\ntoTLpu4sUqtKuKaE0MUFL7HdkhvPUiEUHAFDcyzWTkmvpahs/fNy+vWvwt0g8IHc\n+tWkevl9ODQt29cGHfMqjJIa48iCfr33dPaYM1Xwbl2ZtSYfXK4/L8SKSGo0E6E+\njAuEEzG0xeMazA9I2HNQf/EtV9Yk+dEOeaFYtkAyI45cwizuznSh0EDWNLCKXaAb\nwjmOAYvP4AC0MrzwC1P0l67UXBUX4CJXCZvkkyNptjWJYO1wIba4buOouVM/7aRl\n9+hSaXt/Q1IrAHRfUSQhQjsxvtduiE4p9hfkkAIpaFNE5wAAA7j1zAZh9cwGYQAA\nAAdzc2gtcnNhAAABAQCsZR/CkmMQp7mliOdaNUiIbSpZbAi9beKNs38p/qa2hMum\n7ixSq0q4poTQxQUvsd2SG89SIRQcAUNzLNZOSa+lqGz983L69a/C3SDwgdz61aR6\n+X04NC3b1wYd8yqMkhrjyIJ+vfd09pgzVfBuXZm1Jh9crj8vxIpIajQToT6MC4QT\nMbTF4xrMD0jYc1B/8S1X1iT50Q55oVi2QDIjjlzCLO7OdKHQQNY0sIpdoBvCOY4B\ni8/gALQyvPALU/SXrtRcFRfgIlcJm+STI2m2NYlg7XAhtrhu46i5Uz/tpGX36FJp\ne39DUisAdF9RJCFCOzG+126ITin2F+SQAiloU0TnAAAAAwEAAQAAAQABh+xeR/qF\nPVgStkKHtI1uWLnVjXYOaJlodL2eW9qTKF6+nsLaARdqyF/JktZW9BdposGWkyCg\nlwpITY+hplne+L3vC2hr/h6PdnNCb4TM3XTWery38Q6vMxukzHIGSY3fk/pEsd8u\ntLnpSswVztL8ntgMdKeu/unTds37lqT9jWDh+bGMETaSUvbHkWDeri8iYgnu0Zct\n80JwTVzpMEhFZzbmT90JnYaLatm4XpXD/KKlEbfZz5nA5wv1OJdj2cWvceERbKne\nK5OrG9vUvDdxGKkQZjdHTfiKD4N3jxVf6w5Ea8Rrb+Iiu5C5p5fmrElbVcGNzZfp\nT0wuEiOfYfUhAAAAgFeucODihGe7tGkTpwKJyV2nDeChm2fLBSWuoO/zvSH9uvIX\nOoBES51+IX4UPX6B74R1Y+fTVmmmdoNb/z7LTE9hx+oRuUKLJzZ+HP1KUfsa2RwN\nAa3agYNpLbz69hScSBLzIkh/+t8lmuNmo3svM5BwfQuIUQwLJIy9t7tdsl6xAAAA\ngQDAXZcebody9ZH8eZQE3XtnJuThdK3YjfUkDaZLV7VAA4AciuiNp/R0rDgQukzB\n4HrEWUkGMvBnKDMPyyCAsIRf1tK4Q7MhnDgbycHny3ibcztcpU/w5h4evPpSIWLN\nB9diEAlIMmNwhjlDxFmSUW72z6UX/oeswHX/XmPRHnVJKQAAAIEA5WxVTIyv1AcU\nICaAF7R4fq8bWgQHD2oo9KGmkFczFPc0KnHWQwMaKpNLG9m7+p61tm7rSlKxe3H+\ngD4zLxcKHANAY2+vvWr+r9pNvXocvdiJichf4iMNvsFh7xXpNtkBBbFnSePu6pdk\nsXJCZXnzzgPSDpg529KSSOFsVdwWD48AAAAAAQID\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArGUfwpJjEKe5pYjnWjVIiG0qWWwIvW3ijbN/Kf6mtoTLpu4s\nUqtKuKaE0MUFL7HdkhvPUiEUHAFDcyzWTkmvpahs/fNy+vWvwt0g8IHc+tWkevl9\nODQt29cGHfMqjJIa48iCfr33dPaYM1Xwbl2ZtSYfXK4/L8SKSGo0E6E+jAuEEzG0\nxeMazA9I2HNQf/EtV9Yk+dEOeaFYtkAyI45cwizuznSh0EDWNLCKXaAbwjmOAYvP\n4AC0MrzwC1P0l67UXBUX4CJXCZvkkyNptjWJYO1wIba4buOouVM/7aRl9+hSaXt/\nQ1IrAHRfUSQhQjsxvtduiE4p9hfkkAIpaFNE5wIDAQABAoIBAAGH7F5H+oU9WBK2\nQoe0jW5YudWNdg5omWh0vZ5b2pMoXr6ewtoBF2rIX8mS1lb0F2miwZaTIKCXCkhN\nj6GmWd74ve8LaGv+Ho92c0JvhMzddNZ6vLfxDq8zG6TMcgZJjd+T+kSx3y60uelK\nzBXO0vye2Ax0p67+6dN2zfuWpP2NYOH5sYwRNpJS9seRYN6uLyJiCe7Rly3zQnBN\nXOkwSEVnNuZP3Qmdhotq2bhelcP8oqURt9nPmcDnC/U4l2PZxa9x4RFsqd4rk6sb\n29S8N3EYqRBmN0dN+IoPg3ePFV/rDkRrxGtv4iK7kLmnl+asSVtVwY3Nl+lPTC4S\nI59h9SECgYEAwF2XHm6HcvWR/HmUBN17Zybk4XSt2I31JA2mS1e1QAOAHIrojaf0\ndKw4ELpMweB6xFlJBjLwZygzD8sggLCEX9bSuEOzIZw4G8nB58t4m3M7XKVP8OYe\nHrz6UiFizQfXYhAJSDJjcIY5Q8RZklFu9s+lF/6HrMB1/15j0R51SSkCgYEA5WxV\nTIyv1AcUICaAF7R4fq8bWgQHD2oo9KGmkFczFPc0KnHWQwMaKpNLG9m7+p61tm7r\nSlKxe3H+gD4zLxcKHANAY2+vvWr+r9pNvXocvdiJichf4iMNvsFh7xXpNtkBBbFn\nSePu6pdksXJCZXnzzgPSDpg529KSSOFsVdwWD48CgYAI/lcqXRCIF2MT4rtA3vn+\nAJuCzumxzjE/1kOIEjmvHHrI2tW0ib2sFsEoRw1/ovcaZvI7D/adXAvHGUATxCzs\nLib75m5hi+QzqGMgayrgWarU0gXCxX9zAHLTlCwCWfN/6jAE6BYuFJhoyq1FYflG\nIL8fOA8vzG+32Lnh9QKWwQKBgFMc4fHvbatEPThAelscGCLc0O3VU7Fz5g5pmWvl\nCy5nN9DAmLyCHTKbVbRrNrxeTroeiMLOHln4PBi9b9F5aUIos2TSizn1zvpp/YvM\n9yiXj4wIuSO1Sz9100LID0q9Zq9nS2HrXxxBaEsYd5FHktlpbOm4oA1QxYn9kD+y\nkZNlAoGAV65w4OKEZ7u0aROnAonJXacN4KGbZ8sFJa6g7/O9If268hc6gERLnX4h\nfhQ9foHvhHVj59NWaaZ2g1v/PstMT2HH6hG5QosnNn4c/UpR+xrZHA0BrdqBg2kt\nvPr2FJxIEvMiSH/63yWa42ajey8zkHB9C4hRDAskjL23u12yXrE=\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCsZR/CkmMQp7ml\niOdaNUiIbSpZbAi9beKNs38p/qa2hMum7ixSq0q4poTQxQUvsd2SG89SIRQcAUNz\nLNZOSa+lqGz983L69a/C3SDwgdz61aR6+X04NC3b1wYd8yqMkhrjyIJ+vfd09pgz\nVfBuXZm1Jh9crj8vxIpIajQToT6MC4QTMbTF4xrMD0jYc1B/8S1X1iT50Q55oVi2\nQDIjjlzCLO7OdKHQQNY0sIpdoBvCOY4Bi8/gALQyvPALU/SXrtRcFRfgIlcJm+ST\nI2m2NYlg7XAhtrhu46i5Uz/tpGX36FJpe39DUisAdF9RJCFCOzG+126ITin2F+SQ\nAiloU0TnAgMBAAECggEAAYfsXkf6hT1YErZCh7SNbli51Y12DmiZaHS9nlvakyhe\nvp7C2gEXashfyZLWVvQXaaLBlpMgoJcKSE2PoaZZ3vi97wtoa/4ej3ZzQm+EzN10\n1nq8t/EOrzMbpMxyBkmN35P6RLHfLrS56UrMFc7S/J7YDHSnrv7p03bN+5ak/Y1g\n4fmxjBE2klL2x5Fg3q4vImIJ7tGXLfNCcE1c6TBIRWc25k/dCZ2Gi2rZuF6Vw/yi\npRG32c+ZwOcL9TiXY9nFr3HhEWyp3iuTqxvb1Lw3cRipEGY3R034ig+Dd48VX+sO\nRGvEa2/iIruQuaeX5qxJW1XBjc2X6U9MLhIjn2H1IQKBgQDAXZcebody9ZH8eZQE\n3XtnJuThdK3YjfUkDaZLV7VAA4AciuiNp/R0rDgQukzB4HrEWUkGMvBnKDMPyyCA\nsIRf1tK4Q7MhnDgbycHny3ibcztcpU/w5h4evPpSIWLNB9diEAlIMmNwhjlDxFmS\nUW72z6UX/oeswHX/XmPRHnVJKQKBgQDlbFVMjK/UBxQgJoAXtHh+rxtaBAcPaij0\noaaQVzMU9zQqcdZDAxoqk0sb2bv6nrW2butKUrF7cf6APjMvFwocA0Bjb6+9av6v\n2k29ehy92ImJyF/iIw2+wWHvFek22QEFsWdJ4+7ql2SxckJlefPOA9IOmDnb0pJI\n4WxV3BYPjwKBgAj+VypdEIgXYxPiu0De+f4Am4LO6bHOMT/WQ4gSOa8cesja1bSJ\nvawWwShHDX+i9xpm8jsP9p1cC8cZQBPELOwuJvvmbmGL5DOoYyBrKuBZqtTSBcLF\nf3MActOULAJZ83/qMAToFi4UmGjKrUVh+UYgvx84Dy/Mb7fYueH1ApbBAoGAUxzh\n8e9tq0Q9OEB6WxwYItzQ7dVTsXPmDmmZa+ULLmc30MCYvIIdMptVtGs2vF5Ouh6I\nws4eWfg8GL1v0XlpQiizZNKLOfXO+mn9i8z3KJePjAi5I7VLP3XTQsgPSr1mr2dL\nYetfHEFoSxh3kUeS2Wls6bigDVDFif2QP7KRk2UCgYBXrnDg4oRnu7RpE6cCicld\npw3goZtnywUlrqDv870h/bryFzqAREudfiF+FD1+ge+EdWPn01ZppnaDW/8+y0xP\nYcfqEblCiyc2fhz9SlH7GtkcDQGt2oGDaS28+vYUnEgS8yJIf/rfJZrjZqN7LzOQ\ncH0LiFEMCySMvbe7XbJesQ==\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "70:09:a4:7e:c4:f7:bb:12:5b:7b:f3:21:59:e5:d1:5a",
            "public_key_fingerprint_sha256": "SHA256:tCIbziSLrkMZoL3LB5/HC2u7YgLzHBj8gRw7ErIXOtc",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsZR/CkmMQp7mliOdaNUiIbSpZbAi9beKNs38p/qa2hMum7ixSq0q4poTQxQUvsd2SG89SIRQcAUNzLNZOSa+lqGz983L69a/C3SDwgdz61aR6+X04NC3b1wYd8yqMkhrjyIJ+vfd09pgzVfBuXZm1Jh9crj8vxIpIajQToT6MC4QTMbTF4xrMD0jYc1B/8S1X1iT50Q55oVi2QDIjjlzCLO7OdKHQQNY0sIpdoBvCOY4Bi8/gALQyvPALU/SXrtRcFRfgIlcJm+STI2m2NYlg7XAhtrhu46i5Uz/tpGX36FJpe39DUisAdF9RJCFCOzG+126ITin2F+SQAiloU0Tn\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArGUfwpJjEKe5pYjnWjVI\niG0qWWwIvW3ijbN/Kf6mtoTLpu4sUqtKuKaE0MUFL7HdkhvPUiEUHAFDcyzWTkmv\npahs/fNy+vWvwt0g8IHc+tWkevl9ODQt29cGHfMqjJIa48iCfr33dPaYM1Xwbl2Z\ntSYfXK4/L8SKSGo0E6E+jAuEEzG0xeMazA9I2HNQf/EtV9Yk+dEOeaFYtkAyI45c\nwizuznSh0EDWNLCKXaAbwjmOAYvP4AC0MrzwC1P0l67UXBUX4CJXCZvkkyNptjWJ\nYO1wIba4buOouVM/7aRl9+hSaXt/Q1IrAHRfUSQhQjsxvtduiE4p9hfkkAIpaFNE\n5wIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_self_signed_cert",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "cert_signing",
              "crl_signing"
            ],
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQVY1NZUPygwGOq68BTFrYuTANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuZGV2LnZwbi5jYTAeFw0yNDExMTMy\nMDEyMjFaFw0zNDExMTEyMDEyMjFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5kZXYudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnNSa\nUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11Lu7cXpyLbnteyC7AuQG4\nEaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stBjcK7Y3whaDJ8SEsGCy40\nQv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaaUCoNqU8idpsR2QeyP1bq\nKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuYU4VfOLZBu54wX4H9c3F1\nurfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f/r7kxYp3g6Ds+RxN931f\nr0QaiqXyi6CGQ4n06wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUP2WbsnfEgn4IamXeVMP2O3MG3V0wDQYJKoZIhvcN\nAQELBQADggEBABKKbhPx+LXMK1FQn9UkYH9/qCmVxko/fgUrOvrAsFbDRt+grPZB\nNgYAZJrfAns6ghCuAhH7Sr0n2JpyO/fSBZdkD6ZB0VfQfjSXI88VLLL1z6feWcre\nYiIS2ox2cbNltHDjEUX9YCQK0BoON9/1pgAofQkCMZMSlSg2qO11oDr40k7Wk5lL\ntm/5mqwfiOS/Xz8C/rJqqfXEKEWFna/MTp+2oNdKbaMVrK+I10/JLh0ueAlgkWze\nzBLbuWL2cY7QQRbWhNlj5oFMlmAWjJWy3TXXd7p5f8twj8ezHLutNsBWP7JSS826\n3rfBzQRbyjV6+CvLEi9AN05cgDbhREl8ec0=\n-----END CERTIFICATE-----\n",
            "dns_names": null,
            "early_renewal_hours": 0,
            "id": "113718063267383829376880503849123240121",
            "ip_addresses": null,
            "is_ca_certificate": true,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAnNSaUJWiVKPLaSmJ0d52oBklqOdU/Gd9HZFeNzko/8TNR+11\nLu7cXpyLbnteyC7AuQG4EaVBcMNsiy3dLwtXhIXzYArD/DEgl/Kg0HtZYM5A7stB\njcK7Y3whaDJ8SEsGCy40Qv/v1bGKQVxUkARE+EezurR/WBrhvlbonG9RXcXRSqaa\nUCoNqU8idpsR2QeyP1bqKy0OmKdsG08j9Doz6Aw8ILp23Q7jM8tQ5Yi6/Gi2ifuY\nU4VfOLZBu54wX4H9c3F1urfl3Vi+WsjZlmONnBO4uvYF7OEV1thDXuEB60O9iO1f\n/r7kxYp3g6Ds+RxN931fr0QaiqXyi6CGQ4n06wIDAQABAoIBABxcpnukU/MSnBqs\nlGwL21AgvBrLmyb6YDoUrAE4qR14LdewLd0K/XduwBh+3yk8q0XJ9cvbIvaNoPea\nl8GGP5GL1/Oqfr8A83AHROXvKL7FDiEhSP2mFdVsAW6ikq9QQguLk4/6URlIPkSL\nug9BdmegL/S357+7PM/7T53a09AtSaATYxf5hhpGcW1piJQ2zzJC5fMk7F/lYyl6\nN+B8/YwYbpE5JxOS4R6Xd5DMSDRrdNf3V/YV/EjQJcQ4a0htbK96QkTx+ROcIJxX\nKyyA0cmSDdzCkgXYrTFBzaMAIk9cHM4MvFU0/GPrz0nOTndynX7CFSfvHx+xsayW\nZw3wbwECgYEA0JxTQTRI1T8Z/3KqevPr508LRc9o8hG5h6qGRHtHQl5jQmpbNBeH\nJ63NTQO7hYQJAqfBTFWNqBzgC3QXLfN/UcsDSeAQZrjdGendl0PRHJ4C1U1ZaZUc\nv8I5hKoYeNAv8Jsn75ybthGXZXxwAEhPbUAW+Q8pcjVZgfB/Ix4wliECgYEAwHUF\nbyeHwKuZietsyb8FFSHX3OfX0h6xsVEiAeMdUkf0Qf4W2iB3TT8h6Re3wqGBzY6A\nzMgvek9SOaQZjYGCK9q8wa/hr5P/e3pXWsfQxZychXOmfIn+KGuPIXFam5snlRGB\n0tYOaYVgS7UqAbvsIkN2NreDIlqjPcEO0bqoUYsCgYEAo9s2VdAQqVdgP1K878iq\nckyXCSWKRCGB/jsGLcI7Tbk/9AoAS2FzqsoMqUKWR6BXR3unDCNjGjpcDQMJtfE9\n/2wb0CosF9N68ADPKiJ9nSHMDeksow8ZvtF7RmYoxLSaAz6L1tzHPfKBXZipjL8/\njAu8P7MWFfwrqzHRWy86cKECgYEAl7kpiZGucfRWXOaeowXWqew+U0brXBkamOGP\nX9F+gil7pLL9rQS/SMSmpS4vjl7pB/Z6D/cZhuEVv59hDa+1wYD2IfPYhiS02tF+\nIHE6Yy+uLX8ZF0Fqfs8czY6hkd7le52LrX1Xa1Tcr5KpBSjzZaetgEF4PhMackrK\ntgjjPTUCgYBkFxJ+sTBvBSbHS3mvAiLQqbd02L538PlMO4A74Wun3GSw3S9Vcpdj\nZmmV7nZEa3+QE9Ya506zuWAYRGZdpj5IWHXtIeaSv+ftl7p7A8J2BAK1jFspVflC\nkV+0jtXzcIJTqpmE3f993FeJZvYfmeQFW6TY5Jn0hBwkTeFfqPfPPw==\n-----END RSA PRIVATE KEY-----\n",
            "ready_for_renewal": false,
            "set_authority_key_id": false,
            "set_subject_key_id": false,
            "subject": [
              {
                "common_name": "wg.dev.vpn.ca",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null,
            "validity_end_time": "2034-11-11T15:12:21.656803-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T15:12:21.656803-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca"
          ]
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.eks.module.eks_managed_node_group[\"one\"].module.user_data.null_resource.validate_cluster_service_cidr",
          "status": "pass"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.eks.module.self_managed_node_group.var.platform",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": null
    }
  ]
}

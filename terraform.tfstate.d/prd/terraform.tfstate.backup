{
  "version": 4,
  "terraform_version": "1.9.8",
  "serial": 521,
  "lineage": "45c78aff-cf6f-dfae-441c-9bb82b7ed680",
  "outputs": {
    "cluster_endpoint": {
      "value": "https://FF1355590F94761AE52ED374137CE1B7.gr7.us-east-2.eks.amazonaws.com",
      "type": "string"
    },
    "cluster_name": {
      "value": "eks-7iKC7CvL",
      "type": "string"
    },
    "cluster_security_group_id": {
      "value": "sg-0ac8cd877843216ef",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "us-east-2"
            ],
            "id": "us-east-2",
            "names": [
              "us-east-2a",
              "us-east-2b",
              "us-east-2c"
            ],
            "state": null,
            "timeouts": null,
            "zone_ids": [
              "use2-az1",
              "use2-az2",
              "use2-az3"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "eks",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-7iKC7CvL",
            "name": "eks-7iKC7CvL",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBWVFZVUE3TUFNR1I1NlI1UyUyRjIwMjQxMjAzJTJGdXMtZWFzdC0yJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDEyMDNUMDM1MDA0WiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT05NjA2ZjgzMjY2NDQzNGU1MzFlOTQ3NDcwN2ZlY2JjOThmOTA0YTI0Y2IzMzYyNTQwZGRjNzMzY2M0OTY0ZWFj"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_sqs_queue",
      "name": "queue_notifications",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sqs:us-east-2:585768172288:paystreme-notifications-prd",
            "content_based_deduplication": false,
            "deduplication_scope": "",
            "delay_seconds": 0,
            "fifo_queue": false,
            "fifo_throughput_limit": "",
            "id": "https://sqs.us-east-2.amazonaws.com/585768172288/paystreme-notifications-prd",
            "kms_data_key_reuse_period_seconds": 300,
            "kms_master_key_id": "",
            "max_message_size": 262144,
            "message_retention_seconds": 60,
            "name": "paystreme-notifications-prd",
            "name_prefix": "",
            "policy": "",
            "receive_wait_time_seconds": 0,
            "redrive_allow_policy": "",
            "redrive_policy": "",
            "sqs_managed_sse_enabled": true,
            "tags": {},
            "tags_all": {},
            "url": "https://sqs.us-east-2.amazonaws.com/585768172288/paystreme-notifications-prd",
            "visibility_timeout_seconds": 30
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "vpn",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:subnet/subnet-086c51e0bafc21586",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.8.0/22",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-086c51e0bafc21586",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "585768172288",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "VPN subnet for client connections"
            },
            "tags_all": {
              "Name": "VPN subnet for client connections"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "resources_name",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": "0",
          "schema_version": 0,
          "attributes": {
            "id": "prd",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "prd",
                "resource_version": "36356",
                "uid": "77c4f7b2-b4be-483a-92fb-bd9e92c120ed"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service_v1",
      "name": "traefik-dashboard",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "traefik/traefik-dashboard",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "traefik-dashboard",
                "namespace": "traefik",
                "resource_version": "36794",
                "uid": "02761879-952b-412f-9eeb-c1f626a89c51"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.3.48",
                "cluster_ips": [
                  "172.20.3.48"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 9000,
                    "protocol": "TCP",
                    "target_port": "9000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/name": "traefik"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "suffix",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "7iKC7CvL",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "7iKC7CvL",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.cognito",
      "mode": "managed",
      "type": "aws_cognito_user_pool",
      "name": "user_pool",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_recovery_setting": [
              {
                "recovery_mechanism": [
                  {
                    "name": "verified_email",
                    "priority": 1
                  },
                  {
                    "name": "verified_phone_number",
                    "priority": 2
                  }
                ]
              }
            ],
            "admin_create_user_config": [
              {
                "allow_admin_create_user_only": false,
                "invite_message_template": []
              }
            ],
            "alias_attributes": null,
            "arn": "arn:aws:cognito-idp:us-east-2:585768172288:userpool/us-east-2_f4yK97Xw4",
            "auto_verified_attributes": [],
            "creation_date": "2024-11-22T00:10:02Z",
            "custom_domain": "",
            "deletion_protection": "ACTIVE",
            "device_configuration": [],
            "domain": "",
            "email_configuration": [
              {
                "configuration_set": "",
                "email_sending_account": "DEVELOPER",
                "from_email_address": "no-reply@walletguru.co",
                "reply_to_email_address": "",
                "source_arn": "arn:aws:ses:us-east-2:585768172288:identity/walletguru.co"
              }
            ],
            "email_verification_message": "\u003c!DOCTYPE html\u003e  \u003chtml lang='en'\u003e  \u003chead\u003e  \u003cmeta charset='UTF-8'\u003e  \u003cmeta name='viewport' content='width=device-width, initial-scale=1.0'\u003e  \u003ctitle\u003e\u003c/title\u003e  \u003cstyle\u003e        body {            font-family: Arial, sans-serif;            background-color: #f4f4f4;            margin: 0;            padding: 0;        }        .email-container {            margin: 0 auto;            background-color: #ffffff;            padding: 20px;        }        .header {            display: flex;            justify-content: center; /* Center content horizontally */            align-items: center; /* Center content vertically */            padding-bottom: 20px;        }        .header img {          width: 50px;          height: 50px;          margin-right: 10px;        }        .content {            padding: 20px;            text-align: left;        }        .content h1 {            color: #000000;        }        .content p {            color: #333333;            font-size: 16px;            line-height: 1.5;        }        .activation-code {            font-weight: bold;            color: #000000;        }        .footer {            text-align: left;            color: #999999;            font-size: 12px;            padding-top: 20px;            padding-left: 20px;        }  \u003c/style\u003e  \u003c/head\u003e  \u003cbody\u003e  \u003cdiv class='email-container'\u003e  \u003cdiv class='header'\u003e  \u003cimg src='  https://walletguru-dev.s3.us-east-2.amazonaws.com/logo.png'  alt='Wallet Guru Logo'\u003e  \u003ch2\u003eWallet guru\u003c/h2\u003e  \u003c/div\u003e  \u003cdiv class='content'\u003e  \u003ch1\u003eHi,\u003c/h1\u003e  \u003cp\u003eWe received a request to update the password for your account.\u003c/p\u003e  \u003cp\u003eTo proceed, please use the following verification code (OTP): \u003cspan class='activation-code'\u003e{####}\u003c/span\u003e\u003c/p\u003e  \u003cbr\u003e  \u003cp\u003eThis OTP is valid for the next 05:00 minutes.\u003c/p\u003e  \u003c/div\u003e  \u003cdiv class='footer'\u003e  \u003cp\u003eIf you did not request this update, please disregard this email.\u003c/p\u003e  \u003cp\u003eIf you need further assistance, don't hesitate to contact us.\u003c/p\u003e  \u003cp\u003eBest regards, \u003cbr\u003e Wallet Guru Support Team\u003c/p\u003e  \u003c/div\u003e  \u003c/div\u003e  \u003c/body\u003e  \u003c/html\u003e",
            "email_verification_subject": "Verification Code to Update Your Password",
            "endpoint": "cognito-idp.us-east-2.amazonaws.com/us-east-2_f4yK97Xw4",
            "estimated_number_of_users": 4,
            "id": "us-east-2_f4yK97Xw4",
            "lambda_config": [],
            "last_modified_date": "2024-11-22T00:10:02Z",
            "mfa_configuration": "OFF",
            "name": "user-auth",
            "password_policy": [
              {
                "minimum_length": 8,
                "require_lowercase": true,
                "require_numbers": true,
                "require_symbols": true,
                "require_uppercase": true,
                "temporary_password_validity_days": 7
              }
            ],
            "schema": [
              {
                "attribute_data_type": "String",
                "developer_only_attribute": false,
                "mutable": true,
                "name": "email",
                "number_attribute_constraints": [],
                "required": true,
                "string_attribute_constraints": [
                  {
                    "max_length": "256",
                    "min_length": "1"
                  }
                ]
              },
              {
                "attribute_data_type": "String",
                "developer_only_attribute": false,
                "mutable": true,
                "name": "name",
                "number_attribute_constraints": [],
                "required": true,
                "string_attribute_constraints": [
                  {
                    "max_length": "256",
                    "min_length": "1"
                  }
                ]
              }
            ],
            "sms_authentication_message": "",
            "sms_configuration": [],
            "sms_verification_message": "",
            "software_token_mfa_configuration": [],
            "tags": {},
            "tags_all": {},
            "user_attribute_update_settings": [],
            "user_pool_add_ons": [],
            "username_attributes": [
              "email"
            ],
            "username_configuration": [],
            "verification_message_template": [
              {
                "default_email_option": "CONFIRM_WITH_CODE",
                "email_message": "\u003c!DOCTYPE html\u003e  \u003chtml lang='en'\u003e  \u003chead\u003e  \u003cmeta charset='UTF-8'\u003e  \u003cmeta name='viewport' content='width=device-width, initial-scale=1.0'\u003e  \u003ctitle\u003e\u003c/title\u003e  \u003cstyle\u003e        body {            font-family: Arial, sans-serif;            background-color: #f4f4f4;            margin: 0;            padding: 0;        }        .email-container {            margin: 0 auto;            background-color: #ffffff;            padding: 20px;        }        .header {            display: flex;            justify-content: center; /* Center content horizontally */            align-items: center; /* Center content vertically */            padding-bottom: 20px;        }        .header img {          width: 50px;          height: 50px;          margin-right: 10px;        }        .content {            padding: 20px;            text-align: left;        }        .content h1 {            color: #000000;        }        .content p {            color: #333333;            font-size: 16px;            line-height: 1.5;        }        .activation-code {            font-weight: bold;            color: #000000;        }        .footer {            text-align: left;            color: #999999;            font-size: 12px;            padding-top: 20px;            padding-left: 20px;        }  \u003c/style\u003e  \u003c/head\u003e  \u003cbody\u003e  \u003cdiv class='email-container'\u003e  \u003cdiv class='header'\u003e  \u003cimg src='  https://walletguru-dev.s3.us-east-2.amazonaws.com/logo.png'  alt='Wallet Guru Logo'\u003e  \u003ch2\u003eWallet guru\u003c/h2\u003e  \u003c/div\u003e  \u003cdiv class='content'\u003e  \u003ch1\u003eHi,\u003c/h1\u003e  \u003cp\u003eWe received a request to update the password for your account.\u003c/p\u003e  \u003cp\u003eTo proceed, please use the following verification code (OTP): \u003cspan class='activation-code'\u003e{####}\u003c/span\u003e\u003c/p\u003e  \u003cbr\u003e  \u003cp\u003eThis OTP is valid for the next 05:00 minutes.\u003c/p\u003e  \u003c/div\u003e  \u003cdiv class='footer'\u003e  \u003cp\u003eIf you did not request this update, please disregard this email.\u003c/p\u003e  \u003cp\u003eIf you need further assistance, don't hesitate to contact us.\u003c/p\u003e  \u003cp\u003eBest regards, \u003cbr\u003e Wallet Guru Support Team\u003c/p\u003e  \u003c/div\u003e  \u003c/div\u003e  \u003c/body\u003e  \u003c/html\u003e",
                "email_message_by_link": "",
                "email_subject": "Verification Code to Update Your Password",
                "email_subject_by_link": "",
                "sms_message": ""
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.cognito",
      "mode": "managed",
      "type": "aws_cognito_user_pool_client",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_token_validity": 120,
            "allowed_oauth_flows": [],
            "allowed_oauth_flows_user_pool_client": false,
            "allowed_oauth_scopes": [],
            "analytics_configuration": [],
            "auth_session_validity": 3,
            "callback_urls": [],
            "client_secret": "m341j8k4jg3bjfdekt3fhjkd3fggim4mah76bf39j8du3d4ti70",
            "default_redirect_uri": "",
            "enable_propagate_additional_user_context_data": false,
            "enable_token_revocation": true,
            "explicit_auth_flows": [
              "ALLOW_ADMIN_USER_PASSWORD_AUTH",
              "ALLOW_CUSTOM_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH",
              "ALLOW_USER_PASSWORD_AUTH",
              "ALLOW_USER_SRP_AUTH"
            ],
            "generate_secret": true,
            "id": "lt2upai9cj2qvjpr2kd7r58kc",
            "id_token_validity": 60,
            "logout_urls": [],
            "name": "cognito-client",
            "prevent_user_existence_errors": "ENABLED",
            "read_attributes": [],
            "refresh_token_validity": 30,
            "supported_identity_providers": [],
            "token_validity_units": [
              {
                "access_token": "minutes",
                "id_token": "minutes",
                "refresh_token": "days"
              }
            ],
            "user_pool_id": "us-east-2_f4yK97Xw4",
            "write_attributes": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_secret"
              }
            ]
          ],
          "dependencies": [
            "module.cognito.aws_cognito_user_pool.user_pool"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Attempts-AlarmHigh-3b417ebd-25f5-488c-a1e3-ce74a9a5b8be",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Attempts-AlarmLow-b8f3cd62-cce9-47b2-a1ef-4d3fc0318bc7",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Attempts-ProvisionedCapacityHigh-b9e7ed2e-d3b2-4963-8ab2-924c9f69cc75",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Attempts-ProvisionedCapacityLow-685770a1-abb4-4fc5-9153-16bd6e440a40"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:087fc2d5-46b3-4ba7-b4e0-8f5f4933dcd7:resource/dynamodb/table/Attempts:policyName/DynamoDBReadCapacityUtilization:table/Attempts",
            "id": "DynamoDBReadCapacityUtilization:table/Attempts",
            "name": "DynamoDBReadCapacityUtilization:table/Attempts",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Attempts",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Attempts-AlarmHigh-4255efd1-17e5-4e4c-91f9-09326088e04c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Attempts-AlarmLow-fa16046f-6b2a-4b41-a34e-cbc9767b3012",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Attempts-ProvisionedCapacityHigh-5b0896c1-1fc5-43a4-9a90-6203e227b6b9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Attempts-ProvisionedCapacityLow-667c5a1c-66e3-4f52-ab75-07b63534828e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:ca2f7bb9-3dae-44a1-b874-43dc1d3f56cd:resource/dynamodb/table/Attempts:policyName/DynamoDBWriteCapacityUtilization:table/Attempts",
            "id": "DynamoDBWriteCapacityUtilization:table/Attempts",
            "name": "DynamoDBWriteCapacityUtilization:table/Attempts",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Attempts",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26087fc2d546b34ba7b4e08f5f4933dcd7",
            "id": "table/Attempts",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Attempts",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26ca2f7bb93dae44a1b87443dc1d3f56cd",
            "id": "table/Attempts",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Attempts",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Attempts",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Attempts",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Attempts",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "Attempts"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "Attempts"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments-AlarmHigh-95fe377b-2a62-4170-9088-c73dfb7c2849",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments-AlarmLow-4e6b8c55-038e-497d-babe-e234deb4526c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityHigh-dcc028ba-263c-44a2-b52b-0b93944f19d4",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityLow-0ceabb3d-6095-42d6-a9ce-6052b8b4bd42"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:89e9b768-b580-4993-bee9-f5d0b56aaa31:resource/dynamodb/table/ClearPayments:policyName/DynamoDBReadCapacityUtilization:table/ClearPayments",
            "id": "DynamoDBReadCapacityUtilization:table/ClearPayments",
            "name": "DynamoDBReadCapacityUtilization:table/ClearPayments",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmHigh-c1fff604-99c5-4572-bc8e-38b2ac7ecc53",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmLow-cf109cc9-3b4a-412e-9b80-58e4cb32157c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-41dfbc40-0905-4a6b-8c99-d08fddb661a2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityLow-19e7028b-b160-49b7-b690-c45e432db8de"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:c942c9be-66e7-4203-8e7d-8cef095f2ed5:resource/dynamodb/table/ClearPayments/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments-AlarmHigh-db47e63d-0fc2-4eac-9b53-be4c81a5edeb",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments-AlarmLow-a0b96da5-4e64-4e03-ae8e-0c6e0bfb477b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityHigh-63adc475-872b-40de-8c81-52d2534194e2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityLow-0a692ffb-1dbf-4e1b-b418-d23ce4352079"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:f0cd5368-dc4b-4740-a2b8-321af6fd7f8b:resource/dynamodb/table/ClearPayments:policyName/DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "id": "DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "name": "DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmHigh-bd24d411-141f-4b8d-83a5-f7594028ecff",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmLow-541f834c-5591-4ad9-bbd2-266ec9e006fd",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-e41dc26e-9f39-4d99-9199-9160bca4892c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityLow-2a0fbbd8-5e29-4c30-9dd6-e162ae8e502e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:d020b3cb-6f4f-4c1b-be57-a4faf0eb1fa8:resource/dynamodb/table/ClearPayments/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2689e9b768b5804993bee9f5d0b56aaa31",
            "id": "table/ClearPayments",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26c942c9be66e742038e7d8cef095f2ed5",
            "id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26f0cd5368dc4b4740a2b8321af6fd7f8b",
            "id": "table/ClearPayments",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26d020b3cb6f4f4c1bbe57a4faf0eb1fa8",
            "id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/ClearPayments",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "ClearPayments",
            "import_table": [],
            "local_secondary_index": [],
            "name": "ClearPayments",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "ClearPayments"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "ClearPayments"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations-AlarmHigh-c25641a7-d68e-44ab-a093-68cc9586ff28",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations-AlarmLow-a85392f5-3036-4ad4-859d-7ec93d0aa705",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityHigh-f1198505-154c-44c5-bcc4-3b2f5b9fdc96",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityLow-c091868e-89ae-41b4-be53-1c6581687daa"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:fd9ff755-1d9b-4850-911a-7f21406e9638:resource/dynamodb/table/FeeConfigurations:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmHigh-a05f2131-6e41-4ef5-90aa-6d9ab9f188d2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmLow-0b0d822d-e536-4a03-9227-a182da8a2a2b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityHigh-084ce1d6-16c0-488c-a672-959d88884d99",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityLow-dc32a3c3-6d40-475d-ad48-7414b080f59d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:792f9b60-d4f7-46ce-8f91-c1ceb27518f1:resource/dynamodb/table/FeeConfigurations/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmHigh-146b1696-2163-4570-9eee-010762a17414",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmLow-511b002f-9728-4aae-9fa5-c86e74cec8bc",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-87c0ecac-c2d1-40f5-aa70-aa9aa3f60fbe",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityLow-a7fb9e5f-5980-420c-abf9-75530778fb8f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:2a7f6ae8-9ab1-4b1d-a63e-7770661b19f6:resource/dynamodb/table/FeeConfigurations/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations-AlarmHigh-50254024-533c-409c-bb07-f10ade170edd",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations-AlarmLow-371fb9d5-1d88-4246-91f9-780352ca37ee",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityHigh-6d77de7c-d048-4e5a-a57c-491235b5b65b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityLow-943da2f4-e7b8-4641-970c-640dc65282f2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:5a081020-9781-4bb4-9d79-e160d4573e87:resource/dynamodb/table/FeeConfigurations:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmHigh-7f846745-9868-4980-8b88-94afe489bed2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmLow-d4cac1d7-a689-4e85-8786-9e18d184d4c2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityHigh-8af8c55a-11ab-417c-af3a-4956570043c1",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityLow-2f45d35a-193b-4f39-a688-1127c8aef13b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:68502194-3d2a-42b5-94e6-a7a0a039f0b4:resource/dynamodb/table/FeeConfigurations/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmHigh-f4f28ea4-bd85-4c46-80fe-d9994d19920a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmLow-46e4cd52-c9dd-461d-9b76-e32a169cdb42",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-1e9b7bed-9490-4138-bec2-b4548f7c7558",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityLow-ba273b3e-d7b9-47c2-8e51-2ce48e29a42c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:593775ab-7c8e-4b95-96cc-fbd4079747e8:resource/dynamodb/table/FeeConfigurations/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26fd9ff7551d9b4850911a7f21406e9638",
            "id": "table/FeeConfigurations",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26792f9b60d4f746ce8f91c1ceb27518f1",
            "id": "table/FeeConfigurations/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d262a7f6ae89ab14b1da63e7770661b19f6",
            "id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d265a08102097814bb49d79e160d4573e87",
            "id": "table/FeeConfigurations",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26685021943d2a42b594e6a7a0a039f0b4",
            "id": "table/FeeConfigurations/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26593775ab7c8e4b9596ccfbd4079747e8",
            "id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/FeeConfigurations",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "FeeConfigurations",
            "import_table": [],
            "local_secondary_index": [],
            "name": "FeeConfigurations",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "FeeConfigurations"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "FeeConfigurations"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules-AlarmHigh-f34c32aa-f903-4a8c-bdc3-507bd5e2129a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules-AlarmLow-c06d4567-7dbd-4296-8e30-6f20d9efe8a1",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules-ProvisionedCapacityHigh-df3a342d-b89c-46e6-ad4d-372c5882fadf",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules-ProvisionedCapacityLow-4c60aa77-85db-441d-af18-3d88caa87d15"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:3f8a44f8-7ab7-4455-b971-80c54e88eb34:resource/dynamodb/table/Modules:policyName/DynamoDBReadCapacityUtilization:table/Modules",
            "id": "DynamoDBReadCapacityUtilization:table/Modules",
            "name": "DynamoDBReadCapacityUtilization:table/Modules",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmHigh-1b1f1deb-55c2-498d-bc32-5c267e05b64f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmLow-77e03171-8f47-435a-b966-41786d428ee0",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityHigh-7019b907-f283-40a8-bfe7-e28bf2465f1e",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityLow-645e9c92-4e49-4b5b-9e17-5609b46ac5b2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:28b19765-23dd-47d2-a498-9d6c29ef0fb3:resource/dynamodb/table/Modules/index/BelongsIndex:policyName/DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules-AlarmHigh-50d0ca8d-9f36-485d-8112-66f3a8a78fc0",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules-AlarmLow-8ed1edc6-85a5-4ea4-bf91-d178071bde63",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules-ProvisionedCapacityHigh-c64cd51e-db71-4d11-871c-c2b623c405f4",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules-ProvisionedCapacityLow-c041e01d-3760-4ab2-9c54-a22252bb1f15"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:4769e3b7-afd3-41c1-8f02-61c28f3661a8:resource/dynamodb/table/Modules:policyName/DynamoDBWriteCapacityUtilization:table/Modules",
            "id": "DynamoDBWriteCapacityUtilization:table/Modules",
            "name": "DynamoDBWriteCapacityUtilization:table/Modules",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmHigh-229d8e34-8ff3-4aac-aa55-4792724bf0fd",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmLow-70781823-4640-4292-8921-a66e5cd4ed13",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityHigh-e4c5b36a-7650-4a6d-ba2e-d02f25d6dff8",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityLow-873669c6-92c7-4e41-a5cf-5fb9f08ea5f6"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:9003358d-8e32-4234-9d13-06b3ae6730c9:resource/dynamodb/table/Modules/index/BelongsIndex:policyName/DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d263f8a44f87ab74455b97180c54e88eb34",
            "id": "table/Modules",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2628b1976523dd47d2a4989d6c29ef0fb3",
            "id": "table/Modules/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules/index/BelongsIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d264769e3b7afd341c18f0261c28f3661a8",
            "id": "table/Modules",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d269003358d8e3242349d1306b3ae6730c9",
            "id": "table/Modules/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules/index/BelongsIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Modules",
            "attribute": [
              {
                "name": "Belongs",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Belongs",
                "name": "BelongsIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Modules",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Modules",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "Modules"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "Modules"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings-AlarmHigh-01f6343e-cc26-4a95-b69b-30359fa0ffbb",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings-AlarmLow-a9734091-ebf5-42e0-9003-67ec0354617b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityHigh-70f4b275-3406-4320-b4e8-612f94c72130",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityLow-0099c27e-9843-49a8-aae3-43c56cf02c0b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:4ed2934e-fb80-417f-97b0-09d998be3aaa:resource/dynamodb/table/NotificationSettings:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmHigh-de987b72-e9d7-43c5-a87a-b209e03bec2f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmLow-3a74d410-f167-4e4a-9ffb-72ee4a75de2a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityHigh-24d65f64-1d32-47b2-9b0f-8985daf6ba89",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityLow-d724d319-fccb-43d1-a63a-ba432d21b429"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:2c1dafdb-3627-4302-861c-1a877a7ab4a5:resource/dynamodb/table/NotificationSettings/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmHigh-b82e5f57-845c-41f9-b608-ca25aa78634d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmLow-366b6375-e980-42a6-aef5-7de136875621",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityHigh-8c80e714-1ac1-4a2a-a46c-b9715ee62640",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityLow-2f12e351-900f-4b5d-803b-0634709f9ff2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:a1444c43-0956-4988-a179-fb40d1a4a1cd:resource/dynamodb/table/NotificationSettings/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings-AlarmHigh-8d35a836-8249-42f0-9ea1-34f0c90132d2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings-AlarmLow-e572aa06-296b-4d0c-b9d3-c975d0dab6be",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityHigh-4e8dda6b-3454-4299-bdc1-c651331e9c31",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityLow-dad15ddd-7238-4099-89e9-f1828876994f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:2db4af6e-ab1b-455e-a7a2-91843a43b854:resource/dynamodb/table/NotificationSettings:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmHigh-6f037292-bb27-4401-838f-147c7694fbde",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmLow-bbe9dc6f-29ff-4c7f-87a6-a7b76e284db0",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityHigh-13c0b6d1-b2d7-4580-8027-7507624fcf81",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityLow-5f7c8e3f-0b0d-42f8-9f3b-9173bf06df3b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:3cf07c21-a90a-4744-b945-ed18b8bb33ab:resource/dynamodb/table/NotificationSettings/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmHigh-2bde970a-5c3a-458f-b3e3-4a7a6c7cc0d6",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmLow-fc65eb50-32de-4d49-87c2-84351ef63dba",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityHigh-2b285e03-a39f-4449-a60f-2b52da2e4f53",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityLow-f86473cf-cfbd-4b06-ab69-e1db3b052ba0"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:fb9191a9-c102-41a6-88a4-69edf5048478:resource/dynamodb/table/NotificationSettings/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d264ed2934efb80417f97b009d998be3aaa",
            "id": "table/NotificationSettings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d262c1dafdb36274302861c1a877a7ab4a5",
            "id": "table/NotificationSettings/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26a1444c4309564988a179fb40d1a4a1cd",
            "id": "table/NotificationSettings/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d262db4af6eab1b455ea7a291843a43b854",
            "id": "table/NotificationSettings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d263cf07c21a90a4744b945ed18b8bb33ab",
            "id": "table/NotificationSettings/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26fb9191a9c10241a688a469edf5048478",
            "id": "table/NotificationSettings/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/NotificationSettings",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "NotificationSettings",
            "import_table": [],
            "local_secondary_index": [],
            "name": "NotificationSettings",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "sth",
              "Name": "NotificationSettings"
            },
            "tags_all": {
              "Environment": "sth",
              "Name": "NotificationSettings"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps-AlarmHigh-3e172b77-f9ac-40f6-a61f-6fc0e3797f32",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps-AlarmLow-2bb0e4e8-00a2-4db9-9dcd-6bd774005bc5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps-ProvisionedCapacityHigh-a41ab8f6-8f9a-4b31-9195-f621b07b53d9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps-ProvisionedCapacityLow-58a2a840-e2db-4c43-9918-df0f7f98bd24"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:f65608ae-df3b-4d5e-a2dd-069ac48d6709:resource/dynamodb/table/Otps:policyName/DynamoDBReadCapacityUtilization:table/Otps",
            "id": "DynamoDBReadCapacityUtilization:table/Otps",
            "name": "DynamoDBReadCapacityUtilization:table/Otps",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmHigh-060cd5fe-9566-4d75-a3bd-28c5a3acc31f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmLow-4843f20e-7b4a-494a-95e5-20e5e0ff9d70",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityHigh-a3a7608b-cbb4-42f7-8703-af5bd20f470d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityLow-469e3569-5e9e-446d-a2a2-e5df682a406c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:6713eaf1-190a-4fbf-9b76-830d91caf41b:resource/dynamodb/table/Otps/index/EmailIndex:policyName/DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmHigh-954fc22a-8a51-407c-b20e-809b7f8604d3",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmLow-3c35b7af-f8ec-4ec4-8517-3df271ea8122",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityHigh-ad9a6e11-b698-4441-905f-89794ee0066d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityLow-ef383a34-d4b4-4913-99a5-55a45a1345fc"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:0878d988-8d42-44cb-8ed0-85e2a51bcb2c:resource/dynamodb/table/Otps/index/OtpIndex:policyName/DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/OtpIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps-AlarmHigh-46d276c0-0e31-40b7-8bc9-95313e5855ba",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps-AlarmLow-ebe8ee8a-3175-4728-b8ee-74a5486b8a78",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps-ProvisionedCapacityHigh-166e7b3c-9292-486c-a4c5-a75317dd44b5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps-ProvisionedCapacityLow-9b7fc0b7-5405-4edc-9630-ed5e013ca623"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:f39cdf25-76a8-46e0-a246-6df95efdad1c:resource/dynamodb/table/Otps:policyName/DynamoDBWriteCapacityUtilization:table/Otps",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmHigh-cbbde710-a014-4eef-8790-3c2880c82da2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmLow-ca05979b-2192-4bdd-881b-ae06465f0e26",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityHigh-2d6685b9-f722-439e-94f8-eb5c79987892",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityLow-f2a5219e-51ff-4995-a8bd-1eee6de02a6a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:c7a871dc-6460-4a31-9195-e172a70b8389:resource/dynamodb/table/Otps/index/EmailIndex:policyName/DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmHigh-60122d75-d695-4f3d-b666-e3f00ccfe44c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmLow-064272ef-642f-4cd6-9506-fc97606fc624",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityHigh-afba33b7-d301-4e9a-a894-75519a599bc7",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityLow-e9658260-4c61-4de9-b012-7737189bdf38"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:9761cbf0-b338-4a04-acf7-c1c8de0b69d1:resource/dynamodb/table/Otps/index/OtpIndex:policyName/DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/OtpIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26f65608aedf3b4d5ea2dd069ac48d6709",
            "id": "table/Otps",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d266713eaf1190a4fbf9b76830d91caf41b",
            "id": "table/Otps/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/EmailIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d260878d9888d4244cb8ed085e2a51bcb2c",
            "id": "table/Otps/index/OtpIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/OtpIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26f39cdf2576a846e0a2466df95efdad1c",
            "id": "table/Otps",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26c7a871dc64604a319195e172a70b8389",
            "id": "table/Otps/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/EmailIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d269761cbf0b3384a04acf7c1c8de0b69d1",
            "id": "table/Otps/index/OtpIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/OtpIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Otps",
            "attribute": [
              {
                "name": "Email",
                "type": "S"
              },
              {
                "name": "Otp",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Email",
                "name": "EmailIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Otp",
                "name": "OtpIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Email",
            "id": "Otps",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Otps",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "Otps"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "Otps"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "Ttl",
                "enabled": true
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters-AlarmHigh-0156f32d-e326-44e2-95ed-5b54174ae5c5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters-AlarmLow-e7ca5208-bb1b-4ccc-a0ba-f80b1a51d5be",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityHigh-76c8cb8a-a599-47ac-a880-17ce59aa2da9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityLow-6683e038-c0a6-4659-b763-e40639815aa5"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:92fb918a-9e23-4ea9-a98e-838a79551711:resource/dynamodb/table/PaymentParameters:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmHigh-1dc9efa7-0a0b-4839-b99a-a0e82f8a1505",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmLow-25f51718-d43e-4a7b-baa5-ecd386a1ba95",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-d29cdf28-2dc6-4598-b283-aab7999bf4bc",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityLow-ee7aba06-f350-42b9-90b0-f4af68c579df"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:7207513e-fb92-413e-811f-25a1ca625e58:resource/dynamodb/table/PaymentParameters/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmHigh-1410d25b-70a1-4f59-8211-b3a191021ab8",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmLow-c83447e7-4702-4279-8330-58d1a495b8a5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityHigh-22a68291-4530-4b2c-b7a1-84ad85daeb1b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityLow-d941cfa9-e855-4786-a200-2bd8bbc6610f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:824a78eb-3ec9-4741-9368-514a02aa1d76:resource/dynamodb/table/PaymentParameters/index/IntervalIndex:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters-AlarmHigh-04b845a4-1792-4607-87e0-5d67d3cf60ea",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters-AlarmLow-4dd492c6-86b4-4993-948e-59c6f3299026",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityHigh-e57c7ec4-ee06-4296-9578-ffc59738f7d2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityLow-eb22b434-3f79-4ca8-a0b4-b5b1a2fea042"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:c8aaae1a-273c-4062-858a-d9a3ced173c8:resource/dynamodb/table/PaymentParameters:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmHigh-5f3511e9-e591-463a-adac-73f528df14fa",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmLow-c2372e0d-db43-4789-b04f-0dffd6f0c348",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-baa3d823-501c-44a2-8561-9e0b2efbc352",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityLow-8f6fd965-6212-4c7a-991f-2319d2c4f3c1"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:fc3b4d2a-8561-42f5-9b8d-28dc4cbadbf0:resource/dynamodb/table/PaymentParameters/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmHigh-20ea8785-7892-4a21-9475-e469ca1f6f2c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmLow-2c7f8f72-0cd8-4b20-8b89-de0f6047248b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityHigh-a0eeca9a-e93e-4f7b-a201-ca4253f7bfab",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityLow-c7819f0c-b284-4908-9584-75030b370cdc"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:cdc0729d-3517-4b62-8041-1cd0bac4f039:resource/dynamodb/table/PaymentParameters/index/IntervalIndex:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2692fb918a9e234ea9a98e838a79551711",
            "id": "table/PaymentParameters",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d267207513efb92413e811f25a1ca625e58",
            "id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26824a78eb3ec947419368514a02aa1d76",
            "id": "table/PaymentParameters/index/IntervalIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26c8aaae1a273c4062858ad9a3ced173c8",
            "id": "table/PaymentParameters",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26fc3b4d2a856142f59b8d28dc4cbadbf0",
            "id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26cdc0729d35174b6280411cd0bac4f039",
            "id": "table/PaymentParameters/index/IntervalIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/PaymentParameters",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "Interval",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Interval",
                "name": "IntervalIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "PaymentParameters",
            "import_table": [],
            "local_secondary_index": [],
            "name": "PaymentParameters",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "PaymentParameters"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "PaymentParameters"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Providers-AlarmHigh-9dbb713f-351d-4953-b4ee-a3f099dee2c9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Providers-AlarmLow-8f5f5342-7c57-452b-874f-01549f355133",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Providers-ProvisionedCapacityHigh-10ba81b1-1884-4472-8032-d502b1f56672",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Providers-ProvisionedCapacityLow-75d9225e-66a4-4a2a-bf0d-ef8a61c3df69"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:5ef863da-e34f-4d65-8457-5536e6eb8f5b:resource/dynamodb/table/Providers:policyName/DynamoDBReadCapacityUtilization:table/Providers",
            "id": "DynamoDBReadCapacityUtilization:table/Providers",
            "name": "DynamoDBReadCapacityUtilization:table/Providers",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Providers",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Providers-AlarmHigh-dfa81a33-d924-457c-80e7-e1fbd475092d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Providers-AlarmLow-9012f1d9-0fc4-4881-88f1-56e13ebf5cd6",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Providers-ProvisionedCapacityHigh-c179a226-4fba-452c-ba7d-2e69fae5617c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Providers-ProvisionedCapacityLow-347ebb0a-f5c7-4a81-a983-279cf4d5a510"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:5070fbcb-b421-4e8d-b148-6c4c9991ad9f:resource/dynamodb/table/Providers:policyName/DynamoDBWriteCapacityUtilization:table/Providers",
            "id": "DynamoDBWriteCapacityUtilization:table/Providers",
            "name": "DynamoDBWriteCapacityUtilization:table/Providers",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Providers",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d265ef863dae34f4d6584575536e6eb8f5b",
            "id": "table/Providers",
            "max_capacity": 100,
            "min_capacity": 40,
            "resource_id": "table/Providers",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d265070fbcbb4214e8db1486c4c9991ad9f",
            "id": "table/Providers",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Providers",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Providers",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Providers",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Providers",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "Providers"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "Providers"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Rates-AlarmHigh-41f4eeb2-3edb-416b-9d2e-876c5304f9da",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Rates-AlarmLow-53ae2fc3-c43a-4c1e-9534-81af4a7f6a4f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Rates-ProvisionedCapacityHigh-9afe02b2-b4f3-442f-a4ee-3d3bf5c5d285",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Rates-ProvisionedCapacityLow-c96010ca-9e7c-4448-a858-0cb37c5c96fb"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:4e402294-edb4-4be7-804c-d92b16c038f0:resource/dynamodb/table/Rates:policyName/DynamoDBReadCapacityUtilization:table/Rates",
            "id": "DynamoDBReadCapacityUtilization:table/Rates",
            "name": "DynamoDBReadCapacityUtilization:table/Rates",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Rates",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Rates-AlarmHigh-c20adabd-390f-4e79-85fb-8e11473d20e1",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Rates-AlarmLow-4def35e9-3ac0-47fd-908d-8ef03126b930",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Rates-ProvisionedCapacityHigh-2ce50d32-77e2-44f1-943b-602301936900",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Rates-ProvisionedCapacityLow-340e1025-ed4a-440c-9aa0-86babb02d9a4"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:6a3e49a9-e8a0-4a3f-8daf-f404001a0bb6:resource/dynamodb/table/Rates:policyName/DynamoDBWriteCapacityUtilization:table/Rates",
            "id": "DynamoDBWriteCapacityUtilization:table/Rates",
            "name": "DynamoDBWriteCapacityUtilization:table/Rates",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Rates",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d264e402294edb44be7804cd92b16c038f0",
            "id": "table/Rates",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Rates",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d266a3e49a9e8a04a3f8daff404001a0bb6",
            "id": "table/Rates",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Rates",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Rates",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Rates",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Rates",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "Rates"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "Rates"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds-AlarmHigh-0dcf8ed4-18d0-4384-af53-480d6c7dc5cb",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds-AlarmLow-13dc4648-4757-4b87-825a-3f6c215d2061",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds-ProvisionedCapacityHigh-c648d210-915f-4853-b1bd-9321f7f96a65",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds-ProvisionedCapacityLow-230935ce-a658-4d71-8b0c-3d56d3f6289f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:5f0b5c01-e189-4ef4-8e9c-98fbc6350788:resource/dynamodb/table/Refunds:policyName/DynamoDBReadCapacityUtilization:table/Refunds",
            "id": "DynamoDBReadCapacityUtilization:table/Refunds",
            "name": "DynamoDBReadCapacityUtilization:table/Refunds",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmHigh-f9565134-20d2-4fb1-a3e8-fbaf04201e27",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmLow-fa98175f-e4ae-4de3-b435-ed9eaac0f5d2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-74affbce-11c6-4c6f-9a98-318d2293cc41",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityLow-9545a10a-90c4-4d0d-9bb9-7edea74009a5"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:2f410788-bb0a-4a36-98b6-3c3b4e51e09b:resource/dynamodb/table/Refunds/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds-AlarmHigh-3571c277-9240-439e-b89a-7f4a2846fc63",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds-AlarmLow-a92e7887-0423-42c3-a1a5-a1a1b317c52d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds-ProvisionedCapacityHigh-5aa16f81-2024-4586-980d-c0565396a399",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds-ProvisionedCapacityLow-217fe484-968b-47a8-a2bb-964d98294534"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:9e84e264-5638-417d-a1e7-6a42baf3bca4:resource/dynamodb/table/Refunds:policyName/DynamoDBWriteCapacityUtilization:table/Refunds",
            "id": "DynamoDBWriteCapacityUtilization:table/Refunds",
            "name": "DynamoDBWriteCapacityUtilization:table/Refunds",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmHigh-4e36163b-83a5-4a86-b7cc-6181f8110d2e",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmLow-eb2797a1-9dac-4fef-85f8-e5f2a26170d2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-9fd01897-a00a-4fb6-8a47-86455760f18b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityLow-584d79a5-2152-4fa0-8afb-e72508a8a0c2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:a59197e6-65a3-4b2e-b4c5-e625caea3f18:resource/dynamodb/table/Refunds/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d265f0b5c01e1894ef48e9c98fbc6350788",
            "id": "table/Refunds",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d262f410788bb0a4a3698b63c3b4e51e09b",
            "id": "table/Refunds/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d269e84e2645638417da1e76a42baf3bca4",
            "id": "table/Refunds",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26a59197e665a34b2eb4c5e625caea3f18",
            "id": "table/Refunds/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Refunds",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Refunds",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Refunds",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "Refunds"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "Refunds"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles-AlarmHigh-65422661-947b-48a7-a0bc-053b057de284",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles-AlarmLow-b06adf27-feed-4a2f-9deb-1fe842573fc0",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles-ProvisionedCapacityHigh-c487454b-38b7-4758-9b2f-4602e1ca26a2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles-ProvisionedCapacityLow-7115e766-6d91-4daa-bac9-33c0e3b0c768"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:fd5be256-ff34-472e-ad55-350e203ec70d:resource/dynamodb/table/Roles:policyName/DynamoDBReadCapacityUtilization:table/Roles",
            "id": "DynamoDBReadCapacityUtilization:table/Roles",
            "name": "DynamoDBReadCapacityUtilization:table/Roles",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmHigh-5e28d06f-2611-442e-acf0-0c775c279282",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmLow-d7d5a3e9-910f-42aa-94bf-b254b62644b6",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityHigh-a555a283-1f3b-46c5-a6f4-919a8a1feced",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityLow-d41107db-9ea0-4ec3-82f4-18fed5fe37db"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:19e7c6b1-ad1a-4629-8378-e752f50439ad:resource/dynamodb/table/Roles/index/ProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles-AlarmHigh-a7c4ee61-e004-4c8a-a366-ff679f11f0c0",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles-AlarmLow-d48c5424-10ab-4a34-aeb2-4631b059898b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles-ProvisionedCapacityHigh-7df112a1-dd46-4e61-a683-5a4813fc659c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles-ProvisionedCapacityLow-57aae0c4-8747-4ea6-be07-410b0e376ccc"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:acd46f1c-3d7d-427f-b9c3-1c957741c29f:resource/dynamodb/table/Roles:policyName/DynamoDBWriteCapacityUtilization:table/Roles",
            "id": "DynamoDBWriteCapacityUtilization:table/Roles",
            "name": "DynamoDBWriteCapacityUtilization:table/Roles",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmHigh-316edd4d-8798-4e91-aeb9-9fe8aaa57160",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmLow-cd5a0448-8a3b-4067-8d73-530eb1699bfd",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityHigh-88b83735-edb5-4291-89bd-98fba6a61536",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityLow-df07003b-d949-47fa-a3ea-5e4a850a5d03"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:bc006bb3-9988-4fa1-b6eb-8bcc92516184:resource/dynamodb/table/Roles/index/ProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26fd5be256ff34472ead55350e203ec70d",
            "id": "table/Roles",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2619e7c6b1ad1a46298378e752f50439ad",
            "id": "table/Roles/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26acd46f1c3d7d427fb9c31c957741c29f",
            "id": "table/Roles",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26bc006bb399884fa1b6eb8bcc92516184",
            "id": "table/Roles/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Roles",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ProviderId",
                "name": "ProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Roles",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Roles",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "Roles"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "Roles"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings-AlarmHigh-d69be7e4-ca7d-4f27-8d7e-cd60e160352a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings-AlarmLow-52b7e375-cb6a-4142-9b83-a4120c008627",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings-ProvisionedCapacityHigh-bf57a376-2fc5-4bb1-a76c-1fe3651ee622",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings-ProvisionedCapacityLow-8b305a20-0f54-4d93-a7b6-ec0e957c9e84"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:b8008673-9102-40ee-864e-b1f4a6d0b616:resource/dynamodb/table/Settings:policyName/DynamoDBReadCapacityUtilization:table/Settings",
            "id": "DynamoDBReadCapacityUtilization:table/Settings",
            "name": "DynamoDBReadCapacityUtilization:table/Settings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmHigh-c8fa251a-f1cd-4c0f-ae56-68cdb5651de6",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmLow-f3c94432-00e8-422d-94f1-2e6ccf1ac0fb",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityHigh-4f9bca19-b133-4a94-bb89-dd22e3d270f5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityLow-6c5a4fdc-95c7-44b2-b4f0-4ba1f25d7305"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:769347d7-6f27-4fb5-b7dd-4b0d54aa469c:resource/dynamodb/table/Settings/index/BelongsIndex:policyName/DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings-AlarmHigh-9cd67504-0579-4678-9556-53198d0d993a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings-AlarmLow-0227761e-f645-4f29-9154-b1a6d34eb9fc",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings-ProvisionedCapacityHigh-04ff27d4-d354-44f7-8add-52560692dc96",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings-ProvisionedCapacityLow-cba94d0a-b366-4572-8ca6-8c44853849d0"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:88ee55af-6b0f-40cf-a86e-732f5ffed866:resource/dynamodb/table/Settings:policyName/DynamoDBWriteCapacityUtilization:table/Settings",
            "id": "DynamoDBWriteCapacityUtilization:table/Settings",
            "name": "DynamoDBWriteCapacityUtilization:table/Settings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmHigh-52511328-61cf-47ea-a0d6-c52c68661aff",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmLow-28098c4d-ed9f-410f-94e3-afac68b34d24",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityHigh-c71f46a2-171c-4223-8d85-319390e36a25",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityLow-7e848bd2-5ba9-494a-8977-04df3a19dc35"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:04b78ca9-9a90-4adc-b92e-64df403f1e2e:resource/dynamodb/table/Settings/index/BelongsIndex:policyName/DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26b8008673910240ee864eb1f4a6d0b616",
            "id": "table/Settings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26769347d76f274fb5b7dd4b0d54aa469c",
            "id": "table/Settings/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings/index/BelongsIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2688ee55af6b0f40cfa86e732f5ffed866",
            "id": "table/Settings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2604b78ca99a904adcb92e64df403f1e2e",
            "id": "table/Settings/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings/index/BelongsIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Settings",
            "attribute": [
              {
                "name": "Belongs",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Belongs",
                "name": "BelongsIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Settings",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Settings",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "Settings"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "Settings"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys-AlarmHigh-4cfbb4c7-8458-45a9-a06f-ce78d82e9b1b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys-AlarmLow-7c9b0e64-e3c2-4749-9e4f-fed043dde1e4",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityHigh-aa5a40bb-6ad4-4c94-ab8a-6624a56bed5e",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityLow-04a30407-0b06-4bf3-aff1-9a5849e7a308"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:819ddb04-cb3e-4b17-89ce-bc1f57474afc:resource/dynamodb/table/SocketKeys:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmHigh-767de638-0947-4375-b75e-3263b21b8b5b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmLow-c0cbc417-3d5c-4eab-af9e-30a968b43965",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityHigh-07d9bb46-ece3-4b5e-a684-9d813cebcedc",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityLow-27f5a70f-b410-429e-8128-07d6631fe87e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:e99c6c79-ccc6-4ea9-8b9f-e82ce0995391:resource/dynamodb/table/SocketKeys/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmHigh-fc1afd0f-7623-4526-86dc-13da9fcfbd4b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmLow-c2a7f9c6-3292-48b0-ba14-84bf07b39b2f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-e402ec65-59a6-47b1-932d-53b19e9c6b75",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityLow-71b783db-6683-46ad-91c6-b1b6bb5b9d41"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:5352d68c-8c91-44e5-a489-3cdd244539a1:resource/dynamodb/table/SocketKeys/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmHigh-6fb3195c-02a2-418e-9d78-834172c65d5e",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmLow-fa1f2e3f-39e7-4440-9640-138da479063a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityHigh-60b81f5c-ec53-4c4d-8755-4eb0f844c281",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityLow-258b390b-e161-472b-88b6-a4a1fef4606c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:4f9b46ab-ee66-406d-9d55-9899e536e4c6:resource/dynamodb/table/SocketKeys/index/PublicKeyIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys-AlarmHigh-e885837e-9c98-4379-a860-8140a80b1b7e",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys-AlarmLow-c515b6b5-0c3f-4639-8d6b-2eaf0c72409a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityHigh-f3034736-78fc-4794-a9dc-1b0a1aae465f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityLow-f213b67e-f89b-4282-8d38-945fb652169f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:02ba8cab-8cd2-483d-89d0-3bd4e50eeec7:resource/dynamodb/table/SocketKeys:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmHigh-147b2697-925c-4113-8c43-81e701314267",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmLow-c824d57f-17a4-41e4-a2f2-d0f7c171284c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityHigh-286dab91-5ec9-439c-a928-32f41568b067",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityLow-e1e8fc52-2096-420e-b88a-2a1ae81fea6a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:7b7c1553-54d7-4602-8f8b-bbd21d706f1e:resource/dynamodb/table/SocketKeys/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmHigh-feea9c4a-c724-4524-8b67-94c2a9d87c9e",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmLow-fb75b1ba-aad1-4dce-886b-02f0fa84a042",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-6fbd1910-8e69-43bf-9920-db27a858c504",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityLow-e2c9d69c-5272-40cb-b215-3c927d79ed31"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:1bb00be0-c9a5-4b91-8ca4-525091d2522e:resource/dynamodb/table/SocketKeys/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmHigh-77bef20f-8c0a-42fe-b9f4-e2a7783dfa9d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmLow-0ca23a19-f972-4b6c-926c-0b891fa2b87a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityHigh-92a9497b-dc8d-4cb4-9975-b5ee2d15e1c0",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityLow-7f19babb-70f4-42bf-8a67-540d2407afbc"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:95a58e9c-418a-49d7-bb34-a6503c9a6e38:resource/dynamodb/table/SocketKeys/index/PublicKeyIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26819ddb04cb3e4b1789cebc1f57474afc",
            "id": "table/SocketKeys",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26e99c6c79ccc64ea98b9fe82ce0995391",
            "id": "table/SocketKeys/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d265352d68c8c9144e5a4893cdd244539a1",
            "id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d264f9b46abee66406d9d559899e536e4c6",
            "id": "table/SocketKeys/index/PublicKeyIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2602ba8cab8cd2483d89d03bd4e50eeec7",
            "id": "table/SocketKeys",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d267b7c155354d746028f8bbbd21d706f1e",
            "id": "table/SocketKeys/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d261bb00be0c9a54b918ca4525091d2522e",
            "id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2695a58e9c418a49d7bb34a6503c9a6e38",
            "id": "table/SocketKeys/index/PublicKeyIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/SocketKeys",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "PublicKey",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "PublicKey",
                "name": "PublicKeyIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "SocketKeys",
            "import_table": [],
            "local_secondary_index": [],
            "name": "SocketKeys",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "SocketKeys"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "SocketKeys"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode-AlarmHigh-509fdc6a-9293-4b16-a95e-3963c487e099",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode-AlarmLow-a6ab6e63-ddef-451b-a5e0-c85bfa543548",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityHigh-4317a901-036e-4806-829f-037399ac88c5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityLow-19e6b0ef-b3be-460a-808d-3c98c5bfb609"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:3867dd6b-2552-4d07-bafb-3f8dbd54d94a:resource/dynamodb/table/StatusCode:policyName/DynamoDBReadCapacityUtilization:table/StatusCode",
            "id": "DynamoDBReadCapacityUtilization:table/StatusCode",
            "name": "DynamoDBReadCapacityUtilization:table/StatusCode",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmHigh-f4f47bbb-d96d-42b8-b338-5c357007ec2b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmLow-ea10c522-920e-4a46-b504-a5fdfab3d309",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityHigh-beb60045-55b1-46d7-8546-04ef2aa173c0",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityLow-cf8be272-5a26-403d-b62b-0af9e96f0f1b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:35f6995a-c2e3-4e00-a168-396a56b780f6:resource/dynamodb/table/StatusCode/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode-AlarmHigh-e6ee3dd3-faf5-43b1-8332-586994510523",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode-AlarmLow-979580d7-5666-4332-8807-24c24fd3e1fe",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityHigh-288b46b9-f449-4c24-a774-5d9b544a3898",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityLow-5e15c536-424a-4d97-af9e-9d8da19ffe72"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:b5398f21-2a36-4cef-9f72-907c02efe995:resource/dynamodb/table/StatusCode:policyName/DynamoDBWriteCapacityUtilization:table/StatusCode",
            "id": "DynamoDBWriteCapacityUtilization:table/StatusCode",
            "name": "DynamoDBWriteCapacityUtilization:table/StatusCode",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmHigh-babfec2f-10ba-4aa8-af69-d538563c7dae",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmLow-c5ca584d-c039-4c78-a2d6-7c89b8a0bd47",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityHigh-e7a4e1c8-5368-4c7e-a0e2-6409c84c7cfb",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityLow-4ec48739-b64c-4520-8be7-f8d6f2548521"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:78964b77-a466-4a28-b3e8-844c9bb5e941:resource/dynamodb/table/StatusCode/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d263867dd6b25524d07bafb3f8dbd54d94a",
            "id": "table/StatusCode",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2635f6995ac2e34e00a168396a56b780f6",
            "id": "table/StatusCode/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26b5398f212a364cef9f72907c02efe995",
            "id": "table/StatusCode",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2678964b77a4664a28b3e8844c9bb5e941",
            "id": "table/StatusCode/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/StatusCode",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "StatusCode",
            "import_table": [],
            "local_secondary_index": [],
            "name": "StatusCode",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "StatusCode"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "StatusCode"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals-AlarmHigh-45bd2316-e048-466b-a53b-2cdf508fa5da",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals-AlarmLow-73620143-fadb-49da-ab57-5df8976986bf",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityHigh-85417779-8253-47af-a1ce-fb9d233c4751",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityLow-1c2dc501-f9ba-4617-946e-2e5114330afc"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:56150263-7244-4b72-9738-49263067b2cf:resource/dynamodb/table/TimeIntervals:policyName/DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "id": "DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "name": "DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmHigh-3070ab1a-216c-4798-bd33-a98054a40fce",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmLow-4118a94d-0978-4ac6-93b7-5ecbf4444aa9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityHigh-9559d6d2-0661-4e68-a124-8afb19ab5ce4",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityLow-0596fd62-e51a-4718-9efc-cd01d9ea8531"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:dbbcda03-da7a-4667-b89f-860b05a86d0c:resource/dynamodb/table/TimeIntervals/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals-AlarmHigh-ea2957ce-f344-48aa-bf95-17d6bfe5a43b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals-AlarmLow-4e8db75a-3c2f-4c77-984b-72f54a32117b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityHigh-1ca2a53e-c482-4a86-9d83-899d6f55563a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityLow-a14c1b02-6229-43ae-9f6d-3eb6d32d1935"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:fea54093-223c-481d-9ad1-495955566e39:resource/dynamodb/table/TimeIntervals:policyName/DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "id": "DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "name": "DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmHigh-42d0df66-fda1-4eaf-b291-952e91977324",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmLow-a304d117-05fd-44e4-abbc-30d0c9102ddd",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityHigh-a2795967-46f5-4646-96c6-cc9b5ad1e8bd",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityLow-bc26f1e5-3ab7-470a-8287-da2e59fe718e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:22addb76-4d80-4778-9fdf-e9c510149ff6:resource/dynamodb/table/TimeIntervals/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d265615026372444b72973849263067b2cf",
            "id": "table/TimeIntervals",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26dbbcda03da7a4667b89f860b05a86d0c",
            "id": "table/TimeIntervals/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26fea54093223c481d9ad1495955566e39",
            "id": "table/TimeIntervals",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2622addb764d8047789fdfe9c510149ff6",
            "id": "table/TimeIntervals/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/TimeIntervals",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "TimeIntervals",
            "import_table": [],
            "local_secondary_index": [],
            "name": "TimeIntervals",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "TimeIntervals"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "TimeIntervals"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions-AlarmHigh-163396d2-b1fe-4c27-b118-200ea247a2e9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions-AlarmLow-1b05b12b-d591-4978-9564-8ead0fafa162",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions-ProvisionedCapacityHigh-07cf7217-601b-422e-b75b-915493897a96",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions-ProvisionedCapacityLow-1e7ed148-f5bf-4f91-b29e-f36d85442b98"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:91b8fb2d-c33e-453d-bdd1-e56c3813e456:resource/dynamodb/table/Transactions:policyName/DynamoDBReadCapacityUtilization:table/Transactions",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmHigh-8ca1d14d-f8a9-436a-8733-4e92dd0b7956",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmLow-36fb32a2-c360-4f6c-a952-9891ff0f8b3a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityHigh-4b7b36fe-86c6-45fa-97be-bc3060833ba4",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityLow-0c61936b-bb88-40c2-9c29-2005cea0be33"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:9e7a8485-c1d5-4ae9-8da2-de98da41fa14:resource/dynamodb/table/Transactions/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmHigh-252305bd-2b45-4302-8cab-0d5115e9c557",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmLow-7642c1a5-605b-4f67-b3f8-120cf848f999",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityHigh-d3d65feb-2d27-4f2b-beef-7cba60429bde",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityLow-a4cefa07-66f9-45a1-9e36-c4d6852b36a2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:962b3e19-f635-4d21-ab42-7d7f0a7b865e:resource/dynamodb/table/Transactions/index/OutgoingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmHigh-a7268052-e8e9-4910-a140-0eca70b9d1bd",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmLow-a42fd770-18d7-4215-ba50-d9caf7c474c3",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-d927ebbc-a274-4b3b-8934-d802c4560970",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-b6b33d16-7891-4839-a022-5bf5381ee706"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:bfacba6d-cd2d-4095-bba7-103d447217e0:resource/dynamodb/table/Transactions/index/IncomingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmHigh-9e0d0307-0479-4b50-94cf-9c732bbaa1f8",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmLow-e0f2e7fa-94e8-49f5-b6fb-6c5cca19a7e6",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityHigh-52e70062-baac-4eba-983a-b8eb10d99e73",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityLow-3991978c-8e8c-4aa0-a8f8-574506639593"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:47c27786-9490-4b5b-8067-0b6a0cf0a975:resource/dynamodb/table/Transactions/index/WalletAddressIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmHigh-f83740e4-c998-4312-97e8-2245debd7eb2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmLow-630a5ebe-ab63-4959-adce-fad598c2ef43",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityHigh-4f2c57f4-b07f-4912-b493-f627809f0f5e",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityLow-13503ccd-13b0-45a1-ba7b-99407050116b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:a510a0ca-9cb4-49ae-b70f-f34ce28342bc:resource/dynamodb/table/Transactions/index/ReceiverUrlIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions-AlarmHigh-c376dc3c-a52f-41b8-9f02-2b0bee4a2866",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions-AlarmLow-70c13d0c-1baf-4a38-b6a3-11405b8d4e11",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions-ProvisionedCapacityHigh-4c8d5939-821f-44b9-ad0e-35eddc2368af",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions-ProvisionedCapacityLow-0b0b3083-c556-49c3-87c6-893f76f8d8ff"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:590f1a35-c214-41a9-9a11-6903e901c244:resource/dynamodb/table/Transactions:policyName/DynamoDBWriteCapacityUtilization:table/Transactions",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmHigh-c36a9950-b184-43ba-bc2d-bf3f7b46ebfc",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmLow-2a09e297-2398-423c-8e2b-3d189491055b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityHigh-ec19aede-7a9f-476e-b279-37a7993c6235",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityLow-5b05975c-2fc4-4c1d-ae6c-0094d76562bb"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:8a29793d-8a5b-4477-a773-58689cb63952:resource/dynamodb/table/Transactions/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmHigh-a360a330-6a23-4168-b187-3113705e66d0",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmLow-058e4e5c-30df-4c16-9025-9a49bcb9be32",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityHigh-1de83da1-f1fc-4a97-859a-72618636f229",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityLow-550ac83b-5305-4c54-a487-f0d6cee89675"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:25716957-c323-4724-8314-ce152eba6a9a:resource/dynamodb/table/Transactions/index/OutgoingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmHigh-f7da7426-0cbe-4be0-9480-b3a54f8dfe9b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmLow-785d6d59-a7b0-46bd-8f54-6e397dad0f51",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-335c4fe0-532e-4834-aedf-f7b9f57da0e8",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-1c69197a-b6ad-412d-a700-b41ce17d2875"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:361a34b0-d626-4ac7-9616-49f772c69126:resource/dynamodb/table/Transactions/index/IncomingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmHigh-36bb1854-529c-4c8a-85c5-7d630b0f9561",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmLow-f6f46a2a-db74-47b0-bbbf-375be7d82f90",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityHigh-26b08609-12fc-4efd-a70b-cce78e56da50",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityLow-c203709e-83df-4734-ae86-e851f59021b3"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:f71bf918-0380-4155-a148-dba8516eab32:resource/dynamodb/table/Transactions/index/WalletAddressIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmHigh-09e7e339-0ff6-46f8-ade4-23dbb752762f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmLow-71a4c9d4-3849-46d5-b0e0-7893d31a5b9e",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityHigh-a0c6fd52-1964-46f4-9c3a-274155f42f2d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityLow-eb75144c-0c1c-4f03-8ffa-fabd0416df0a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:3111ed7e-046c-4bdb-948d-5c4b14646976:resource/dynamodb/table/Transactions/index/ReceiverUrlIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2691b8fb2dc33e453dbdd1e56c3813e456",
            "id": "table/Transactions",
            "max_capacity": 100,
            "min_capacity": 100,
            "resource_id": "table/Transactions",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d269e7a8485c1d54ae98da2de98da41fa14",
            "id": "table/Transactions/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 10,
            "resource_id": "table/Transactions/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26962b3e19f6354d21ab427d7f0a7b865e",
            "id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 10,
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26bfacba6dcd2d4095bba7103d447217e0",
            "id": "table/Transactions/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 10,
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2647c2778694904b5b80670b6a0cf0a975",
            "id": "table/Transactions/index/WalletAddressIdIndex",
            "max_capacity": 100,
            "min_capacity": 100,
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26a510a0ca9cb449aeb70ff34ce28342bc",
            "id": "table/Transactions/index/ReceiverUrlIndex",
            "max_capacity": 100,
            "min_capacity": 10,
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26590f1a35c21441a99a116903e901c244",
            "id": "table/Transactions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d268a29793d8a5b4477a77358689cb63952",
            "id": "table/Transactions/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2625716957c32347248314ce152eba6a9a",
            "id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26361a34b0d6264ac7961649f772c69126",
            "id": "table/Transactions/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26f71bf91803804155a148dba8516eab32",
            "id": "table/Transactions/index/WalletAddressIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d263111ed7e046c4bdb948d5c4b14646976",
            "id": "table/Transactions/index/ReceiverUrlIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Transactions",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "IncomingPaymentId",
                "type": "S"
              },
              {
                "name": "OutgoingPaymentId",
                "type": "S"
              },
              {
                "name": "ReceiverUrl",
                "type": "S"
              },
              {
                "name": "WalletAddressId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 10,
                "write_capacity": 5
              },
              {
                "hash_key": "IncomingPaymentId",
                "name": "IncomingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 10,
                "write_capacity": 5
              },
              {
                "hash_key": "OutgoingPaymentId",
                "name": "OutgoingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 10,
                "write_capacity": 5
              },
              {
                "hash_key": "ReceiverUrl",
                "name": "ReceiverUrlIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 10,
                "write_capacity": 5
              },
              {
                "hash_key": "WalletAddressId",
                "name": "WalletAddressIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 100,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Transactions",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Transactions",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 100,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "UserIncoming"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "UserIncoming"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming-AlarmHigh-963de877-25db-45b9-ac5b-668ccfb7b893",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming-AlarmLow-32e31232-6493-4e82-9206-53ba54a16b0d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityHigh-a237c744-106c-4980-8446-acf9db8d8b53",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityLow-3a645e16-538e-45cc-8137-6fa6363e022f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:ac33461b-5c57-4ad0-98a2-e2fc0282423c:resource/dynamodb/table/UserIncoming:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmHigh-06c3ce26-938a-42d3-a847-59e4570d4198",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmLow-f2c346b4-335f-4c7a-9310-513cbbbcc1eb",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityHigh-246deb98-0da0-4267-b9cb-06ab93640d7a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityLow-2a2175ae-f3c3-48d3-a745-fadc7c073c2c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:56aa53d8-2cf5-463a-8585-4dfdc8c1925d:resource/dynamodb/table/UserIncoming/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmHigh-61dff1a2-baaa-44c0-a3f7-b17f33cdf76c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmLow-455261b2-a9b1-4f26-a81a-feb6dfa588cf",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityHigh-c3226e11-60d9-47d5-a5e6-f1ce85dbefe2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityLow-8c24622a-fdcd-4e0a-8d9c-7dc2d61fb473"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:152a94d9-aab9-4759-8eea-9ca98dcd7c69:resource/dynamodb/table/UserIncoming/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmHigh-4a411879-5c81-4972-993c-a4a5abf3a0af",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmLow-d161abdc-6270-4227-a75b-ce689d29ffdb",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-18c77804-cb4a-4b45-96fa-2636e0827f57",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityLow-ddf14f92-5ad7-4785-b366-1f0cd952ea80"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:d990502a-5735-453b-950a-fc063887df6f:resource/dynamodb/table/UserIncoming/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmHigh-4c8ad754-5187-44d9-9f0f-da393f56d7df",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmLow-133f2ed2-d1f0-4846-88f6-b9899fed9831",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-00cce9b5-071b-4c47-8680-a0e93133a488",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-6c88e672-9407-410a-b29c-82296ee16963"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:f7044edf-ba12-427c-9225-c1b396770057:resource/dynamodb/table/UserIncoming/index/IncomingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming-AlarmHigh-e318e908-0e1f-4a44-9bc1-3050e8d9928c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming-AlarmLow-4ed95cb1-db62-4b7c-924f-3280d37dfb4d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityHigh-18727909-5c84-4d39-8fd4-48be216826c6",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityLow-925c3cd2-6a70-41e1-8e6e-0480004793da"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:adeebc7a-c8fe-4364-b68a-8fc2d946411e:resource/dynamodb/table/UserIncoming:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmHigh-ec958d7d-b06c-4e11-ad58-da2a46005fd9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmLow-17ddb253-c229-4691-932e-0a421624d9b1",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityHigh-00818d91-3160-4952-b10a-eb5c1c3debab",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityLow-5edf67cf-81a4-4575-8e33-b539259c7074"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:7ac69102-3524-4a37-8b1b-88000a71b016:resource/dynamodb/table/UserIncoming/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmHigh-cd37c70e-7383-4b1b-993f-a407f5db550c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmLow-37702b98-c2e5-419e-8a60-1c00e6505f6b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityHigh-3b653aba-65d2-4c63-a40f-269360599ab6",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityLow-1896e517-0dbd-4a75-8223-1318de699dad"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:025a348b-d61f-43b8-bd16-37a027673a73:resource/dynamodb/table/UserIncoming/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmHigh-be2ed780-caf0-4bb6-9fc2-26678a436a31",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmLow-77322043-c4d0-45d1-bfdd-460e7a62e301",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-2f1347f4-c959-41de-b0a6-e280fed3701f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityLow-6bbab30b-8f68-4f04-aac8-b28c65645cd7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:c1252bd0-baf9-4865-819b-f4047f2147bf:resource/dynamodb/table/UserIncoming/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmHigh-e845cc20-b263-4da5-864e-963f22162dcf",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmLow-c5aa3e9d-3c15-4b28-aa39-5aff0c1abd95",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-124656da-8aea-4411-ad8d-b147a90016ac",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-9074c8f0-2114-4236-8700-2934c5018742"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:96dc5215-0950-41e1-9c23-23376773f6ce:resource/dynamodb/table/UserIncoming/index/IncomingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26ac33461b5c574ad098a2e2fc0282423c",
            "id": "table/UserIncoming",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2656aa53d82cf5463a85854dfdc8c1925d",
            "id": "table/UserIncoming/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26152a94d9aab947598eea9ca98dcd7c69",
            "id": "table/UserIncoming/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26d990502a5735453b950afc063887df6f",
            "id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26f7044edfba12427c9225c1b396770057",
            "id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26adeebc7ac8fe4364b68a8fc2d946411e",
            "id": "table/UserIncoming",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d267ac6910235244a378b1b88000a71b016",
            "id": "table/UserIncoming/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26025a348bd61f43b8bd1637a027673a73",
            "id": "table/UserIncoming/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26c1252bd0baf94865819bf4047f2147bf",
            "id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2696dc5215095041e19c2323376773f6ce",
            "id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/UserIncoming",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "IncomingPaymentId",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "IncomingPaymentId",
                "name": "IncomingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "UserIncoming",
            "import_table": [],
            "local_secondary_index": [],
            "name": "UserIncoming",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "UserIncoming"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "UserIncoming"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users-AlarmHigh-f165879d-f243-46be-9b70-b597511acc7b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users-AlarmLow-11d8ffba-5b01-4003-9add-d5fb5818f28c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users-ProvisionedCapacityHigh-df4532d3-c629-412f-9674-cabbc29310d1",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users-ProvisionedCapacityLow-4bcdaa3e-2bd5-4970-9033-b68ecb7c5c6d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:9cc3a6b0-e554-4ee1-b10b-fbadb0ba60a0:resource/dynamodb/table/Users:policyName/DynamoDBReadCapacityUtilization:table/Users",
            "id": "DynamoDBReadCapacityUtilization:table/Users",
            "name": "DynamoDBReadCapacityUtilization:table/Users",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmHigh-7306e156-9af9-4966-9ca8-9d21ccc92b38",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmLow-c64cd263-4e52-49c0-af88-22c49b34ed31",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityHigh-4c409f33-dc4d-4a75-a4f2-1645bc1640ce",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityLow-6766802e-3c10-4962-8f59-b9656c8adc93"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:7d5deb05-3914-4b89-b5b7-1050624c8a82:resource/dynamodb/table/Users/index/EmailIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmHigh-43158c28-0b6a-43e5-9949-2fc393e9def9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmLow-3111425a-e52c-4d44-9283-05ad6ec5b2c3",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityHigh-d6dc0338-8509-4456-b1c3-477b77d82271",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityLow-d8b712d1-78d8-4557-ac51-a09696145e19"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:ff6c3fae-8a71-4c8e-aa89-087bcab3957e:resource/dynamodb/table/Users/index/UserTypeIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/UserTypeIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmHigh-285c0c9b-ff13-4aca-a527-29bab7505bb2",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmLow-c043ab42-96ff-4137-938d-41ce1b9d8ada",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityHigh-1cc78406-fb7f-46e1-9d92-edc7549c61da",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityLow-2449d66b-406f-43ba-85ad-bb6ef14c4a72"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:0ebf6f20-1044-490c-bf45-5f894755ba74:resource/dynamodb/table/Users/index/PhoneIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/PhoneIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users-AlarmHigh-662f3dec-5db4-4f60-84cf-cbb28c1c18a5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users-AlarmLow-ebc65400-d150-42ac-bf54-39e994d9e842",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users-ProvisionedCapacityHigh-89c5863d-5201-4f91-9610-b8f943d1898d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users-ProvisionedCapacityLow-af889121-d0cd-4a91-b31b-9b82524be091"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:c3514b85-16ca-49b3-9d80-f6020b794614:resource/dynamodb/table/Users:policyName/DynamoDBWriteCapacityUtilization:table/Users",
            "id": "DynamoDBWriteCapacityUtilization:table/Users",
            "name": "DynamoDBWriteCapacityUtilization:table/Users",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmHigh-7cee8aac-2ffa-4e4a-a682-02cfc68458fb",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmLow-5bfe7cfd-4be9-4f7d-8284-73a337a29866",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityHigh-095a4a7a-edd9-4db5-9114-8957411eee61",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityLow-1d395cad-241f-4de2-b7e3-93df03c80df8"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:d6de3dc8-3387-4764-bec2-cbea700ec4d2:resource/dynamodb/table/Users/index/EmailIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmHigh-2234ba08-7679-484d-8d65-51c9cea0e169",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmLow-5b4f6a29-7e4e-42c6-b53b-46d67bcc8aa8",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityHigh-26bd92bb-8d12-46f4-9661-d5628210c1e5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityLow-6048ed0c-d40e-4b5c-960d-1afd6ef88344"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:7befa239-98d6-4a59-93b1-5b5cbab122aa:resource/dynamodb/table/Users/index/UserTypeIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/UserTypeIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmHigh-cc3cca7e-e8bb-492b-8cce-3329ff76f8f4",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmLow-3d166a1f-f5e5-4db4-84bb-9d8059b179f9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityHigh-8d33a49b-7556-425e-92d6-efe8a1b2cdc6",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityLow-d8c02e23-0e55-42a1-9c2c-8c8b0a84714a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:73ea5fae-7fcd-4c74-9f44-495060a1fe34:resource/dynamodb/table/Users/index/PhoneIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/PhoneIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d269cc3a6b0e5544ee1b10bfbadb0ba60a0",
            "id": "table/Users",
            "max_capacity": 100,
            "min_capacity": 40,
            "resource_id": "table/Users",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d267d5deb0539144b89b5b71050624c8a82",
            "id": "table/Users/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/EmailIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26ff6c3fae8a714c8eaa89087bcab3957e",
            "id": "table/Users/index/UserTypeIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/UserTypeIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d260ebf6f201044490cbf455f894755ba74",
            "id": "table/Users/index/PhoneIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/PhoneIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26c3514b8516ca49b39d80f6020b794614",
            "id": "table/Users",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26d6de3dc833874764bec2cbea700ec4d2",
            "id": "table/Users/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/EmailIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d267befa23998d64a5993b15b5cbab122aa",
            "id": "table/Users/index/UserTypeIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/UserTypeIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2673ea5fae7fcd4c749f44495060a1fe34",
            "id": "table/Users/index/PhoneIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/PhoneIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Users",
            "attribute": [
              {
                "name": "Email",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "Phone",
                "type": "S"
              },
              {
                "name": "Type",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Email",
                "name": "EmailIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Phone",
                "name": "PhoneIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Type",
                "name": "UserTypeIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Users",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Users",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "Users"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "Users"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets-AlarmHigh-a053187c-c436-4335-bda7-9cdf4195c7ed",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets-AlarmLow-59ad515d-7075-4414-83c9-db097912cd5c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets-ProvisionedCapacityHigh-05734f98-65a4-4e64-b228-7c0c7f4b0fd9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets-ProvisionedCapacityLow-eb129a02-f35d-4bb5-a705-7a54cb43da34"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:e51e3cf4-56b6-46b7-8ad3-a45df06f49f8:resource/dynamodb/table/Wallets:policyName/DynamoDBReadCapacityUtilization:table/Wallets",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmHigh-0f3d2c3a-3a34-4ada-a8d4-5f492fe5f77d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmLow-665d2ee8-b51a-4aee-bba2-2cdaa628bfa4",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityHigh-c1ffa356-6f22-43ae-b88f-bd30a193ba59",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityLow-3af652cd-d27e-47af-84a6-c21cd09261ff"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:90414557-7083-4245-8a8f-2e5179c6ce00:resource/dynamodb/table/Wallets/index/WalletAddressIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmHigh-3c0d1ebc-dc9a-42c0-bd43-d8faf9231b74",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmLow-2cf24013-3086-4f01-905f-883ebc734a96",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityHigh-3280719d-7fd6-4107-8089-44309ee79b3d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityLow-b5196419-e132-42de-87da-2a6aa9a84879"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:4c6075f4-a6e9-4aec-be24-0d86f158f5f0:resource/dynamodb/table/Wallets/index/RafikiIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmHigh-e24b7627-8681-4de1-a36c-c98cb020bfea",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmLow-2c7bcda0-1fdc-4d1e-b253-e1bf495ee087",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityHigh-3f875ae9-7b40-4d2d-a072-48a14a93376d",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityLow-0bcc6b3a-94f8-462c-9563-6b4b4d735da2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:0c14fd7a-4c95-4565-8520-0e47d17507ac:resource/dynamodb/table/Wallets/index/ProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmHigh-80b7d390-7891-4e4f-afe8-34efb9a4f627",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmLow-a94345ef-fe07-4d7c-823c-fcc94aae7a9e",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityHigh-77e40009-1b7f-4291-b361-1a280be03982",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityLow-b275fb71-61e8-4efb-8f5e-787cb29839e0"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:5cc4dcf0-141d-429a-be3d-ec1f9d5e9596:resource/dynamodb/table/Wallets/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets-AlarmHigh-f1b447d7-f392-4baf-84e9-9ce8b974aab5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets-AlarmLow-537ed501-2dce-4439-983d-89faaa5efd10",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets-ProvisionedCapacityHigh-5ec82124-b75b-4567-bce6-3e6be60d4b26",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets-ProvisionedCapacityLow-bc47032b-ea2a-4006-9669-51b2c74b1a32"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:91bb3b40-e7e2-468e-910f-48f56e9e4199:resource/dynamodb/table/Wallets:policyName/DynamoDBWriteCapacityUtilization:table/Wallets",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmHigh-40b2f623-fc6c-444f-9c9c-c6fb0183653f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmLow-8a3395c2-7720-4454-ae82-5fe567c82bb3",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityHigh-1133066a-4e27-4c77-8913-1b0d9d684325",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityLow-f72c11d1-1604-4639-bbd1-6e2cec459cc1"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:af330932-30e8-40ed-9df7-2b501a6bf386:resource/dynamodb/table/Wallets/index/WalletAddressIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmHigh-88adbf99-bcc2-484d-ad01-6799764fb66c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmLow-6fe2375b-49e9-4816-84eb-f3a2ae3567da",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityHigh-7a80a733-a9c9-4a7d-9cf1-a40e35d138fb",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityLow-d2ae140b-49b3-46fc-9438-992f8108dfd1"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:0a4e4383-0f86-4c05-8fd1-1fd068a2d337:resource/dynamodb/table/Wallets/index/RafikiIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmHigh-349a7664-32cf-4e21-b073-1fcac273b35f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmLow-6756e22b-72f9-472c-9b29-f43aecf4e5c5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityHigh-667e54f0-b857-4b7f-be68-5fc4c8e9b73a",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityLow-1453557d-9fef-4cad-9bac-335441099fad"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:01a77eb5-e064-41ee-a80e-c57325ae2334:resource/dynamodb/table/Wallets/index/ProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmHigh-f6ca0432-d0e3-4ca3-a879-0b6cd783700c",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmLow-f04cd0c3-2762-40a8-9f82-3009b1216658",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityHigh-a5882535-f792-4697-8307-abcd7d5e352b",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityLow-193f7d5a-ac6d-46b6-a27f-6d8e2c433633"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:670c7fa5-fa3e-4292-8fc1-89ff03634b97:resource/dynamodb/table/Wallets/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26e51e3cf456b646b78ad3a45df06f49f8",
            "id": "table/Wallets",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2690414557708342458a8f2e5179c6ce00",
            "id": "table/Wallets/index/WalletAddressIndex",
            "max_capacity": 100,
            "min_capacity": 100,
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d264c6075f4a6e94aecbe240d86f158f5f0",
            "id": "table/Wallets/index/RafikiIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d260c14fd7a4c95456585200e47d17507ac",
            "id": "table/Wallets/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d265cc4dcf0141d429abe3dec1f9d5e9596",
            "id": "table/Wallets/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/UserIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2691bb3b40e7e2468e910f48f56e9e4199",
            "id": "table/Wallets",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26af33093230e840ed9df72b501a6bf386",
            "id": "table/Wallets/index/WalletAddressIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d260a4e43830f864c058fd11fd068a2d337",
            "id": "table/Wallets/index/RafikiIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d2601a77eb5e06441eea80ec57325ae2334",
            "id": "table/Wallets/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26670c7fa5fa3e42928fc189ff03634b97",
            "id": "table/Wallets/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/UserIdIndex",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/Wallets",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ProviderId",
                "type": "S"
              },
              {
                "name": "RafikiId",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              },
              {
                "name": "WalletAddress",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ProviderId",
                "name": "ProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "RafikiId",
                "name": "RafikiIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "WalletAddress",
                "name": "WalletAddressIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 100,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Wallets",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Wallets",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "Wallets"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "Wallets"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/WebSocketActions-AlarmHigh-f04d8ad0-3135-48a8-820c-d7350082d9e9",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/WebSocketActions-AlarmLow-1cff3cbb-a0c9-4572-8b3e-a9ad67973d5f",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityHigh-4f0af5ae-36fc-43dd-8ddf-0fab3deeade5",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityLow-2c94e5da-19f2-44e8-8729-ea4a4d196bee"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:be0b8bce-a487-48a2-8eb0-6281dc22e0ba:resource/dynamodb/table/WebSocketActions:policyName/DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "id": "DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "name": "DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/WebSocketActions",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/WebSocketActions-AlarmHigh-7cc0bfc5-fa38-4782-b077-c60f2e7d24c0",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/WebSocketActions-AlarmLow-d5fd81c6-98e3-4e34-a237-86a5074e8560",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityHigh-5674a0de-42cd-40e9-962b-5bcaac588fe1",
              "arn:aws:cloudwatch:us-east-2:585768172288:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityLow-493c21dd-49db-4023-9cb5-2535adb537ab"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:585768172288:scalingPolicy:b2f9a77b-5d9c-4781-a920-d255a3a7b26a:resource/dynamodb/table/WebSocketActions:policyName/DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "id": "DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "name": "DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/WebSocketActions",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26be0b8bcea48748a28eb06281dc22e0ba",
            "id": "table/WebSocketActions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/WebSocketActions",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:585768172288:scalable-target/0d26b2f9a77b5d9c4781a920d255a3a7b26a",
            "id": "table/WebSocketActions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/WebSocketActions",
            "role_arn": "arn:aws:iam::585768172288:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:585768172288:table/WebSocketActions",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "WebSocketActions",
            "import_table": [],
            "local_secondary_index": [],
            "name": "WebSocketActions",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "prd",
              "Name": "WebSocketActions"
            },
            "tags_all": {
              "Environment": "prd",
              "Name": "WebSocketActions"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_dev_k8s_ecr_login_renew_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "name": "k8s-ecr-login-renew-role"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "namespaces"
                    ],
                    "verbs": [
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "secrets",
                      "serviceaccounts",
                      "serviceaccounts/token"
                    ],
                    "verbs": [
                      "delete",
                      "create",
                      "patch",
                      "get",
                      "list"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-role",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "namespaces"
                    ],
                    "verbs": [
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "secrets",
                      "serviceaccounts",
                      "serviceaccounts/token"
                    ],
                    "verbs": [
                      "delete",
                      "create",
                      "patch",
                      "get",
                      "list"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_dev_k8s_ecr_login_renew_binding",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "name": "k8s-ecr-login-renew-binding"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "k8s-ecr-login-renew-role"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "k8s-ecr-login-renew-account",
                    "namespace": "prd"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-binding",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "k8s-ecr-login-renew-role"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "k8s-ecr-login-renew-account",
                    "namespace": "prd"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "cronjob_dev_k8s_ecr_login_renew_cron",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "batch/v1",
                "kind": "CronJob",
                "metadata": {
                  "name": "k8s-ecr-login-renew-cron",
                  "namespace": "prd"
                },
                "spec": {
                  "jobTemplate": {
                    "spec": {
                      "template": {
                        "metadata": null,
                        "spec": {
                          "containers": [
                            {
                              "env": [
                                {
                                  "name": "AWS_ACCESS_KEY_ID",
                                  "value": "AKIAYQYUA7MAMGR56R5S"
                                },
                                {
                                  "name": "AWS_SECRET_ACCESS_KEY",
                                  "value": "ySn0Z6D3cmVCVPwehJs038XImpD4myOMsE4mgH8S"
                                },
                                {
                                  "name": "AWS_REGION",
                                  "value": "us-east-2"
                                },
                                {
                                  "name": "DOCKER_SECRET_NAME",
                                  "value": "docker-cfg"
                                },
                                {
                                  "name": "TARGET_NAMESPACE",
                                  "value": "prd"
                                }
                              ],
                              "image": "nabsul/k8s-ecr-login-renew:v1.7.1",
                              "imagePullPolicy": "IfNotPresent",
                              "name": "k8s-ecr-login-renew"
                            }
                          ],
                          "restartPolicy": "Never",
                          "serviceAccountName": "k8s-ecr-login-renew-account"
                        }
                      }
                    }
                  },
                  "schedule": "* */6 * * *"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "jobTemplate": [
                        "object",
                        {
                          "spec": [
                            "object",
                            {
                              "template": [
                                "object",
                                {
                                  "metadata": "dynamic",
                                  "spec": [
                                    "object",
                                    {
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "image": "string",
                                              "imagePullPolicy": "string",
                                              "name": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "restartPolicy": "string",
                                      "serviceAccountName": "string"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "schedule": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "batch/v1",
                "kind": "CronJob",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-cron",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "concurrencyPolicy": "Allow",
                  "failedJobsHistoryLimit": 1,
                  "jobTemplate": {
                    "metadata": {
                      "annotations": null,
                      "creationTimestamp": null,
                      "deletionGracePeriodSeconds": null,
                      "deletionTimestamp": null,
                      "finalizers": null,
                      "generateName": null,
                      "generation": null,
                      "labels": null,
                      "managedFields": null,
                      "name": null,
                      "namespace": null,
                      "ownerReferences": null,
                      "resourceVersion": null,
                      "selfLink": null,
                      "uid": null
                    },
                    "spec": {
                      "activeDeadlineSeconds": null,
                      "backoffLimit": null,
                      "backoffLimitPerIndex": null,
                      "completionMode": null,
                      "completions": null,
                      "managedBy": null,
                      "manualSelector": null,
                      "maxFailedIndexes": null,
                      "parallelism": null,
                      "podFailurePolicy": {
                        "rules": null
                      },
                      "podReplacementPolicy": null,
                      "selector": {
                        "matchExpressions": null,
                        "matchLabels": null
                      },
                      "successPolicy": {
                        "rules": null
                      },
                      "suspend": null,
                      "template": {
                        "metadata": {
                          "annotations": null,
                          "creationTimestamp": null,
                          "deletionGracePeriodSeconds": null,
                          "deletionTimestamp": null,
                          "finalizers": null,
                          "generateName": null,
                          "generation": null,
                          "labels": null,
                          "managedFields": null,
                          "name": null,
                          "namespace": null,
                          "ownerReferences": null,
                          "resourceVersion": null,
                          "selfLink": null,
                          "uid": null
                        },
                        "spec": {
                          "activeDeadlineSeconds": null,
                          "affinity": {
                            "nodeAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": null
                              }
                            },
                            "podAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": null
                            },
                            "podAntiAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": null
                            }
                          },
                          "automountServiceAccountToken": null,
                          "containers": [
                            {
                              "args": null,
                              "command": null,
                              "env": [
                                {
                                  "name": "AWS_ACCESS_KEY_ID",
                                  "value": "AKIAYQYUA7MAMGR56R5S",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "AWS_SECRET_ACCESS_KEY",
                                  "value": "ySn0Z6D3cmVCVPwehJs038XImpD4myOMsE4mgH8S",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "AWS_REGION",
                                  "value": "us-east-2",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "DOCKER_SECRET_NAME",
                                  "value": "docker-cfg",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "TARGET_NAMESPACE",
                                  "value": "prd",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                }
                              ],
                              "envFrom": null,
                              "image": "nabsul/k8s-ecr-login-renew:v1.7.1",
                              "imagePullPolicy": "IfNotPresent",
                              "lifecycle": {
                                "postStart": {
                                  "exec": {
                                    "command": null
                                  },
                                  "httpGet": {
                                    "host": null,
                                    "httpHeaders": null,
                                    "path": null,
                                    "port": null,
                                    "scheme": null
                                  },
                                  "sleep": {
                                    "seconds": null
                                  },
                                  "tcpSocket": {
                                    "host": null,
                                    "port": null
                                  }
                                },
                                "preStop": {
                                  "exec": {
                                    "command": null
                                  },
                                  "httpGet": {
                                    "host": null,
                                    "httpHeaders": null,
                                    "path": null,
                                    "port": null,
                                    "scheme": null
                                  },
                                  "sleep": {
                                    "seconds": null
                                  },
                                  "tcpSocket": {
                                    "host": null,
                                    "port": null
                                  }
                                }
                              },
                              "livenessProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "name": "k8s-ecr-login-renew",
                              "ports": null,
                              "readinessProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "resizePolicy": null,
                              "resources": {
                                "claims": null,
                                "limits": null,
                                "requests": null
                              },
                              "restartPolicy": null,
                              "securityContext": {
                                "allowPrivilegeEscalation": null,
                                "appArmorProfile": {
                                  "localhostProfile": null,
                                  "type": null
                                },
                                "capabilities": {
                                  "add": null,
                                  "drop": null
                                },
                                "privileged": null,
                                "procMount": null,
                                "readOnlyRootFilesystem": null,
                                "runAsGroup": null,
                                "runAsNonRoot": null,
                                "runAsUser": null,
                                "seLinuxOptions": {
                                  "level": null,
                                  "role": null,
                                  "type": null,
                                  "user": null
                                },
                                "seccompProfile": {
                                  "localhostProfile": null,
                                  "type": null
                                },
                                "windowsOptions": {
                                  "gmsaCredentialSpec": null,
                                  "gmsaCredentialSpecName": null,
                                  "hostProcess": null,
                                  "runAsUserName": null
                                }
                              },
                              "startupProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "stdin": null,
                              "stdinOnce": null,
                              "terminationMessagePath": "/dev/termination-log",
                              "terminationMessagePolicy": "File",
                              "tty": null,
                              "volumeDevices": null,
                              "volumeMounts": null,
                              "workingDir": null
                            }
                          ],
                          "dnsConfig": {
                            "nameservers": null,
                            "options": null,
                            "searches": null
                          },
                          "dnsPolicy": "ClusterFirst",
                          "enableServiceLinks": null,
                          "ephemeralContainers": null,
                          "hostAliases": null,
                          "hostIPC": null,
                          "hostNetwork": null,
                          "hostPID": null,
                          "hostUsers": null,
                          "hostname": null,
                          "imagePullSecrets": null,
                          "initContainers": null,
                          "nodeName": null,
                          "nodeSelector": null,
                          "os": {
                            "name": null
                          },
                          "overhead": null,
                          "preemptionPolicy": null,
                          "priority": null,
                          "priorityClassName": null,
                          "readinessGates": null,
                          "resourceClaims": null,
                          "restartPolicy": "Never",
                          "runtimeClassName": null,
                          "schedulerName": "default-scheduler",
                          "schedulingGates": null,
                          "securityContext": {
                            "appArmorProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "fsGroup": null,
                            "fsGroupChangePolicy": null,
                            "runAsGroup": null,
                            "runAsNonRoot": null,
                            "runAsUser": null,
                            "seLinuxOptions": {
                              "level": null,
                              "role": null,
                              "type": null,
                              "user": null
                            },
                            "seccompProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "supplementalGroups": null,
                            "supplementalGroupsPolicy": null,
                            "sysctls": null,
                            "windowsOptions": {
                              "gmsaCredentialSpec": null,
                              "gmsaCredentialSpecName": null,
                              "hostProcess": null,
                              "runAsUserName": null
                            }
                          },
                          "serviceAccount": "k8s-ecr-login-renew-account",
                          "serviceAccountName": "k8s-ecr-login-renew-account",
                          "setHostnameAsFQDN": null,
                          "shareProcessNamespace": null,
                          "subdomain": null,
                          "terminationGracePeriodSeconds": 30,
                          "tolerations": null,
                          "topologySpreadConstraints": null,
                          "volumes": null
                        }
                      },
                      "ttlSecondsAfterFinished": null
                    }
                  },
                  "schedule": "* */6 * * *",
                  "startingDeadlineSeconds": null,
                  "successfulJobsHistoryLimit": 3,
                  "suspend": false,
                  "timeZone": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "concurrencyPolicy": "string",
                      "failedJobsHistoryLimit": "number",
                      "jobTemplate": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "creationTimestamp": "string",
                              "deletionGracePeriodSeconds": "number",
                              "deletionTimestamp": "string",
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "generateName": "string",
                              "generation": "number",
                              "labels": [
                                "map",
                                "string"
                              ],
                              "managedFields": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "apiVersion": "string",
                                      "fieldsType": "string",
                                      "fieldsV1": "dynamic",
                                      "manager": "string",
                                      "operation": "string",
                                      "subresource": "string",
                                      "time": "string"
                                    }
                                  ]
                                ]
                              ],
                              "name": "string",
                              "namespace": "string",
                              "ownerReferences": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "blockOwnerDeletion": "bool",
                                    "controller": "bool",
                                    "kind": "string",
                                    "name": "string",
                                    "uid": "string"
                                  }
                                ]
                              ],
                              "resourceVersion": "string",
                              "selfLink": "string",
                              "uid": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "activeDeadlineSeconds": "number",
                              "backoffLimit": "number",
                              "backoffLimitPerIndex": "number",
                              "completionMode": "string",
                              "completions": "number",
                              "managedBy": "string",
                              "manualSelector": "bool",
                              "maxFailedIndexes": "number",
                              "parallelism": "number",
                              "podFailurePolicy": [
                                "object",
                                {
                                  "rules": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "action": "string",
                                        "onExitCodes": [
                                          "object",
                                          {
                                            "containerName": "string",
                                            "operator": "string",
                                            "values": [
                                              "list",
                                              "number"
                                            ]
                                          }
                                        ],
                                        "onPodConditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "podReplacementPolicy": "string",
                              "selector": [
                                "object",
                                {
                                  "matchExpressions": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "key": "string",
                                        "operator": "string",
                                        "values": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ]
                                  ],
                                  "matchLabels": [
                                    "map",
                                    "string"
                                  ]
                                }
                              ],
                              "successPolicy": [
                                "object",
                                {
                                  "rules": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "succeededCount": "number",
                                        "succeededIndexes": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "suspend": "bool",
                              "template": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": [
                                        "map",
                                        "string"
                                      ],
                                      "creationTimestamp": "string",
                                      "deletionGracePeriodSeconds": "number",
                                      "deletionTimestamp": "string",
                                      "finalizers": [
                                        "list",
                                        "string"
                                      ],
                                      "generateName": "string",
                                      "generation": "number",
                                      "labels": [
                                        "map",
                                        "string"
                                      ],
                                      "managedFields": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "apiVersion": "string",
                                              "fieldsType": "string",
                                              "fieldsV1": "dynamic",
                                              "manager": "string",
                                              "operation": "string",
                                              "subresource": "string",
                                              "time": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "name": "string",
                                      "namespace": "string",
                                      "ownerReferences": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "apiVersion": "string",
                                            "blockOwnerDeletion": "bool",
                                            "controller": "bool",
                                            "kind": "string",
                                            "name": "string",
                                            "uid": "string"
                                          }
                                        ]
                                      ],
                                      "resourceVersion": "string",
                                      "selfLink": "string",
                                      "uid": "string"
                                    }
                                  ],
                                  "spec": [
                                    "object",
                                    {
                                      "activeDeadlineSeconds": "number",
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "preference": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchFields": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchFields": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "podAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "podAffinityTerm": [
                                                      "object",
                                                      {
                                                        "labelSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "matchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "mismatchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "namespaceSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "namespaces": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "topologyKey": "string"
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "labelSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "matchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "mismatchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "namespaceSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "namespaces": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "topologyKey": "string"
                                                  }
                                                ]
                                              ]
                                            }
                                          ],
                                          "podAntiAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "podAffinityTerm": [
                                                      "object",
                                                      {
                                                        "labelSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "matchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "mismatchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "namespaceSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "namespaces": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "topologyKey": "string"
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "labelSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "matchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "mismatchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "namespaceSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "namespaces": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "topologyKey": "string"
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "automountServiceAccountToken": "bool",
                                      "containers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "dnsConfig": [
                                        "object",
                                        {
                                          "nameservers": [
                                            "list",
                                            "string"
                                          ],
                                          "options": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "searches": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "dnsPolicy": "string",
                                      "enableServiceLinks": "bool",
                                      "ephemeralContainers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "targetContainerName": "string",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "hostAliases": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "hostnames": [
                                              "list",
                                              "string"
                                            ],
                                            "ip": "string"
                                          }
                                        ]
                                      ],
                                      "hostIPC": "bool",
                                      "hostNetwork": "bool",
                                      "hostPID": "bool",
                                      "hostUsers": "bool",
                                      "hostname": "string",
                                      "imagePullSecrets": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "initContainers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "nodeName": "string",
                                      "nodeSelector": [
                                        "map",
                                        "string"
                                      ],
                                      "os": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "overhead": [
                                        "map",
                                        "string"
                                      ],
                                      "preemptionPolicy": "string",
                                      "priority": "number",
                                      "priorityClassName": "string",
                                      "readinessGates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "conditionType": "string"
                                          }
                                        ]
                                      ],
                                      "resourceClaims": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "resourceClaimName": "string",
                                            "resourceClaimTemplateName": "string"
                                          }
                                        ]
                                      ],
                                      "restartPolicy": "string",
                                      "runtimeClassName": "string",
                                      "schedulerName": "string",
                                      "schedulingGates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "securityContext": [
                                        "object",
                                        {
                                          "appArmorProfile": [
                                            "object",
                                            {
                                              "localhostProfile": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "fsGroup": "number",
                                          "fsGroupChangePolicy": "string",
                                          "runAsGroup": "number",
                                          "runAsNonRoot": "bool",
                                          "runAsUser": "number",
                                          "seLinuxOptions": [
                                            "object",
                                            {
                                              "level": "string",
                                              "role": "string",
                                              "type": "string",
                                              "user": "string"
                                            }
                                          ],
                                          "seccompProfile": [
                                            "object",
                                            {
                                              "localhostProfile": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "supplementalGroups": [
                                            "list",
                                            "number"
                                          ],
                                          "supplementalGroupsPolicy": "string",
                                          "sysctls": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "windowsOptions": [
                                            "object",
                                            {
                                              "gmsaCredentialSpec": "string",
                                              "gmsaCredentialSpecName": "string",
                                              "hostProcess": "bool",
                                              "runAsUserName": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "serviceAccount": "string",
                                      "serviceAccountName": "string",
                                      "setHostnameAsFQDN": "bool",
                                      "shareProcessNamespace": "bool",
                                      "subdomain": "string",
                                      "terminationGracePeriodSeconds": "number",
                                      "tolerations": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "effect": "string",
                                            "key": "string",
                                            "operator": "string",
                                            "tolerationSeconds": "number",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "topologySpreadConstraints": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "matchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "maxSkew": "number",
                                            "minDomains": "number",
                                            "nodeAffinityPolicy": "string",
                                            "nodeTaintsPolicy": "string",
                                            "topologyKey": "string",
                                            "whenUnsatisfiable": "string"
                                          }
                                        ]
                                      ],
                                      "volumes": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "awsElasticBlockStore": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "partition": "number",
                                                  "readOnly": "bool",
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "azureDisk": [
                                                "object",
                                                {
                                                  "cachingMode": "string",
                                                  "diskName": "string",
                                                  "diskURI": "string",
                                                  "fsType": "string",
                                                  "kind": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "azureFile": [
                                                "object",
                                                {
                                                  "readOnly": "bool",
                                                  "secretName": "string",
                                                  "shareName": "string"
                                                }
                                              ],
                                              "cephfs": [
                                                "object",
                                                {
                                                  "monitors": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "path": "string",
                                                  "readOnly": "bool",
                                                  "secretFile": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "user": "string"
                                                }
                                              ],
                                              "cinder": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "configMap": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "csi": [
                                                "object",
                                                {
                                                  "driver": "string",
                                                  "fsType": "string",
                                                  "nodePublishSecretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "readOnly": "bool",
                                                  "volumeAttributes": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "downwardAPI": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "fieldRef": [
                                                          "object",
                                                          {
                                                            "apiVersion": "string",
                                                            "fieldPath": "string"
                                                          }
                                                        ],
                                                        "mode": "number",
                                                        "path": "string",
                                                        "resourceFieldRef": [
                                                          "object",
                                                          {
                                                            "containerName": "string",
                                                            "divisor": "string",
                                                            "resource": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "emptyDir": [
                                                "object",
                                                {
                                                  "medium": "string",
                                                  "sizeLimit": "string"
                                                }
                                              ],
                                              "ephemeral": [
                                                "object",
                                                {
                                                  "volumeClaimTemplate": [
                                                    "object",
                                                    {
                                                      "metadata": [
                                                        "object",
                                                        {
                                                          "annotations": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "creationTimestamp": "string",
                                                          "deletionGracePeriodSeconds": "number",
                                                          "deletionTimestamp": "string",
                                                          "finalizers": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "generateName": "string",
                                                          "generation": "number",
                                                          "labels": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "managedFields": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "apiVersion": "string",
                                                                  "fieldsType": "string",
                                                                  "fieldsV1": "dynamic",
                                                                  "manager": "string",
                                                                  "operation": "string",
                                                                  "subresource": "string",
                                                                  "time": "string"
                                                                }
                                                              ]
                                                            ]
                                                          ],
                                                          "name": "string",
                                                          "namespace": "string",
                                                          "ownerReferences": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "apiVersion": "string",
                                                                "blockOwnerDeletion": "bool",
                                                                "controller": "bool",
                                                                "kind": "string",
                                                                "name": "string",
                                                                "uid": "string"
                                                              }
                                                            ]
                                                          ],
                                                          "resourceVersion": "string",
                                                          "selfLink": "string",
                                                          "uid": "string"
                                                        }
                                                      ],
                                                      "spec": [
                                                        "object",
                                                        {
                                                          "accessModes": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "dataSource": [
                                                            "object",
                                                            {
                                                              "apiGroup": "string",
                                                              "kind": "string",
                                                              "name": "string"
                                                            }
                                                          ],
                                                          "dataSourceRef": [
                                                            "object",
                                                            {
                                                              "apiGroup": "string",
                                                              "kind": "string",
                                                              "name": "string",
                                                              "namespace": "string"
                                                            }
                                                          ],
                                                          "resources": [
                                                            "object",
                                                            {
                                                              "limits": [
                                                                "map",
                                                                "string"
                                                              ],
                                                              "requests": [
                                                                "map",
                                                                "string"
                                                              ]
                                                            }
                                                          ],
                                                          "selector": [
                                                            "object",
                                                            {
                                                              "matchExpressions": [
                                                                "list",
                                                                [
                                                                  "object",
                                                                  {
                                                                    "key": "string",
                                                                    "operator": "string",
                                                                    "values": [
                                                                      "list",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ]
                                                              ],
                                                              "matchLabels": [
                                                                "map",
                                                                "string"
                                                              ]
                                                            }
                                                          ],
                                                          "storageClassName": "string",
                                                          "volumeAttributesClassName": "string",
                                                          "volumeMode": "string",
                                                          "volumeName": "string"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "fc": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "lun": "number",
                                                  "readOnly": "bool",
                                                  "targetWWNs": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "wwids": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "flexVolume": [
                                                "object",
                                                {
                                                  "driver": "string",
                                                  "fsType": "string",
                                                  "options": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "flocker": [
                                                "object",
                                                {
                                                  "datasetName": "string",
                                                  "datasetUUID": "string"
                                                }
                                              ],
                                              "gcePersistentDisk": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "partition": "number",
                                                  "pdName": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "gitRepo": [
                                                "object",
                                                {
                                                  "directory": "string",
                                                  "repository": "string",
                                                  "revision": "string"
                                                }
                                              ],
                                              "glusterfs": [
                                                "object",
                                                {
                                                  "endpoints": "string",
                                                  "path": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "hostPath": [
                                                "object",
                                                {
                                                  "path": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "image": [
                                                "object",
                                                {
                                                  "pullPolicy": "string",
                                                  "reference": "string"
                                                }
                                              ],
                                              "iscsi": [
                                                "object",
                                                {
                                                  "chapAuthDiscovery": "bool",
                                                  "chapAuthSession": "bool",
                                                  "fsType": "string",
                                                  "initiatorName": "string",
                                                  "iqn": "string",
                                                  "iscsiInterface": "string",
                                                  "lun": "number",
                                                  "portals": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "targetPortal": "string"
                                                }
                                              ],
                                              "name": "string",
                                              "nfs": [
                                                "object",
                                                {
                                                  "path": "string",
                                                  "readOnly": "bool",
                                                  "server": "string"
                                                }
                                              ],
                                              "persistentVolumeClaim": [
                                                "object",
                                                {
                                                  "claimName": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "photonPersistentDisk": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "pdID": "string"
                                                }
                                              ],
                                              "portworxVolume": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "projected": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "sources": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "clusterTrustBundle": [
                                                          "object",
                                                          {
                                                            "labelSelector": [
                                                              "object",
                                                              {
                                                                "matchExpressions": [
                                                                  "list",
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "key": "string",
                                                                      "operator": "string",
                                                                      "values": [
                                                                        "list",
                                                                        "string"
                                                                      ]
                                                                    }
                                                                  ]
                                                                ],
                                                                "matchLabels": [
                                                                  "map",
                                                                  "string"
                                                                ]
                                                              }
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool",
                                                            "path": "string",
                                                            "signerName": "string"
                                                          }
                                                        ],
                                                        "configMap": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "mode": "number",
                                                                  "path": "string"
                                                                }
                                                              ]
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool"
                                                          }
                                                        ],
                                                        "downwardAPI": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "fieldRef": [
                                                                    "object",
                                                                    {
                                                                      "apiVersion": "string",
                                                                      "fieldPath": "string"
                                                                    }
                                                                  ],
                                                                  "mode": "number",
                                                                  "path": "string",
                                                                  "resourceFieldRef": [
                                                                    "object",
                                                                    {
                                                                      "containerName": "string",
                                                                      "divisor": "string",
                                                                      "resource": "string"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          }
                                                        ],
                                                        "secret": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "mode": "number",
                                                                  "path": "string"
                                                                }
                                                              ]
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool"
                                                          }
                                                        ],
                                                        "serviceAccountToken": [
                                                          "object",
                                                          {
                                                            "audience": "string",
                                                            "expirationSeconds": "number",
                                                            "path": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "quobyte": [
                                                "object",
                                                {
                                                  "group": "string",
                                                  "readOnly": "bool",
                                                  "registry": "string",
                                                  "tenant": "string",
                                                  "user": "string",
                                                  "volume": "string"
                                                }
                                              ],
                                              "rbd": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "image": "string",
                                                  "keyring": "string",
                                                  "monitors": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "pool": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "user": "string"
                                                }
                                              ],
                                              "scaleIO": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "gateway": "string",
                                                  "protectionDomain": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "sslEnabled": "bool",
                                                  "storageMode": "string",
                                                  "storagePool": "string",
                                                  "system": "string",
                                                  "volumeName": "string"
                                                }
                                              ],
                                              "secret": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "optional": "bool",
                                                  "secretName": "string"
                                                }
                                              ],
                                              "storageos": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "volumeName": "string",
                                                  "volumeNamespace": "string"
                                                }
                                              ],
                                              "vsphereVolume": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "storagePolicyID": "string",
                                                  "storagePolicyName": "string",
                                                  "volumePath": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "ttlSecondsAfterFinished": "number"
                            }
                          ]
                        }
                      ],
                      "schedule": "string",
                      "startingDeadlineSeconds": "number",
                      "successfulJobsHistoryLimit": "number",
                      "suspend": "bool",
                      "timeZone": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_dev_k8s_ecr_login_renew_account",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "name": "k8s-ecr-login-renew-account",
                  "namespace": "prd"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": null,
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-account",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": null
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "585768172288",
            "arn": "arn:aws:iam::585768172288:user/terraform",
            "id": "585768172288",
            "user_id": "AIDAYQYUA7MANURAMHNGY"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::585768172288:user/terraform",
            "id": "arn:aws:iam::585768172288:user/terraform",
            "issuer_arn": "arn:aws:iam::585768172288:user/terraform",
            "issuer_id": "",
            "issuer_name": "",
            "session_name": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSTNQG0mfAmRzdKZqfODF5hTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjYwNFoXDTMwMDgyMzIyMjYwNFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALd/pVko\n8vuM475Tf45HV3BbCl/B9Jy89G1CRkFjcPY06WA9lS+7dWbUA7GtWUKoksr69hKM\nwcMsNpxlw7b3jeXFgxB09/nmalcAWtnLzF+LaDKEA5DQmvKzuh1nfIfqEiKCQSmX\nXh09Xs+dO7cm5qbaL2hhNJCSAejciwcvOFgFNgEMR42wm6KIFHsQW28jhA+1u/M0\np6fVwReuEgZfLfdx82Px0LJck3lST3EB/JfbdsdOzzzg5YkY1dfuqf8y5fUeZ7Cz\nWXbTjujwX/TovmeWKA36VLCz75azW6tDNuDn66FOpADZZ9omVaF6BqNJiLMVl6P3\n/c0OiUMC6Z5OfKcCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUVdkYX9IczAHhWLS+q9lVQgHXLgIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAGjeWm2cC+3z2MzSCnte46/7JZvj3iQZDY7EvODNdZF41n71Lrk9kbfNwerK0d\nVNzW36Wefr7j7ZSwBVg50W5ay65jNSN74TTQV1yt4WnSbVvN6KlMs1hiyOZdoHKs\nKDV2UGNxbdoBYCQNa2GYF8FQIWLugNp35aSOpMy6cFlymFQomIrnOQHwK1nvVY4q\nxDSJMU/gNJz17D8ArPN3ngnyZ2TwepJ0uBINz3G5te2rdFUF4i4Y3Bb7FUlHDYm4\nu8aIRGpk2ZpfXmxaoxnbIBZRvGLPSUuPwnwoUOMsJ8jirI5vs2dvchPb7MtI1rle\ni02f2ivH2vxkjDLltSpe2fiC\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:26:04Z",
                "not_before": "2022-08-23T22:26:04Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129356476704345391986644047206454194698629",
                "sha1_fingerprint": "d9fe0a65fa00cabf61f5120d373a8135e1461f15",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF6TCCBNGgAwIBAgIQC1pmj3MJbfdZEwuZaK0yeDANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAzMB4XDTI0MDMyNzAwMDAwMFoXDTI1MDQyNTIzNTk1OVowKDEm\nMCQGA1UEAwwdKi5la3MudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20wggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCyfP2lMr2GZr3NlTFQcpZ1LcOH8Zao627X\ntI4MO+P1IarmDJT7rne8+pjduGWhmddZmN8IcpiDCREoFvyf2jC5Lk0CwRnzLIhZ\nj6vd75gFCWJFzKnfz6F/xtUudATESARr/E8JlsScKY5eoqHPRPqMgzW6HFY46ONu\nBN8pk3iA6S8tN2LvF/aWUc8J546V1Zrruw2h3FvGAQtqDxBgcA/SwXjiIO6+4D8P\ntu0qdTlA7/AS8ph1tJDQ5Xv4wG0ZJ5uMm9S9pS/3SPWMEkTKNp+QpNMGYvX7sure\n0oqX+oJIDC9IbKIscrsmkAwqS7PWFWszpojo8Ur/62RmLQOiJ/PXAgMBAAGjggL5\nMIIC9TAfBgNVHSMEGDAWgBRV2Rhf0hzMAeFYtL6r2VVCAdcuAjAdBgNVHQ4EFgQU\npytkck5Jdaa1DjuIJMpyBxd3ztMwKAYDVR0RBCEwH4IdKi5la3MudXMtZWFzdC0y\nLmFtYXpvbmF3cy5jb20wEwYDVR0gBAwwCjAIBgZngQwBAgEwDgYDVR0PAQH/BAQD\nAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCg\nLqAshipodHRwOi8vY3JsLnIybTAzLmFtYXpvbnRydXN0LmNvbS9yMm0wMy5jcmww\ndQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5yMm0wMy5h\nbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJtMDMuYW1h\nem9udHJ1c3QuY29tL3IybTAzLmNlcjAMBgNVHRMBAf8EAjAAMIIBgQYKKwYBBAHW\neQIEAgSCAXEEggFtAWsAdwBOdaMnXJoQwzhbbNTfP1LrHfDgjhuNacCx+mSxYpo5\n3wAAAY6B4toRAAAEAwBIMEYCIQCL2lZOGqo75PNnFiLldA7Gd39egtnXDTY+HHYO\n++O98gIhALSzX7cp+Y17fzfL5TAFWZm0+/7LFdyrQEEsgntEXCdTAHcAfVkeEuF4\nKnscYWd8Xv340IdcFKBOlZ65Ay/ZDowuebgAAAGOgeLZyAAABAMASDBGAiEA2EeA\nVUmkO2biyHSh0v+5Uo/NRG53wDwMKBRMLB+03oYCIQCBdgI4o8mFSYNASwhYKGWP\nIt5yi7Hmoi1pFefYiBmGbAB3AObSMWNAd4zBEEEG13G5zsHSQPaWhIb7uocyHf0e\nN45QAAABjoHi2dgAAAQDAEgwRgIhAK2MT0pX3Et7hx26gxiJwGj7u3v/9xMJHVhK\nC5fnxlfNAiEAizPUX2b3GrMeYnINHOy98KbPvkCzGHtN6qcdbf7w3T8wDQYJKoZI\nhvcNAQELBQADggEBAKknRf08AG7Hpn2h4HOyZPC0weNsrS/c8VIXRRSFth1nxQsZ\nyscbVOiJ6j7M6VvfjEmvsL7tvj3UlWmxJuadatX9HIX2KT2mq1fJxv/kX0laHtGl\nWbP3+CYHYCnZf8yPV7EaRJB2AtbGwV7rBd6mb9tDy2uAouTeANQi2XNVoCvGNkSQ\n/zIt0K+TA+efYW3wGhFuMHJOnwJ0a4mXwI7rHclijeztb680ga+F+Indpp5pMmsr\neNyO2TImDxtfDd/l8z2qNDzpyXIeSt2JgORnO5AjGC0EWD2p/hIsLCbG+QnB5IYo\nwHAg3LNrgxkdOWoY23z/WYylg4DdPzPT1SuHKYk=\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "not_after": "2025-04-25T23:59:59Z",
                "not_before": "2024-03-27T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "15090894841911196861235261040086561400",
                "sha1_fingerprint": "32f9e66ae934e90332545a9e7494591af3f34938",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=*.eks.us-east-2.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "41c9ad86376859231a2244535dff0f089ba892cb",
            "url": "https://oidc.eks.us-east-2.amazonaws.com/id/FF1355590F94761AE52ED374137CE1B7",
            "verify_chain": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:585768172288:log-group:/aws/eks/eks-7iKC7CvL/cluster",
            "id": "/aws/eks/eks-7iKC7CvL/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/eks-7iKC7CvL/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/eks-7iKC7CvL/cluster"
            },
            "tags_all": {
              "Name": "/aws/eks/eks-7iKC7CvL/cluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": false
              }
            ],
            "arn": "arn:aws:eks:us-east-2:585768172288:cluster/eks-7iKC7CvL",
            "bootstrap_self_managed_addons": true,
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT0FPQ1IwSm5YQ1l3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1qSXdNREV3TkRSYUZ3MHpOREV4TWpBd01ERTFORFJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNxaURJSkRHQmF0TkdFaGMwbkRoSnpEYlJVdGVoU0tKRGRZdEVIUUhlY054MTQwaEc3dkxMWktxaXAKNzhNdUtDbU9VY0JKWTFRRGlqSXpZaVhoTEVRbGZOak5na3dxZklPTkR5MyttL1h4Q01ScnllOWdDenc2UDIvMgp2SWlYalRiZHpmM2NMVXlkRjFCbzArVXFwelU1M2hWdzB2UXRoKzZaSEI2dGc5VW94MzFmTnUwL1RDNVlWSUJQCkk5b0liMjZXMTNOVkhyRzdOZ0xMRk9ZbnRuQkM2djBmVGIwWGdKOWd1RUQ4UFJjUTM2dklPck11cVQvNkJBZC8KcDE0V1hSZVBLZnQyUUE4Vzd5bTBiRUVtdWx1QkY0WFJkdGhwZ1BrRUo2TDZVSzBmakxmdW9CeTkyRnNQd2tyVApxaVNHS2lPNXE3SzFhS0J5dVdwdzZIanlyek94QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRMm9jN09RQTJjNDFiUHd3dkNmc1N3aGdtdWZUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjFRVDlhYUZ4cApjcnNvLzhYY29CMHpFbVZPTGJidjdVTkdsQ3J0QzlNUGxnb2ZSV0w3eTRJUW9ZSU5oWVV2VGxxaGF6OGE2Si9FCldETGNkZ1JDR3ovbWxqRmI1bExMUHZTUzRKcy81VDhHYU9lV3JxdjJwTnlIZklMeXUrSWhBd0wyR0FXYWIzb1QKS1JuS2VFOXJIYmVCTWFHOUtHZHlrZ2JGaE40Tkp4N1FrS2hjVnoxOUZUTmxadXEzeFRRdkEraVNHZG54eDduZwpRS0dMVzExR1NIcVpMN3lmRVpJTmpucjFoVjNPbFV4MytyalpWMzdkQkx1WGlJdGVrZWx5VTNVSzNWWkVjM0U3Cm96TWtybFBWelBEcEFDV1pUSjQ1UEp1bkp6WGl5MDJFdjJxcjhjblIzRlhUQ1BjSHFaYWQ5bmdUL2hOUzRac3AKYjhsMFRvVjhXaUJsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-11-22 00:11:54.606 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:us-east-2:585768172288:key/eb07bc04-1e7a-45ff-b4c3-3f75b586b493"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://FF1355590F94761AE52ED374137CE1B7.gr7.us-east-2.eks.amazonaws.com",
            "id": "eks-7iKC7CvL",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-2.amazonaws.com/id/FF1355590F94761AE52ED374137CE1B7"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "eks-7iKC7CvL",
            "outpost_config": [],
            "platform_version": "eks.12",
            "role_arn": "arn:aws:iam::585768172288:role/eks-7iKC7CvL-cluster-20241122001107869400000002",
            "status": "ACTIVE",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.31",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-08f6bc8ce1b9bef1e",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0ac8cd877843216ef"
                ],
                "subnet_ids": [
                  "subnet-01e9a90dff6fe3afe",
                  "subnet-04fcabfd18398df0a",
                  "subnet-072fd0426cdef3722"
                ],
                "vpc_id": "vpc-0f433948a273fe876"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::585768172288:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/FF1355590F94761AE52ED374137CE1B7",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::585768172288:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/FF1355590F94761AE52ED374137CE1B7",
            "tags": {
              "Name": "eks-7iKC7CvL-eks-irsa"
            },
            "tags_all": {
              "Name": "eks-7iKC7CvL-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-east-2.amazonaws.com/id/FF1355590F94761AE52ED374137CE1B7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::585768172288:policy/eks-7iKC7CvL-cluster-ClusterEncryption2024112200115241970000000d",
            "attachment_count": 1,
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::585768172288:policy/eks-7iKC7CvL-cluster-ClusterEncryption2024112200115241970000000d",
            "name": "eks-7iKC7CvL-cluster-ClusterEncryption2024112200115241970000000d",
            "name_prefix": "eks-7iKC7CvL-cluster-ClusterEncryption",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-2:585768172288:key/eb07bc04-1e7a-45ff-b4c3-3f75b586b493\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAYQYUA7MAJQZ6EO2W5",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::585768172288:role/eks-7iKC7CvL-cluster-20241122001107869400000002",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-11-22T00:11:08Z",
            "description": "",
            "force_detach_policies": true,
            "id": "eks-7iKC7CvL-cluster-20241122001107869400000002",
            "inline_policy": [
              {
                "name": "eks-7iKC7CvL-cluster",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::585768172288:policy/eks-7iKC7CvL-cluster-ClusterEncryption2024112200115241970000000d",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "eks-7iKC7CvL-cluster-20241122001107869400000002",
            "name_prefix": "eks-7iKC7CvL-cluster-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAYQYUA7MAOSKPH27DO"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "eks-7iKC7CvL-cluster-20241122001107869400000002-2024112200115306780000000f",
            "policy_arn": "arn:aws:iam::585768172288:policy/eks-7iKC7CvL-cluster-ClusterEncryption2024112200115241970000000d",
            "role": "eks-7iKC7CvL-cluster-20241122001107869400000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "eks-7iKC7CvL-cluster-20241122001107869400000002-20241122001127327200000009",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "eks-7iKC7CvL-cluster-20241122001107869400000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "eks-7iKC7CvL-cluster-20241122001107869400000002-20241122001127277900000008",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "eks-7iKC7CvL-cluster-20241122001107869400000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:security-group/sg-0ac8cd877843216ef",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-0ac8cd877843216ef",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0e6d4acf23472ac19"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "eks-7iKC7CvL-cluster-2024112200112745420000000a",
            "name_prefix": "eks-7iKC7CvL-cluster-",
            "owner_id": "585768172288",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-7iKC7CvL-cluster"
            },
            "tags_all": {
              "Name": "eks-7iKC7CvL-cluster"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:security-group/sg-0e6d4acf23472ac19",
            "description": "EKS node shared security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all egress",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0e6d4acf23472ac19",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [
                  "sg-07ce5a6fb5b80350b"
                ],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 4443/tcp webhook",
                "from_port": 4443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0ac8cd877843216ef"
                ],
                "self": false,
                "to_port": 4443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 6443/tcp webhook",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0ac8cd877843216ef"
                ],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 8443/tcp webhook",
                "from_port": 8443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0ac8cd877843216ef"
                ],
                "self": false,
                "to_port": 8443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 9443/tcp webhook",
                "from_port": 9443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0ac8cd877843216ef"
                ],
                "self": false,
                "to_port": 9443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0ac8cd877843216ef"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0ac8cd877843216ef"
                ],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS UDP",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node ingress on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 65535
              }
            ],
            "name": "eks-7iKC7CvL-node-2024112200112745440000000b",
            "name_prefix": "eks-7iKC7CvL-node-",
            "owner_id": "585768172288",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-7iKC7CvL-node",
              "kubernetes.io/cluster/eks-7iKC7CvL": "owned"
            },
            "tags_all": {
              "Name": "eks-7iKC7CvL-node",
              "kubernetes.io/cluster/eks-7iKC7CvL": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-2679836782",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0ac8cd877843216ef",
            "security_group_rule_id": "sgr-0acb7afbd210f0d1c",
            "self": false,
            "source_security_group_id": "sg-0e6d4acf23472ac19",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-4261034255",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0e6d4acf23472ac19",
            "security_group_rule_id": "sgr-0f8bec48176c1e6a3",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-3401045875",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e6d4acf23472ac19",
            "security_group_rule_id": "sgr-07abd450b1b8ac8e9",
            "self": false,
            "source_security_group_id": "sg-0ac8cd877843216ef",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-3859561725",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e6d4acf23472ac19",
            "security_group_rule_id": "sgr-0d196916bdee6aadf",
            "self": false,
            "source_security_group_id": "sg-0ac8cd877843216ef",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-793664363",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e6d4acf23472ac19",
            "security_group_rule_id": "sgr-0381ccf8cd1e6866b",
            "self": false,
            "source_security_group_id": "sg-0ac8cd877843216ef",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-1007839050",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e6d4acf23472ac19",
            "security_group_rule_id": "sgr-0ee78cf4d75333d9e",
            "self": false,
            "source_security_group_id": "sg-0ac8cd877843216ef",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-1488147585",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e6d4acf23472ac19",
            "security_group_rule_id": "sgr-0046272c883c64d3b",
            "self": false,
            "source_security_group_id": "sg-0ac8cd877843216ef",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-3484568061",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e6d4acf23472ac19",
            "security_group_rule_id": "sgr-00b364413d2104173",
            "self": false,
            "source_security_group_id": "sg-0ac8cd877843216ef",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-1051207649",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e6d4acf23472ac19",
            "security_group_rule_id": "sgr-0752a7f581296f745",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-724766660",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e6d4acf23472ac19",
            "security_group_rule_id": "sgr-09d794c588857b4e0",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-2406263851",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-0e6d4acf23472ac19",
            "security_group_rule_id": "sgr-02a29cb3eb95bce8a",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2024-11-22T00:20:09Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJT0FPQ1IwSm5YQ1l3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1qSXdNREV3TkRSYUZ3MHpOREV4TWpBd01ERTFORFJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNxaURJSkRHQmF0TkdFaGMwbkRoSnpEYlJVdGVoU0tKRGRZdEVIUUhlY054MTQwaEc3dkxMWktxaXAKNzhNdUtDbU9VY0JKWTFRRGlqSXpZaVhoTEVRbGZOak5na3dxZklPTkR5MyttL1h4Q01ScnllOWdDenc2UDIvMgp2SWlYalRiZHpmM2NMVXlkRjFCbzArVXFwelU1M2hWdzB2UXRoKzZaSEI2dGc5VW94MzFmTnUwL1RDNVlWSUJQCkk5b0liMjZXMTNOVkhyRzdOZ0xMRk9ZbnRuQkM2djBmVGIwWGdKOWd1RUQ4UFJjUTM2dklPck11cVQvNkJBZC8KcDE0V1hSZVBLZnQyUUE4Vzd5bTBiRUVtdWx1QkY0WFJkdGhwZ1BrRUo2TDZVSzBmakxmdW9CeTkyRnNQd2tyVApxaVNHS2lPNXE3SzFhS0J5dVdwdzZIanlyek94QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRMm9jN09RQTJjNDFiUHd3dkNmc1N3aGdtdWZUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjFRVDlhYUZ4cApjcnNvLzhYY29CMHpFbVZPTGJidjdVTkdsQ3J0QzlNUGxnb2ZSV0w3eTRJUW9ZSU5oWVV2VGxxaGF6OGE2Si9FCldETGNkZ1JDR3ovbWxqRmI1bExMUHZTUzRKcy81VDhHYU9lV3JxdjJwTnlIZklMeXUrSWhBd0wyR0FXYWIzb1QKS1JuS2VFOXJIYmVCTWFHOUtHZHlrZ2JGaE40Tkp4N1FrS2hjVnoxOUZUTmxadXEzeFRRdkEraVNHZG54eDduZwpRS0dMVzExR1NIcVpMN3lmRVpJTmpucjFoVjNPbFV4MytyalpWMzdkQkx1WGlJdGVrZWx5VTNVSzNWWkVjM0U3Cm96TWtybFBWelBEcEFDV1pUSjQ1UEp1bkp6WGl5MDJFdjJxcjhjblIzRlhUQ1BjSHFaYWQ5bmdUL2hOUzRac3AKYjhsMFRvVjhXaUJsCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "cluster_endpoint": "https://FF1355590F94761AE52ED374137CE1B7.gr7.us-east-2.eks.amazonaws.com",
              "cluster_name": "eks-7iKC7CvL",
              "cluster_service_cidr": "172.20.0.0/16",
              "cluster_version": "1.31"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "585768172288",
            "arn": "arn:aws:iam::585768172288:user/terraform",
            "id": "585768172288",
            "user_id": "AIDAYQYUA7MANURAMHNGY"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:us-east-2:585768172288:nodegroup/eks-7iKC7CvL/node-group-1-20241122002010925300000013/32c9a89e-cb7c-7d39-63d7-12af00fb7740",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "eks-7iKC7CvL",
            "disk_size": 0,
            "force_update_version": null,
            "id": "eks-7iKC7CvL:node-group-1-20241122002010925300000013",
            "instance_types": [
              "t3.large"
            ],
            "labels": {},
            "launch_template": [
              {
                "id": "lt-0d2783fe1b8b59d21",
                "name": "one-20241122002010011700000011",
                "version": "1"
              }
            ],
            "node_group_name": "node-group-1-20241122002010925300000013",
            "node_group_name_prefix": "node-group-1-",
            "node_role_arn": "arn:aws:iam::585768172288:role/node-group-1-eks-node-group-20241122001025134800000001",
            "release_version": "1.31.2-20241115",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-node-group-1-20241122002010925300000013-32c9a89e-cb7c-7d39-63d7-12af00fb7740"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 3,
                "max_size": 4,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-01e9a90dff6fe3afe",
              "subnet-04fcabfd18398df0a",
              "subnet-072fd0426cdef3722"
            ],
            "tags": {
              "Name": "node-group-1"
            },
            "tags_all": {
              "Name": "node-group-1"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.31"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::585768172288:role/node-group-1-eks-node-group-20241122001025134800000001",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-11-22T00:10:25Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "node-group-1-eks-node-group-20241122001025134800000001",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "node-group-1-eks-node-group-20241122001025134800000001",
            "name_prefix": "node-group-1-eks-node-group-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAYQYUA7MAPSAB3GHCK"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20241122001025134800000001-20241122001124878600000003",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "node-group-1-eks-node-group-20241122001025134800000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20241122001025134800000001-20241122001125051900000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "node-group-1-eks-node-group-20241122001025134800000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20241122001025134800000001-20241122001125404800000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "node-group-1-eks-node-group-20241122001025134800000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:launch-template/lt-0d2783fe1b8b59d21",
            "block_device_mappings": [],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "default_version": 1,
            "description": "Custom launch template for node-group-1 EKS managed node group",
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_optimized": "",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-0d2783fe1b8b59d21",
            "image_id": "",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_requirements": [],
            "instance_type": "",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "maintenance_options": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": ""
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "one-20241122002010011700000011",
            "name_prefix": "one-",
            "network_interfaces": [],
            "placement": [],
            "private_dns_name_options": [],
            "ram_disk_id": "",
            "security_group_names": [],
            "tag_specifications": [
              {
                "resource_type": "instance",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "network-interface",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "volume",
                "tags": {
                  "Name": "node-group-1"
                }
              }
            ],
            "tags": {},
            "tags_all": {},
            "update_default_version": true,
            "user_data": "",
            "vpc_security_group_ids": [
              "sg-0e6d4acf23472ac19"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"].module.user_data",
      "mode": "managed",
      "type": "null_resource",
      "name": "validate_cluster_service_cidr",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8858500283889104452",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "585768172288",
            "arn": "arn:aws:iam::585768172288:user/terraform",
            "id": "585768172288",
            "user_id": "AIDAYQYUA7MANURAMHNGY"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "914892656",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Default\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::585768172288:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:ReplicateKey\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:ImportKeyMaterial\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::585768172288:user/terraform\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::585768172288:role/eks-7iKC7CvL-cluster-20241122001107869400000002\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Default\",\"Effect\":\"Allow\",\"Action\":\"kms:*\",\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::585768172288:root\"}},{\"Sid\":\"KeyAdministration\",\"Effect\":\"Allow\",\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::585768172288:user/terraform\"}},{\"Sid\":\"KeyUsage\",\"Effect\":\"Allow\",\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::585768172288:role/eks-7iKC7CvL-cluster-20241122001107869400000002\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::585768172288:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "Default"
              },
              {
                "actions": [
                  "kms:CancelKeyDeletion",
                  "kms:Create*",
                  "kms:Delete*",
                  "kms:Describe*",
                  "kms:Disable*",
                  "kms:Enable*",
                  "kms:Get*",
                  "kms:ImportKeyMaterial",
                  "kms:List*",
                  "kms:Put*",
                  "kms:ReplicateKey",
                  "kms:Revoke*",
                  "kms:ScheduleKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:Update*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::585768172288:user/terraform"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyAdministration"
              },
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::585768172288:role/eks-7iKC7CvL-cluster-20241122001107869400000002"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyUsage"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-2:585768172288:alias/eks/eks-7iKC7CvL",
            "id": "alias/eks/eks-7iKC7CvL",
            "name": "alias/eks/eks-7iKC7CvL",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:us-east-2:585768172288:key/eb07bc04-1e7a-45ff-b4c3-3f75b586b493",
            "target_key_id": "eb07bc04-1e7a-45ff-b4c3-3f75b586b493"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-2:585768172288:key/eb07bc04-1e7a-45ff-b4c3-3f75b586b493",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "eks-7iKC7CvL cluster encryption key",
            "enable_key_rotation": true,
            "id": "eb07bc04-1e7a-45ff-b4c3-3f75b586b493",
            "is_enabled": true,
            "key_id": "eb07bc04-1e7a-45ff-b4c3-3f75b586b493",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::585768172288:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::585768172288:user/terraform\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::585768172288:role/eks-7iKC7CvL-cluster-20241122001107869400000002\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
            "rotation_period_in_days": 365,
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": null,
            "xks_key_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "prd",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "prd",
                "resource_version": "36356",
                "uid": "77c4f7b2-b4be-483a-92fb-bd9e92c120ed"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/backend-auth",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 4,
                "labels": {},
                "name": "backend-auth",
                "namespace": "prd",
                "resource_version": "3531039",
                "uid": "dd36b4fe-1a9e-46ff-a2dc-99b95ac82d0b"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "3",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-auth"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-auth"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "585768172288.dkr.ecr.us-east-2.amazonaws.com/backend-auth:prd-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-auth",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/backend-auth",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-auth",
                "namespace": "prd",
                "resource_version": "36376",
                "uid": "037c18fc-5aba-45d2-9304-09c1ebb17d5e"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.19.247",
                "cluster_ips": [
                  "172.20.19.247"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-auth"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-countries-now\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "prd",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "prd",
                "resource_version": "36356",
                "uid": "77c4f7b2-b4be-483a-92fb-bd9e92c120ed"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-countries-now\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/backend-countries-now",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "backend-countries-now",
                "namespace": "prd",
                "resource_version": "206900",
                "uid": "7a6a29ba-28e0-42e8-b988-eb0f69f1ce6e"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "3",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-countries-now"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-countries-now"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "585768172288.dkr.ecr.us-east-2.amazonaws.com/backend-countries-now:main-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-countries-now",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-countries-now\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/backend-countries-now",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-countries-now",
                "namespace": "prd",
                "resource_version": "36381",
                "uid": "9b41dc76-2caf-453d-8dd5-17039bbd4238"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.199.255",
                "cluster_ips": [
                  "172.20.199.255"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-countries-now"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "prd",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "prd",
                "resource_version": "36356",
                "uid": "77c4f7b2-b4be-483a-92fb-bd9e92c120ed"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/backend-notification",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 3,
                "labels": {},
                "name": "backend-notification",
                "namespace": "prd",
                "resource_version": "78811",
                "uid": "5d5014ef-6667-42ea-bc91-b6dc780b0946"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-notification"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-notification"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "585768172288.dkr.ecr.us-east-2.amazonaws.com/backend-notification:prd-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-notification",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/backend-notification",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-notification",
                "namespace": "prd",
                "resource_version": "36366",
                "uid": "9044b000-e729-42a7-b914-1ecfca494e33"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.84.111",
                "cluster_ips": [
                  "172.20.84.111"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-notification"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "prd",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "prd",
                "resource_version": "36356",
                "uid": "77c4f7b2-b4be-483a-92fb-bd9e92c120ed"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/backend-wallet",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 4,
                "labels": {},
                "name": "backend-wallet",
                "namespace": "prd",
                "resource_version": "3531150",
                "uid": "33f3505a-e528-4c98-81df-7ccef97b3585"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-wallet"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-wallet"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "585768172288.dkr.ecr.us-east-2.amazonaws.com/backend-wallet:prd-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-wallet",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/backend-wallet",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-wallet",
                "namespace": "prd",
                "resource_version": "36364",
                "uid": "da225baf-7931-462a-890b-c8b8fd2d03a4"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.115.166",
                "cluster_ips": [
                  "172.20.115.166"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-wallet"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "prd",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "prd",
                "resource_version": "36356",
                "uid": "77c4f7b2-b4be-483a-92fb-bd9e92c120ed"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/backend-ws",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 3,
                "labels": {},
                "name": "backend-ws",
                "namespace": "prd",
                "resource_version": "3531009",
                "uid": "36ef4cbc-10a2-46c1-83c7-5c3b1d1551b2"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-ws"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-ws"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "585768172288.dkr.ecr.us-east-2.amazonaws.com/ws:prd-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-ws",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/backend-ws",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-ws",
                "namespace": "prd",
                "resource_version": "1883096",
                "uid": "d950457e-dafb-45b3-9151-97897f4b0b7f"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.186.228",
                "cluster_ips": [
                  "172.20.186.228"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-ws"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "prd",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "prd",
                "resource_version": "36356",
                "uid": "77c4f7b2-b4be-483a-92fb-bd9e92c120ed"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/frontend-admin",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 3,
                "labels": {},
                "name": "frontend-admin",
                "namespace": "prd",
                "resource_version": "3531074",
                "uid": "e26bf066-7c3a-4f45-bfb9-5febe236f492"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "3",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "frontend-admin"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "frontend-admin"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "585768172288.dkr.ecr.us-east-2.amazonaws.com/frontend-admin:prd-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "frontend-admin",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "prd/frontend-admin",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "frontend-admin",
                "namespace": "prd",
                "resource_version": "36372",
                "uid": "56e2b33e-8878-4ef6-b56d-4347d5a98832"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.48.176",
                "cluster_ips": [
                  "172.20.48.176"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "frontend-admin"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"24husscwfsv2ee6dlmei5km233lstyam._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "24husscwfsv2ee6dlmei5km233lstyam._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_24husscwfsv2ee6dlmei5km233lstyam._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "24husscwfsv2ee6dlmei5km233lstyam._domainkey.walletguru.co",
            "records": [
              "24husscwfsv2ee6dlmei5km233lstyam.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"admin.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "admin.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_admin.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "admin.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"auth.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "auth.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_auth.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "auth.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"countriesnow.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "countriesnow.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_countriesnow.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "countriesnow.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "graphql.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_graphql.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "graphql.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "interaction.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_interaction.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "interaction.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"mock.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "mock.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_mock.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "mock.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"ndnqcsjqbrf77sgkl66xbgnfycgeu3dz._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "ndnqcsjqbrf77sgkl66xbgnfycgeu3dz._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_ndnqcsjqbrf77sgkl66xbgnfycgeu3dz._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "ndnqcsjqbrf77sgkl66xbgnfycgeu3dz._domainkey.walletguru.co",
            "records": [
              "ndnqcsjqbrf77sgkl66xbgnfycgeu3dz.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"notification.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "notification.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_notification.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "notification.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qbh3t5nceh6aropkgdzcvkl6ef377zyd._domainkey.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qbh3t5nceh6aropkgdzcvkl6ef377zyd._domainkey.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qbh3t5nceh6aropkgdzcvkl6ef377zyd._domainkey.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qbh3t5nceh6aropkgdzcvkl6ef377zyd._domainkey.walletguru.co",
            "records": [
              "qbh3t5nceh6aropkgdzcvkl6ef377zyd.dkim.amazonses.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "rafiki-auth.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_rafiki-auth.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "rafiki-auth.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "rafiki.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_rafiki.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "rafiki.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "wallet.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_wallet.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "wallet.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "websocket.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_websocket.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "websocket.walletguru.co",
            "records": [
              "a068aec774e424f1898c670af6e482a7-1086058173.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-auth\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:585768172288:repository/backend-auth",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-auth",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-auth",
            "registry_id": "585768172288",
            "repository_url": "585768172288.dkr.ecr.us-east-2.amazonaws.com/backend-auth",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-codes\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:585768172288:repository/backend-codes",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-codes",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-codes",
            "registry_id": "585768172288",
            "repository_url": "585768172288.dkr.ecr.us-east-2.amazonaws.com/backend-codes",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-countries-now\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:585768172288:repository/backend-countries-now",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-countries-now",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-countries-now",
            "registry_id": "585768172288",
            "repository_url": "585768172288.dkr.ecr.us-east-2.amazonaws.com/backend-countries-now",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-notification\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:585768172288:repository/backend-notification",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-notification",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-notification",
            "registry_id": "585768172288",
            "repository_url": "585768172288.dkr.ecr.us-east-2.amazonaws.com/backend-notification",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-wallet\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:585768172288:repository/backend-wallet",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-wallet",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-wallet",
            "registry_id": "585768172288",
            "repository_url": "585768172288.dkr.ecr.us-east-2.amazonaws.com/backend-wallet",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"frontend-admin\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:585768172288:repository/frontend-admin",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "frontend-admin",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "frontend-admin",
            "registry_id": "585768172288",
            "repository_url": "585768172288.dkr.ecr.us-east-2.amazonaws.com/frontend-admin",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"ws\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:585768172288:repository/ws",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "ws",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "ws",
            "registry_id": "585768172288",
            "repository_url": "585768172288.dkr.ecr.us-east-2.amazonaws.com/ws",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-prd\"]",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::walletguru-prd",
            "bucket": "walletguru-prd",
            "bucket_domain_name": "walletguru-prd.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "walletguru-prd.s3.us-east-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [
              {
                "id": "",
                "permissions": [
                  "READ"
                ],
                "type": "Group",
                "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
              },
              {
                "id": "9b190df558589dbe425995a70fff000b1bed37a70e20fb0bfe917308c1b54b1f",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z2O1EMRO9K5GLX",
            "id": "walletguru-prd",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "us-east-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-prd\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_acl",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_control_policy": [
              {
                "grant": [
                  {
                    "grantee": [
                      {
                        "display_name": "",
                        "email_address": "",
                        "id": "",
                        "type": "Group",
                        "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
                      }
                    ],
                    "permission": "READ"
                  },
                  {
                    "grantee": [
                      {
                        "display_name": "",
                        "email_address": "",
                        "id": "9b190df558589dbe425995a70fff000b1bed37a70e20fb0bfe917308c1b54b1f",
                        "type": "CanonicalUser",
                        "uri": ""
                      }
                    ],
                    "permission": "FULL_CONTROL"
                  }
                ],
                "owner": [
                  {
                    "display_name": "",
                    "id": "9b190df558589dbe425995a70fff000b1bed37a70e20fb0bfe917308c1b54b1f"
                  }
                ]
              }
            ],
            "acl": "public-read",
            "bucket": "walletguru-prd",
            "expected_bucket_owner": "",
            "id": "walletguru-prd,public-read"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example",
            "module.s3.aws_s3_bucket_ownership_controls.example",
            "module.s3.aws_s3_bucket_public_access_block.example"
          ]
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-prd\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_ownership_controls",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "walletguru-prd",
            "id": "walletguru-prd",
            "rule": [
              {
                "object_ownership": "BucketOwnerPreferred"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example"
          ]
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-prd\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": false,
            "block_public_policy": false,
            "bucket": "walletguru-prd",
            "id": "walletguru-prd",
            "ignore_public_acls": false,
            "restrict_public_buckets": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example"
          ]
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "managed",
      "type": "helm_release",
      "name": "traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "traefik",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "traefik",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.9.7",
                "chart": "traefik",
                "first_deployed": 1732246871,
                "last_deployed": 1732246871,
                "name": "traefik",
                "namespace": "traefik",
                "notes": "\n\nTraefik Proxy v2.9.7 has been deployed successfully\non traefik namespace !\n",
                "revision": 1,
                "values": "{\"additionalArguments\":[\"--log.level=DEBUG\",\"--certificatesresolvers.le.acme.email=youremmail@gmail.com\",\"--certificatesresolvers.le.acme.storage=/data/acme.json\",\"--certificatesresolvers.le.acme.tlschallenge=true\",\"--certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory\"],\"dashboard\":{\"domain\":\"traefik.ui.kube\",\"enabled\":true},\"deployment\":{\"replicas\":1},\"rbac\":{\"enabled\":true}}",
                "version": "21.1.0"
              }
            ],
            "name": "traefik",
            "namespace": "traefik",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://traefik.github.io/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "deployment.replicas",
                "type": "",
                "value": "1"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 800,
            "values": [
              "dashboard:\n  enabled: true\n  domain: traefik.ui.kube\nrbac:\n  enabled: true\nadditionalArguments:\n  - \"--log.level=DEBUG\"\n  - \"--certificatesresolvers.le.acme.email=youremmail@gmail.com\"\n  - \"--certificatesresolvers.le.acme.storage=/data/acme.json\"\n  - \"--certificatesresolvers.le.acme.tlschallenge=true\"\n  - \"--certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory\""
            ],
            "verify": false,
            "version": "21.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "admin",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin",
                          "namespace": "prd"
                        },
                        {
                          "name": "admin-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "frontend-admin",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin",
                          "namespace": "prd"
                        },
                        {
                          "name": "admin-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "frontend-admin",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "admin-http",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "frontend-admin",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin-http",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "frontend-admin",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "admin",
                  "namespace": "prd"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "admin-to-https",
                  "namespace": "prd"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin-to-https",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "auth",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth",
                          "namespace": "prd"
                        },
                        {
                          "name": "auth-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-auth",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth",
                          "namespace": "prd"
                        },
                        {
                          "name": "auth-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "auth-http",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-auth",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth-http",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "auth",
                  "namespace": "prd"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "auth-to-https",
                  "namespace": "prd"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth-to-https",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"countriesnow.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "countries-now",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`countriesnow.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "countries-now",
                          "namespace": "prd"
                        },
                        {
                          "name": "countries-now-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-countries-now",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "countries-now",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`countriesnow.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "countries-now",
                          "namespace": "prd"
                        },
                        {
                          "name": "countries-now-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-countries-now",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"countriesnow.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "countries-now-http",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`countriesnow.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "countries-now-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-countries-now",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "countries-now-http",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`countriesnow.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "countries-now-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-countries-now",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"countriesnow.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "countries-now",
                  "namespace": "prd"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "countries-now",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"countriesnow.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "countries-now-to-https",
                  "namespace": "prd"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "countries-now-to-https",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "graphql-backend",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend",
                          "namespace": "default"
                        },
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "3001"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend",
                          "namespace": "default"
                        },
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3001",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "graphql-backend-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "3001"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3001",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "graphql-backend",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "graphql-backend-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-interaction",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3009"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3009",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-interaction-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3009"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3009",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-interaction",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-interaction-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-mock",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-mock",
                          "port": "3030"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-mock",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3030",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-mock-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-mock",
                          "port": "3030"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-mock",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3030",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-mock",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-mock-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "notification",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification",
                          "namespace": "prd"
                        },
                        {
                          "name": "notification-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-notification",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification",
                          "namespace": "prd"
                        },
                        {
                          "name": "notification-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-notification",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "notification-http",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-notification",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification-http",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-notification",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "notification",
                  "namespace": "prd"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "notification-to-https",
                  "namespace": "prd"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification-to-https",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-auth",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3006"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3006",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-auth-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3006"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3006",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-auth",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-auth-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-frontend",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-frontend",
                          "port": "3010"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-frontend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3010",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-frontend-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-frontend",
                          "port": "3010"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-frontend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3010",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-frontend",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-frontend-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "wallet",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet",
                          "namespace": "prd"
                        },
                        {
                          "name": "wallet-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-wallet",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet",
                          "namespace": "prd"
                        },
                        {
                          "name": "wallet-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-wallet",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "wallet-http",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-wallet",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet-http",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-wallet",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "wallet",
                  "namespace": "prd"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "wallet-to-https",
                  "namespace": "prd"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet-to-https",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "ws",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws",
                          "namespace": "prd"
                        },
                        {
                          "name": "ws-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-ws",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws",
                          "namespace": "prd"
                        },
                        {
                          "name": "ws-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-ws",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "ws-http",
                  "namespace": "prd"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-ws",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws-http",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws-to-https",
                          "namespace": "prd"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-ws",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "ws",
                  "namespace": "prd"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "ws-to-https",
                  "namespace": "prd"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws-to-https",
                  "namespace": "prd",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:network-acl/acl-0fa1a72c039d3c661",
            "default_network_acl_id": "acl-0fa1a72c039d3c661",
            "egress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "id": "acl-0fa1a72c039d3c661",
            "ingress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "owner_id": "585768172288",
            "subnet_ids": [
              "subnet-01e9a90dff6fe3afe",
              "subnet-04fcabfd18398df0a",
              "subnet-072fd0426cdef3722",
              "subnet-086c51e0bafc21586",
              "subnet-0b581070c1b2b7c46",
              "subnet-0d06ccea9d80385c4",
              "subnet-0e86d1be3b595152a"
            ],
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:route-table/rtb-0a507ee12c282eb5b",
            "default_route_table_id": "rtb-0a507ee12c282eb5b",
            "id": "rtb-0a507ee12c282eb5b",
            "owner_id": "585768172288",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "timeouts": {
              "create": "5m",
              "update": "5m"
            },
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:security-group/sg-0468dd5ca13e9908e",
            "description": "default VPC security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0468dd5ca13e9908e",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "name": "default",
            "name_prefix": "",
            "owner_id": "585768172288",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-01f31e7d4bbe5b1c3",
            "arn": "arn:aws:ec2:us-east-2:585768172288:elastic-ip/eipalloc-01f31e7d4bbe5b1c3",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-0acc6cfbdf1fbddbf",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-01f31e7d4bbe5b1c3",
            "instance": "",
            "network_border_group": "us-east-2",
            "network_interface": "eni-0d3d4a5ce8b4978d2",
            "private_dns": "ip-10-0-4-135.us-east-2.compute.internal",
            "private_ip": "10.0.4.135",
            "ptr_record": "",
            "public_dns": "ec2-3-22-64-212.us-east-2.compute.amazonaws.com",
            "public_ip": "3.22.64.212",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "vpc-us-east-2a"
            },
            "tags_all": {
              "Name": "vpc-us-east-2a"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:internet-gateway/igw-07a801079a0d87149",
            "id": "igw-07a801079a0d87149",
            "owner_id": "585768172288",
            "tags": {
              "Name": "vpc"
            },
            "tags_all": {
              "Name": "vpc"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-01f31e7d4bbe5b1c3",
            "association_id": "eipassoc-0acc6cfbdf1fbddbf",
            "connectivity_type": "public",
            "id": "nat-064c522c33f515248",
            "network_interface_id": "eni-0d3d4a5ce8b4978d2",
            "private_ip": "10.0.4.135",
            "public_ip": "3.22.64.212",
            "secondary_allocation_ids": [],
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-0e86d1be3b595152a",
            "tags": {
              "Name": "vpc-us-east-2a"
            },
            "tags_all": {
              "Name": "vpc-us-east-2a"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-00db0da2d137ccf5f1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-064c522c33f515248",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-00db0da2d137ccf5f",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-07a801079a0d87149",
            "id": "r-rtb-0d05c10121434c0361080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0d05c10121434c036",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:route-table/rtb-00db0da2d137ccf5f",
            "id": "rtb-00db0da2d137ccf5f",
            "owner_id": "585768172288",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-064c522c33f515248",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "vpc-private"
            },
            "tags_all": {
              "Name": "vpc-private"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:route-table/rtb-0d05c10121434c036",
            "id": "rtb-0d05c10121434c036",
            "owner_id": "585768172288",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-07a801079a0d87149",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "vpc-public"
            },
            "tags_all": {
              "Name": "vpc-public"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0afa3a0b177c0235b",
            "route_table_id": "rtb-00db0da2d137ccf5f",
            "subnet_id": "subnet-01e9a90dff6fe3afe",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0b0b4f0306425e142",
            "route_table_id": "rtb-00db0da2d137ccf5f",
            "subnet_id": "subnet-04fcabfd18398df0a",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-08d595636edc5b6d9",
            "route_table_id": "rtb-00db0da2d137ccf5f",
            "subnet_id": "subnet-072fd0426cdef3722",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-07999b1f841c06c1b",
            "route_table_id": "rtb-0d05c10121434c036",
            "subnet_id": "subnet-0e86d1be3b595152a",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-034a9752098bd126d",
            "route_table_id": "rtb-0d05c10121434c036",
            "subnet_id": "subnet-0b581070c1b2b7c46",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-012613c9642b769e2",
            "route_table_id": "rtb-0d05c10121434c036",
            "subnet_id": "subnet-0d06ccea9d80385c4",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:subnet/subnet-01e9a90dff6fe3afe",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-01e9a90dff6fe3afe",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "585768172288",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2a",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2a",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:subnet/subnet-04fcabfd18398df0a",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-04fcabfd18398df0a",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "585768172288",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2b",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2b",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:subnet/subnet-072fd0426cdef3722",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-072fd0426cdef3722",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "585768172288",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2c",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2c",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:subnet/subnet-0e86d1be3b595152a",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0e86d1be3b595152a",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "585768172288",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2a",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2a",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:subnet/subnet-0b581070c1b2b7c46",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.5.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0b581070c1b2b7c46",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "585768172288",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2b",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2b",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:subnet/subnet-0d06ccea9d80385c4",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.6.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0d06ccea9d80385c4",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "585768172288",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2c",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2c",
              "kubernetes.io/cluster/eks-7iKC7CvL": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:vpc/vpc-0f433948a273fe876",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-0fa1a72c039d3c661",
            "default_route_table_id": "rtb-0a507ee12c282eb5b",
            "default_security_group_id": "sg-0468dd5ca13e9908e",
            "dhcp_options_id": "dopt-0422bf85e2ed1994c",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-0f433948a273fe876",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-0a507ee12c282eb5b",
            "owner_id": "585768172288",
            "tags": {
              "Name": "vpc"
            },
            "tags_all": {
              "Name": "vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1319560416",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::wg-prd-vpn-config-files/*\",\n        \"arn:aws:s3:::wg-prd-vpn-config-files\"\n      ],\n      \"Principal\": \"*\",\n      \"Condition\": {\n        \"Bool\": {\n          \"aws:SecureTransport\": \"false\"\n        }\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Deny\",\"Action\":\"s3:*\",\"Resource\":[\"arn:aws:s3:::wg-prd-vpn-config-files/*\",\"arn:aws:s3:::wg-prd-vpn-config-files\"],\"Principal\":\"*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:*"
                ],
                "condition": [
                  {
                    "test": "Bool",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:SecureTransport"
                  }
                ],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "*"
                  }
                ],
                "resources": [
                  "arn:aws:s3:::wg-prd-vpn-config-files",
                  "arn:aws:s3:::wg-prd-vpn-config-files/*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (Ohio)",
            "endpoint": "ec2.us-east-2.amazonaws.com",
            "id": "us-east-2",
            "name": "us-east-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:585768172288:certificate/0413fd2c-003c-473d-b38c-cd0e2418563f",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "certificate_chain": null,
            "domain_name": "wg.prd.vpn.ca",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:585768172288:certificate/0413fd2c-003c-473d-b38c-cd0e2418563f",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-20T00:11:29Z",
            "not_before": "2024-11-22T00:11:29Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1N8QZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1Pet\nVMte7upd6DK2r40ha1pka/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0\n/c5YXeK2dU4f0z214IIHPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3n\npAvizy0zhIfTT2ZTDd8fi/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5\nH7gLbOtI65/2v7RyhaV1CCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+q\nL3kr/G8xYJHLA3/DNM1zb88UerFBzEepRFSe4QIDAQABAoIBAQDSF0lOzOUODlTw\ndrpiaAc8K0r5yZG87wZ6lnuzh/2HFv9eYge+3WzXbZW6+npU7nwiQLdF2sGY2auO\nEsCEzjWxtKyNcQHusql9Rd/wk9uTDGEeTxwONp3+IygixDUivhAIASz25fWQvEtM\nf1EXuEiDV/7IOJ29mWTweKtLAvIfWZ591Z04zzY4MsibJcmK4L9UjhhcMrbouKA3\nCDiq50WbBcD7bQX/Ku+UVlxXzRi7EsZaEMWdioTFXpaGaVxsY8zC+GpUEentlAeu\n04juUeInekrw7strxazUbWEui7MLOeSiYnOVnB9wRHTSSnTY41bIH5GvKUuubbRv\nNhna5eZlAoGBAPrLu11MiGmabE/r2omLx4F9VKANPTA2h8/SY6H0oZMNu3HWUlSp\n9duwGlLj69snbo4VM8MEJxbsHVOw2eHTJ7c17cnLWT7ukb7gR+sUmVrc/w2VnHF9\njwc5H2X61cLvHyfSKHJ10iItFX/PXMuju6f5u12QEzicaI9tZYxGHrh/AoGBANlJ\n3wPzPiamnzA8tsCvIRdyozMUPrbwPdM3D3weygeRUbL1+QFdOSQFXjCZksa7GXXI\nKjBdEZbO/bri6sSdlMP98F1LAboGFbhZeBrJ7Vx/9Yy00eiInA3dt/Am1rvSi6QI\nn/HnZh3vLBQhpiIXXyJUUQ1dljVHLKDDKHrw+/ifAoGAKgeQi88yoTf+5Nnq0tg5\nBAtj7jqpwXWyBvMEPXUIyuMnQamgPI4LJNj7YF7P/Pc7wNXuycTdZCsHsynVKdJA\nOqTwB7xrZW+Hv0xI4S2fkamtmLI0+JQJLzW0fFuwDS4Ts5G1s5DpOU8C5lty+rGi\n1kC01LY7cmZL45V6yipKJbMCgYAK4aordnj8UofSUJgOWjbcB7+ohTEG1E0kULOT\n0a7oZhyjS7ImoVaFOUeYQ3iYPzJtNZL3TRHebYtDWq3LHuEeV487/M+fU0KvMrvT\nC525bicL3tpMPNsjzqCxhCBo04hutIfeA2qXwSyB7ZV2S5lWDMbqVm95R5Eyk9Np\nJLxZnQKBgQCk5bSiBb39hat46JTU1z1DIeoyJCAFsZ7OJ3ezaApXVvw4S+CA/DAs\nhSihkhwetVR56BcggI4z1X87NegtMEG+czAni3QecAo6ceepIEgPWkq3S38qjSRE\nX1kSYHfcFNz1tMpek7YLnO02AIT7fxP+jSAqcGHepPDSH0E84ogjig==\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.prd.vpn.ca"
            ],
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:585768172288:certificate/ec5f3460-1e07-4a23-b5cc-b172f4d3738d",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDPDCCAiSgAwIBAgIRAN5aYU6/0rJ3KuxzN4hIldcwDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnByZC52cG4uY2EwHhcNMjQxMTIy\nMDAxMTM0WhcNMzQxMTIwMDAxMTM0WjA2MQswCQYDVQQKEwJ3ZzEnMCUGA1UEAxMe\nd2cucHJkLnZwbi5kYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1/+DuiSQB66FQt+FAoE1wBOOrPDzBGMUANt/THwaDa4t\nAPJENCbDFyOkQ0vHBQfdtswapRfpms/CYo/xKtA4Y48fVdPBPOeU0BX1CzC/csVB\nu9hrp7Nbo5YPkQTWHjF7ut2mnGZRJVPPhzP/pWtIe5fhzEIxgXK3sHfttQ8i1+TG\nR+JR27i2h19zj0ri+zkGk5XbN7ZeyGAjB5uW9v4rrySpiV7ipx0ijHke/Ajj/fiI\nj4auSCUEvhatpcKDzDQvZPb/CuRtc8Z6nyrKZs4vQWIPtglx/3lgUZskocisSVjG\nn04lVKcrV9Yv4uyk0WWCs44jhCmIxVUQMbmQ9dnnqQIDAQABo1YwVDAOBgNVHQ8B\nAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNV\nHSMEGDAWgBSAnjGObA4+xm/wiav9I5EnkNGx/jANBgkqhkiG9w0BAQsFAAOCAQEA\nS5vuqLhS56bCdEiT26GJ+aWv//gjeXgnbMNzf37fOSo8kAhqhi0vqV6lQ48pogtH\nm/HqBslQb2AameNnK83hJwrlHndBgjNAfEUSwtFd1yJPOT1AtxDU/g+yZcN7ghKs\nWIkf8ObyP3DOzteS76disp05tjjmSez+acbuZuwJhjJJjHoEFUsPJgtZ0xstZ2gx\nyV9HeyT+VZSn81oJOeQNpUSFKO9kbdFZVoL+hi4S3JXnOuILDH2XNOPJ3xsS79PQ\niMirRGgJ22XVctJjc/coEsSA5bdng7iBzfv/g070o/bk0xyaZ+GUM/sqoBA/yk61\nQtmNCDto0IzAE5idgR4Ejg==\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.prd.vpn.daniel.gomez-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:585768172288:certificate/ec5f3460-1e07-4a23-b5cc-b172f4d3738d",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-20T00:11:34Z",
            "not_before": "2024-11-22T00:11:34Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1/+DuiSQB66FQt+FAoE1wBOOrPDzBGMUANt/THwaDa4tAPJE\nNCbDFyOkQ0vHBQfdtswapRfpms/CYo/xKtA4Y48fVdPBPOeU0BX1CzC/csVBu9hr\np7Nbo5YPkQTWHjF7ut2mnGZRJVPPhzP/pWtIe5fhzEIxgXK3sHfttQ8i1+TGR+JR\n27i2h19zj0ri+zkGk5XbN7ZeyGAjB5uW9v4rrySpiV7ipx0ijHke/Ajj/fiIj4au\nSCUEvhatpcKDzDQvZPb/CuRtc8Z6nyrKZs4vQWIPtglx/3lgUZskocisSVjGn04l\nVKcrV9Yv4uyk0WWCs44jhCmIxVUQMbmQ9dnnqQIDAQABAoIBAQCcMFnymknEJECc\nsMCfpQtXD01WZQ11mKd4T0Bn8D1uswo76vPCulzMOKupNfx9+MgsTL7frsDvf1hS\nqT989AAyjeXczDipb9Q9/AKryt5FgbocuUxvgdS8H+C1vseOIb4Uy/6UjbATy9z/\nKWytEzzgkl1mtF7T+j41zyMGkCFj9ubzXXwmZR+lW3grQJMQOnmNyDrEvt16xF0/\n+f7OrUVjoZxzVJJp1j+I+dflGE3XXRN2hJmzhZbPNRANsKgHGms3oNY+r/+MrbaH\ngH5QeBTQdM7pQvoqhskosZHaDMKDYbhYq3DikOiXOZ7jHEB92+Inxy9laqS1mj6e\nDPqdzCLhAoGBAP7dZ35fzCx75/6s386NYlOitk4+OqP86WtjxONCG5RkwtJK3J5C\nI5Eh/xAn5hMLsCxucQCXl9P6YKkkvrFEQsVrTUgm5sETVFcigqOVHO9AtfYcqKD+\nonVfaFha4BCAt4KwLZuVsLw5Z6C1KincK9ErHTXSA7jNRyfktZLP9yB9AoGBANj1\ny2pfeGK0d5Eyn3duqYoiCE+imYwiajeRY7uUPDAbmHncQ0rPTc9ZNGDhNS2JyB+F\na7hXegW/5dyOwPVJ53u/XUxz1WfatSCjkTR7HjkCcjc76eZ2b4D+kKYpoysbvlym\nxipQgQVmvd7gK5VcubAhWm2k3pIBww5tK548qtedAoGBAMTSz341FUS1W/C+KQkm\n/uyAGDJMtJS4WLtqjT7EavAq8Jne3ooJodYPXx9m8LN8r01g7Tv71nEKR2PY0Lut\nb7NurnwuLr6k4tl3+VPDcFkErIGomEHc5DGowLibVbbo8M+op1AkRhzWaEUgI7O4\nKM6ccS6DRgSN44nXgrIikUMxAoGAVR9y1ORqRkfKFbTH7kMDz8d0fVItblbeV7j6\naVFKoBFjrIQn/sUBIVY9f7k8dQZ29y8QyX3AyVq2I+f6ewKpCNtXDrTvyNR9djXW\ntcGMZQ+5okQmjB5xtymptRfnBfXXpWBlpZp6VJUv768CSpLb4+fiI9yo2p5IWnOo\nxmfFG90CgYB75ditOHrminbfgZn6yBVY9hV+iLp/yy0Rlo2CPsAjGzUNGTQ3gfAU\n1VYI5jeFd8us9i5AmbgJdvHrLeinAjH6HBIBBVL7n5hCs0EHXoM+CzmRJ4gbotBo\nNWNU4i3tXmo0YPsJkAa0O0hbIykIIofKwVE2ZcFoo58gdfuyJqN7aA==\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.prd.vpn.daniel.gomez-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:585768172288:certificate/fa128870-740d-45df-8333-58295beffc03",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDMzCCAhugAwIBAgIQIzaULjEZLF0j0p7r0b2ffjANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMzRaFw0zNDExMjAwMDExMzRaMC4xCzAJBgNVBAoTAndnMR8wHQYDVQQDExZ3\nZy5wcmQudnBuLnJvb3QtY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAsxBgNR8KTBi6RDkga0RSKO6e6zoc3R8NLyhSgi2s5l0aytPDA0UKseEl\nyBgqq/0vAVDg4Fnp1Td3FI8YInyjjCpgOdHyyUxxJ0BHeTBzoqogIK33EiwPJVDW\nfX/yPqkIbKx65J1ZOmyIW01q/tAWotDCvFZlcTTOsw5NykXOGN+0bgiSqh2C+pq9\nstccHZ2O+1WUPBaedqU1QsmO4uMzab6NslZawST1ZDlbIDO0cICQkoaYfiUjhRj1\nFLwKjIicrLZmWBtPQEUzKwI1mxKIprgqBqSN3nYxNO4UMh3zxSZ9q12xyAjbBfdm\ndWtxiwQmEZjmV+j+u5jmvvAsdMh+3wIDAQABo1YwVDAOBgNVHQ8BAf8EBAMCBaAw\nEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBSA\nnjGObA4+xm/wiav9I5EnkNGx/jANBgkqhkiG9w0BAQsFAAOCAQEAM+87e5ula19D\nhbbZfMT+tT7jDcZyPX45tbtNieBIeHcQuNT8Pg8IYSeCQGe8T8jE7Yu4eASqPnGD\nVWuBhRC3PPEdfInIs/dKfaTo4UhuUrIm4uRjcCx25qOZbvFxV+WQyxPscnyjFrCw\nm7UpADr6smcKAJOC4jPMJazNILOiF0OzU+xO4EkN7Xs9DtFA6DlCMwXLGLd/lQYL\nRDuVOzeZPQL1hOz4YYagIL9HgCDgqGh4iG0Pv4TA6xB1AsXcsRJf+atg8KY4yk9g\nQXdONt9EYcTHE8si2X7ThDVMHjnv/YrC9smtjPhJJeGfVFUgwSwh6rGLcCvz0bXM\np253Jx4mgg==\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.prd.vpn.root-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:585768172288:certificate/fa128870-740d-45df-8333-58295beffc03",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-20T00:11:34Z",
            "not_before": "2024-11-22T00:11:34Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAsxBgNR8KTBi6RDkga0RSKO6e6zoc3R8NLyhSgi2s5l0aytPD\nA0UKseElyBgqq/0vAVDg4Fnp1Td3FI8YInyjjCpgOdHyyUxxJ0BHeTBzoqogIK33\nEiwPJVDWfX/yPqkIbKx65J1ZOmyIW01q/tAWotDCvFZlcTTOsw5NykXOGN+0bgiS\nqh2C+pq9stccHZ2O+1WUPBaedqU1QsmO4uMzab6NslZawST1ZDlbIDO0cICQkoaY\nfiUjhRj1FLwKjIicrLZmWBtPQEUzKwI1mxKIprgqBqSN3nYxNO4UMh3zxSZ9q12x\nyAjbBfdmdWtxiwQmEZjmV+j+u5jmvvAsdMh+3wIDAQABAoIBAHW2DCifkRtZHgl/\nLEqXjRMPWjTz7MmHghk//o1JDWIaTmSLNKVPm6o3gai6CkMpmt7Ylhulv8vEPGmt\nb4YsPS8FJGCeHWYq9C+DV/jY2wtRnvEcq1Cs2gAD1hyGIW8Dm2AlOlxS+7cmZbTv\nfaiojljVt04r1V/IASFAA+82WDeMrWW9CtNSgAL0zXYl0dffw/3yydzo7sqpjDvh\nAjXNzh9RuQ2VaWRG4NZOdELCuZo4IIVngBc9QRAdJTxVLnOgJBVVWH39whxnUbOf\nuC1Gyb9RD2xaqB0N3HRukQL8IgVLrjs4ktNyhGJdIPa77147QtnFdmt0ai3ECdFe\nfY+cPEECgYEA5OsJV08jRBi5HVCZg7ME3zp5jRSiv0OlSaM8BFxOr+93Aohu9Lfa\nzjQvKqtzwDrzrUuV4ybob91JNiPK5xDrkaqsR9/IwYFtPiSCdadFg+78tK7jdKyY\nXCajbH57sY0aClhVP2bGA/mtPCNLFb9Ur5DTes/hhaK6eoMC4Hrob48CgYEAyD93\nvEY1LxRWWgv2+pUoD0f6wAEoGWk2wt0L/VvnScvgyiSNnmG1FN3sZFXzovx1r2qw\nKut2UKzBD4svnBqWHb2jBg07P3l0V5mkY+0asC8X8A1DT+Nb4VSg+WKfoFKES3J2\nVDGSwEvTfhgaEjgH7F2RZrmCsRhPGbaDBY+YU7ECgYEAzBf5Jgx6hrX8JPS9SbwL\n9fIueOgTCa+H6BVO5xxdU2KOmoWFV02sGPhRrRtbgeGNa83d/r2rskB6i3hx6H0f\naanfG92bIVsBSMxIPBk8Uxp516WtSVKwLEiOn6ZNJcmFk/+ZUYORu+2Y0+srgGIr\nYLQguHgqu3iQBbZUlEtAfGUCgYEAqTdg4jvd84PXGM7ljYl/ybIExj3z+c08Vlzf\nJeGEyIq90XQkLIPatuB2Q6+Sa9e1R1/7sLk7SR9DIfR3bg3VbxpyacnCmHf1BZWz\nIjIaDGova0555Ed3vCl8wmFCDQPOAcefELS3k0JAXVzWozCwGWBUX59CPo8RQORH\nQeq/SXECgYAT3pRDhPH8dmfu+MUjPEDq9sjhDZ/AaNK+sH3GCy3NtisRMj0ce7BV\np92MfXgSDNUYf4GBMmvKj+sTyvGZ7L4HjRFWKWKcVrlKXtbjczpO4nt0fr4tY+qg\n2+IFrecxrwQpo/Ro+QuUVpXcg17Xg4gZ2PpQ/8/QB7YGTP4m1GFJNg==\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.prd.vpn.root-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:585768172288:certificate/2d7a4564-c3fd-412d-9020-69d71ef7eb83",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDOTCCAiGgAwIBAgIRANRlKNHHTs7Xk7Gw57wWwLswDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnByZC52cG4uY2EwHhcNMjQxMTIy\nMDAxMTM0WhcNMzQxMTIwMDAxMTM0WjAzMQswCQYDVQQKEwJ3ZzEkMCIGA1UEAxMb\nd2cucHJkLnZwbi50ZXJyYWZvcm0tY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAu+TvI5cnwy0GTP6vL1xeIdnyUJ6H9sPH8U0XKakZSRS+jRaQ\n4AekjCd2M6tcZfx0x6Dng76qQNHf6NsfKnVfuOXLnaiaqbpn4DUsjLkK5jEGVKiD\nuEHHqVYwhz7HhzTx/pusGy7/aRvEW1g1kBZ8u82ZWV5ik9N6DPNJWDpw/HVwNhTf\n3ld33fjYRF3u5mNOS+j3cl6DcnshAGa7nSlzYwb1sD0H1sAeZZf7FVxWuhVDLsB5\nWTMk1zUtMQX8YsZM6rVTMySlRpgy1VUCQvvidDUYfX1OGpC4Fqc+gBQdCctl0Ezs\nCqpp0Ror36x91xNhGpTnaKx60MOuXHs5dSgyMwIDAQABo1YwVDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME\nGDAWgBSAnjGObA4+xm/wiav9I5EnkNGx/jANBgkqhkiG9w0BAQsFAAOCAQEAcR8q\n2bPvUvNhccWvM0Q/iKWG+ppb3gCVGNBPjSxuSRLssfyEeAu0ZOfoG29p5dKbrVET\nQsk8UuUu5h50h4ThZ+qdOVzr8BmrBbEya4N8OQEE6kqZVaR0VaZjJXoAIE0oy3mp\n8ZO/LU9M3zQDXUsoSkSMeg5gD4voUJNbhG2rVGuBx1yyapvH8weCZZ9FShvpwdpL\nVhhcbN8KIZg2DbO9nsJEV1i260olvPYXT+Wlio/6M9gJ4nRh1DRV8wU+YLj2SLAw\n7SP5Mf63+kl5DdBUGFIlYr4JgK4LBDQhEwYS9PvbPgm52g7PqyZwQAWlHKkKS0TA\nU22/shrI1PKS26kXDg==\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.prd.vpn.terraform-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:585768172288:certificate/2d7a4564-c3fd-412d-9020-69d71ef7eb83",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-20T00:11:34Z",
            "not_before": "2024-11-22T00:11:34Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAu+TvI5cnwy0GTP6vL1xeIdnyUJ6H9sPH8U0XKakZSRS+jRaQ\n4AekjCd2M6tcZfx0x6Dng76qQNHf6NsfKnVfuOXLnaiaqbpn4DUsjLkK5jEGVKiD\nuEHHqVYwhz7HhzTx/pusGy7/aRvEW1g1kBZ8u82ZWV5ik9N6DPNJWDpw/HVwNhTf\n3ld33fjYRF3u5mNOS+j3cl6DcnshAGa7nSlzYwb1sD0H1sAeZZf7FVxWuhVDLsB5\nWTMk1zUtMQX8YsZM6rVTMySlRpgy1VUCQvvidDUYfX1OGpC4Fqc+gBQdCctl0Ezs\nCqpp0Ror36x91xNhGpTnaKx60MOuXHs5dSgyMwIDAQABAoIBACtKqD7PCP5TVWxQ\nEhUbdyTdjpM8s58LpPnYBUo4B/dqrCzd0iuMF0GjpfxpszRcYpvMWwtj1t5wfOKt\n+hRSTufPKob83gXVSTHDjqwtxnEbQpYm7ZJ6tYIytaOzt01TyZ4cSB9LSNXy698Q\nB+dXBw5OZNLOiG/+/dQWCgQmEvpXv5zNM/6Zvi3ZSOSp64jPgV58mH5YgxMsaEar\nbFDDoFcLK8yDAQOTl+woxs2B2n5lOrjKIZDOPu1U6h0D6lgnuFtJSNIMSgf66AJW\nZSugSJVpin1W1CUulZ4dYH7rTdCmDz9d2G1wCQ1+Oy3LQkwLlwbOWfPj+50iQrA9\nK/4FYUECgYEA3ZCrqrfR4YIUjcC8jFgStDHMniKGZ834OtP9fCixAMrZZe3l+jTm\nZGe3vDF6H/f6glZBWaEbJBOdLBsPw1TqOgUqAUOvyyIWHY0Yi+iFTchmiKN7hQ0v\np1+oARKo+WCJYg0I5eBdKLe6bWFI6IZzVfUigkqDSiFpQhTw645S//kCgYEA2Rid\nNTi8B3sHGe0IzID4vsGC+Dgo6zp1RxidR2LW9mF1vGLx+9IxJeONU3eSmX30n2D+\nKyFHAMVtbRTpAoev/FTM075oX3YkF6J05HMw3SLabl7D+yrDsCKRZ2ZNJx7Zt7fs\nEnOrVrS/03Ku/dQ4pF3YYA/AW3UAO4vU9tdqZosCgYAPFcB6WRWTEvYvSIYN0BlF\n53YU9ijMfHuAFdrWTzbt5OG0TOQxitR81Yru5zd3YbzOjuzYG13rsOIslJMYK3nf\nBWb8uw0G+YUj8e1P6T7aMuC4QNkyD9nEvYCEwi56/BWedWC7tfDhytCIje0W18CW\ng6Ab2tLhgzDVbPOSNhh0kQKBgQDGynYx5OiwhORkxhtXgAXGTtZJyssVUqtPVee3\nFXe3lljED2p75+XfRvYDZyuTZ7XXN26mOcuVljL0PsB685qfmVsRzXovZ7P2/GjD\nRAOLir2vcRFObcNRBuZUY2Xkm6hLRZxi7Q4I0GwTCCHbBjhzsgdPNz0xwfpbjFiP\nS4P/rwKBgQDSkRUQwVQJFoBXerKASqeT68ImzX4cZK0izsS1vogfDRkLyVhtbrwc\n7eFaGmEYX74n7L+qqUvvD8H11ZolhJpb9anCpaQ3y9xz4RoPoJzC5XSMIO0BMKFH\nGJiS4FqdUUv0hqk3zpuy8/5C1/A3ymo6Yct9FAp8iMqUE7hr5EWKZA==\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.prd.vpn.terraform-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:585768172288:certificate/c9fae9e8-41f4-42a6-b24c-8ca635edaa0a",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDLjCCAhagAwIBAgIQDb0fYofPt/SYck/GkbYToDANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMzRaFw0zNDExMjAwMDExMzRaMCkxCzAJBgNVBAoTAndnMRowGAYDVQQDExF3\nZy5wcmQudnBuLnNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAKtqrcwziktAJ0/53hOiA+Z5V4Q8NRtr0mR/oO6C4Exkz5Hp8eb+qyo15cdgs8PS\n0e0Z8cJyKT+66RWjjJ6ev5f6ZEkdDD+i8yc4Th3hNj8w//Trt1SsGDgrgb7Wn/eN\nZovJ9ckYPQvambv2/SIxYrFfyyNvaji4ChhjS/be4Ry0fsI3dN05Lvvl5MLZAi0j\nV9oJtjhqdhMTMO8O2EvSk/8c/7iiAoIogENIPintJ1zeCv4G6k80VLeP6uY4sTZv\nslUpzvdD6QJhnmDOZ2FnY3dUJLzasrOxpBb0orzEKN5VOTkgDFgEU2PLdyyHtlNZ\nvAceMXOzU97+a34GN4fnU28CAwEAAaNWMFQwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUgJ4xjmwO\nPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcNAQELBQADggEBAC2YqOTCqoaFI1o6FnvG\nuiMj3v+hoC/txWLNjMf943PBI9JJiXabhTDt1A38QIcIcUsg8usEJcw64FLoYAE2\nDm6SSoCC7r4wSRqZxmiUR0biMcEXrqvgHiCpYULvIpc3sThMxVvJygBeE9ZMv3Ze\n22CriPf7ViLjo9DaktIpo4BL6OtYh96rC1MmApS+4WIWy7/bU8sCuMiuHEH682sk\nAKvKLEqLAeRHV542dR6pWOOaoozI58cy1bYY/4JaPrzuAbVrPXx5lLHdGwx5TOd3\nHyaW1RUzBaAihEy4E2Fm7rHZCUvZdz6OWRcYzhqe2rVflVg413q4mt6NsLVz7fAe\nYWs=\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.prd.vpn.server",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:585768172288:certificate/c9fae9e8-41f4-42a6-b24c-8ca635edaa0a",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-20T00:11:34Z",
            "not_before": "2024-11-22T00:11:34Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAq2qtzDOKS0AnT/neE6ID5nlXhDw1G2vSZH+g7oLgTGTPkenx\n5v6rKjXlx2Czw9LR7RnxwnIpP7rpFaOMnp6/l/pkSR0MP6LzJzhOHeE2PzD/9Ou3\nVKwYOCuBvtaf941mi8n1yRg9C9qZu/b9IjFisV/LI29qOLgKGGNL9t7hHLR+wjd0\n3Tku++XkwtkCLSNX2gm2OGp2ExMw7w7YS9KT/xz/uKICgiiAQ0g+Ke0nXN4K/gbq\nTzRUt4/q5jixNm+yVSnO90PpAmGeYM5nYWdjd1QkvNqys7GkFvSivMQo3lU5OSAM\nWARTY8t3LIe2U1m8Bx4xc7NT3v5rfgY3h+dTbwIDAQABAoIBADci4TRFf74krIB1\nBpGaE1cWwKewFgTz8YCR7NnLDwqDgqCUd1Ktp7C0FWzEFg5uyUdSiQjaX5o4LLDh\nImIC/e2MhKVfyojNiRica8QApMo+oJXPG/EISeIHXHxd3KZrvQhJtd0xBrHBZqGn\nGFTfPbd/8H89XxVPXS/rAIwvtIjenwK2GVQBD4qtSUDK+1NAJXdmOCFsrcGZ2Lxe\nYzop/ZpwnNYxnXV/pZfNnlL4mDsMVuIC+ZAzn/2EhB3vROiGy5/uW2IQE9s9+a5K\nyyFcs2LUerqR0v2q3Vf+AwQleXeJlXhPVu97r6OQHElwPDJRqpXgENK8OoFTDCF/\nfpaMpkECgYEA01/nqfwZ4/tauJtV61cAYyxsL4I+Wg+KVTghqgEzIXOfCRJA/OP6\n9uBUZayajYCb8nJ9UyshFdyb+sJUD71sa0jmtTB8c9ID+Y5PGCNy4TeEocEmBcuY\nBavlCWkFB4cLbTxK1SSsQMLpRWoo8ul3Gm2LwXKl4+s/UVzwU+eKux0CgYEAz5su\nhFH8Xyop+JbMfMWs58MjgcLXTd/iTvXkif91rJbIlhf4cLEocncGOv8JNgoPKfSi\nnNWb8D57Dxo71xqhr08tTEqTHgByX/xQ8y/esE5JwrpEGplufp0/p0qC06eAC4DO\nbI1fqVKtifS87xoNByGOFNcFT1aU3wEs0P8k9vsCgYAL4B2B3VoPBvYn3QJMwIyT\nBdHmMWkTYkAhXY/2ny6iOH684buo+Z4F9MCJHdNpE8qvKmOEIq4vLj/NLNHQOJI4\nzNW5ZEn5r9jtUmN7NbKkmJvpApMCTFf0KZ4qky3nKF0p+/MwWmkbElhMwBQg4aEB\naRoq+if70CG0joYqEJ4ouQKBgAX1ZUNk+wJcOnIpGdtm7QyF3EoIJpfUmjE7+4A+\ndckrVryAGaBaZVfLtMESutfzN/YzUEuCEgS2Nl/7l8YXvJZEhn9PEKPmzWGV41jn\ngdO7m4BcSkIdLz+xEbeietjKUPGDk+knsZwxhEuWW6ndLIyM2QAeH8fkK0evR/MD\nr7LrAoGASDMBuB46aANdEyy3IDBTMRHYlCl1gxQMe5map5KAsovj8NB1qaICyztU\n1vlWS7ErAmhfVNEN2zHl3jcxnvvz72tGCXVn8H49N5Wq92B9VVQ4saDzPFqQgGcZ\ni5s/rQXmpDHyGgHXhnvvMgmCiEAzRDlGEwi3Lsyu2ToENmkyxyA=\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.prd.vpn.server"
            ],
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "vpn-logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:585768172288:log-group:wg/prd/vpn/logs/",
            "id": "wg/prd/vpn/logs/",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "wg/prd/vpn/logs/",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_cloudwatch_log_stream",
      "name": "vpn-logs-stream",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:585768172288:log-group:wg/prd/vpn/logs/:log-stream:connection_logs",
            "id": "connection_logs",
            "log_group_name": "wg/prd/vpn/logs/",
            "name": "connection_logs"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_authorization_rule",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_group_id": "",
            "authorize_all_groups": true,
            "client_vpn_endpoint_id": "cvpn-endpoint-06c8ad1ffdd8441ab",
            "description": "",
            "id": "cvpn-endpoint-06c8ad1ffdd8441ab,0.0.0.0/0",
            "target_network_cidr": "0.0.0.0/0",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_ec2_client_vpn_network_association.vpn-client",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_endpoint",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:client-vpn-endpoint/cvpn-endpoint-06c8ad1ffdd8441ab",
            "authentication_options": [
              {
                "active_directory_id": "",
                "root_certificate_chain_arn": "arn:aws:acm:us-east-2:585768172288:certificate/fa128870-740d-45df-8333-58295beffc03",
                "saml_provider_arn": "",
                "self_service_saml_provider_arn": "",
                "type": "certificate-authentication"
              }
            ],
            "client_cidr_block": "10.0.0.0/22",
            "client_connect_options": [
              {
                "enabled": false,
                "lambda_function_arn": ""
              }
            ],
            "client_login_banner_options": [
              {
                "banner_text": "",
                "enabled": false
              }
            ],
            "connection_log_options": [
              {
                "cloudwatch_log_group": "wg/prd/vpn/logs/",
                "cloudwatch_log_stream": "connection_logs",
                "enabled": true
              }
            ],
            "description": "wg-prd-vpn-client",
            "dns_name": "*.cvpn-endpoint-06c8ad1ffdd8441ab.prod.clientvpn.us-east-2.amazonaws.com",
            "dns_servers": [],
            "id": "cvpn-endpoint-06c8ad1ffdd8441ab",
            "security_group_ids": [
              "sg-0933f0a7ec9305927"
            ],
            "self_service_portal": "disabled",
            "self_service_portal_url": "",
            "server_certificate_arn": "arn:aws:acm:us-east-2:585768172288:certificate/c9fae9e8-41f4-42a6-b24c-8ca635edaa0a",
            "session_timeout_hours": 8,
            "split_tunnel": true,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "transport_protocol": "udp",
            "vpc_id": "vpc-0f433948a273fe876",
            "vpn_port": 443
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_network_association",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "association_id": "cvpn-assoc-00fc584a75bacc14d",
            "client_vpn_endpoint_id": "cvpn-endpoint-06c8ad1ffdd8441ab",
            "id": "cvpn-assoc-00fc584a75bacc14d",
            "subnet_id": "subnet-086c51e0bafc21586",
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::wg-prd-vpn-config-files",
            "bucket": "wg-prd-vpn-config-files",
            "bucket_domain_name": "wg-prd-vpn-config-files.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "wg-prd-vpn-config-files.s3.us-east-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": true,
            "grant": [
              {
                "id": "9b190df558589dbe425995a70fff000b1bed37a70e20fb0bfe917308c1b54b1f",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z2O1EMRO9K5GLX",
            "id": "wg-prd-vpn-config-files",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "{\"Statement\":[{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::wg-prd-vpn-config-files/*\",\"arn:aws:s3:::wg-prd-vpn-config-files\"]}],\"Version\":\"2012-10-17\"}",
            "region": "us-east-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "wg-prd-vpn-config-files",
              "Terraform": "true"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "wg-prd-vpn-config-files",
              "Terraform": "true"
            },
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "wg-prd-vpn-config-files",
            "id": "wg-prd-vpn-config-files",
            "policy": "{\"Statement\":[{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::wg-prd-vpn-config-files/*\",\"arn:aws:s3:::wg-prd-vpn-config-files\"]}],\"Version\":\"2012-10-17\"}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.data.aws_iam_policy_document.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": true,
            "block_public_policy": true,
            "bucket": "wg-prd-vpn-config-files",
            "id": "wg-prd-vpn-config-files",
            "ignore_public_acls": true,
            "restrict_public_buckets": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_server_side_encryption_configuration",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "wg-prd-vpn-config-files",
            "expected_bucket_owner": "",
            "id": "wg-prd-vpn-config-files",
            "rule": [
              {
                "apply_server_side_encryption_by_default": [
                  {
                    "kms_master_key_id": "",
                    "sse_algorithm": "AES256"
                  }
                ],
                "bucket_key_enabled": false
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_object",
      "name": "vpn-config-file",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-prd-vpn-config-files/daniel.gomez-wg-prd-vpn.ovpn",
            "bucket": "wg-prd-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTA2YzhhZDFmZmRkODQ0MWFiLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZqQ0NBZjZnQXdJQkFnSVFmbWpmaUlKeFkycE9kSGRlYytJNU96QU5CZ2txaGtpRzl3MEJBUXNGQURBbApNUXN3Q1FZRFZRUUtFd0ozWnpFV01CUUdBMVVFQXhNTmQyY3VjSEprTG5ad2JpNWpZVEFlRncweU5ERXhNakl3Ck1ERXhNamxhRncwek5ERXhNakF3TURFeE1qbGFNQ1V4Q3pBSkJnTlZCQW9UQW5kbk1SWXdGQVlEVlFRREV3MTMKWnk1d2NtUXVkbkJ1TG1OaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMU44UQpaZHBnTWpzbWpJc1BTUy9ZY0JEUFNXS2orQ0orbm9CVTVZNWZrRDlKMVBldFZNdGU3dXBkNkRLMnI0MGhhMXBrCmEvYWNGdXZTQWlOeS9KaGJXUUNmVmthMWgvM0l5WWh6OGEvKzgyYmd3MXkwL2M1WVhlSzJkVTRmMHoyMTRJSUgKUGtQaEs3cnBTZkNRQ0JSY082dk02WmVQSlV5MXZOZE8zQTh6Nkt1aENJM25wQXZpenkwemhJZlRUMlpURGQ4ZgppLzYxSUNEOEQyNklkdDJ0SFJ1Q3lXR2MyZW04SUFaVHptWklGc3dVbmlqNUg3Z0xiT3RJNjUvMnY3UnloYVYxCkNDblF4dlRNeFZCY3NsOFBaRkdrY3BRc3MxeWVJYVNmWFM4aHBxSnkxYitxTDNrci9HOHhZSkhMQTMvRE5NMXoKYjg4VWVyRkJ6RWVwUkZTZTRRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVnSjR4am13T1BzWnY4SW1yL1NPUko1RFJzZjR3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFHOFBNTkNsUGxWRS9xWGs5MUl6MDF1R0hsTFd5NUFJVHdKV0twWFJRRFVLNTg0by85RDUKZzJuK0wxVHQ5c2ZYWG1aaGVDQXErRDlncGxpSWxseVZXQ0pUVUpUMnV1OEJDMWo4SDUyU2FTU3lqV2p1aC9PYwpzc01DRVpJcHY3c2pJbWhUMElSMTMrWUJYai9jYnlOYUlWbUVjTkFyMm1lQU15ckQ1czBtMHl6ZmJZeHhmL3BQCnU2emd5all2MnNJSHFZL2g1UE8xRzY4cEp6K0g2OTlTRU0vM3FyczFQMHJCcStubnlxUFpndHFCVlU2ZHk1bjMKRzVnZ3d3WTlFQVAraURWWUs3RC9wclRUb1RlaENzUmx2K2k3L0FTR3RIcE5VejVtbkthNjNRdlBYdTVzSUM1ZwpTNzlpdGdDcnRjSk9lUm1ONmQvT1Q5MFE3MmlQTy9jd0ZrYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQU41YVlVNi8wckozS3V4ek40aElsZGN3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFTE1Ba0dBMVVFQ2hNQ2QyY3hGakFVQmdOVkJBTVREWGRuTG5CeVpDNTJjRzR1WTJFd0hoY05NalF4TVRJeQpNREF4TVRNMFdoY05NelF4TVRJd01EQXhNVE0wV2pBMk1Rc3dDUVlEVlFRS0V3SjNaekVuTUNVR0ExVUVBeE1lCmQyY3VjSEprTG5ad2JpNWtZVzVwWld3dVoyOXRaWG90WTJ4cFpXNTBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUExLytEdWlTUUI2NkZRdCtGQW9FMXdCT09yUER6QkdNVUFOdC9USHdhRGE0dApBUEpFTkNiREZ5T2tRMHZIQlFmZHRzd2FwUmZwbXMvQ1lvL3hLdEE0WTQ4ZlZkUEJQT2VVMEJYMUN6Qy9jc1ZCCnU5aHJwN05ibzVZUGtRVFdIakY3dXQybW5HWlJKVlBQaHpQL3BXdEllNWZoekVJeGdYSzNzSGZ0dFE4aTErVEcKUitKUjI3aTJoMTl6ajByaSt6a0drNVhiTjdaZXlHQWpCNXVXOXY0cnJ5U3BpVjdpcHgwaWpIa2UvQWpqL2ZpSQpqNGF1U0NVRXZoYXRwY0tEekRRdlpQYi9DdVJ0YzhaNm55cktaczR2UVdJUHRnbHgvM2xnVVpza29jaXNTVmpHCm4wNGxWS2NyVjlZdjR1eWswV1dDczQ0amhDbUl4VlVRTWJtUTlkbm5xUUlEQVFBQm8xWXdWREFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVgpIU01FR0RBV2dCU0FuakdPYkE0K3htL3dpYXY5STVFbmtOR3gvakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBClM1dnVxTGhTNTZiQ2RFaVQyNkdKK2FXdi8vZ2plWGduYk1OemYzN2ZPU284a0FocWhpMHZxVjZsUTQ4cG9ndEgKbS9IcUJzbFFiMkFhbWVObks4M2hKd3JsSG5kQmdqTkFmRVVTd3RGZDF5SlBPVDFBdHhEVS9nK3laY043Z2hLcwpXSWtmOE9ieVAzRE96dGVTNzZkaXNwMDV0amptU2V6K2FjYnVadXdKaGpKSmpIb0VGVXNQSmd0WjB4c3RaMmd4CnlWOUhleVQrVlpTbjgxb0pPZVFOcFVTRktPOWtiZEZaVm9MK2hpNFMzSlhuT3VJTERIMlhOT1BKM3hzUzc5UFEKaU1pclJHZ0oyMlhWY3RKamMvY29Fc1NBNWJkbmc3aUJ6ZnYvZzA3MG8vYmsweHlhWitHVU0vc3FvQkEveWs2MQpRdG1OQ0R0bzBJekFFNWlkZ1I0RWpnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jZXJ0PgoKPGtleT4KLS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMS8rRHVpU1FCNjZGUXQrRkFvRTF3Qk9PclBEekJHTVVBTnQvVEh3YURhNHRBUEpFCk5DYkRGeU9rUTB2SEJRZmR0c3dhcFJmcG1zL0NZby94S3RBNFk0OGZWZFBCUE9lVTBCWDFDekMvY3NWQnU5aHIKcDdOYm81WVBrUVRXSGpGN3V0Mm1uR1pSSlZQUGh6UC9wV3RJZTVmaHpFSXhnWEszc0hmdHRROGkxK1RHUitKUgoyN2kyaDE5emowcmkremtHazVYYk43WmV5R0FqQjV1Vzl2NHJyeVNwaVY3aXB4MGlqSGtlL0Fqai9maUlqNGF1ClNDVUV2aGF0cGNLRHpEUXZaUGIvQ3VSdGM4WjZueXJLWnM0dlFXSVB0Z2x4LzNsZ1Vac2tvY2lzU1ZqR24wNGwKVktjclY5WXY0dXlrMFdXQ3M0NGpoQ21JeFZVUU1ibVE5ZG5ucVFJREFRQUJBb0lCQVFDY01Gbnlta25FSkVDYwpzTUNmcFF0WEQwMVdaUTExbUtkNFQwQm44RDF1c3dvNzZ2UEN1bHpNT0t1cE5meDkrTWdzVEw3ZnJzRHZmMWhTCnFUOTg5QUF5amVYY3pEaXBiOVE5L0FLcnl0NUZnYm9jdVV4dmdkUzhIK0MxdnNlT0liNFV5LzZVamJBVHk5ei8KS1d5dEV6emdrbDFtdEY3VCtqNDF6eU1Ha0NGajl1YnpYWHdtWlIrbFczZ3JRSk1RT25tTnlEckV2dDE2eEYwLworZjdPclVWam9aeHpWSkpwMWorSStkZmxHRTNYWFJOMmhKbXpoWmJQTlJBTnNLZ0hHbXMzb05ZK3IvK01yYmFICmdINVFlQlRRZE03cFF2b3Foc2tvc1pIYURNS0RZYmhZcTNEaWtPaVhPWjdqSEVCOTIrSW54eTlsYXFTMW1qNmUKRFBxZHpDTGhBb0dCQVA3ZFozNWZ6Q3g3NS82czM4Nk5ZbE9pdGs0K09xUDg2V3RqeE9OQ0c1Umt3dEpLM0o1QwpJNUVoL3hBbjVoTUxzQ3h1Y1FDWGw5UDZZS2trdnJGRVFzVnJUVWdtNXNFVFZGY2lncU9WSE85QXRmWWNxS0QrCm9uVmZhRmhhNEJDQXQ0S3dMWnVWc0x3NVo2QzFLaW5jSzlFckhUWFNBN2pOUnlma3RaTFA5eUI5QW9HQkFOajEKeTJwZmVHSzBkNUV5bjNkdXFZb2lDRStpbVl3aWFqZVJZN3VVUERBYm1IbmNRMHJQVGM5Wk5HRGhOUzJKeUIrRgphN2hYZWdXLzVkeU93UFZKNTN1L1hVeHoxV2ZhdFNDamtUUjdIamtDY2pjNzZlWjJiNEQra0tZcG95c2J2bHltCnhpcFFnUVZtdmQ3Z0s1VmN1YkFoV20yazNwSUJ3dzV0SzU0OHF0ZWRBb0dCQU1UU3ozNDFGVVMxVy9DK0tRa20KL3V5QUdESk10SlM0V0x0cWpUN0VhdkFxOEpuZTNvb0pvZFlQWHg5bThMTjhyMDFnN1R2NzFuRUtSMlBZMEx1dApiN051cm53dUxyNms0dGwzK1ZQRGNGa0VySUdvbUVIYzVER293TGliVmJibzhNK29wMUFrUmh6V2FFVWdJN080CktNNmNjUzZEUmdTTjQ0blhncklpa1VNeEFvR0FWUjl5MU9ScVJrZktGYlRIN2tNRHo4ZDBmVkl0YmxiZVY3ajYKYVZGS29CRmpySVFuL3NVQklWWTlmN2s4ZFFaMjl5OFF5WDNBeVZxMkkrZjZld0twQ050WERyVHZ5TlI5ZGpYVwp0Y0dNWlErNW9rUW1qQjV4dHltcHRSZm5CZlhYcFdCbHBacDZWSlV2NzY4Q1NwTGI0K2ZpSTl5bzJwNUlXbk9vCnhtZkZHOTBDZ1lCNzVkaXRPSHJtaW5iZmdabjZ5QlZZOWhWK2lMcC95eTBSbG8yQ1BzQWpHelVOR1RRM2dmQVUKMVZZSTVqZUZkOHVzOWk1QW1iZ0pkdkhyTGVpbkFqSDZIQklCQlZMN241aENzMEVIWG9NK0N6bVJKNGdib3RCbwpOV05VNGkzdFhtbzBZUHNKa0FhME8waGJJeWtJSW9mS3dWRTJaY0ZvbzU4Z2RmdXlKcU43YUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQoKPC9rZXk+Cg==",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "b8076dc36e06e6d242b5ccb2fec29d45",
            "force_destroy": false,
            "id": "daniel.gomez-wg-prd-vpn.ovpn",
            "key": "daniel.gomez-wg-prd-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-prd-vpn-config-files/root-wg-prd-vpn.ovpn",
            "bucket": "wg-prd-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTA2YzhhZDFmZmRkODQ0MWFiLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZqQ0NBZjZnQXdJQkFnSVFmbWpmaUlKeFkycE9kSGRlYytJNU96QU5CZ2txaGtpRzl3MEJBUXNGQURBbApNUXN3Q1FZRFZRUUtFd0ozWnpFV01CUUdBMVVFQXhNTmQyY3VjSEprTG5ad2JpNWpZVEFlRncweU5ERXhNakl3Ck1ERXhNamxhRncwek5ERXhNakF3TURFeE1qbGFNQ1V4Q3pBSkJnTlZCQW9UQW5kbk1SWXdGQVlEVlFRREV3MTMKWnk1d2NtUXVkbkJ1TG1OaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMU44UQpaZHBnTWpzbWpJc1BTUy9ZY0JEUFNXS2orQ0orbm9CVTVZNWZrRDlKMVBldFZNdGU3dXBkNkRLMnI0MGhhMXBrCmEvYWNGdXZTQWlOeS9KaGJXUUNmVmthMWgvM0l5WWh6OGEvKzgyYmd3MXkwL2M1WVhlSzJkVTRmMHoyMTRJSUgKUGtQaEs3cnBTZkNRQ0JSY082dk02WmVQSlV5MXZOZE8zQTh6Nkt1aENJM25wQXZpenkwemhJZlRUMlpURGQ4ZgppLzYxSUNEOEQyNklkdDJ0SFJ1Q3lXR2MyZW04SUFaVHptWklGc3dVbmlqNUg3Z0xiT3RJNjUvMnY3UnloYVYxCkNDblF4dlRNeFZCY3NsOFBaRkdrY3BRc3MxeWVJYVNmWFM4aHBxSnkxYitxTDNrci9HOHhZSkhMQTMvRE5NMXoKYjg4VWVyRkJ6RWVwUkZTZTRRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVnSjR4am13T1BzWnY4SW1yL1NPUko1RFJzZjR3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFHOFBNTkNsUGxWRS9xWGs5MUl6MDF1R0hsTFd5NUFJVHdKV0twWFJRRFVLNTg0by85RDUKZzJuK0wxVHQ5c2ZYWG1aaGVDQXErRDlncGxpSWxseVZXQ0pUVUpUMnV1OEJDMWo4SDUyU2FTU3lqV2p1aC9PYwpzc01DRVpJcHY3c2pJbWhUMElSMTMrWUJYai9jYnlOYUlWbUVjTkFyMm1lQU15ckQ1czBtMHl6ZmJZeHhmL3BQCnU2emd5all2MnNJSHFZL2g1UE8xRzY4cEp6K0g2OTlTRU0vM3FyczFQMHJCcStubnlxUFpndHFCVlU2ZHk1bjMKRzVnZ3d3WTlFQVAraURWWUs3RC9wclRUb1RlaENzUmx2K2k3L0FTR3RIcE5VejVtbkthNjNRdlBYdTVzSUM1ZwpTNzlpdGdDcnRjSk9lUm1ONmQvT1Q5MFE3MmlQTy9jd0ZrYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lRSXphVUxqRVpMRjBqMHA3cjBiMmZmakFOQmdrcWhraUc5dzBCQVFzRkFEQWwKTVFzd0NRWURWUVFLRXdKM1p6RVdNQlFHQTFVRUF4TU5kMmN1Y0hKa0xuWndiaTVqWVRBZUZ3MHlOREV4TWpJdwpNREV4TXpSYUZ3MHpOREV4TWpBd01ERXhNelJhTUM0eEN6QUpCZ05WQkFvVEFuZG5NUjh3SFFZRFZRUURFeFozClp5NXdjbVF1ZG5CdUxuSnZiM1F0WTJ4cFpXNTBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUFzeEJnTlI4S1RCaTZSRGtnYTBSU0tPNmU2em9jM1I4Tkx5aFNnaTJzNWwwYXl0UERBMFVLc2VFbAp5QmdxcS8wdkFWRGc0Rm5wMVRkM0ZJOFlJbnlqakNwZ09kSHl5VXh4SjBCSGVUQnpvcW9nSUszM0Vpd1BKVkRXCmZYL3lQcWtJYkt4NjVKMVpPbXlJVzAxcS90QVdvdERDdkZabGNUVE9zdzVOeWtYT0dOKzBiZ2lTcWgyQytwcTkKc3RjY0haMk8rMVdVUEJhZWRxVTFRc21PNHVNemFiNk5zbFphd1NUMVpEbGJJRE8wY0lDUWtvYVlmaVVqaFJqMQpGTHdLaklpY3JMWm1XQnRQUUVVekt3STFteEtJcHJncUJxU04zbll4Tk80VU1oM3p4U1o5cTEyeHlBamJCZmRtCmRXdHhpd1FtRVpqbVYrait1NWptdnZBc2RNaCszd0lEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXcKRXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTQQpuakdPYkE0K3htL3dpYXY5STVFbmtOR3gvakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTSs4N2U1dWxhMTlECmhiYlpmTVQrdFQ3akRjWnlQWDQ1dGJ0TmllQkllSGNRdU5UOFBnOElZU2VDUUdlOFQ4akU3WXU0ZUFTcVBuR0QKVld1QmhSQzNQUEVkZkluSXMvZEtmYVRvNFVodVVySW00dVJqY0N4MjVxT1pidkZ4VitXUXl4UHNjbnlqRnJDdwptN1VwQURyNnNtY0tBSk9DNGpQTUphek5JTE9pRjBPelUreE80RWtON1hzOUR0RkE2RGxDTXdYTEdMZC9sUVlMClJEdVZPemVaUFFMMWhPejRZWWFnSUw5SGdDRGdxR2g0aUcwUHY0VEE2eEIxQXNYY3NSSmYrYXRnOEtZNHlrOWcKUVhkT050OUVZY1RIRThzaTJYN1RoRFZNSGpudi9ZckM5c210alBoSkplR2ZWRlVnd1N3aDZyR0xjQ3Z6MGJYTQpwMjUzSng0bWdnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jZXJ0PgoKPGtleT4KLS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc3hCZ05SOEtUQmk2UkRrZ2EwUlNLTzZlNnpvYzNSOE5MeWhTZ2kyczVsMGF5dFBECkEwVUtzZUVseUJncXEvMHZBVkRnNEZucDFUZDNGSThZSW55ampDcGdPZEh5eVV4eEowQkhlVEJ6b3FvZ0lLMzMKRWl3UEpWRFdmWC95UHFrSWJLeDY1SjFaT215SVcwMXEvdEFXb3REQ3ZGWmxjVFRPc3c1TnlrWE9HTiswYmdpUwpxaDJDK3BxOXN0Y2NIWjJPKzFXVVBCYWVkcVUxUXNtTzR1TXphYjZOc2xaYXdTVDFaRGxiSURPMGNJQ1Frb2FZCmZpVWpoUmoxRkx3S2pJaWNyTFptV0J0UFFFVXpLd0kxbXhLSXByZ3FCcVNOM25ZeE5PNFVNaDN6eFNaOXExMngKeUFqYkJmZG1kV3R4aXdRbUVaam1WK2ordTVqbXZ2QXNkTWgrM3dJREFRQUJBb0lCQUhXMkRDaWZrUnRaSGdsLwpMRXFYalJNUFdqVHo3TW1IZ2hrLy9vMUpEV0lhVG1TTE5LVlBtNm8zZ2FpNkNrTXBtdDdZbGh1bHY4dkVQR210CmI0WXNQUzhGSkdDZUhXWXE5QytEVi9qWTJ3dFJudkVjcTFDczJnQUQxaHlHSVc4RG0yQWxPbHhTKzdjbVpiVHYKZmFpb2psalZ0MDRyMVYvSUFTRkFBKzgyV0RlTXJXVzlDdE5TZ0FMMHpYWWwwZGZmdy8zeXlkem83c3FwakR2aApBalhOemg5UnVRMlZhV1JHNE5aT2RFTEN1Wm80SUlWbmdCYzlRUkFkSlR4VkxuT2dKQlZWV0gzOXdoeG5VYk9mCnVDMUd5YjlSRDJ4YXFCME4zSFJ1a1FMOElnVkxyanM0a3ROeWhHSmRJUGE3NzE0N1F0bkZkbXQwYWkzRUNkRmUKZlkrY1BFRUNnWUVBNU9zSlYwOGpSQmk1SFZDWmc3TUUzenA1alJTaXYwT2xTYU04QkZ4T3IrOTNBb2h1OUxmYQp6alF2S3F0endEcnpyVXVWNHlib2I5MUpOaVBLNXhEcmthcXNSOS9Jd1lGdFBpU0NkYWRGZys3OHRLN2pkS3lZClhDYWpiSDU3c1kwYUNsaFZQMmJHQS9tdFBDTkxGYjlVcjVEVGVzL2hoYUs2ZW9NQzRIcm9iNDhDZ1lFQXlEOTMKdkVZMUx4UldXZ3YyK3BVb0QwZjZ3QUVvR1drMnd0MEwvVnZuU2N2Z3lpU05ubUcxRk4zc1pGWHpvdngxcjJxdwpLdXQyVUt6QkQ0c3ZuQnFXSGIyakJnMDdQM2wwVjVta1krMGFzQzhYOEExRFQrTmI0VlNnK1dLZm9GS0VTM0oyClZER1N3RXZUZmhnYUVqZ0g3RjJSWnJtQ3NSaFBHYmFEQlkrWVU3RUNnWUVBekJmNUpneDZoclg4SlBTOVNid0wKOWZJdWVPZ1RDYStINkJWTzV4eGRVMktPbW9XRlYwMnNHUGhSclJ0YmdlR05hODNkL3IycnNrQjZpM2h4NkgwZgphYW5mRzkyYklWc0JTTXhJUEJrOFV4cDUxNld0U1ZLd0xFaU9uNlpOSmNtRmsvK1pVWU9SdSsyWTArc3JnR0lyCllMUWd1SGdxdTNpUUJiWlVsRXRBZkdVQ2dZRUFxVGRnNGp2ZDg0UFhHTTdsallsL3liSUV4ajN6K2MwOFZsemYKSmVHRXlJcTkwWFFrTElQYXR1QjJRNitTYTllMVIxLzdzTGs3U1I5RElmUjNiZzNWYnhweWFjbkNtSGYxQlpXegpJaklhREdvdmEwNTU1RWQzdkNsOHdtRkNEUVBPQWNlZkVMUzNrMEpBWFZ6V296Q3dHV0JVWDU5Q1BvOFJRT1JIClFlcS9TWEVDZ1lBVDNwUkRoUEg4ZG1mdStNVWpQRURxOXNqaERaL0FhTksrc0gzR0N5M050aXNSTWowY2U3QlYKcDkyTWZYZ1NETlVZZjRHQk1tdktqK3NUeXZHWjdMNEhqUkZXS1dLY1ZybEtYdGJqY3pwTzRudDBmcjR0WStxZwoyK0lGcmVjeHJ3UXBvL1JvK1F1VVZwWGNnMTdYZzRnWjJQcFEvOC9RQjdZR1RQNG0xR0ZKTmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQoKPC9rZXk+Cg==",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "7e925fb278b3696cdd66875bacc282e9",
            "force_destroy": false,
            "id": "root-wg-prd-vpn.ovpn",
            "key": "root-wg-prd-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-prd-vpn-config-files/terraform-wg-prd-vpn.ovpn",
            "bucket": "wg-prd-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTA2YzhhZDFmZmRkODQ0MWFiLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZqQ0NBZjZnQXdJQkFnSVFmbWpmaUlKeFkycE9kSGRlYytJNU96QU5CZ2txaGtpRzl3MEJBUXNGQURBbApNUXN3Q1FZRFZRUUtFd0ozWnpFV01CUUdBMVVFQXhNTmQyY3VjSEprTG5ad2JpNWpZVEFlRncweU5ERXhNakl3Ck1ERXhNamxhRncwek5ERXhNakF3TURFeE1qbGFNQ1V4Q3pBSkJnTlZCQW9UQW5kbk1SWXdGQVlEVlFRREV3MTMKWnk1d2NtUXVkbkJ1TG1OaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMU44UQpaZHBnTWpzbWpJc1BTUy9ZY0JEUFNXS2orQ0orbm9CVTVZNWZrRDlKMVBldFZNdGU3dXBkNkRLMnI0MGhhMXBrCmEvYWNGdXZTQWlOeS9KaGJXUUNmVmthMWgvM0l5WWh6OGEvKzgyYmd3MXkwL2M1WVhlSzJkVTRmMHoyMTRJSUgKUGtQaEs3cnBTZkNRQ0JSY082dk02WmVQSlV5MXZOZE8zQTh6Nkt1aENJM25wQXZpenkwemhJZlRUMlpURGQ4ZgppLzYxSUNEOEQyNklkdDJ0SFJ1Q3lXR2MyZW04SUFaVHptWklGc3dVbmlqNUg3Z0xiT3RJNjUvMnY3UnloYVYxCkNDblF4dlRNeFZCY3NsOFBaRkdrY3BRc3MxeWVJYVNmWFM4aHBxSnkxYitxTDNrci9HOHhZSkhMQTMvRE5NMXoKYjg4VWVyRkJ6RWVwUkZTZTRRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVnSjR4am13T1BzWnY4SW1yL1NPUko1RFJzZjR3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFHOFBNTkNsUGxWRS9xWGs5MUl6MDF1R0hsTFd5NUFJVHdKV0twWFJRRFVLNTg0by85RDUKZzJuK0wxVHQ5c2ZYWG1aaGVDQXErRDlncGxpSWxseVZXQ0pUVUpUMnV1OEJDMWo4SDUyU2FTU3lqV2p1aC9PYwpzc01DRVpJcHY3c2pJbWhUMElSMTMrWUJYai9jYnlOYUlWbUVjTkFyMm1lQU15ckQ1czBtMHl6ZmJZeHhmL3BQCnU2emd5all2MnNJSHFZL2g1UE8xRzY4cEp6K0g2OTlTRU0vM3FyczFQMHJCcStubnlxUFpndHFCVlU2ZHk1bjMKRzVnZ3d3WTlFQVAraURWWUs3RC9wclRUb1RlaENzUmx2K2k3L0FTR3RIcE5VejVtbkthNjNRdlBYdTVzSUM1ZwpTNzlpdGdDcnRjSk9lUm1ONmQvT1Q5MFE3MmlQTy9jd0ZrYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPVENDQWlHZ0F3SUJBZ0lSQU5SbEtOSEhUczdYazdHdzU3d1d3THN3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFTE1Ba0dBMVVFQ2hNQ2QyY3hGakFVQmdOVkJBTVREWGRuTG5CeVpDNTJjRzR1WTJFd0hoY05NalF4TVRJeQpNREF4TVRNMFdoY05NelF4TVRJd01EQXhNVE0wV2pBek1Rc3dDUVlEVlFRS0V3SjNaekVrTUNJR0ExVUVBeE1iCmQyY3VjSEprTG5ad2JpNTBaWEp5WVdadmNtMHRZMnhwWlc1ME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0MKQVE4QU1JSUJDZ0tDQVFFQXUrVHZJNWNud3kwR1RQNnZMMXhlSWRueVVKNkg5c1BIOFUwWEtha1pTUlMralJhUQo0QWVrakNkMk02dGNaZngweDZEbmc3NnFRTkhmNk5zZktuVmZ1T1hMbmFpYXFicG40RFVzakxrSzVqRUdWS2lECnVFSEhxVll3aHo3SGh6VHgvcHVzR3k3L2FSdkVXMWcxa0JaOHU4MlpXVjVpazlONkRQTkpXRHB3L0hWd05oVGYKM2xkMzNmallSRjN1NW1OT1MrajNjbDZEY25zaEFHYTduU2x6WXdiMXNEMEgxc0FlWlpmN0ZWeFd1aFZETHNCNQpXVE1rMXpVdE1RWDhZc1pNNnJWVE15U2xScGd5MVZVQ1F2dmlkRFVZZlgxT0dwQzRGcWMrZ0JRZENjdGwwRXpzCkNxcHAwUm9yMzZ4OTF4TmhHcFRuYUt4NjBNT3VYSHM1ZFNneU13SURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEUKQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRQpHREFXZ0JTQW5qR09iQTQreG0vd2lhdjlJNUVua05HeC9qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjUjhxCjJiUHZVdk5oY2NXdk0wUS9pS1dHK3BwYjNnQ1ZHTkJQalN4dVNSTHNzZnlFZUF1MFpPZm9HMjlwNWRLYnJWRVQKUXNrOFV1VXU1aDUwaDRUaForcWRPVnpyOEJtckJiRXlhNE44T1FFRTZrcVpWYVIwVmFaakpYb0FJRTBveTNtcAo4Wk8vTFU5TTN6UURYVXNvU2tTTWVnNWdENHZvVUpOYmhHMnJWR3VCeDF5eWFwdkg4d2VDWlo5RlNodnB3ZHBMClZoaGNiTjhLSVpnMkRiTzluc0pFVjFpMjYwb2x2UFlYVCtXbGlvLzZNOWdKNG5SaDFEUlY4d1UrWUxqMlNMQXcKN1NQNU1mNjMra2w1RGRCVUdGSWxZcjRKZ0s0TEJEUWhFd1lTOVB2YlBnbTUyZzdQcXlad1FBV2xIS2tLUzBUQQpVMjIvc2hySTFQS1MyNmtYRGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgo8L2NlcnQ+Cgo8a2V5PgotLS0tLUJFR0lOIFJTQSBQUklWQVRFIEtFWS0tLS0tCk1JSUVwQUlCQUFLQ0FRRUF1K1R2STVjbnd5MEdUUDZ2TDF4ZUlkbnlVSjZIOXNQSDhVMFhLYWtaU1JTK2pSYVEKNEFla2pDZDJNNnRjWmZ4MHg2RG5nNzZxUU5IZjZOc2ZLblZmdU9YTG5haWFxYnBuNERVc2pMa0s1akVHVktpRAp1RUhIcVZZd2h6N0hoelR4L3B1c0d5Ny9hUnZFVzFnMWtCWjh1ODJaV1Y1aWs5TjZEUE5KV0Rwdy9IVndOaFRmCjNsZDMzZmpZUkYzdTVtTk9TK2ozY2w2RGNuc2hBR2E3blNsell3YjFzRDBIMXNBZVpaZjdGVnhXdWhWRExzQjUKV1RNazF6VXRNUVg4WXNaTTZyVlRNeVNsUnBneTFWVUNRdnZpZERVWWZYMU9HcEM0RnFjK2dCUWRDY3RsMEV6cwpDcXBwMFJvcjM2eDkxeE5oR3BUbmFLeDYwTU91WEhzNWRTZ3lNd0lEQVFBQkFvSUJBQ3RLcUQ3UENQNVRWV3hRCkVoVWJkeVRkanBNOHM1OExwUG5ZQlVvNEIvZHFyQ3pkMGl1TUYwR2pwZnhwc3pSY1lwdk1Xd3RqMXQ1d2ZPS3QKK2hSU1R1ZlBLb2I4M2dYVlNUSERqcXd0eG5FYlFwWW03Wko2dFlJeXRhT3p0MDFUeVo0Y1NCOUxTTlh5Njk4UQpCK2RYQnc1T1pOTE9pRy8rL2RRV0NnUW1FdnBYdjV6Tk0vNlp2aTNaU09TcDY0alBnVjU4bUg1WWd4TXNhRWFyCmJGRERvRmNMSzh5REFRT1RsK3dveHMyQjJuNWxPcmpLSVpET1B1MVU2aDBENmxnbnVGdEpTTklNU2dmNjZBSlcKWlN1Z1NKVnBpbjFXMUNVdWxaNGRZSDdyVGRDbUR6OWQyRzF3Q1ExK095M0xRa3dMbHdiT1dmUGorNTBpUXJBOQpLLzRGWVVFQ2dZRUEzWkNycXJmUjRZSVVqY0M4akZnU3RESE1uaUtHWjgzNE90UDlmQ2l4QU1yWlplM2wralRtClpHZTN2REY2SC9mNmdsWkJXYUViSkJPZExCc1B3MVRxT2dVcUFVT3Z5eUlXSFkwWWkraUZUY2htaUtON2hRMHYKcDErb0FSS28rV0NKWWcwSTVlQmRLTGU2YldGSTZJWnpWZlVpZ2txRFNpRnBRaFR3NjQ1Uy8va0NnWUVBMlJpZApOVGk4QjNzSEdlMEl6SUQ0dnNHQytEZ282enAxUnhpZFIyTFc5bUYxdkdMeCs5SXhKZU9OVTNlU21YMzBuMkQrCkt5RkhBTVZ0YlJUcEFvZXYvRlRNMDc1b1gzWWtGNkowNUhNdzNTTGFibDdEK3lyRHNDS1JaMlpOSng3WnQ3ZnMKRW5PclZyUy8wM0t1L2RRNHBGM1lZQS9BVzNVQU80dlU5dGRxWm9zQ2dZQVBGY0I2V1JXVEV2WXZTSVlOMEJsRgo1M1lVOWlqTWZIdUFGZHJXVHpidDVPRzBUT1F4aXRSODFZcnU1emQzWWJ6T2p1ellHMTNyc09Jc2xKTVlLM25mCkJXYjh1dzBHK1lVajhlMVA2VDdhTXVDNFFOa3lEOW5FdllDRXdpNTYvQldlZFdDN3RmRGh5dENJamUwVzE4Q1cKZzZBYjJ0TGhnekRWYlBPU05oaDBrUUtCZ1FER3luWXg1T2l3aE9Sa3hodFhnQVhHVHRaSnlzc1ZVcXRQVmVlMwpGWGUzbGxqRUQycDc1K1hmUnZZRFp5dVRaN1hYTjI2bU9jdVZsakwwUHNCNjg1cWZtVnNSelhvdlo3UDIvR2pEClJBT0xpcjJ2Y1JGT2JjTlJCdVpVWTJYa202aExSWnhpN1E0STBHd1RDQ0hiQmpoenNnZFBOejB4d2ZwYmpGaVAKUzRQL3J3S0JnUURTa1JVUXdWUUpGb0JYZXJLQVNxZVQ2OEltelg0Y1pLMGl6c1Mxdm9nZkRSa0x5Vmh0YnJ3Ywo3ZUZhR21FWVg3NG43TCtxcVV2dkQ4SDExWm9saEpwYjlhbkNwYVEzeTl4ejRSb1BvSnpDNVhTTUlPMEJNS0ZICkdKaVM0RnFkVVV2MGhxazN6cHV5OC81QzEvQTN5bW82WWN0OUZBcDhpTXFVRTdocjVFV0taQT09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCgo8L2tleT4K",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "25818d34a3957506ba042c302390deeb",
            "force_destroy": false,
            "id": "terraform-wg-prd-vpn.ovpn",
            "key": "terraform-wg-prd-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "vpn",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:585768172288:security-group/sg-0933f0a7ec9305927",
            "description": "wg-prd-vpn-security-group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0933f0a7ec9305927",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "wg-prd-vpn-security-group",
            "name_prefix": "",
            "owner_id": "585768172288",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "production",
              "Name": "wg-prd-vpn-security-group",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Name": "wg-prd-vpn-security-group",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f433948a273fe876"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_ca_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:585768172288:parameter/wg/prd/acm/vpn/ca_cert",
            "data_type": "text",
            "description": "VPN CA cert",
            "id": "/wg/prd/acm/vpn/ca_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/prd/acm/vpn/ca_cert",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_ca_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:585768172288:parameter/wg/prd/acm/vpn/ca_key",
            "data_type": "text",
            "description": "VPN CA key",
            "id": "/wg/prd/acm/vpn/ca_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/prd/acm/vpn/ca_key",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1N8QZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1Pet\nVMte7upd6DK2r40ha1pka/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0\n/c5YXeK2dU4f0z214IIHPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3n\npAvizy0zhIfTT2ZTDd8fi/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5\nH7gLbOtI65/2v7RyhaV1CCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+q\nL3kr/G8xYJHLA3/DNM1zb88UerFBzEepRFSe4QIDAQABAoIBAQDSF0lOzOUODlTw\ndrpiaAc8K0r5yZG87wZ6lnuzh/2HFv9eYge+3WzXbZW6+npU7nwiQLdF2sGY2auO\nEsCEzjWxtKyNcQHusql9Rd/wk9uTDGEeTxwONp3+IygixDUivhAIASz25fWQvEtM\nf1EXuEiDV/7IOJ29mWTweKtLAvIfWZ591Z04zzY4MsibJcmK4L9UjhhcMrbouKA3\nCDiq50WbBcD7bQX/Ku+UVlxXzRi7EsZaEMWdioTFXpaGaVxsY8zC+GpUEentlAeu\n04juUeInekrw7strxazUbWEui7MLOeSiYnOVnB9wRHTSSnTY41bIH5GvKUuubbRv\nNhna5eZlAoGBAPrLu11MiGmabE/r2omLx4F9VKANPTA2h8/SY6H0oZMNu3HWUlSp\n9duwGlLj69snbo4VM8MEJxbsHVOw2eHTJ7c17cnLWT7ukb7gR+sUmVrc/w2VnHF9\njwc5H2X61cLvHyfSKHJ10iItFX/PXMuju6f5u12QEzicaI9tZYxGHrh/AoGBANlJ\n3wPzPiamnzA8tsCvIRdyozMUPrbwPdM3D3weygeRUbL1+QFdOSQFXjCZksa7GXXI\nKjBdEZbO/bri6sSdlMP98F1LAboGFbhZeBrJ7Vx/9Yy00eiInA3dt/Am1rvSi6QI\nn/HnZh3vLBQhpiIXXyJUUQ1dljVHLKDDKHrw+/ifAoGAKgeQi88yoTf+5Nnq0tg5\nBAtj7jqpwXWyBvMEPXUIyuMnQamgPI4LJNj7YF7P/Pc7wNXuycTdZCsHsynVKdJA\nOqTwB7xrZW+Hv0xI4S2fkamtmLI0+JQJLzW0fFuwDS4Ts5G1s5DpOU8C5lty+rGi\n1kC01LY7cmZL45V6yipKJbMCgYAK4aordnj8UofSUJgOWjbcB7+ohTEG1E0kULOT\n0a7oZhyjS7ImoVaFOUeYQ3iYPzJtNZL3TRHebYtDWq3LHuEeV487/M+fU0KvMrvT\nC525bicL3tpMPNsjzqCxhCBo04hutIfeA2qXwSyB7ZV2S5lWDMbqVm95R5Eyk9Np\nJLxZnQKBgQCk5bSiBb39hat46JTU1z1DIeoyJCAFsZ7OJ3ezaApXVvw4S+CA/DAs\nhSihkhwetVR56BcggI4z1X87NegtMEG+czAni3QecAo6ceepIEgPWkq3S38qjSRE\nX1kSYHfcFNz1tMpek7YLnO02AIT7fxP+jSAqcGHepPDSH0E84ogjig==\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_client_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:585768172288:parameter/wg/prd/acm/vpn/daniel.gomez_client_cert",
            "data_type": "text",
            "description": "VPN daniel.gomez client cert",
            "id": "/wg/prd/acm/vpn/daniel.gomez_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/prd/acm/vpn/daniel.gomez_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDPDCCAiSgAwIBAgIRAN5aYU6/0rJ3KuxzN4hIldcwDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnByZC52cG4uY2EwHhcNMjQxMTIy\nMDAxMTM0WhcNMzQxMTIwMDAxMTM0WjA2MQswCQYDVQQKEwJ3ZzEnMCUGA1UEAxMe\nd2cucHJkLnZwbi5kYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1/+DuiSQB66FQt+FAoE1wBOOrPDzBGMUANt/THwaDa4t\nAPJENCbDFyOkQ0vHBQfdtswapRfpms/CYo/xKtA4Y48fVdPBPOeU0BX1CzC/csVB\nu9hrp7Nbo5YPkQTWHjF7ut2mnGZRJVPPhzP/pWtIe5fhzEIxgXK3sHfttQ8i1+TG\nR+JR27i2h19zj0ri+zkGk5XbN7ZeyGAjB5uW9v4rrySpiV7ipx0ijHke/Ajj/fiI\nj4auSCUEvhatpcKDzDQvZPb/CuRtc8Z6nyrKZs4vQWIPtglx/3lgUZskocisSVjG\nn04lVKcrV9Yv4uyk0WWCs44jhCmIxVUQMbmQ9dnnqQIDAQABo1YwVDAOBgNVHQ8B\nAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNV\nHSMEGDAWgBSAnjGObA4+xm/wiav9I5EnkNGx/jANBgkqhkiG9w0BAQsFAAOCAQEA\nS5vuqLhS56bCdEiT26GJ+aWv//gjeXgnbMNzf37fOSo8kAhqhi0vqV6lQ48pogtH\nm/HqBslQb2AameNnK83hJwrlHndBgjNAfEUSwtFd1yJPOT1AtxDU/g+yZcN7ghKs\nWIkf8ObyP3DOzteS76disp05tjjmSez+acbuZuwJhjJJjHoEFUsPJgtZ0xstZ2gx\nyV9HeyT+VZSn81oJOeQNpUSFKO9kbdFZVoL+hi4S3JXnOuILDH2XNOPJ3xsS79PQ\niMirRGgJ22XVctJjc/coEsSA5bdng7iBzfv/g070o/bk0xyaZ+GUM/sqoBA/yk61\nQtmNCDto0IzAE5idgR4Ejg==\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:585768172288:parameter/wg/prd/acm/vpn/root_client_cert",
            "data_type": "text",
            "description": "VPN root client cert",
            "id": "/wg/prd/acm/vpn/root_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/prd/acm/vpn/root_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDMzCCAhugAwIBAgIQIzaULjEZLF0j0p7r0b2ffjANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMzRaFw0zNDExMjAwMDExMzRaMC4xCzAJBgNVBAoTAndnMR8wHQYDVQQDExZ3\nZy5wcmQudnBuLnJvb3QtY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAsxBgNR8KTBi6RDkga0RSKO6e6zoc3R8NLyhSgi2s5l0aytPDA0UKseEl\nyBgqq/0vAVDg4Fnp1Td3FI8YInyjjCpgOdHyyUxxJ0BHeTBzoqogIK33EiwPJVDW\nfX/yPqkIbKx65J1ZOmyIW01q/tAWotDCvFZlcTTOsw5NykXOGN+0bgiSqh2C+pq9\nstccHZ2O+1WUPBaedqU1QsmO4uMzab6NslZawST1ZDlbIDO0cICQkoaYfiUjhRj1\nFLwKjIicrLZmWBtPQEUzKwI1mxKIprgqBqSN3nYxNO4UMh3zxSZ9q12xyAjbBfdm\ndWtxiwQmEZjmV+j+u5jmvvAsdMh+3wIDAQABo1YwVDAOBgNVHQ8BAf8EBAMCBaAw\nEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBSA\nnjGObA4+xm/wiav9I5EnkNGx/jANBgkqhkiG9w0BAQsFAAOCAQEAM+87e5ula19D\nhbbZfMT+tT7jDcZyPX45tbtNieBIeHcQuNT8Pg8IYSeCQGe8T8jE7Yu4eASqPnGD\nVWuBhRC3PPEdfInIs/dKfaTo4UhuUrIm4uRjcCx25qOZbvFxV+WQyxPscnyjFrCw\nm7UpADr6smcKAJOC4jPMJazNILOiF0OzU+xO4EkN7Xs9DtFA6DlCMwXLGLd/lQYL\nRDuVOzeZPQL1hOz4YYagIL9HgCDgqGh4iG0Pv4TA6xB1AsXcsRJf+atg8KY4yk9g\nQXdONt9EYcTHE8si2X7ThDVMHjnv/YrC9smtjPhJJeGfVFUgwSwh6rGLcCvz0bXM\np253Jx4mgg==\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:585768172288:parameter/wg/prd/acm/vpn/terraform_client_cert",
            "data_type": "text",
            "description": "VPN terraform client cert",
            "id": "/wg/prd/acm/vpn/terraform_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/prd/acm/vpn/terraform_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDOTCCAiGgAwIBAgIRANRlKNHHTs7Xk7Gw57wWwLswDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnByZC52cG4uY2EwHhcNMjQxMTIy\nMDAxMTM0WhcNMzQxMTIwMDAxMTM0WjAzMQswCQYDVQQKEwJ3ZzEkMCIGA1UEAxMb\nd2cucHJkLnZwbi50ZXJyYWZvcm0tY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAu+TvI5cnwy0GTP6vL1xeIdnyUJ6H9sPH8U0XKakZSRS+jRaQ\n4AekjCd2M6tcZfx0x6Dng76qQNHf6NsfKnVfuOXLnaiaqbpn4DUsjLkK5jEGVKiD\nuEHHqVYwhz7HhzTx/pusGy7/aRvEW1g1kBZ8u82ZWV5ik9N6DPNJWDpw/HVwNhTf\n3ld33fjYRF3u5mNOS+j3cl6DcnshAGa7nSlzYwb1sD0H1sAeZZf7FVxWuhVDLsB5\nWTMk1zUtMQX8YsZM6rVTMySlRpgy1VUCQvvidDUYfX1OGpC4Fqc+gBQdCctl0Ezs\nCqpp0Ror36x91xNhGpTnaKx60MOuXHs5dSgyMwIDAQABo1YwVDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME\nGDAWgBSAnjGObA4+xm/wiav9I5EnkNGx/jANBgkqhkiG9w0BAQsFAAOCAQEAcR8q\n2bPvUvNhccWvM0Q/iKWG+ppb3gCVGNBPjSxuSRLssfyEeAu0ZOfoG29p5dKbrVET\nQsk8UuUu5h50h4ThZ+qdOVzr8BmrBbEya4N8OQEE6kqZVaR0VaZjJXoAIE0oy3mp\n8ZO/LU9M3zQDXUsoSkSMeg5gD4voUJNbhG2rVGuBx1yyapvH8weCZZ9FShvpwdpL\nVhhcbN8KIZg2DbO9nsJEV1i260olvPYXT+Wlio/6M9gJ4nRh1DRV8wU+YLj2SLAw\n7SP5Mf63+kl5DdBUGFIlYr4JgK4LBDQhEwYS9PvbPgm52g7PqyZwQAWlHKkKS0TA\nU22/shrI1PKS26kXDg==\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_client_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:585768172288:parameter/wg/prd/acm/vpn/daniel.gomez_client_key",
            "data_type": "text",
            "description": "VPN daniel.gomez client key",
            "id": "/wg/prd/acm/vpn/daniel.gomez_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/prd/acm/vpn/daniel.gomez_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1/+DuiSQB66FQt+FAoE1wBOOrPDzBGMUANt/THwaDa4tAPJE\nNCbDFyOkQ0vHBQfdtswapRfpms/CYo/xKtA4Y48fVdPBPOeU0BX1CzC/csVBu9hr\np7Nbo5YPkQTWHjF7ut2mnGZRJVPPhzP/pWtIe5fhzEIxgXK3sHfttQ8i1+TGR+JR\n27i2h19zj0ri+zkGk5XbN7ZeyGAjB5uW9v4rrySpiV7ipx0ijHke/Ajj/fiIj4au\nSCUEvhatpcKDzDQvZPb/CuRtc8Z6nyrKZs4vQWIPtglx/3lgUZskocisSVjGn04l\nVKcrV9Yv4uyk0WWCs44jhCmIxVUQMbmQ9dnnqQIDAQABAoIBAQCcMFnymknEJECc\nsMCfpQtXD01WZQ11mKd4T0Bn8D1uswo76vPCulzMOKupNfx9+MgsTL7frsDvf1hS\nqT989AAyjeXczDipb9Q9/AKryt5FgbocuUxvgdS8H+C1vseOIb4Uy/6UjbATy9z/\nKWytEzzgkl1mtF7T+j41zyMGkCFj9ubzXXwmZR+lW3grQJMQOnmNyDrEvt16xF0/\n+f7OrUVjoZxzVJJp1j+I+dflGE3XXRN2hJmzhZbPNRANsKgHGms3oNY+r/+MrbaH\ngH5QeBTQdM7pQvoqhskosZHaDMKDYbhYq3DikOiXOZ7jHEB92+Inxy9laqS1mj6e\nDPqdzCLhAoGBAP7dZ35fzCx75/6s386NYlOitk4+OqP86WtjxONCG5RkwtJK3J5C\nI5Eh/xAn5hMLsCxucQCXl9P6YKkkvrFEQsVrTUgm5sETVFcigqOVHO9AtfYcqKD+\nonVfaFha4BCAt4KwLZuVsLw5Z6C1KincK9ErHTXSA7jNRyfktZLP9yB9AoGBANj1\ny2pfeGK0d5Eyn3duqYoiCE+imYwiajeRY7uUPDAbmHncQ0rPTc9ZNGDhNS2JyB+F\na7hXegW/5dyOwPVJ53u/XUxz1WfatSCjkTR7HjkCcjc76eZ2b4D+kKYpoysbvlym\nxipQgQVmvd7gK5VcubAhWm2k3pIBww5tK548qtedAoGBAMTSz341FUS1W/C+KQkm\n/uyAGDJMtJS4WLtqjT7EavAq8Jne3ooJodYPXx9m8LN8r01g7Tv71nEKR2PY0Lut\nb7NurnwuLr6k4tl3+VPDcFkErIGomEHc5DGowLibVbbo8M+op1AkRhzWaEUgI7O4\nKM6ccS6DRgSN44nXgrIikUMxAoGAVR9y1ORqRkfKFbTH7kMDz8d0fVItblbeV7j6\naVFKoBFjrIQn/sUBIVY9f7k8dQZ29y8QyX3AyVq2I+f6ewKpCNtXDrTvyNR9djXW\ntcGMZQ+5okQmjB5xtymptRfnBfXXpWBlpZp6VJUv768CSpLb4+fiI9yo2p5IWnOo\nxmfFG90CgYB75ditOHrminbfgZn6yBVY9hV+iLp/yy0Rlo2CPsAjGzUNGTQ3gfAU\n1VYI5jeFd8us9i5AmbgJdvHrLeinAjH6HBIBBVL7n5hCs0EHXoM+CzmRJ4gbotBo\nNWNU4i3tXmo0YPsJkAa0O0hbIykIIofKwVE2ZcFoo58gdfuyJqN7aA==\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:585768172288:parameter/wg/prd/acm/vpn/root_client_key",
            "data_type": "text",
            "description": "VPN root client key",
            "id": "/wg/prd/acm/vpn/root_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/prd/acm/vpn/root_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAsxBgNR8KTBi6RDkga0RSKO6e6zoc3R8NLyhSgi2s5l0aytPD\nA0UKseElyBgqq/0vAVDg4Fnp1Td3FI8YInyjjCpgOdHyyUxxJ0BHeTBzoqogIK33\nEiwPJVDWfX/yPqkIbKx65J1ZOmyIW01q/tAWotDCvFZlcTTOsw5NykXOGN+0bgiS\nqh2C+pq9stccHZ2O+1WUPBaedqU1QsmO4uMzab6NslZawST1ZDlbIDO0cICQkoaY\nfiUjhRj1FLwKjIicrLZmWBtPQEUzKwI1mxKIprgqBqSN3nYxNO4UMh3zxSZ9q12x\nyAjbBfdmdWtxiwQmEZjmV+j+u5jmvvAsdMh+3wIDAQABAoIBAHW2DCifkRtZHgl/\nLEqXjRMPWjTz7MmHghk//o1JDWIaTmSLNKVPm6o3gai6CkMpmt7Ylhulv8vEPGmt\nb4YsPS8FJGCeHWYq9C+DV/jY2wtRnvEcq1Cs2gAD1hyGIW8Dm2AlOlxS+7cmZbTv\nfaiojljVt04r1V/IASFAA+82WDeMrWW9CtNSgAL0zXYl0dffw/3yydzo7sqpjDvh\nAjXNzh9RuQ2VaWRG4NZOdELCuZo4IIVngBc9QRAdJTxVLnOgJBVVWH39whxnUbOf\nuC1Gyb9RD2xaqB0N3HRukQL8IgVLrjs4ktNyhGJdIPa77147QtnFdmt0ai3ECdFe\nfY+cPEECgYEA5OsJV08jRBi5HVCZg7ME3zp5jRSiv0OlSaM8BFxOr+93Aohu9Lfa\nzjQvKqtzwDrzrUuV4ybob91JNiPK5xDrkaqsR9/IwYFtPiSCdadFg+78tK7jdKyY\nXCajbH57sY0aClhVP2bGA/mtPCNLFb9Ur5DTes/hhaK6eoMC4Hrob48CgYEAyD93\nvEY1LxRWWgv2+pUoD0f6wAEoGWk2wt0L/VvnScvgyiSNnmG1FN3sZFXzovx1r2qw\nKut2UKzBD4svnBqWHb2jBg07P3l0V5mkY+0asC8X8A1DT+Nb4VSg+WKfoFKES3J2\nVDGSwEvTfhgaEjgH7F2RZrmCsRhPGbaDBY+YU7ECgYEAzBf5Jgx6hrX8JPS9SbwL\n9fIueOgTCa+H6BVO5xxdU2KOmoWFV02sGPhRrRtbgeGNa83d/r2rskB6i3hx6H0f\naanfG92bIVsBSMxIPBk8Uxp516WtSVKwLEiOn6ZNJcmFk/+ZUYORu+2Y0+srgGIr\nYLQguHgqu3iQBbZUlEtAfGUCgYEAqTdg4jvd84PXGM7ljYl/ybIExj3z+c08Vlzf\nJeGEyIq90XQkLIPatuB2Q6+Sa9e1R1/7sLk7SR9DIfR3bg3VbxpyacnCmHf1BZWz\nIjIaDGova0555Ed3vCl8wmFCDQPOAcefELS3k0JAXVzWozCwGWBUX59CPo8RQORH\nQeq/SXECgYAT3pRDhPH8dmfu+MUjPEDq9sjhDZ/AaNK+sH3GCy3NtisRMj0ce7BV\np92MfXgSDNUYf4GBMmvKj+sTyvGZ7L4HjRFWKWKcVrlKXtbjczpO4nt0fr4tY+qg\n2+IFrecxrwQpo/Ro+QuUVpXcg17Xg4gZ2PpQ/8/QB7YGTP4m1GFJNg==\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:585768172288:parameter/wg/prd/acm/vpn/terraform_client_key",
            "data_type": "text",
            "description": "VPN terraform client key",
            "id": "/wg/prd/acm/vpn/terraform_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/prd/acm/vpn/terraform_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAu+TvI5cnwy0GTP6vL1xeIdnyUJ6H9sPH8U0XKakZSRS+jRaQ\n4AekjCd2M6tcZfx0x6Dng76qQNHf6NsfKnVfuOXLnaiaqbpn4DUsjLkK5jEGVKiD\nuEHHqVYwhz7HhzTx/pusGy7/aRvEW1g1kBZ8u82ZWV5ik9N6DPNJWDpw/HVwNhTf\n3ld33fjYRF3u5mNOS+j3cl6DcnshAGa7nSlzYwb1sD0H1sAeZZf7FVxWuhVDLsB5\nWTMk1zUtMQX8YsZM6rVTMySlRpgy1VUCQvvidDUYfX1OGpC4Fqc+gBQdCctl0Ezs\nCqpp0Ror36x91xNhGpTnaKx60MOuXHs5dSgyMwIDAQABAoIBACtKqD7PCP5TVWxQ\nEhUbdyTdjpM8s58LpPnYBUo4B/dqrCzd0iuMF0GjpfxpszRcYpvMWwtj1t5wfOKt\n+hRSTufPKob83gXVSTHDjqwtxnEbQpYm7ZJ6tYIytaOzt01TyZ4cSB9LSNXy698Q\nB+dXBw5OZNLOiG/+/dQWCgQmEvpXv5zNM/6Zvi3ZSOSp64jPgV58mH5YgxMsaEar\nbFDDoFcLK8yDAQOTl+woxs2B2n5lOrjKIZDOPu1U6h0D6lgnuFtJSNIMSgf66AJW\nZSugSJVpin1W1CUulZ4dYH7rTdCmDz9d2G1wCQ1+Oy3LQkwLlwbOWfPj+50iQrA9\nK/4FYUECgYEA3ZCrqrfR4YIUjcC8jFgStDHMniKGZ834OtP9fCixAMrZZe3l+jTm\nZGe3vDF6H/f6glZBWaEbJBOdLBsPw1TqOgUqAUOvyyIWHY0Yi+iFTchmiKN7hQ0v\np1+oARKo+WCJYg0I5eBdKLe6bWFI6IZzVfUigkqDSiFpQhTw645S//kCgYEA2Rid\nNTi8B3sHGe0IzID4vsGC+Dgo6zp1RxidR2LW9mF1vGLx+9IxJeONU3eSmX30n2D+\nKyFHAMVtbRTpAoev/FTM075oX3YkF6J05HMw3SLabl7D+yrDsCKRZ2ZNJx7Zt7fs\nEnOrVrS/03Ku/dQ4pF3YYA/AW3UAO4vU9tdqZosCgYAPFcB6WRWTEvYvSIYN0BlF\n53YU9ijMfHuAFdrWTzbt5OG0TOQxitR81Yru5zd3YbzOjuzYG13rsOIslJMYK3nf\nBWb8uw0G+YUj8e1P6T7aMuC4QNkyD9nEvYCEwi56/BWedWC7tfDhytCIje0W18CW\ng6Ab2tLhgzDVbPOSNhh0kQKBgQDGynYx5OiwhORkxhtXgAXGTtZJyssVUqtPVee3\nFXe3lljED2p75+XfRvYDZyuTZ7XXN26mOcuVljL0PsB685qfmVsRzXovZ7P2/GjD\nRAOLir2vcRFObcNRBuZUY2Xkm6hLRZxi7Q4I0GwTCCHbBjhzsgdPNz0xwfpbjFiP\nS4P/rwKBgQDSkRUQwVQJFoBXerKASqeT68ImzX4cZK0izsS1vogfDRkLyVhtbrwc\n7eFaGmEYX74n7L+qqUvvD8H11ZolhJpb9anCpaQ3y9xz4RoPoJzC5XSMIO0BMKFH\nGJiS4FqdUUv0hqk3zpuy8/5C1/A3ymo6Yct9FAp8iMqUE7hr5EWKZA==\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_server_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:585768172288:parameter/wg/prd/acm/vpn/server_cert",
            "data_type": "text",
            "description": "VPN server cert",
            "id": "/wg/prd/acm/vpn/server_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/prd/acm/vpn/server_cert",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDLjCCAhagAwIBAgIQDb0fYofPt/SYck/GkbYToDANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMzRaFw0zNDExMjAwMDExMzRaMCkxCzAJBgNVBAoTAndnMRowGAYDVQQDExF3\nZy5wcmQudnBuLnNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAKtqrcwziktAJ0/53hOiA+Z5V4Q8NRtr0mR/oO6C4Exkz5Hp8eb+qyo15cdgs8PS\n0e0Z8cJyKT+66RWjjJ6ev5f6ZEkdDD+i8yc4Th3hNj8w//Trt1SsGDgrgb7Wn/eN\nZovJ9ckYPQvambv2/SIxYrFfyyNvaji4ChhjS/be4Ry0fsI3dN05Lvvl5MLZAi0j\nV9oJtjhqdhMTMO8O2EvSk/8c/7iiAoIogENIPintJ1zeCv4G6k80VLeP6uY4sTZv\nslUpzvdD6QJhnmDOZ2FnY3dUJLzasrOxpBb0orzEKN5VOTkgDFgEU2PLdyyHtlNZ\nvAceMXOzU97+a34GN4fnU28CAwEAAaNWMFQwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUgJ4xjmwO\nPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcNAQELBQADggEBAC2YqOTCqoaFI1o6FnvG\nuiMj3v+hoC/txWLNjMf943PBI9JJiXabhTDt1A38QIcIcUsg8usEJcw64FLoYAE2\nDm6SSoCC7r4wSRqZxmiUR0biMcEXrqvgHiCpYULvIpc3sThMxVvJygBeE9ZMv3Ze\n22CriPf7ViLjo9DaktIpo4BL6OtYh96rC1MmApS+4WIWy7/bU8sCuMiuHEH682sk\nAKvKLEqLAeRHV542dR6pWOOaoozI58cy1bYY/4JaPrzuAbVrPXx5lLHdGwx5TOd3\nHyaW1RUzBaAihEy4E2Fm7rHZCUvZdz6OWRcYzhqe2rVflVg413q4mt6NsLVz7fAe\nYWs=\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_server_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:585768172288:parameter/wg/prd/acm/vpn/server_key",
            "data_type": "text",
            "description": "VPN server key",
            "id": "/wg/prd/acm/vpn/server_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/prd/acm/vpn/server_key",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAq2qtzDOKS0AnT/neE6ID5nlXhDw1G2vSZH+g7oLgTGTPkenx\n5v6rKjXlx2Czw9LR7RnxwnIpP7rpFaOMnp6/l/pkSR0MP6LzJzhOHeE2PzD/9Ou3\nVKwYOCuBvtaf941mi8n1yRg9C9qZu/b9IjFisV/LI29qOLgKGGNL9t7hHLR+wjd0\n3Tku++XkwtkCLSNX2gm2OGp2ExMw7w7YS9KT/xz/uKICgiiAQ0g+Ke0nXN4K/gbq\nTzRUt4/q5jixNm+yVSnO90PpAmGeYM5nYWdjd1QkvNqys7GkFvSivMQo3lU5OSAM\nWARTY8t3LIe2U1m8Bx4xc7NT3v5rfgY3h+dTbwIDAQABAoIBADci4TRFf74krIB1\nBpGaE1cWwKewFgTz8YCR7NnLDwqDgqCUd1Ktp7C0FWzEFg5uyUdSiQjaX5o4LLDh\nImIC/e2MhKVfyojNiRica8QApMo+oJXPG/EISeIHXHxd3KZrvQhJtd0xBrHBZqGn\nGFTfPbd/8H89XxVPXS/rAIwvtIjenwK2GVQBD4qtSUDK+1NAJXdmOCFsrcGZ2Lxe\nYzop/ZpwnNYxnXV/pZfNnlL4mDsMVuIC+ZAzn/2EhB3vROiGy5/uW2IQE9s9+a5K\nyyFcs2LUerqR0v2q3Vf+AwQleXeJlXhPVu97r6OQHElwPDJRqpXgENK8OoFTDCF/\nfpaMpkECgYEA01/nqfwZ4/tauJtV61cAYyxsL4I+Wg+KVTghqgEzIXOfCRJA/OP6\n9uBUZayajYCb8nJ9UyshFdyb+sJUD71sa0jmtTB8c9ID+Y5PGCNy4TeEocEmBcuY\nBavlCWkFB4cLbTxK1SSsQMLpRWoo8ul3Gm2LwXKl4+s/UVzwU+eKux0CgYEAz5su\nhFH8Xyop+JbMfMWs58MjgcLXTd/iTvXkif91rJbIlhf4cLEocncGOv8JNgoPKfSi\nnNWb8D57Dxo71xqhr08tTEqTHgByX/xQ8y/esE5JwrpEGplufp0/p0qC06eAC4DO\nbI1fqVKtifS87xoNByGOFNcFT1aU3wEs0P8k9vsCgYAL4B2B3VoPBvYn3QJMwIyT\nBdHmMWkTYkAhXY/2ny6iOH684buo+Z4F9MCJHdNpE8qvKmOEIq4vLj/NLNHQOJI4\nzNW5ZEn5r9jtUmN7NbKkmJvpApMCTFf0KZ4qky3nKF0p+/MwWmkbElhMwBQg4aEB\naRoq+if70CG0joYqEJ4ouQKBgAX1ZUNk+wJcOnIpGdtm7QyF3EoIJpfUmjE7+4A+\ndckrVryAGaBaZVfLtMESutfzN/YzUEuCEgS2Nl/7l8YXvJZEhn9PEKPmzWGV41jn\ngdO7m4BcSkIdLz+xEbeietjKUPGDk+knsZwxhEuWW6ndLIyM2QAeH8fkK0evR/MD\nr7LrAoGASDMBuB46aANdEyy3IDBTMRHYlCl1gxQMe5map5KAsovj8NB1qaICyztU\n1vlWS7ErAmhfVNEN2zHl3jcxnvvz72tGCXVn8H49N5Wq92B9VVQ4saDzPFqQgGcZ\ni5s/rQXmpDHyGgHXhnvvMgmCiEAzRDlGEwi3Lsyu2ToENmkyxyA=\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.server"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_cert_request",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICezCCAWMCAQAwNjELMAkGA1UEChMCd2cxJzAlBgNVBAMTHndnLnByZC52cG4u\nZGFuaWVsLmdvbWV6LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBANf/g7okkAeuhULfhQKBNcATjqzw8wRjFADbf0x8Gg2uLQDyRDQmwxcjpENL\nxwUH3bbMGqUX6ZrPwmKP8SrQOGOPH1XTwTznlNAV9Qswv3LFQbvYa6ezW6OWD5EE\n1h4xe7rdppxmUSVTz4cz/6VrSHuX4cxCMYFyt7B37bUPItfkxkfiUdu4todfc49K\n4vs5BpOV2ze2XshgIweblvb+K68kqYle4qcdIox5HvwI4/34iI+GrkglBL4WraXC\ng8w0L2T2/wrkbXPGep8qymbOL0FiD7YJcf95YFGbJKHIrElYxp9OJVSnK1fWL+Ls\npNFlgrOOI4QpiMVVEDG5kPXZ56kCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQCH\nuFDpMUoFhbEi72DARjO2U071vWG3YWuWDnVQ8wyXrVoEgH39ZmVpHei9HsH7QoG4\ngS9M3MbYrcxo0LLI3+YuK0mR1+D3KrGSw1t0ibv28F+mFHM/r0Nwlh0qkPaSDvTE\nhLh5V4mw++P0gW5QBkGW5fEtVlRluNt+OvnoTWQsrZBBKbywzSUysurtclTlrrpM\nXbcUW6EyiMa4O99UUpHzIgK16R/scZK8Fij/Z6CbrKza+yl0FvhR+RiwoU4lRtFF\nmxfqX6a5agGA/KcTQr871NQuiZl68urkNzYBwd2Fa+1VB0yeVpCP6veklITIt3R8\npHCG7+7crCJJePYMjYpO\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "ad6f939b85e8a39b5baf18d5a4919ece0752b602",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1/+DuiSQB66FQt+FAoE1wBOOrPDzBGMUANt/THwaDa4tAPJE\nNCbDFyOkQ0vHBQfdtswapRfpms/CYo/xKtA4Y48fVdPBPOeU0BX1CzC/csVBu9hr\np7Nbo5YPkQTWHjF7ut2mnGZRJVPPhzP/pWtIe5fhzEIxgXK3sHfttQ8i1+TGR+JR\n27i2h19zj0ri+zkGk5XbN7ZeyGAjB5uW9v4rrySpiV7ipx0ijHke/Ajj/fiIj4au\nSCUEvhatpcKDzDQvZPb/CuRtc8Z6nyrKZs4vQWIPtglx/3lgUZskocisSVjGn04l\nVKcrV9Yv4uyk0WWCs44jhCmIxVUQMbmQ9dnnqQIDAQABAoIBAQCcMFnymknEJECc\nsMCfpQtXD01WZQ11mKd4T0Bn8D1uswo76vPCulzMOKupNfx9+MgsTL7frsDvf1hS\nqT989AAyjeXczDipb9Q9/AKryt5FgbocuUxvgdS8H+C1vseOIb4Uy/6UjbATy9z/\nKWytEzzgkl1mtF7T+j41zyMGkCFj9ubzXXwmZR+lW3grQJMQOnmNyDrEvt16xF0/\n+f7OrUVjoZxzVJJp1j+I+dflGE3XXRN2hJmzhZbPNRANsKgHGms3oNY+r/+MrbaH\ngH5QeBTQdM7pQvoqhskosZHaDMKDYbhYq3DikOiXOZ7jHEB92+Inxy9laqS1mj6e\nDPqdzCLhAoGBAP7dZ35fzCx75/6s386NYlOitk4+OqP86WtjxONCG5RkwtJK3J5C\nI5Eh/xAn5hMLsCxucQCXl9P6YKkkvrFEQsVrTUgm5sETVFcigqOVHO9AtfYcqKD+\nonVfaFha4BCAt4KwLZuVsLw5Z6C1KincK9ErHTXSA7jNRyfktZLP9yB9AoGBANj1\ny2pfeGK0d5Eyn3duqYoiCE+imYwiajeRY7uUPDAbmHncQ0rPTc9ZNGDhNS2JyB+F\na7hXegW/5dyOwPVJ53u/XUxz1WfatSCjkTR7HjkCcjc76eZ2b4D+kKYpoysbvlym\nxipQgQVmvd7gK5VcubAhWm2k3pIBww5tK548qtedAoGBAMTSz341FUS1W/C+KQkm\n/uyAGDJMtJS4WLtqjT7EavAq8Jne3ooJodYPXx9m8LN8r01g7Tv71nEKR2PY0Lut\nb7NurnwuLr6k4tl3+VPDcFkErIGomEHc5DGowLibVbbo8M+op1AkRhzWaEUgI7O4\nKM6ccS6DRgSN44nXgrIikUMxAoGAVR9y1ORqRkfKFbTH7kMDz8d0fVItblbeV7j6\naVFKoBFjrIQn/sUBIVY9f7k8dQZ29y8QyX3AyVq2I+f6ewKpCNtXDrTvyNR9djXW\ntcGMZQ+5okQmjB5xtymptRfnBfXXpWBlpZp6VJUv768CSpLb4+fiI9yo2p5IWnOo\nxmfFG90CgYB75ditOHrminbfgZn6yBVY9hV+iLp/yy0Rlo2CPsAjGzUNGTQ3gfAU\n1VYI5jeFd8us9i5AmbgJdvHrLeinAjH6HBIBBVL7n5hCs0EHXoM+CzmRJ4gbotBo\nNWNU4i3tXmo0YPsJkAa0O0hbIykIIofKwVE2ZcFoo58gdfuyJqN7aA==\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.prd.vpn.daniel.gomez-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICczCCAVsCAQAwLjELMAkGA1UEChMCd2cxHzAdBgNVBAMTFndnLnByZC52cG4u\ncm9vdC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzEGA1\nHwpMGLpEOSBrRFIo7p7rOhzdHw0vKFKCLazmXRrK08MDRQqx4SXIGCqr/S8BUODg\nWenVN3cUjxgifKOMKmA50fLJTHEnQEd5MHOiqiAgrfcSLA8lUNZ9f/I+qQhsrHrk\nnVk6bIhbTWr+0Bai0MK8VmVxNM6zDk3KRc4Y37RuCJKqHYL6mr2y1xwdnY77VZQ8\nFp52pTVCyY7i4zNpvo2yVlrBJPVkOVsgM7RwgJCShph+JSOFGPUUvAqMiJystmZY\nG09ARTMrAjWbEoimuCoGpI3edjE07hQyHfPFJn2rXbHICNsF92Z1a3GLBCYRmOZX\n6P67mOa+8Cx0yH7fAgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEACo/jJJgi6wbr\np728AW79bmqtmM4PgKZIVWtealVk4I+Jx4E1tJpqDhvanjYlGhfs7mYrlh89KNA+\nJMW13kP0Z3fYAmk+fthE1J+drlRogSj6TLheSLAGkeDG8XEkRTUA9+4l2HDiSqV6\ncRyKS+dgl4EBlEXb93R6HyNNxYc9lGxPHS2QJ5NaomMJ9Mf7PWAuOPj3XtAIHHR+\n8240cvRa/7XdOsfk+pkFAhpNhhS5Um9vKbDH80peC7Cjl9hUx2OOIao1w12H1dxT\nwxMnThmFlGu69d4nfhLuysPPLUTvZfh9ftnXD1qAttBNiCJoSus448Uxw1w1yOFE\nlevinZMAdQ==\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "e275405a8533c430bd72497c1c8c052c303e4feb",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAsxBgNR8KTBi6RDkga0RSKO6e6zoc3R8NLyhSgi2s5l0aytPD\nA0UKseElyBgqq/0vAVDg4Fnp1Td3FI8YInyjjCpgOdHyyUxxJ0BHeTBzoqogIK33\nEiwPJVDWfX/yPqkIbKx65J1ZOmyIW01q/tAWotDCvFZlcTTOsw5NykXOGN+0bgiS\nqh2C+pq9stccHZ2O+1WUPBaedqU1QsmO4uMzab6NslZawST1ZDlbIDO0cICQkoaY\nfiUjhRj1FLwKjIicrLZmWBtPQEUzKwI1mxKIprgqBqSN3nYxNO4UMh3zxSZ9q12x\nyAjbBfdmdWtxiwQmEZjmV+j+u5jmvvAsdMh+3wIDAQABAoIBAHW2DCifkRtZHgl/\nLEqXjRMPWjTz7MmHghk//o1JDWIaTmSLNKVPm6o3gai6CkMpmt7Ylhulv8vEPGmt\nb4YsPS8FJGCeHWYq9C+DV/jY2wtRnvEcq1Cs2gAD1hyGIW8Dm2AlOlxS+7cmZbTv\nfaiojljVt04r1V/IASFAA+82WDeMrWW9CtNSgAL0zXYl0dffw/3yydzo7sqpjDvh\nAjXNzh9RuQ2VaWRG4NZOdELCuZo4IIVngBc9QRAdJTxVLnOgJBVVWH39whxnUbOf\nuC1Gyb9RD2xaqB0N3HRukQL8IgVLrjs4ktNyhGJdIPa77147QtnFdmt0ai3ECdFe\nfY+cPEECgYEA5OsJV08jRBi5HVCZg7ME3zp5jRSiv0OlSaM8BFxOr+93Aohu9Lfa\nzjQvKqtzwDrzrUuV4ybob91JNiPK5xDrkaqsR9/IwYFtPiSCdadFg+78tK7jdKyY\nXCajbH57sY0aClhVP2bGA/mtPCNLFb9Ur5DTes/hhaK6eoMC4Hrob48CgYEAyD93\nvEY1LxRWWgv2+pUoD0f6wAEoGWk2wt0L/VvnScvgyiSNnmG1FN3sZFXzovx1r2qw\nKut2UKzBD4svnBqWHb2jBg07P3l0V5mkY+0asC8X8A1DT+Nb4VSg+WKfoFKES3J2\nVDGSwEvTfhgaEjgH7F2RZrmCsRhPGbaDBY+YU7ECgYEAzBf5Jgx6hrX8JPS9SbwL\n9fIueOgTCa+H6BVO5xxdU2KOmoWFV02sGPhRrRtbgeGNa83d/r2rskB6i3hx6H0f\naanfG92bIVsBSMxIPBk8Uxp516WtSVKwLEiOn6ZNJcmFk/+ZUYORu+2Y0+srgGIr\nYLQguHgqu3iQBbZUlEtAfGUCgYEAqTdg4jvd84PXGM7ljYl/ybIExj3z+c08Vlzf\nJeGEyIq90XQkLIPatuB2Q6+Sa9e1R1/7sLk7SR9DIfR3bg3VbxpyacnCmHf1BZWz\nIjIaDGova0555Ed3vCl8wmFCDQPOAcefELS3k0JAXVzWozCwGWBUX59CPo8RQORH\nQeq/SXECgYAT3pRDhPH8dmfu+MUjPEDq9sjhDZ/AaNK+sH3GCy3NtisRMj0ce7BV\np92MfXgSDNUYf4GBMmvKj+sTyvGZ7L4HjRFWKWKcVrlKXtbjczpO4nt0fr4tY+qg\n2+IFrecxrwQpo/Ro+QuUVpXcg17Xg4gZ2PpQ/8/QB7YGTP4m1GFJNg==\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.prd.vpn.root-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICeDCCAWACAQAwMzELMAkGA1UEChMCd2cxJDAiBgNVBAMTG3dnLnByZC52cG4u\ndGVycmFmb3JtLWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nALvk7yOXJ8MtBkz+ry9cXiHZ8lCeh/bDx/FNFympGUkUvo0WkOAHpIwndjOrXGX8\ndMeg54O+qkDR3+jbHyp1X7jly52omqm6Z+A1LIy5CuYxBlSog7hBx6lWMIc+x4c0\n8f6brBsu/2kbxFtYNZAWfLvNmVleYpPTegzzSVg6cPx1cDYU395Xd9342ERd7uZj\nTkvo93Jeg3J7IQBmu50pc2MG9bA9B9bAHmWX+xVcVroVQy7AeVkzJNc1LTEF/GLG\nTOq1UzMkpUaYMtVVAkL74nQ1GH19ThqQuBanPoAUHQnLZdBM7AqqadEaK9+sfdcT\nYRqU52isetDDrlx7OXUoMjMCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQBBiG+K\nLujuVEUJO0zA+dfOQvkoNYaWtjEWy2NdzPz/FuWtzMU8Q/SNW34162nUyRQQuL6c\n3CmMVUhKN1ZFFDGZXbpXoqvyPFWJXMF1kW2RNrHJrX+/YrQr4uakb9PElSe+6HJj\nuzwOWlOFViTtjeHKHFOywdnRbtxArIWdqeb0O/pyiPbAqUoxFTy6Vq8SiGk1Dgoa\nxT1XSPGgdx2yoYwzqVjy8gPxFYJgNa3XdUaruQ+qSX7Ec2IEy3tpHvSusgyUG9p0\ne+/m7i59R37HzI44nA/2O84AzA15C2bAVZ4wZ4dCn84Obx8S8HHlFd4+fpgQvve3\n/h+/dAV60r6LYett\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "4429f81d6f9d481273a16b544eae98408d529d17",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAu+TvI5cnwy0GTP6vL1xeIdnyUJ6H9sPH8U0XKakZSRS+jRaQ\n4AekjCd2M6tcZfx0x6Dng76qQNHf6NsfKnVfuOXLnaiaqbpn4DUsjLkK5jEGVKiD\nuEHHqVYwhz7HhzTx/pusGy7/aRvEW1g1kBZ8u82ZWV5ik9N6DPNJWDpw/HVwNhTf\n3ld33fjYRF3u5mNOS+j3cl6DcnshAGa7nSlzYwb1sD0H1sAeZZf7FVxWuhVDLsB5\nWTMk1zUtMQX8YsZM6rVTMySlRpgy1VUCQvvidDUYfX1OGpC4Fqc+gBQdCctl0Ezs\nCqpp0Ror36x91xNhGpTnaKx60MOuXHs5dSgyMwIDAQABAoIBACtKqD7PCP5TVWxQ\nEhUbdyTdjpM8s58LpPnYBUo4B/dqrCzd0iuMF0GjpfxpszRcYpvMWwtj1t5wfOKt\n+hRSTufPKob83gXVSTHDjqwtxnEbQpYm7ZJ6tYIytaOzt01TyZ4cSB9LSNXy698Q\nB+dXBw5OZNLOiG/+/dQWCgQmEvpXv5zNM/6Zvi3ZSOSp64jPgV58mH5YgxMsaEar\nbFDDoFcLK8yDAQOTl+woxs2B2n5lOrjKIZDOPu1U6h0D6lgnuFtJSNIMSgf66AJW\nZSugSJVpin1W1CUulZ4dYH7rTdCmDz9d2G1wCQ1+Oy3LQkwLlwbOWfPj+50iQrA9\nK/4FYUECgYEA3ZCrqrfR4YIUjcC8jFgStDHMniKGZ834OtP9fCixAMrZZe3l+jTm\nZGe3vDF6H/f6glZBWaEbJBOdLBsPw1TqOgUqAUOvyyIWHY0Yi+iFTchmiKN7hQ0v\np1+oARKo+WCJYg0I5eBdKLe6bWFI6IZzVfUigkqDSiFpQhTw645S//kCgYEA2Rid\nNTi8B3sHGe0IzID4vsGC+Dgo6zp1RxidR2LW9mF1vGLx+9IxJeONU3eSmX30n2D+\nKyFHAMVtbRTpAoev/FTM075oX3YkF6J05HMw3SLabl7D+yrDsCKRZ2ZNJx7Zt7fs\nEnOrVrS/03Ku/dQ4pF3YYA/AW3UAO4vU9tdqZosCgYAPFcB6WRWTEvYvSIYN0BlF\n53YU9ijMfHuAFdrWTzbt5OG0TOQxitR81Yru5zd3YbzOjuzYG13rsOIslJMYK3nf\nBWb8uw0G+YUj8e1P6T7aMuC4QNkyD9nEvYCEwi56/BWedWC7tfDhytCIje0W18CW\ng6Ab2tLhgzDVbPOSNhh0kQKBgQDGynYx5OiwhORkxhtXgAXGTtZJyssVUqtPVee3\nFXe3lljED2p75+XfRvYDZyuTZ7XXN26mOcuVljL0PsB685qfmVsRzXovZ7P2/GjD\nRAOLir2vcRFObcNRBuZUY2Xkm6hLRZxi7Q4I0GwTCCHbBjhzsgdPNz0xwfpbjFiP\nS4P/rwKBgQDSkRUQwVQJFoBXerKASqeT68ImzX4cZK0izsS1vogfDRkLyVhtbrwc\n7eFaGmEYX74n7L+qqUvvD8H11ZolhJpb9anCpaQ3y9xz4RoPoJzC5XSMIO0BMKFH\nGJiS4FqdUUv0hqk3zpuy8/5C1/A3ymo6Yct9FAp8iMqUE7hr5EWKZA==\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.prd.vpn.terraform-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_cert_request",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICbjCCAVYCAQAwKTELMAkGA1UEChMCd2cxGjAYBgNVBAMTEXdnLnByZC52cG4u\nc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq2qtzDOKS0An\nT/neE6ID5nlXhDw1G2vSZH+g7oLgTGTPkenx5v6rKjXlx2Czw9LR7RnxwnIpP7rp\nFaOMnp6/l/pkSR0MP6LzJzhOHeE2PzD/9Ou3VKwYOCuBvtaf941mi8n1yRg9C9qZ\nu/b9IjFisV/LI29qOLgKGGNL9t7hHLR+wjd03Tku++XkwtkCLSNX2gm2OGp2ExMw\n7w7YS9KT/xz/uKICgiiAQ0g+Ke0nXN4K/gbqTzRUt4/q5jixNm+yVSnO90PpAmGe\nYM5nYWdjd1QkvNqys7GkFvSivMQo3lU5OSAMWARTY8t3LIe2U1m8Bx4xc7NT3v5r\nfgY3h+dTbwIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAI+SK/UHQLWbkq7hCUYz\nRtLcPOf4gN6gZ3KOXtN4ec9qgSQD8aM9tDJYpwCwLpyRw7FRapHqWz6P4sW3TGwg\n5evjSZ1spv1fLzshhCgoVtkaOtoe77/FrT0DWNytiRPtGOn4dPHxr1E8IuMCEDf+\nEIQMzRmN1sXBwt30xc7J2J1IZPFhklKR7QP6g4OqW45lBfd2FJkB/GBpXxJ+6qlI\nVKtTG6n4WGReZp9gu2x5XMBSw9oVdujTNhP848+OrSAK0s5HyqVpMojSR0ih8jo8\n2cuMJAldyJrwAosmknBL/qknJdmcu8DdxBZ2CVqkxVF/EZjhJMKcLdcgi3Ghw3DD\nTFc=\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "791fbefe81469af4c547b081ebe6ebc4626c9267",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAq2qtzDOKS0AnT/neE6ID5nlXhDw1G2vSZH+g7oLgTGTPkenx\n5v6rKjXlx2Czw9LR7RnxwnIpP7rpFaOMnp6/l/pkSR0MP6LzJzhOHeE2PzD/9Ou3\nVKwYOCuBvtaf941mi8n1yRg9C9qZu/b9IjFisV/LI29qOLgKGGNL9t7hHLR+wjd0\n3Tku++XkwtkCLSNX2gm2OGp2ExMw7w7YS9KT/xz/uKICgiiAQ0g+Ke0nXN4K/gbq\nTzRUt4/q5jixNm+yVSnO90PpAmGeYM5nYWdjd1QkvNqys7GkFvSivMQo3lU5OSAM\nWARTY8t3LIe2U1m8Bx4xc7NT3v5rfgY3h+dTbwIDAQABAoIBADci4TRFf74krIB1\nBpGaE1cWwKewFgTz8YCR7NnLDwqDgqCUd1Ktp7C0FWzEFg5uyUdSiQjaX5o4LLDh\nImIC/e2MhKVfyojNiRica8QApMo+oJXPG/EISeIHXHxd3KZrvQhJtd0xBrHBZqGn\nGFTfPbd/8H89XxVPXS/rAIwvtIjenwK2GVQBD4qtSUDK+1NAJXdmOCFsrcGZ2Lxe\nYzop/ZpwnNYxnXV/pZfNnlL4mDsMVuIC+ZAzn/2EhB3vROiGy5/uW2IQE9s9+a5K\nyyFcs2LUerqR0v2q3Vf+AwQleXeJlXhPVu97r6OQHElwPDJRqpXgENK8OoFTDCF/\nfpaMpkECgYEA01/nqfwZ4/tauJtV61cAYyxsL4I+Wg+KVTghqgEzIXOfCRJA/OP6\n9uBUZayajYCb8nJ9UyshFdyb+sJUD71sa0jmtTB8c9ID+Y5PGCNy4TeEocEmBcuY\nBavlCWkFB4cLbTxK1SSsQMLpRWoo8ul3Gm2LwXKl4+s/UVzwU+eKux0CgYEAz5su\nhFH8Xyop+JbMfMWs58MjgcLXTd/iTvXkif91rJbIlhf4cLEocncGOv8JNgoPKfSi\nnNWb8D57Dxo71xqhr08tTEqTHgByX/xQ8y/esE5JwrpEGplufp0/p0qC06eAC4DO\nbI1fqVKtifS87xoNByGOFNcFT1aU3wEs0P8k9vsCgYAL4B2B3VoPBvYn3QJMwIyT\nBdHmMWkTYkAhXY/2ny6iOH684buo+Z4F9MCJHdNpE8qvKmOEIq4vLj/NLNHQOJI4\nzNW5ZEn5r9jtUmN7NbKkmJvpApMCTFf0KZ4qky3nKF0p+/MwWmkbElhMwBQg4aEB\naRoq+if70CG0joYqEJ4ouQKBgAX1ZUNk+wJcOnIpGdtm7QyF3EoIJpfUmjE7+4A+\ndckrVryAGaBaZVfLtMESutfzN/YzUEuCEgS2Nl/7l8YXvJZEhn9PEKPmzWGV41jn\ngdO7m4BcSkIdLz+xEbeietjKUPGDk+knsZwxhEuWW6ndLIyM2QAeH8fkK0evR/MD\nr7LrAoGASDMBuB46aANdEyy3IDBTMRHYlCl1gxQMe5map5KAsovj8NB1qaICyztU\n1vlWS7ErAmhfVNEN2zHl3jcxnvvz72tGCXVn8H49N5Wq92B9VVQ4saDzPFqQgGcZ\ni5s/rQXmpDHyGgHXhnvvMgmCiEAzRDlGEwi3Lsyu2ToENmkyxyA=\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.prd.vpn.server",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.server"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_locally_signed_cert",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1N8QZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1Pet\nVMte7upd6DK2r40ha1pka/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0\n/c5YXeK2dU4f0z214IIHPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3n\npAvizy0zhIfTT2ZTDd8fi/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5\nH7gLbOtI65/2v7RyhaV1CCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+q\nL3kr/G8xYJHLA3/DNM1zb88UerFBzEepRFSe4QIDAQABAoIBAQDSF0lOzOUODlTw\ndrpiaAc8K0r5yZG87wZ6lnuzh/2HFv9eYge+3WzXbZW6+npU7nwiQLdF2sGY2auO\nEsCEzjWxtKyNcQHusql9Rd/wk9uTDGEeTxwONp3+IygixDUivhAIASz25fWQvEtM\nf1EXuEiDV/7IOJ29mWTweKtLAvIfWZ591Z04zzY4MsibJcmK4L9UjhhcMrbouKA3\nCDiq50WbBcD7bQX/Ku+UVlxXzRi7EsZaEMWdioTFXpaGaVxsY8zC+GpUEentlAeu\n04juUeInekrw7strxazUbWEui7MLOeSiYnOVnB9wRHTSSnTY41bIH5GvKUuubbRv\nNhna5eZlAoGBAPrLu11MiGmabE/r2omLx4F9VKANPTA2h8/SY6H0oZMNu3HWUlSp\n9duwGlLj69snbo4VM8MEJxbsHVOw2eHTJ7c17cnLWT7ukb7gR+sUmVrc/w2VnHF9\njwc5H2X61cLvHyfSKHJ10iItFX/PXMuju6f5u12QEzicaI9tZYxGHrh/AoGBANlJ\n3wPzPiamnzA8tsCvIRdyozMUPrbwPdM3D3weygeRUbL1+QFdOSQFXjCZksa7GXXI\nKjBdEZbO/bri6sSdlMP98F1LAboGFbhZeBrJ7Vx/9Yy00eiInA3dt/Am1rvSi6QI\nn/HnZh3vLBQhpiIXXyJUUQ1dljVHLKDDKHrw+/ifAoGAKgeQi88yoTf+5Nnq0tg5\nBAtj7jqpwXWyBvMEPXUIyuMnQamgPI4LJNj7YF7P/Pc7wNXuycTdZCsHsynVKdJA\nOqTwB7xrZW+Hv0xI4S2fkamtmLI0+JQJLzW0fFuwDS4Ts5G1s5DpOU8C5lty+rGi\n1kC01LY7cmZL45V6yipKJbMCgYAK4aordnj8UofSUJgOWjbcB7+ohTEG1E0kULOT\n0a7oZhyjS7ImoVaFOUeYQ3iYPzJtNZL3TRHebYtDWq3LHuEeV487/M+fU0KvMrvT\nC525bicL3tpMPNsjzqCxhCBo04hutIfeA2qXwSyB7ZV2S5lWDMbqVm95R5Eyk9Np\nJLxZnQKBgQCk5bSiBb39hat46JTU1z1DIeoyJCAFsZ7OJ3ezaApXVvw4S+CA/DAs\nhSihkhwetVR56BcggI4z1X87NegtMEG+czAni3QecAo6ceepIEgPWkq3S38qjSRE\nX1kSYHfcFNz1tMpek7YLnO02AIT7fxP+jSAqcGHepPDSH0E84ogjig==\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDPDCCAiSgAwIBAgIRAN5aYU6/0rJ3KuxzN4hIldcwDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnByZC52cG4uY2EwHhcNMjQxMTIy\nMDAxMTM0WhcNMzQxMTIwMDAxMTM0WjA2MQswCQYDVQQKEwJ3ZzEnMCUGA1UEAxMe\nd2cucHJkLnZwbi5kYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1/+DuiSQB66FQt+FAoE1wBOOrPDzBGMUANt/THwaDa4t\nAPJENCbDFyOkQ0vHBQfdtswapRfpms/CYo/xKtA4Y48fVdPBPOeU0BX1CzC/csVB\nu9hrp7Nbo5YPkQTWHjF7ut2mnGZRJVPPhzP/pWtIe5fhzEIxgXK3sHfttQ8i1+TG\nR+JR27i2h19zj0ri+zkGk5XbN7ZeyGAjB5uW9v4rrySpiV7ipx0ijHke/Ajj/fiI\nj4auSCUEvhatpcKDzDQvZPb/CuRtc8Z6nyrKZs4vQWIPtglx/3lgUZskocisSVjG\nn04lVKcrV9Yv4uyk0WWCs44jhCmIxVUQMbmQ9dnnqQIDAQABo1YwVDAOBgNVHQ8B\nAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNV\nHSMEGDAWgBSAnjGObA4+xm/wiav9I5EnkNGx/jANBgkqhkiG9w0BAQsFAAOCAQEA\nS5vuqLhS56bCdEiT26GJ+aWv//gjeXgnbMNzf37fOSo8kAhqhi0vqV6lQ48pogtH\nm/HqBslQb2AameNnK83hJwrlHndBgjNAfEUSwtFd1yJPOT1AtxDU/g+yZcN7ghKs\nWIkf8ObyP3DOzteS76disp05tjjmSez+acbuZuwJhjJJjHoEFUsPJgtZ0xstZ2gx\nyV9HeyT+VZSn81oJOeQNpUSFKO9kbdFZVoL+hi4S3JXnOuILDH2XNOPJ3xsS79PQ\niMirRGgJ22XVctJjc/coEsSA5bdng7iBzfv/g070o/bk0xyaZ+GUM/sqoBA/yk61\nQtmNCDto0IzAE5idgR4Ejg==\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICezCCAWMCAQAwNjELMAkGA1UEChMCd2cxJzAlBgNVBAMTHndnLnByZC52cG4u\nZGFuaWVsLmdvbWV6LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBANf/g7okkAeuhULfhQKBNcATjqzw8wRjFADbf0x8Gg2uLQDyRDQmwxcjpENL\nxwUH3bbMGqUX6ZrPwmKP8SrQOGOPH1XTwTznlNAV9Qswv3LFQbvYa6ezW6OWD5EE\n1h4xe7rdppxmUSVTz4cz/6VrSHuX4cxCMYFyt7B37bUPItfkxkfiUdu4todfc49K\n4vs5BpOV2ze2XshgIweblvb+K68kqYle4qcdIox5HvwI4/34iI+GrkglBL4WraXC\ng8w0L2T2/wrkbXPGep8qymbOL0FiD7YJcf95YFGbJKHIrElYxp9OJVSnK1fWL+Ls\npNFlgrOOI4QpiMVVEDG5kPXZ56kCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQCH\nuFDpMUoFhbEi72DARjO2U071vWG3YWuWDnVQ8wyXrVoEgH39ZmVpHei9HsH7QoG4\ngS9M3MbYrcxo0LLI3+YuK0mR1+D3KrGSw1t0ibv28F+mFHM/r0Nwlh0qkPaSDvTE\nhLh5V4mw++P0gW5QBkGW5fEtVlRluNt+OvnoTWQsrZBBKbywzSUysurtclTlrrpM\nXbcUW6EyiMa4O99UUpHzIgK16R/scZK8Fij/Z6CbrKza+yl0FvhR+RiwoU4lRtFF\nmxfqX6a5agGA/KcTQr871NQuiZl68urkNzYBwd2Fa+1VB0yeVpCP6veklITIt3R8\npHCG7+7crCJJePYMjYpO\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "295557895414414042673347816779518875095",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-19T19:11:34.366766-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-21T19:11:34.366766-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1N8QZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1Pet\nVMte7upd6DK2r40ha1pka/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0\n/c5YXeK2dU4f0z214IIHPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3n\npAvizy0zhIfTT2ZTDd8fi/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5\nH7gLbOtI65/2v7RyhaV1CCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+q\nL3kr/G8xYJHLA3/DNM1zb88UerFBzEepRFSe4QIDAQABAoIBAQDSF0lOzOUODlTw\ndrpiaAc8K0r5yZG87wZ6lnuzh/2HFv9eYge+3WzXbZW6+npU7nwiQLdF2sGY2auO\nEsCEzjWxtKyNcQHusql9Rd/wk9uTDGEeTxwONp3+IygixDUivhAIASz25fWQvEtM\nf1EXuEiDV/7IOJ29mWTweKtLAvIfWZ591Z04zzY4MsibJcmK4L9UjhhcMrbouKA3\nCDiq50WbBcD7bQX/Ku+UVlxXzRi7EsZaEMWdioTFXpaGaVxsY8zC+GpUEentlAeu\n04juUeInekrw7strxazUbWEui7MLOeSiYnOVnB9wRHTSSnTY41bIH5GvKUuubbRv\nNhna5eZlAoGBAPrLu11MiGmabE/r2omLx4F9VKANPTA2h8/SY6H0oZMNu3HWUlSp\n9duwGlLj69snbo4VM8MEJxbsHVOw2eHTJ7c17cnLWT7ukb7gR+sUmVrc/w2VnHF9\njwc5H2X61cLvHyfSKHJ10iItFX/PXMuju6f5u12QEzicaI9tZYxGHrh/AoGBANlJ\n3wPzPiamnzA8tsCvIRdyozMUPrbwPdM3D3weygeRUbL1+QFdOSQFXjCZksa7GXXI\nKjBdEZbO/bri6sSdlMP98F1LAboGFbhZeBrJ7Vx/9Yy00eiInA3dt/Am1rvSi6QI\nn/HnZh3vLBQhpiIXXyJUUQ1dljVHLKDDKHrw+/ifAoGAKgeQi88yoTf+5Nnq0tg5\nBAtj7jqpwXWyBvMEPXUIyuMnQamgPI4LJNj7YF7P/Pc7wNXuycTdZCsHsynVKdJA\nOqTwB7xrZW+Hv0xI4S2fkamtmLI0+JQJLzW0fFuwDS4Ts5G1s5DpOU8C5lty+rGi\n1kC01LY7cmZL45V6yipKJbMCgYAK4aordnj8UofSUJgOWjbcB7+ohTEG1E0kULOT\n0a7oZhyjS7ImoVaFOUeYQ3iYPzJtNZL3TRHebYtDWq3LHuEeV487/M+fU0KvMrvT\nC525bicL3tpMPNsjzqCxhCBo04hutIfeA2qXwSyB7ZV2S5lWDMbqVm95R5Eyk9Np\nJLxZnQKBgQCk5bSiBb39hat46JTU1z1DIeoyJCAFsZ7OJ3ezaApXVvw4S+CA/DAs\nhSihkhwetVR56BcggI4z1X87NegtMEG+czAni3QecAo6ceepIEgPWkq3S38qjSRE\nX1kSYHfcFNz1tMpek7YLnO02AIT7fxP+jSAqcGHepPDSH0E84ogjig==\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDMzCCAhugAwIBAgIQIzaULjEZLF0j0p7r0b2ffjANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMzRaFw0zNDExMjAwMDExMzRaMC4xCzAJBgNVBAoTAndnMR8wHQYDVQQDExZ3\nZy5wcmQudnBuLnJvb3QtY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAsxBgNR8KTBi6RDkga0RSKO6e6zoc3R8NLyhSgi2s5l0aytPDA0UKseEl\nyBgqq/0vAVDg4Fnp1Td3FI8YInyjjCpgOdHyyUxxJ0BHeTBzoqogIK33EiwPJVDW\nfX/yPqkIbKx65J1ZOmyIW01q/tAWotDCvFZlcTTOsw5NykXOGN+0bgiSqh2C+pq9\nstccHZ2O+1WUPBaedqU1QsmO4uMzab6NslZawST1ZDlbIDO0cICQkoaYfiUjhRj1\nFLwKjIicrLZmWBtPQEUzKwI1mxKIprgqBqSN3nYxNO4UMh3zxSZ9q12xyAjbBfdm\ndWtxiwQmEZjmV+j+u5jmvvAsdMh+3wIDAQABo1YwVDAOBgNVHQ8BAf8EBAMCBaAw\nEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBSA\nnjGObA4+xm/wiav9I5EnkNGx/jANBgkqhkiG9w0BAQsFAAOCAQEAM+87e5ula19D\nhbbZfMT+tT7jDcZyPX45tbtNieBIeHcQuNT8Pg8IYSeCQGe8T8jE7Yu4eASqPnGD\nVWuBhRC3PPEdfInIs/dKfaTo4UhuUrIm4uRjcCx25qOZbvFxV+WQyxPscnyjFrCw\nm7UpADr6smcKAJOC4jPMJazNILOiF0OzU+xO4EkN7Xs9DtFA6DlCMwXLGLd/lQYL\nRDuVOzeZPQL1hOz4YYagIL9HgCDgqGh4iG0Pv4TA6xB1AsXcsRJf+atg8KY4yk9g\nQXdONt9EYcTHE8si2X7ThDVMHjnv/YrC9smtjPhJJeGfVFUgwSwh6rGLcCvz0bXM\np253Jx4mgg==\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICczCCAVsCAQAwLjELMAkGA1UEChMCd2cxHzAdBgNVBAMTFndnLnByZC52cG4u\ncm9vdC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzEGA1\nHwpMGLpEOSBrRFIo7p7rOhzdHw0vKFKCLazmXRrK08MDRQqx4SXIGCqr/S8BUODg\nWenVN3cUjxgifKOMKmA50fLJTHEnQEd5MHOiqiAgrfcSLA8lUNZ9f/I+qQhsrHrk\nnVk6bIhbTWr+0Bai0MK8VmVxNM6zDk3KRc4Y37RuCJKqHYL6mr2y1xwdnY77VZQ8\nFp52pTVCyY7i4zNpvo2yVlrBJPVkOVsgM7RwgJCShph+JSOFGPUUvAqMiJystmZY\nG09ARTMrAjWbEoimuCoGpI3edjE07hQyHfPFJn2rXbHICNsF92Z1a3GLBCYRmOZX\n6P67mOa+8Cx0yH7fAgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEACo/jJJgi6wbr\np728AW79bmqtmM4PgKZIVWtealVk4I+Jx4E1tJpqDhvanjYlGhfs7mYrlh89KNA+\nJMW13kP0Z3fYAmk+fthE1J+drlRogSj6TLheSLAGkeDG8XEkRTUA9+4l2HDiSqV6\ncRyKS+dgl4EBlEXb93R6HyNNxYc9lGxPHS2QJ5NaomMJ9Mf7PWAuOPj3XtAIHHR+\n8240cvRa/7XdOsfk+pkFAhpNhhS5Um9vKbDH80peC7Cjl9hUx2OOIao1w12H1dxT\nwxMnThmFlGu69d4nfhLuysPPLUTvZfh9ftnXD1qAttBNiCJoSus448Uxw1w1yOFE\nlevinZMAdQ==\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "46806369339144950475946186896171704190",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-19T19:11:34.316312-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-21T19:11:34.316312-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1N8QZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1Pet\nVMte7upd6DK2r40ha1pka/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0\n/c5YXeK2dU4f0z214IIHPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3n\npAvizy0zhIfTT2ZTDd8fi/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5\nH7gLbOtI65/2v7RyhaV1CCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+q\nL3kr/G8xYJHLA3/DNM1zb88UerFBzEepRFSe4QIDAQABAoIBAQDSF0lOzOUODlTw\ndrpiaAc8K0r5yZG87wZ6lnuzh/2HFv9eYge+3WzXbZW6+npU7nwiQLdF2sGY2auO\nEsCEzjWxtKyNcQHusql9Rd/wk9uTDGEeTxwONp3+IygixDUivhAIASz25fWQvEtM\nf1EXuEiDV/7IOJ29mWTweKtLAvIfWZ591Z04zzY4MsibJcmK4L9UjhhcMrbouKA3\nCDiq50WbBcD7bQX/Ku+UVlxXzRi7EsZaEMWdioTFXpaGaVxsY8zC+GpUEentlAeu\n04juUeInekrw7strxazUbWEui7MLOeSiYnOVnB9wRHTSSnTY41bIH5GvKUuubbRv\nNhna5eZlAoGBAPrLu11MiGmabE/r2omLx4F9VKANPTA2h8/SY6H0oZMNu3HWUlSp\n9duwGlLj69snbo4VM8MEJxbsHVOw2eHTJ7c17cnLWT7ukb7gR+sUmVrc/w2VnHF9\njwc5H2X61cLvHyfSKHJ10iItFX/PXMuju6f5u12QEzicaI9tZYxGHrh/AoGBANlJ\n3wPzPiamnzA8tsCvIRdyozMUPrbwPdM3D3weygeRUbL1+QFdOSQFXjCZksa7GXXI\nKjBdEZbO/bri6sSdlMP98F1LAboGFbhZeBrJ7Vx/9Yy00eiInA3dt/Am1rvSi6QI\nn/HnZh3vLBQhpiIXXyJUUQ1dljVHLKDDKHrw+/ifAoGAKgeQi88yoTf+5Nnq0tg5\nBAtj7jqpwXWyBvMEPXUIyuMnQamgPI4LJNj7YF7P/Pc7wNXuycTdZCsHsynVKdJA\nOqTwB7xrZW+Hv0xI4S2fkamtmLI0+JQJLzW0fFuwDS4Ts5G1s5DpOU8C5lty+rGi\n1kC01LY7cmZL45V6yipKJbMCgYAK4aordnj8UofSUJgOWjbcB7+ohTEG1E0kULOT\n0a7oZhyjS7ImoVaFOUeYQ3iYPzJtNZL3TRHebYtDWq3LHuEeV487/M+fU0KvMrvT\nC525bicL3tpMPNsjzqCxhCBo04hutIfeA2qXwSyB7ZV2S5lWDMbqVm95R5Eyk9Np\nJLxZnQKBgQCk5bSiBb39hat46JTU1z1DIeoyJCAFsZ7OJ3ezaApXVvw4S+CA/DAs\nhSihkhwetVR56BcggI4z1X87NegtMEG+czAni3QecAo6ceepIEgPWkq3S38qjSRE\nX1kSYHfcFNz1tMpek7YLnO02AIT7fxP+jSAqcGHepPDSH0E84ogjig==\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDOTCCAiGgAwIBAgIRANRlKNHHTs7Xk7Gw57wWwLswDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnByZC52cG4uY2EwHhcNMjQxMTIy\nMDAxMTM0WhcNMzQxMTIwMDAxMTM0WjAzMQswCQYDVQQKEwJ3ZzEkMCIGA1UEAxMb\nd2cucHJkLnZwbi50ZXJyYWZvcm0tY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAu+TvI5cnwy0GTP6vL1xeIdnyUJ6H9sPH8U0XKakZSRS+jRaQ\n4AekjCd2M6tcZfx0x6Dng76qQNHf6NsfKnVfuOXLnaiaqbpn4DUsjLkK5jEGVKiD\nuEHHqVYwhz7HhzTx/pusGy7/aRvEW1g1kBZ8u82ZWV5ik9N6DPNJWDpw/HVwNhTf\n3ld33fjYRF3u5mNOS+j3cl6DcnshAGa7nSlzYwb1sD0H1sAeZZf7FVxWuhVDLsB5\nWTMk1zUtMQX8YsZM6rVTMySlRpgy1VUCQvvidDUYfX1OGpC4Fqc+gBQdCctl0Ezs\nCqpp0Ror36x91xNhGpTnaKx60MOuXHs5dSgyMwIDAQABo1YwVDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME\nGDAWgBSAnjGObA4+xm/wiav9I5EnkNGx/jANBgkqhkiG9w0BAQsFAAOCAQEAcR8q\n2bPvUvNhccWvM0Q/iKWG+ppb3gCVGNBPjSxuSRLssfyEeAu0ZOfoG29p5dKbrVET\nQsk8UuUu5h50h4ThZ+qdOVzr8BmrBbEya4N8OQEE6kqZVaR0VaZjJXoAIE0oy3mp\n8ZO/LU9M3zQDXUsoSkSMeg5gD4voUJNbhG2rVGuBx1yyapvH8weCZZ9FShvpwdpL\nVhhcbN8KIZg2DbO9nsJEV1i260olvPYXT+Wlio/6M9gJ4nRh1DRV8wU+YLj2SLAw\n7SP5Mf63+kl5DdBUGFIlYr4JgK4LBDQhEwYS9PvbPgm52g7PqyZwQAWlHKkKS0TA\nU22/shrI1PKS26kXDg==\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICeDCCAWACAQAwMzELMAkGA1UEChMCd2cxJDAiBgNVBAMTG3dnLnByZC52cG4u\ndGVycmFmb3JtLWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nALvk7yOXJ8MtBkz+ry9cXiHZ8lCeh/bDx/FNFympGUkUvo0WkOAHpIwndjOrXGX8\ndMeg54O+qkDR3+jbHyp1X7jly52omqm6Z+A1LIy5CuYxBlSog7hBx6lWMIc+x4c0\n8f6brBsu/2kbxFtYNZAWfLvNmVleYpPTegzzSVg6cPx1cDYU395Xd9342ERd7uZj\nTkvo93Jeg3J7IQBmu50pc2MG9bA9B9bAHmWX+xVcVroVQy7AeVkzJNc1LTEF/GLG\nTOq1UzMkpUaYMtVVAkL74nQ1GH19ThqQuBanPoAUHQnLZdBM7AqqadEaK9+sfdcT\nYRqU52isetDDrlx7OXUoMjMCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQBBiG+K\nLujuVEUJO0zA+dfOQvkoNYaWtjEWy2NdzPz/FuWtzMU8Q/SNW34162nUyRQQuL6c\n3CmMVUhKN1ZFFDGZXbpXoqvyPFWJXMF1kW2RNrHJrX+/YrQr4uakb9PElSe+6HJj\nuzwOWlOFViTtjeHKHFOywdnRbtxArIWdqeb0O/pyiPbAqUoxFTy6Vq8SiGk1Dgoa\nxT1XSPGgdx2yoYwzqVjy8gPxFYJgNa3XdUaruQ+qSX7Ec2IEy3tpHvSusgyUG9p0\ne+/m7i59R37HzI44nA/2O84AzA15C2bAVZ4wZ4dCn84Obx8S8HHlFd4+fpgQvve3\n/h+/dAV60r6LYett\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "282321585005867084146717730499540205755",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-19T19:11:34.344398-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-21T19:11:34.344398-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_locally_signed_cert",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "server_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1N8QZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1Pet\nVMte7upd6DK2r40ha1pka/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0\n/c5YXeK2dU4f0z214IIHPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3n\npAvizy0zhIfTT2ZTDd8fi/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5\nH7gLbOtI65/2v7RyhaV1CCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+q\nL3kr/G8xYJHLA3/DNM1zb88UerFBzEepRFSe4QIDAQABAoIBAQDSF0lOzOUODlTw\ndrpiaAc8K0r5yZG87wZ6lnuzh/2HFv9eYge+3WzXbZW6+npU7nwiQLdF2sGY2auO\nEsCEzjWxtKyNcQHusql9Rd/wk9uTDGEeTxwONp3+IygixDUivhAIASz25fWQvEtM\nf1EXuEiDV/7IOJ29mWTweKtLAvIfWZ591Z04zzY4MsibJcmK4L9UjhhcMrbouKA3\nCDiq50WbBcD7bQX/Ku+UVlxXzRi7EsZaEMWdioTFXpaGaVxsY8zC+GpUEentlAeu\n04juUeInekrw7strxazUbWEui7MLOeSiYnOVnB9wRHTSSnTY41bIH5GvKUuubbRv\nNhna5eZlAoGBAPrLu11MiGmabE/r2omLx4F9VKANPTA2h8/SY6H0oZMNu3HWUlSp\n9duwGlLj69snbo4VM8MEJxbsHVOw2eHTJ7c17cnLWT7ukb7gR+sUmVrc/w2VnHF9\njwc5H2X61cLvHyfSKHJ10iItFX/PXMuju6f5u12QEzicaI9tZYxGHrh/AoGBANlJ\n3wPzPiamnzA8tsCvIRdyozMUPrbwPdM3D3weygeRUbL1+QFdOSQFXjCZksa7GXXI\nKjBdEZbO/bri6sSdlMP98F1LAboGFbhZeBrJ7Vx/9Yy00eiInA3dt/Am1rvSi6QI\nn/HnZh3vLBQhpiIXXyJUUQ1dljVHLKDDKHrw+/ifAoGAKgeQi88yoTf+5Nnq0tg5\nBAtj7jqpwXWyBvMEPXUIyuMnQamgPI4LJNj7YF7P/Pc7wNXuycTdZCsHsynVKdJA\nOqTwB7xrZW+Hv0xI4S2fkamtmLI0+JQJLzW0fFuwDS4Ts5G1s5DpOU8C5lty+rGi\n1kC01LY7cmZL45V6yipKJbMCgYAK4aordnj8UofSUJgOWjbcB7+ohTEG1E0kULOT\n0a7oZhyjS7ImoVaFOUeYQ3iYPzJtNZL3TRHebYtDWq3LHuEeV487/M+fU0KvMrvT\nC525bicL3tpMPNsjzqCxhCBo04hutIfeA2qXwSyB7ZV2S5lWDMbqVm95R5Eyk9Np\nJLxZnQKBgQCk5bSiBb39hat46JTU1z1DIeoyJCAFsZ7OJ3ezaApXVvw4S+CA/DAs\nhSihkhwetVR56BcggI4z1X87NegtMEG+czAni3QecAo6ceepIEgPWkq3S38qjSRE\nX1kSYHfcFNz1tMpek7YLnO02AIT7fxP+jSAqcGHepPDSH0E84ogjig==\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDLjCCAhagAwIBAgIQDb0fYofPt/SYck/GkbYToDANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMzRaFw0zNDExMjAwMDExMzRaMCkxCzAJBgNVBAoTAndnMRowGAYDVQQDExF3\nZy5wcmQudnBuLnNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAKtqrcwziktAJ0/53hOiA+Z5V4Q8NRtr0mR/oO6C4Exkz5Hp8eb+qyo15cdgs8PS\n0e0Z8cJyKT+66RWjjJ6ev5f6ZEkdDD+i8yc4Th3hNj8w//Trt1SsGDgrgb7Wn/eN\nZovJ9ckYPQvambv2/SIxYrFfyyNvaji4ChhjS/be4Ry0fsI3dN05Lvvl5MLZAi0j\nV9oJtjhqdhMTMO8O2EvSk/8c/7iiAoIogENIPintJ1zeCv4G6k80VLeP6uY4sTZv\nslUpzvdD6QJhnmDOZ2FnY3dUJLzasrOxpBb0orzEKN5VOTkgDFgEU2PLdyyHtlNZ\nvAceMXOzU97+a34GN4fnU28CAwEAAaNWMFQwDgYDVR0PAQH/BAQDAgWgMBMGA1Ud\nJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUgJ4xjmwO\nPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcNAQELBQADggEBAC2YqOTCqoaFI1o6FnvG\nuiMj3v+hoC/txWLNjMf943PBI9JJiXabhTDt1A38QIcIcUsg8usEJcw64FLoYAE2\nDm6SSoCC7r4wSRqZxmiUR0biMcEXrqvgHiCpYULvIpc3sThMxVvJygBeE9ZMv3Ze\n22CriPf7ViLjo9DaktIpo4BL6OtYh96rC1MmApS+4WIWy7/bU8sCuMiuHEH682sk\nAKvKLEqLAeRHV542dR6pWOOaoozI58cy1bYY/4JaPrzuAbVrPXx5lLHdGwx5TOd3\nHyaW1RUzBaAihEy4E2Fm7rHZCUvZdz6OWRcYzhqe2rVflVg413q4mt6NsLVz7fAe\nYWs=\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICbjCCAVYCAQAwKTELMAkGA1UEChMCd2cxGjAYBgNVBAMTEXdnLnByZC52cG4u\nc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq2qtzDOKS0An\nT/neE6ID5nlXhDw1G2vSZH+g7oLgTGTPkenx5v6rKjXlx2Czw9LR7RnxwnIpP7rp\nFaOMnp6/l/pkSR0MP6LzJzhOHeE2PzD/9Ou3VKwYOCuBvtaf941mi8n1yRg9C9qZ\nu/b9IjFisV/LI29qOLgKGGNL9t7hHLR+wjd03Tku++XkwtkCLSNX2gm2OGp2ExMw\n7w7YS9KT/xz/uKICgiiAQ0g+Ke0nXN4K/gbqTzRUt4/q5jixNm+yVSnO90PpAmGe\nYM5nYWdjd1QkvNqys7GkFvSivMQo3lU5OSAMWARTY8t3LIe2U1m8Bx4xc7NT3v5r\nfgY3h+dTbwIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAI+SK/UHQLWbkq7hCUYz\nRtLcPOf4gN6gZ3KOXtN4ec9qgSQD8aM9tDJYpwCwLpyRw7FRapHqWz6P4sW3TGwg\n5evjSZ1spv1fLzshhCgoVtkaOtoe77/FrT0DWNytiRPtGOn4dPHxr1E8IuMCEDf+\nEIQMzRmN1sXBwt30xc7J2J1IZPFhklKR7QP6g4OqW45lBfd2FJkB/GBpXxJ+6qlI\nVKtTG6n4WGReZp9gu2x5XMBSw9oVdujTNhP848+OrSAK0s5HyqVpMojSR0ih8jo8\n2cuMJAldyJrwAosmknBL/qknJdmcu8DdxBZ2CVqkxVF/EZjhJMKcLdcgi3Ghw3DD\nTFc=\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "18261944612556221044828643924555207584",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-19T19:11:34.288224-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-21T19:11:34.288224-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "dcd263717060cfa905363d054438ee5549848dc1",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEA1N8QZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5f\nkD9J1PetVMte7upd6DK2r40ha1pka/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+\n82bgw1y0/c5YXeK2dU4f0z214IIHPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z\n6KuhCI3npAvizy0zhIfTT2ZTDd8fi/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZI\nFswUnij5H7gLbOtI65/2v7RyhaV1CCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8h\npqJy1b+qL3kr/G8xYJHLA3/DNM1zb88UerFBzEepRFSe4QAAA7jRd7EL0XexCwAA\nAAdzc2gtcnNhAAABAQDU3xBl2mAyOyaMiw9JL9hwEM9JYqP4In6egFTljl+QP0nU\n961Uy17u6l3oMravjSFrWmRr9pwW69ICI3L8mFtZAJ9WRrWH/cjJiHPxr/7zZuDD\nXLT9zlhd4rZ1Th/TPbXgggc+Q+EruulJ8JAIFFw7q8zpl48lTLW8107cDzPoq6EI\njeekC+LPLTOEh9NPZlMN3x+L/rUgIPwPboh23a0dG4LJYZzZ6bwgBlPOZkgWzBSe\nKPkfuAts60jrn/a/tHKFpXUIKdDG9MzFUFyyXw9kUaRylCyzXJ4hpJ9dLyGmonLV\nv6oveSv8bzFgkcsDf8M0zXNvzxR6sUHMR6lEVJ7hAAAAAwEAAQAAAQEA0hdJTszl\nDg5U8Ha6YmgHPCtK+cmRvO8GepZ7s4f9hxb/XmIHvt1s122Vuvp6VO58IkC3RdrB\nmNmrjhLAhM41sbSsjXEB7rKpfUXf8JPbkwxhHk8cDjad/iMoIsQ1Ir4QCAEs9uX1\nkLxLTH9RF7hIg1f+yDidvZlk8HirSwLyH1mefdWdOM82ODLImyXJiuC/VI4YXDK2\n6LigNwg4qudFmwXA+20F/yrvlFZcV80YuxLGWhDFnYqExV6WhmlcbGPMwvhqVBHp\n7ZQHrtOI7lHiJ3pK8O7La8Ws1G1hLouzCznkomJzlZwfcER00kp02ONWyB+RrylL\nrm20bzYZ2uXmZQAAAIEApOW0ogW9/YWreOiU1Nc9QyHqMiQgBbGezid3s2gKV1b8\nOEvggPwwLIUooZIcHrVUeegXIICOM9V/OzXoLTBBvnMwJ4t0HnAKOnHnqSBID1pK\nt0t/Ko0kRF9ZEmB33BTc9bTKXpO2C5ztNgCE+38T/o0gKnBh3qTw0h9BPOKII4oA\nAACBAPrLu11MiGmabE/r2omLx4F9VKANPTA2h8/SY6H0oZMNu3HWUlSp9duwGlLj\n69snbo4VM8MEJxbsHVOw2eHTJ7c17cnLWT7ukb7gR+sUmVrc/w2VnHF9jwc5H2X6\n1cLvHyfSKHJ10iItFX/PXMuju6f5u12QEzicaI9tZYxGHrh/AAAAgQDZSd8D8z4m\npp8wPLbAryEXcqMzFD628D3TNw98HsoHkVGy9fkBXTkkBV4wmZLGuxl1yCowXRGW\nzv264urEnZTD/fBdSwG6BhW4WXgaye1cf/WMtNHoiJwN3bfwJta70oukCJ/x52Yd\n7ywUIaYiF18iVFENXZY1Ryygwyh68Pv4nwAAAAAB\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1N8QZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1Pet\nVMte7upd6DK2r40ha1pka/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0\n/c5YXeK2dU4f0z214IIHPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3n\npAvizy0zhIfTT2ZTDd8fi/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5\nH7gLbOtI65/2v7RyhaV1CCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+q\nL3kr/G8xYJHLA3/DNM1zb88UerFBzEepRFSe4QIDAQABAoIBAQDSF0lOzOUODlTw\ndrpiaAc8K0r5yZG87wZ6lnuzh/2HFv9eYge+3WzXbZW6+npU7nwiQLdF2sGY2auO\nEsCEzjWxtKyNcQHusql9Rd/wk9uTDGEeTxwONp3+IygixDUivhAIASz25fWQvEtM\nf1EXuEiDV/7IOJ29mWTweKtLAvIfWZ591Z04zzY4MsibJcmK4L9UjhhcMrbouKA3\nCDiq50WbBcD7bQX/Ku+UVlxXzRi7EsZaEMWdioTFXpaGaVxsY8zC+GpUEentlAeu\n04juUeInekrw7strxazUbWEui7MLOeSiYnOVnB9wRHTSSnTY41bIH5GvKUuubbRv\nNhna5eZlAoGBAPrLu11MiGmabE/r2omLx4F9VKANPTA2h8/SY6H0oZMNu3HWUlSp\n9duwGlLj69snbo4VM8MEJxbsHVOw2eHTJ7c17cnLWT7ukb7gR+sUmVrc/w2VnHF9\njwc5H2X61cLvHyfSKHJ10iItFX/PXMuju6f5u12QEzicaI9tZYxGHrh/AoGBANlJ\n3wPzPiamnzA8tsCvIRdyozMUPrbwPdM3D3weygeRUbL1+QFdOSQFXjCZksa7GXXI\nKjBdEZbO/bri6sSdlMP98F1LAboGFbhZeBrJ7Vx/9Yy00eiInA3dt/Am1rvSi6QI\nn/HnZh3vLBQhpiIXXyJUUQ1dljVHLKDDKHrw+/ifAoGAKgeQi88yoTf+5Nnq0tg5\nBAtj7jqpwXWyBvMEPXUIyuMnQamgPI4LJNj7YF7P/Pc7wNXuycTdZCsHsynVKdJA\nOqTwB7xrZW+Hv0xI4S2fkamtmLI0+JQJLzW0fFuwDS4Ts5G1s5DpOU8C5lty+rGi\n1kC01LY7cmZL45V6yipKJbMCgYAK4aordnj8UofSUJgOWjbcB7+ohTEG1E0kULOT\n0a7oZhyjS7ImoVaFOUeYQ3iYPzJtNZL3TRHebYtDWq3LHuEeV487/M+fU0KvMrvT\nC525bicL3tpMPNsjzqCxhCBo04hutIfeA2qXwSyB7ZV2S5lWDMbqVm95R5Eyk9Np\nJLxZnQKBgQCk5bSiBb39hat46JTU1z1DIeoyJCAFsZ7OJ3ezaApXVvw4S+CA/DAs\nhSihkhwetVR56BcggI4z1X87NegtMEG+czAni3QecAo6ceepIEgPWkq3S38qjSRE\nX1kSYHfcFNz1tMpek7YLnO02AIT7fxP+jSAqcGHepPDSH0E84ogjig==\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDU3xBl2mAyOyaM\niw9JL9hwEM9JYqP4In6egFTljl+QP0nU961Uy17u6l3oMravjSFrWmRr9pwW69IC\nI3L8mFtZAJ9WRrWH/cjJiHPxr/7zZuDDXLT9zlhd4rZ1Th/TPbXgggc+Q+EruulJ\n8JAIFFw7q8zpl48lTLW8107cDzPoq6EIjeekC+LPLTOEh9NPZlMN3x+L/rUgIPwP\nboh23a0dG4LJYZzZ6bwgBlPOZkgWzBSeKPkfuAts60jrn/a/tHKFpXUIKdDG9MzF\nUFyyXw9kUaRylCyzXJ4hpJ9dLyGmonLVv6oveSv8bzFgkcsDf8M0zXNvzxR6sUHM\nR6lEVJ7hAgMBAAECggEBANIXSU7M5Q4OVPB2umJoBzwrSvnJkbzvBnqWe7OH/YcW\n/15iB77dbNdtlbr6elTufCJAt0XawZjZq44SwITONbG0rI1xAe6yqX1F3/CT25MM\nYR5PHA42nf4jKCLENSK+EAgBLPbl9ZC8S0x/URe4SINX/sg4nb2ZZPB4q0sC8h9Z\nnn3VnTjPNjgyyJslyYrgv1SOGFwytui4oDcIOKrnRZsFwPttBf8q75RWXFfNGLsS\nxloQxZ2KhMVeloZpXGxjzML4alQR6e2UB67TiO5R4id6SvDuy2vFrNRtYS6Lsws5\n5KJic5WcH3BEdNJKdNjjVsgfka8pS65ttG82Gdrl5mUCgYEA+su7XUyIaZpsT+va\niYvHgX1UoA09MDaHz9JjofShkw27cdZSVKn127AaUuPr2ydujhUzwwQnFuwdU7DZ\n4dMntzXtyctZPu6RvuBH6xSZWtz/DZWccX2PBzkfZfrVwu8fJ9IocnXSIi0Vf89c\ny6O7p/m7XZATOJxoj21ljEYeuH8CgYEA2UnfA/M+JqafMDy2wK8hF3KjMxQ+tvA9\n0zcPfB7KB5FRsvX5AV05JAVeMJmSxrsZdcgqMF0Rls79uuLqxJ2Uw/3wXUsBugYV\nuFl4GsntXH/1jLTR6IicDd238CbWu9KLpAif8edmHe8sFCGmIhdfIlRRDV2WNUcs\noMMoevD7+J8CgYAqB5CLzzKhN/7k2erS2DkEC2PuOqnBdbIG8wQ9dQjK4ydBqaA8\njgsk2PtgXs/89zvA1e7JxN1kKwezKdUp0kA6pPAHvGtlb4e/TEjhLZ+Rqa2YsjT4\nlAkvNbR8W7ANLhOzkbWzkOk5TwLmW3L6saLWQLTUtjtyZkvjlXrKKkolswKBgArh\nqit2ePxSh9JQmA5aNtwHv6iFMQbUTSRQs5PRruhmHKNLsiahVoU5R5hDeJg/Mm01\nkvdNEd5ti0Narcse4R5Xjzv8z59TQq8yu9MLnbluJwve2kw82yPOoLGEIGjTiG60\nh94DapfBLIHtlXZLmVYMxupWb3lHkTKT02kkvFmdAoGBAKTltKIFvf2Fq3jolNTX\nPUMh6jIkIAWxns4nd7NoCldW/DhL4ID8MCyFKKGSHB61VHnoFyCAjjPVfzs16C0w\nQb5zMCeLdB5wCjpx56kgSA9aSrdLfyqNJERfWRJgd9wU3PW0yl6Ttguc7TYAhPt/\nE/6NICpwYd6k8NIfQTziiCOK\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "21:9e:a1:ee:8a:4e:60:8b:35:e1:96:e4:44:50:fb:94",
            "public_key_fingerprint_sha256": "SHA256:zsQh2/xqWlV2muRq0WLd7nB73SeRZ+7WmSe2qI7Jv8g",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDU3xBl2mAyOyaMiw9JL9hwEM9JYqP4In6egFTljl+QP0nU961Uy17u6l3oMravjSFrWmRr9pwW69ICI3L8mFtZAJ9WRrWH/cjJiHPxr/7zZuDDXLT9zlhd4rZ1Th/TPbXgggc+Q+EruulJ8JAIFFw7q8zpl48lTLW8107cDzPoq6EIjeekC+LPLTOEh9NPZlMN3x+L/rUgIPwPboh23a0dG4LJYZzZ6bwgBlPOZkgWzBSeKPkfuAts60jrn/a/tHKFpXUIKdDG9MzFUFyyXw9kUaRylCyzXJ4hpJ9dLyGmonLVv6oveSv8bzFgkcsDf8M0zXNvzxR6sUHMR6lEVJ7h\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8QZdpgMjsmjIsPSS/Y\ncBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pka/acFuvSAiNy/Jhb\nWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIHPkPhK7rpSfCQCBRc\nO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8fi/61ICD8D26Idt2t\nHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1CCnQxvTMxVBcsl8P\nZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1zb88UerFBzEepRFSe\n4QIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "9e7a42b927ceffd14dfeb4d975506542a4b059ba",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEA1/+DuiSQB66FQt+FAoE1wBOOrPDzBGMUANt/THwa\nDa4tAPJENCbDFyOkQ0vHBQfdtswapRfpms/CYo/xKtA4Y48fVdPBPOeU0BX1CzC/\ncsVBu9hrp7Nbo5YPkQTWHjF7ut2mnGZRJVPPhzP/pWtIe5fhzEIxgXK3sHfttQ8i\n1+TGR+JR27i2h19zj0ri+zkGk5XbN7ZeyGAjB5uW9v4rrySpiV7ipx0ijHke/Ajj\n/fiIj4auSCUEvhatpcKDzDQvZPb/CuRtc8Z6nyrKZs4vQWIPtglx/3lgUZskocis\nSVjGn04lVKcrV9Yv4uyk0WWCs44jhCmIxVUQMbmQ9dnnqQAAA7hwAR93cAEfdwAA\nAAdzc2gtcnNhAAABAQDX/4O6JJAHroVC34UCgTXAE46s8PMEYxQA239MfBoNri0A\n8kQ0JsMXI6RDS8cFB922zBqlF+maz8Jij/Eq0Dhjjx9V08E855TQFfULML9yxUG7\n2Guns1ujlg+RBNYeMXu63aacZlElU8+HM/+la0h7l+HMQjGBcrewd+21DyLX5MZH\n4lHbuLaHX3OPSuL7OQaTlds3tl7IYCMHm5b2/iuvJKmJXuKnHSKMeR78COP9+IiP\nhq5IJQS+Fq2lwoPMNC9k9v8K5G1zxnqfKspmzi9BYg+2CXH/eWBRmyShyKxJWMaf\nTiVUpytX1i/i7KTRZYKzjiOEKYjFVRAxuZD12eepAAAAAwEAAQAAAQEAnDBZ8ppJ\nxCRAnLDAn6ULVw9NVmUNdZineE9AZ/A9brMKO+rzwrpczDirqTX8ffjILEy+367A\n739YUqk/fPQAMo3l3Mw4qW/UPfwCq8reRYG6HLlMb4HUvB/gtb7HjiG+FMv+lI2w\nE8vc/ylsrRM84JJdZrRe0/o+Nc8jBpAhY/bm8118JmUfpVt4K0CTEDp5jcg6xL7d\nesRdP/n+zq1FY6Gcc1SSadY/iPnX5RhN110TdoSZs4WWzzUQDbCoBxprN6DWPq//\njK22h4B+UHgU0HTO6UL6KobJKLGR2gzCg2G4WKtw4pDolzme4xxAfdviJ8cvZWqk\ntZo+ngz6ncwi4QAAAIB75ditOHrminbfgZn6yBVY9hV+iLp/yy0Rlo2CPsAjGzUN\nGTQ3gfAU1VYI5jeFd8us9i5AmbgJdvHrLeinAjH6HBIBBVL7n5hCs0EHXoM+CzmR\nJ4gbotBoNWNU4i3tXmo0YPsJkAa0O0hbIykIIofKwVE2ZcFoo58gdfuyJqN7aAAA\nAIEA/t1nfl/MLHvn/qzfzo1iU6K2Tj46o/zpa2PE40IblGTC0krcnkIjkSH/ECfm\nEwuwLG5xAJeX0/pgqSS+sURCxWtNSCbmwRNUVyKCo5Uc70C19hyooP6idV9oWFrg\nEIC3grAtm5WwvDlnoLUqKdwr0SsdNdIDuM1HJ+S1ks/3IH0AAACBANj1y2pfeGK0\nd5Eyn3duqYoiCE+imYwiajeRY7uUPDAbmHncQ0rPTc9ZNGDhNS2JyB+Fa7hXegW/\n5dyOwPVJ53u/XUxz1WfatSCjkTR7HjkCcjc76eZ2b4D+kKYpoysbvlymxipQgQVm\nvd7gK5VcubAhWm2k3pIBww5tK548qtedAAAAAAEC\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1/+DuiSQB66FQt+FAoE1wBOOrPDzBGMUANt/THwaDa4tAPJE\nNCbDFyOkQ0vHBQfdtswapRfpms/CYo/xKtA4Y48fVdPBPOeU0BX1CzC/csVBu9hr\np7Nbo5YPkQTWHjF7ut2mnGZRJVPPhzP/pWtIe5fhzEIxgXK3sHfttQ8i1+TGR+JR\n27i2h19zj0ri+zkGk5XbN7ZeyGAjB5uW9v4rrySpiV7ipx0ijHke/Ajj/fiIj4au\nSCUEvhatpcKDzDQvZPb/CuRtc8Z6nyrKZs4vQWIPtglx/3lgUZskocisSVjGn04l\nVKcrV9Yv4uyk0WWCs44jhCmIxVUQMbmQ9dnnqQIDAQABAoIBAQCcMFnymknEJECc\nsMCfpQtXD01WZQ11mKd4T0Bn8D1uswo76vPCulzMOKupNfx9+MgsTL7frsDvf1hS\nqT989AAyjeXczDipb9Q9/AKryt5FgbocuUxvgdS8H+C1vseOIb4Uy/6UjbATy9z/\nKWytEzzgkl1mtF7T+j41zyMGkCFj9ubzXXwmZR+lW3grQJMQOnmNyDrEvt16xF0/\n+f7OrUVjoZxzVJJp1j+I+dflGE3XXRN2hJmzhZbPNRANsKgHGms3oNY+r/+MrbaH\ngH5QeBTQdM7pQvoqhskosZHaDMKDYbhYq3DikOiXOZ7jHEB92+Inxy9laqS1mj6e\nDPqdzCLhAoGBAP7dZ35fzCx75/6s386NYlOitk4+OqP86WtjxONCG5RkwtJK3J5C\nI5Eh/xAn5hMLsCxucQCXl9P6YKkkvrFEQsVrTUgm5sETVFcigqOVHO9AtfYcqKD+\nonVfaFha4BCAt4KwLZuVsLw5Z6C1KincK9ErHTXSA7jNRyfktZLP9yB9AoGBANj1\ny2pfeGK0d5Eyn3duqYoiCE+imYwiajeRY7uUPDAbmHncQ0rPTc9ZNGDhNS2JyB+F\na7hXegW/5dyOwPVJ53u/XUxz1WfatSCjkTR7HjkCcjc76eZ2b4D+kKYpoysbvlym\nxipQgQVmvd7gK5VcubAhWm2k3pIBww5tK548qtedAoGBAMTSz341FUS1W/C+KQkm\n/uyAGDJMtJS4WLtqjT7EavAq8Jne3ooJodYPXx9m8LN8r01g7Tv71nEKR2PY0Lut\nb7NurnwuLr6k4tl3+VPDcFkErIGomEHc5DGowLibVbbo8M+op1AkRhzWaEUgI7O4\nKM6ccS6DRgSN44nXgrIikUMxAoGAVR9y1ORqRkfKFbTH7kMDz8d0fVItblbeV7j6\naVFKoBFjrIQn/sUBIVY9f7k8dQZ29y8QyX3AyVq2I+f6ewKpCNtXDrTvyNR9djXW\ntcGMZQ+5okQmjB5xtymptRfnBfXXpWBlpZp6VJUv768CSpLb4+fiI9yo2p5IWnOo\nxmfFG90CgYB75ditOHrminbfgZn6yBVY9hV+iLp/yy0Rlo2CPsAjGzUNGTQ3gfAU\n1VYI5jeFd8us9i5AmbgJdvHrLeinAjH6HBIBBVL7n5hCs0EHXoM+CzmRJ4gbotBo\nNWNU4i3tXmo0YPsJkAa0O0hbIykIIofKwVE2ZcFoo58gdfuyJqN7aA==\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDX/4O6JJAHroVC\n34UCgTXAE46s8PMEYxQA239MfBoNri0A8kQ0JsMXI6RDS8cFB922zBqlF+maz8Ji\nj/Eq0Dhjjx9V08E855TQFfULML9yxUG72Guns1ujlg+RBNYeMXu63aacZlElU8+H\nM/+la0h7l+HMQjGBcrewd+21DyLX5MZH4lHbuLaHX3OPSuL7OQaTlds3tl7IYCMH\nm5b2/iuvJKmJXuKnHSKMeR78COP9+IiPhq5IJQS+Fq2lwoPMNC9k9v8K5G1zxnqf\nKspmzi9BYg+2CXH/eWBRmyShyKxJWMafTiVUpytX1i/i7KTRZYKzjiOEKYjFVRAx\nuZD12eepAgMBAAECggEBAJwwWfKaScQkQJywwJ+lC1cPTVZlDXWYp3hPQGfwPW6z\nCjvq88K6XMw4q6k1/H34yCxMvt+uwO9/WFKpP3z0ADKN5dzMOKlv1D38AqvK3kWB\nuhy5TG+B1Lwf4LW+x44hvhTL/pSNsBPL3P8pbK0TPOCSXWa0XtP6PjXPIwaQIWP2\n5vNdfCZlH6VbeCtAkxA6eY3IOsS+3XrEXT/5/s6tRWOhnHNUkmnWP4j51+UYTddd\nE3aEmbOFls81EA2wqAcaazeg1j6v/4yttoeAflB4FNB0zulC+iqGySixkdoMwoNh\nuFircOKQ6Jc5nuMcQH3b4ifHL2VqpLWaPp4M+p3MIuECgYEA/t1nfl/MLHvn/qzf\nzo1iU6K2Tj46o/zpa2PE40IblGTC0krcnkIjkSH/ECfmEwuwLG5xAJeX0/pgqSS+\nsURCxWtNSCbmwRNUVyKCo5Uc70C19hyooP6idV9oWFrgEIC3grAtm5WwvDlnoLUq\nKdwr0SsdNdIDuM1HJ+S1ks/3IH0CgYEA2PXLal94YrR3kTKfd26piiIIT6KZjCJq\nN5Fju5Q8MBuYedxDSs9Nz1k0YOE1LYnIH4VruFd6Bb/l3I7A9Unne79dTHPVZ9q1\nIKORNHseOQJyNzvp5nZvgP6QpimjKxu+XKbGKlCBBWa93uArlVy5sCFabaTekgHD\nDm0rnjyq150CgYEAxNLPfjUVRLVb8L4pCSb+7IAYMky0lLhYu2qNPsRq8Crwmd7e\nigmh1g9fH2bws3yvTWDtO/vWcQpHY9jQu61vs26ufC4uvqTi2Xf5U8NwWQSsgaiY\nQdzkMajAuJtVtujwz6inUCRGHNZoRSAjs7gozpxxLoNGBI3jideCsiKRQzECgYBV\nH3LU5GpGR8oVtMfuQwPPx3R9Ui1uVt5XuPppUUqgEWOshCf+xQEhVj1/uTx1Bnb3\nLxDJfcDJWrYj5/p7AqkI21cOtO/I1H12Nda1wYxlD7miRCaMHnG3Kam1F+cF9del\nYGWlmnpUlS/vrwJKktvj5+Ij3Kjankhac6jGZ8Ub3QKBgHvl2K04euaKdt+BmfrI\nFVj2FX6Iun/LLRGWjYI+wCMbNQ0ZNDeB8BTVVgjmN4V3y6z2LkCZuAl28est6KcC\nMfocEgEFUvufmEKzQQdegz4LOZEniBui0Gg1Y1TiLe1eajRg+wmQBrQ7SFsjKQgi\nh8rBUTZlwWijnyB1+7Imo3to\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "56:65:ba:c0:e8:83:58:53:87:d5:2f:f5:d4:a2:b1:39",
            "public_key_fingerprint_sha256": "SHA256:XM861OfMIG2f1c1FvRzN0/ryreIyzPJ7yvW/ylwuPsI",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDX/4O6JJAHroVC34UCgTXAE46s8PMEYxQA239MfBoNri0A8kQ0JsMXI6RDS8cFB922zBqlF+maz8Jij/Eq0Dhjjx9V08E855TQFfULML9yxUG72Guns1ujlg+RBNYeMXu63aacZlElU8+HM/+la0h7l+HMQjGBcrewd+21DyLX5MZH4lHbuLaHX3OPSuL7OQaTlds3tl7IYCMHm5b2/iuvJKmJXuKnHSKMeR78COP9+IiPhq5IJQS+Fq2lwoPMNC9k9v8K5G1zxnqfKspmzi9BYg+2CXH/eWBRmyShyKxJWMafTiVUpytX1i/i7KTRZYKzjiOEKYjFVRAxuZD12eep\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1/+DuiSQB66FQt+FAoE1\nwBOOrPDzBGMUANt/THwaDa4tAPJENCbDFyOkQ0vHBQfdtswapRfpms/CYo/xKtA4\nY48fVdPBPOeU0BX1CzC/csVBu9hrp7Nbo5YPkQTWHjF7ut2mnGZRJVPPhzP/pWtI\ne5fhzEIxgXK3sHfttQ8i1+TGR+JR27i2h19zj0ri+zkGk5XbN7ZeyGAjB5uW9v4r\nrySpiV7ipx0ijHke/Ajj/fiIj4auSCUEvhatpcKDzDQvZPb/CuRtc8Z6nyrKZs4v\nQWIPtglx/3lgUZskocisSVjGn04lVKcrV9Yv4uyk0WWCs44jhCmIxVUQMbmQ9dnn\nqQIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "874d7ff09bcd4437bebac37f7f83344e2879f179",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAsxBgNR8KTBi6RDkga0RSKO6e6zoc3R8NLyhSgi2s\n5l0aytPDA0UKseElyBgqq/0vAVDg4Fnp1Td3FI8YInyjjCpgOdHyyUxxJ0BHeTBz\noqogIK33EiwPJVDWfX/yPqkIbKx65J1ZOmyIW01q/tAWotDCvFZlcTTOsw5NykXO\nGN+0bgiSqh2C+pq9stccHZ2O+1WUPBaedqU1QsmO4uMzab6NslZawST1ZDlbIDO0\ncICQkoaYfiUjhRj1FLwKjIicrLZmWBtPQEUzKwI1mxKIprgqBqSN3nYxNO4UMh3z\nxSZ9q12xyAjbBfdmdWtxiwQmEZjmV+j+u5jmvvAsdMh+3wAAA7jLs6PMy7OjzAAA\nAAdzc2gtcnNhAAABAQCzEGA1HwpMGLpEOSBrRFIo7p7rOhzdHw0vKFKCLazmXRrK\n08MDRQqx4SXIGCqr/S8BUODgWenVN3cUjxgifKOMKmA50fLJTHEnQEd5MHOiqiAg\nrfcSLA8lUNZ9f/I+qQhsrHrknVk6bIhbTWr+0Bai0MK8VmVxNM6zDk3KRc4Y37Ru\nCJKqHYL6mr2y1xwdnY77VZQ8Fp52pTVCyY7i4zNpvo2yVlrBJPVkOVsgM7RwgJCS\nhph+JSOFGPUUvAqMiJystmZYG09ARTMrAjWbEoimuCoGpI3edjE07hQyHfPFJn2r\nXbHICNsF92Z1a3GLBCYRmOZX6P67mOa+8Cx0yH7fAAAAAwEAAQAAAQB1tgwon5Eb\nWR4JfyxKl40TD1o08+zJh4IZP/6NSQ1iGk5kizSlT5uqN4GougpDKZre2JYbpb/L\nxDxprW+GLD0vBSRgnh1mKvQvg1f42NsLUZ7xHKtQrNoAA9YchiFvA5tgJTpcUvu3\nJmW0732oqI5Y1bdOK9VfyAEhQAPvNlg3jK1lvQrTUoAC9M12JdHX38P98snc6O7K\nqYw74QI1zc4fUbkNlWlkRuDWTnRCwrmaOCCFZ4AXPUEQHSU8VS5zoCQVVVh9/cIc\nZ1Gzn7gtRsm/UQ9sWqgdDdx0bpEC/CIFS647OJLTcoRiXSD2u+9eO0LZxXZrdGot\nxAnRXn2PnDxBAAAAgBPelEOE8fx2Z+74xSM8QOr2yOENn8Bo0r6wfcYLLc22KxEy\nPRx7sFWn3Yx9eBIM1Rh/gYEya8qP6xPK8ZnsvgeNEVYpYpxWuUpe1uNzOk7ie3R+\nvi1j6qDb4gWt5zGvBCmj9Gj5C5RWldyDXteDiBnY+lD/z9AHtgZM/ibUYUk2AAAA\ngQDk6wlXTyNEGLkdUJmDswTfOnmNFKK/Q6VJozwEXE6v73cCiG70t9rONC8qq3PA\nOvOtS5XjJuhv3Uk2I8rnEOuRqqxH38jBgW0+JIJ1p0WD7vy0ruN0rJhcJqNsfnux\njRoKWFU/ZsYD+a08I0sVv1SvkNN6z+GForp6gwLgeuhvjwAAAIEAyD93vEY1LxRW\nWgv2+pUoD0f6wAEoGWk2wt0L/VvnScvgyiSNnmG1FN3sZFXzovx1r2qwKut2UKzB\nD4svnBqWHb2jBg07P3l0V5mkY+0asC8X8A1DT+Nb4VSg+WKfoFKES3J2VDGSwEvT\nfhgaEjgH7F2RZrmCsRhPGbaDBY+YU7EAAAAAAQID\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAsxBgNR8KTBi6RDkga0RSKO6e6zoc3R8NLyhSgi2s5l0aytPD\nA0UKseElyBgqq/0vAVDg4Fnp1Td3FI8YInyjjCpgOdHyyUxxJ0BHeTBzoqogIK33\nEiwPJVDWfX/yPqkIbKx65J1ZOmyIW01q/tAWotDCvFZlcTTOsw5NykXOGN+0bgiS\nqh2C+pq9stccHZ2O+1WUPBaedqU1QsmO4uMzab6NslZawST1ZDlbIDO0cICQkoaY\nfiUjhRj1FLwKjIicrLZmWBtPQEUzKwI1mxKIprgqBqSN3nYxNO4UMh3zxSZ9q12x\nyAjbBfdmdWtxiwQmEZjmV+j+u5jmvvAsdMh+3wIDAQABAoIBAHW2DCifkRtZHgl/\nLEqXjRMPWjTz7MmHghk//o1JDWIaTmSLNKVPm6o3gai6CkMpmt7Ylhulv8vEPGmt\nb4YsPS8FJGCeHWYq9C+DV/jY2wtRnvEcq1Cs2gAD1hyGIW8Dm2AlOlxS+7cmZbTv\nfaiojljVt04r1V/IASFAA+82WDeMrWW9CtNSgAL0zXYl0dffw/3yydzo7sqpjDvh\nAjXNzh9RuQ2VaWRG4NZOdELCuZo4IIVngBc9QRAdJTxVLnOgJBVVWH39whxnUbOf\nuC1Gyb9RD2xaqB0N3HRukQL8IgVLrjs4ktNyhGJdIPa77147QtnFdmt0ai3ECdFe\nfY+cPEECgYEA5OsJV08jRBi5HVCZg7ME3zp5jRSiv0OlSaM8BFxOr+93Aohu9Lfa\nzjQvKqtzwDrzrUuV4ybob91JNiPK5xDrkaqsR9/IwYFtPiSCdadFg+78tK7jdKyY\nXCajbH57sY0aClhVP2bGA/mtPCNLFb9Ur5DTes/hhaK6eoMC4Hrob48CgYEAyD93\nvEY1LxRWWgv2+pUoD0f6wAEoGWk2wt0L/VvnScvgyiSNnmG1FN3sZFXzovx1r2qw\nKut2UKzBD4svnBqWHb2jBg07P3l0V5mkY+0asC8X8A1DT+Nb4VSg+WKfoFKES3J2\nVDGSwEvTfhgaEjgH7F2RZrmCsRhPGbaDBY+YU7ECgYEAzBf5Jgx6hrX8JPS9SbwL\n9fIueOgTCa+H6BVO5xxdU2KOmoWFV02sGPhRrRtbgeGNa83d/r2rskB6i3hx6H0f\naanfG92bIVsBSMxIPBk8Uxp516WtSVKwLEiOn6ZNJcmFk/+ZUYORu+2Y0+srgGIr\nYLQguHgqu3iQBbZUlEtAfGUCgYEAqTdg4jvd84PXGM7ljYl/ybIExj3z+c08Vlzf\nJeGEyIq90XQkLIPatuB2Q6+Sa9e1R1/7sLk7SR9DIfR3bg3VbxpyacnCmHf1BZWz\nIjIaDGova0555Ed3vCl8wmFCDQPOAcefELS3k0JAXVzWozCwGWBUX59CPo8RQORH\nQeq/SXECgYAT3pRDhPH8dmfu+MUjPEDq9sjhDZ/AaNK+sH3GCy3NtisRMj0ce7BV\np92MfXgSDNUYf4GBMmvKj+sTyvGZ7L4HjRFWKWKcVrlKXtbjczpO4nt0fr4tY+qg\n2+IFrecxrwQpo/Ro+QuUVpXcg17Xg4gZ2PpQ/8/QB7YGTP4m1GFJNg==\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCzEGA1HwpMGLpE\nOSBrRFIo7p7rOhzdHw0vKFKCLazmXRrK08MDRQqx4SXIGCqr/S8BUODgWenVN3cU\njxgifKOMKmA50fLJTHEnQEd5MHOiqiAgrfcSLA8lUNZ9f/I+qQhsrHrknVk6bIhb\nTWr+0Bai0MK8VmVxNM6zDk3KRc4Y37RuCJKqHYL6mr2y1xwdnY77VZQ8Fp52pTVC\nyY7i4zNpvo2yVlrBJPVkOVsgM7RwgJCShph+JSOFGPUUvAqMiJystmZYG09ARTMr\nAjWbEoimuCoGpI3edjE07hQyHfPFJn2rXbHICNsF92Z1a3GLBCYRmOZX6P67mOa+\n8Cx0yH7fAgMBAAECggEAdbYMKJ+RG1keCX8sSpeNEw9aNPPsyYeCGT/+jUkNYhpO\nZIs0pU+bqjeBqLoKQyma3tiWG6W/y8Q8aa1vhiw9LwUkYJ4dZir0L4NX+NjbC1Ge\n8RyrUKzaAAPWHIYhbwObYCU6XFL7tyZltO99qKiOWNW3TivVX8gBIUAD7zZYN4yt\nZb0K01KAAvTNdiXR19/D/fLJ3OjuyqmMO+ECNc3OH1G5DZVpZEbg1k50QsK5mjgg\nhWeAFz1BEB0lPFUuc6AkFVVYff3CHGdRs5+4LUbJv1EPbFqoHQ3cdG6RAvwiBUuu\nOziS03KEYl0g9rvvXjtC2cV2a3RqLcQJ0V59j5w8QQKBgQDk6wlXTyNEGLkdUJmD\nswTfOnmNFKK/Q6VJozwEXE6v73cCiG70t9rONC8qq3PAOvOtS5XjJuhv3Uk2I8rn\nEOuRqqxH38jBgW0+JIJ1p0WD7vy0ruN0rJhcJqNsfnuxjRoKWFU/ZsYD+a08I0sV\nv1SvkNN6z+GForp6gwLgeuhvjwKBgQDIP3e8RjUvFFZaC/b6lSgPR/rAASgZaTbC\n3Qv9W+dJy+DKJI2eYbUU3exkVfOi/HWvarAq63ZQrMEPiy+cGpYdvaMGDTs/eXRX\nmaRj7RqwLxfwDUNP41vhVKD5Yp+gUoRLcnZUMZLAS9N+GBoSOAfsXZFmuYKxGE8Z\ntoMFj5hTsQKBgQDMF/kmDHqGtfwk9L1JvAv18i546BMJr4foFU7nHF1TYo6ahYVX\nTawY+FGtG1uB4Y1rzd3+vauyQHqLeHHofR9pqd8b3ZshWwFIzEg8GTxTGnnXpa1J\nUrAsSI6fpk0lyYWT/5lRg5G77ZjT6yuAYitgtCC4eCq7eJAFtlSUS0B8ZQKBgQCp\nN2DiO93zg9cYzuWNiX/JsgTGPfP5zTxWXN8l4YTIir3RdCQsg9q24HZDr5Jr17VH\nX/uwuTtJH0Mh9HduDdVvGnJpycKYd/UFlbMiMhoMai9rTnnkR3e8KXzCYUINA84B\nx58QtLeTQkBdXNajMLAZYFRfn0I+jxFA5EdB6r9JcQKBgBPelEOE8fx2Z+74xSM8\nQOr2yOENn8Bo0r6wfcYLLc22KxEyPRx7sFWn3Yx9eBIM1Rh/gYEya8qP6xPK8Zns\nvgeNEVYpYpxWuUpe1uNzOk7ie3R+vi1j6qDb4gWt5zGvBCmj9Gj5C5RWldyDXteD\niBnY+lD/z9AHtgZM/ibUYUk2\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "19:ad:9b:25:26:87:b6:73:8e:e0:ed:a5:1b:3f:43:fd",
            "public_key_fingerprint_sha256": "SHA256:RQltQh4AS1PGKlfyy0JatPGEbj1/VFH2dUPOuAwiGOk",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzEGA1HwpMGLpEOSBrRFIo7p7rOhzdHw0vKFKCLazmXRrK08MDRQqx4SXIGCqr/S8BUODgWenVN3cUjxgifKOMKmA50fLJTHEnQEd5MHOiqiAgrfcSLA8lUNZ9f/I+qQhsrHrknVk6bIhbTWr+0Bai0MK8VmVxNM6zDk3KRc4Y37RuCJKqHYL6mr2y1xwdnY77VZQ8Fp52pTVCyY7i4zNpvo2yVlrBJPVkOVsgM7RwgJCShph+JSOFGPUUvAqMiJystmZYG09ARTMrAjWbEoimuCoGpI3edjE07hQyHfPFJn2rXbHICNsF92Z1a3GLBCYRmOZX6P67mOa+8Cx0yH7f\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsxBgNR8KTBi6RDkga0RS\nKO6e6zoc3R8NLyhSgi2s5l0aytPDA0UKseElyBgqq/0vAVDg4Fnp1Td3FI8YInyj\njCpgOdHyyUxxJ0BHeTBzoqogIK33EiwPJVDWfX/yPqkIbKx65J1ZOmyIW01q/tAW\notDCvFZlcTTOsw5NykXOGN+0bgiSqh2C+pq9stccHZ2O+1WUPBaedqU1QsmO4uMz\nab6NslZawST1ZDlbIDO0cICQkoaYfiUjhRj1FLwKjIicrLZmWBtPQEUzKwI1mxKI\nprgqBqSN3nYxNO4UMh3zxSZ9q12xyAjbBfdmdWtxiwQmEZjmV+j+u5jmvvAsdMh+\n3wIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "fe8e6426de0ae20c481a4a355410508c000be814",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAu+TvI5cnwy0GTP6vL1xeIdnyUJ6H9sPH8U0XKakZ\nSRS+jRaQ4AekjCd2M6tcZfx0x6Dng76qQNHf6NsfKnVfuOXLnaiaqbpn4DUsjLkK\n5jEGVKiDuEHHqVYwhz7HhzTx/pusGy7/aRvEW1g1kBZ8u82ZWV5ik9N6DPNJWDpw\n/HVwNhTf3ld33fjYRF3u5mNOS+j3cl6DcnshAGa7nSlzYwb1sD0H1sAeZZf7FVxW\nuhVDLsB5WTMk1zUtMQX8YsZM6rVTMySlRpgy1VUCQvvidDUYfX1OGpC4Fqc+gBQd\nCctl0EzsCqpp0Ror36x91xNhGpTnaKx60MOuXHs5dSgyMwAAA7gftUroH7VK6AAA\nAAdzc2gtcnNhAAABAQC75O8jlyfDLQZM/q8vXF4h2fJQnof2w8fxTRcpqRlJFL6N\nFpDgB6SMJ3Yzq1xl/HTHoOeDvqpA0d/o2x8qdV+45cudqJqpumfgNSyMuQrmMQZU\nqIO4QcepVjCHPseHNPH+m6wbLv9pG8RbWDWQFny7zZlZXmKT03oM80lYOnD8dXA2\nFN/eV3fd+NhEXe7mY05L6PdyXoNyeyEAZrudKXNjBvWwPQfWwB5ll/sVXFa6FUMu\nwHlZMyTXNS0xBfxixkzqtVMzJKVGmDLVVQJC++J0NRh9fU4akLgWpz6AFB0Jy2XQ\nTOwKqmnRGivfrH3XE2EalOdorHrQw65cezl1KDIzAAAAAwEAAQAAAQArSqg+zwj+\nU1VsUBIVG3ck3Y6TPLOfC6T52AVKOAf3aqws3dIrjBdBo6X8abM0XGKbzFsLY9be\ncHzirfoUUk7nzyqG/N4F1Ukxw46sLcZxG0KWJu2SerWCMrWjs7dNU8meHEgfS0jV\n8uvfEAfnVwcOTmTSzohv/v3UFgoEJhL6V7+czTP+mb4t2UjkqeuIz4FefJh+WIMT\nLGhGq2xQw6BXCyvMgwEDk5fsKMbNgdp+ZTq4yiGQzj7tVOodA+pYJ7hbSUjSDEoH\n+ugCVmUroEiVaYp9VtQlLpWeHWB+603Qpg8/XdhtcAkNfjsty0JMC5cGzlnz4/ud\nIkKwPSv+BWFBAAAAgQDSkRUQwVQJFoBXerKASqeT68ImzX4cZK0izsS1vogfDRkL\nyVhtbrwc7eFaGmEYX74n7L+qqUvvD8H11ZolhJpb9anCpaQ3y9xz4RoPoJzC5XSM\nIO0BMKFHGJiS4FqdUUv0hqk3zpuy8/5C1/A3ymo6Yct9FAp8iMqUE7hr5EWKZAAA\nAIEA3ZCrqrfR4YIUjcC8jFgStDHMniKGZ834OtP9fCixAMrZZe3l+jTmZGe3vDF6\nH/f6glZBWaEbJBOdLBsPw1TqOgUqAUOvyyIWHY0Yi+iFTchmiKN7hQ0vp1+oARKo\n+WCJYg0I5eBdKLe6bWFI6IZzVfUigkqDSiFpQhTw645S//kAAACBANkYnTU4vAd7\nBxntCMyA+L7Bgvg4KOs6dUcYnUdi1vZhdbxi8fvSMSXjjVN3kpl99J9g/ishRwDF\nbW0U6QKHr/xUzNO+aF92JBeidORzMN0i2m5ew/sqw7AikWdmTSce2be37BJzq1a0\nv9Nyrv3UOKRd2GAPwFt1ADuL1PbXamaLAAAAAAEC\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAu+TvI5cnwy0GTP6vL1xeIdnyUJ6H9sPH8U0XKakZSRS+jRaQ\n4AekjCd2M6tcZfx0x6Dng76qQNHf6NsfKnVfuOXLnaiaqbpn4DUsjLkK5jEGVKiD\nuEHHqVYwhz7HhzTx/pusGy7/aRvEW1g1kBZ8u82ZWV5ik9N6DPNJWDpw/HVwNhTf\n3ld33fjYRF3u5mNOS+j3cl6DcnshAGa7nSlzYwb1sD0H1sAeZZf7FVxWuhVDLsB5\nWTMk1zUtMQX8YsZM6rVTMySlRpgy1VUCQvvidDUYfX1OGpC4Fqc+gBQdCctl0Ezs\nCqpp0Ror36x91xNhGpTnaKx60MOuXHs5dSgyMwIDAQABAoIBACtKqD7PCP5TVWxQ\nEhUbdyTdjpM8s58LpPnYBUo4B/dqrCzd0iuMF0GjpfxpszRcYpvMWwtj1t5wfOKt\n+hRSTufPKob83gXVSTHDjqwtxnEbQpYm7ZJ6tYIytaOzt01TyZ4cSB9LSNXy698Q\nB+dXBw5OZNLOiG/+/dQWCgQmEvpXv5zNM/6Zvi3ZSOSp64jPgV58mH5YgxMsaEar\nbFDDoFcLK8yDAQOTl+woxs2B2n5lOrjKIZDOPu1U6h0D6lgnuFtJSNIMSgf66AJW\nZSugSJVpin1W1CUulZ4dYH7rTdCmDz9d2G1wCQ1+Oy3LQkwLlwbOWfPj+50iQrA9\nK/4FYUECgYEA3ZCrqrfR4YIUjcC8jFgStDHMniKGZ834OtP9fCixAMrZZe3l+jTm\nZGe3vDF6H/f6glZBWaEbJBOdLBsPw1TqOgUqAUOvyyIWHY0Yi+iFTchmiKN7hQ0v\np1+oARKo+WCJYg0I5eBdKLe6bWFI6IZzVfUigkqDSiFpQhTw645S//kCgYEA2Rid\nNTi8B3sHGe0IzID4vsGC+Dgo6zp1RxidR2LW9mF1vGLx+9IxJeONU3eSmX30n2D+\nKyFHAMVtbRTpAoev/FTM075oX3YkF6J05HMw3SLabl7D+yrDsCKRZ2ZNJx7Zt7fs\nEnOrVrS/03Ku/dQ4pF3YYA/AW3UAO4vU9tdqZosCgYAPFcB6WRWTEvYvSIYN0BlF\n53YU9ijMfHuAFdrWTzbt5OG0TOQxitR81Yru5zd3YbzOjuzYG13rsOIslJMYK3nf\nBWb8uw0G+YUj8e1P6T7aMuC4QNkyD9nEvYCEwi56/BWedWC7tfDhytCIje0W18CW\ng6Ab2tLhgzDVbPOSNhh0kQKBgQDGynYx5OiwhORkxhtXgAXGTtZJyssVUqtPVee3\nFXe3lljED2p75+XfRvYDZyuTZ7XXN26mOcuVljL0PsB685qfmVsRzXovZ7P2/GjD\nRAOLir2vcRFObcNRBuZUY2Xkm6hLRZxi7Q4I0GwTCCHbBjhzsgdPNz0xwfpbjFiP\nS4P/rwKBgQDSkRUQwVQJFoBXerKASqeT68ImzX4cZK0izsS1vogfDRkLyVhtbrwc\n7eFaGmEYX74n7L+qqUvvD8H11ZolhJpb9anCpaQ3y9xz4RoPoJzC5XSMIO0BMKFH\nGJiS4FqdUUv0hqk3zpuy8/5C1/A3ymo6Yct9FAp8iMqUE7hr5EWKZA==\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC75O8jlyfDLQZM\n/q8vXF4h2fJQnof2w8fxTRcpqRlJFL6NFpDgB6SMJ3Yzq1xl/HTHoOeDvqpA0d/o\n2x8qdV+45cudqJqpumfgNSyMuQrmMQZUqIO4QcepVjCHPseHNPH+m6wbLv9pG8Rb\nWDWQFny7zZlZXmKT03oM80lYOnD8dXA2FN/eV3fd+NhEXe7mY05L6PdyXoNyeyEA\nZrudKXNjBvWwPQfWwB5ll/sVXFa6FUMuwHlZMyTXNS0xBfxixkzqtVMzJKVGmDLV\nVQJC++J0NRh9fU4akLgWpz6AFB0Jy2XQTOwKqmnRGivfrH3XE2EalOdorHrQw65c\nezl1KDIzAgMBAAECggEAK0qoPs8I/lNVbFASFRt3JN2Okzyznwuk+dgFSjgH92qs\nLN3SK4wXQaOl/GmzNFxim8xbC2PW3nB84q36FFJO588qhvzeBdVJMcOOrC3GcRtC\nlibtknq1gjK1o7O3TVPJnhxIH0tI1fLr3xAH51cHDk5k0s6Ib/791BYKBCYS+le/\nnM0z/pm+LdlI5KnriM+BXnyYfliDEyxoRqtsUMOgVwsrzIMBA5OX7CjGzYHafmU6\nuMohkM4+7VTqHQPqWCe4W0lI0gxKB/roAlZlK6BIlWmKfVbUJS6Vnh1gfutN0KYP\nP13YbXAJDX47LctCTAuXBs5Z8+P7nSJCsD0r/gVhQQKBgQDdkKuqt9HhghSNwLyM\nWBK0McyeIoZnzfg60/18KLEAytll7eX6NOZkZ7e8MXof9/qCVkFZoRskE50sGw/D\nVOo6BSoBQ6/LIhYdjRiL6IVNyGaIo3uFDS+nX6gBEqj5YIliDQjl4F0ot7ptYUjo\nhnNV9SKCSoNKIWlCFPDrjlL/+QKBgQDZGJ01OLwHewcZ7QjMgPi+wYL4OCjrOnVH\nGJ1HYtb2YXW8YvH70jEl441Td5KZffSfYP4rIUcAxW1tFOkCh6/8VMzTvmhfdiQX\nonTkczDdItpuXsP7KsOwIpFnZk0nHtm3t+wSc6tWtL/Tcq791DikXdhgD8BbdQA7\ni9T212pmiwKBgA8VwHpZFZMS9i9Ihg3QGUXndhT2KMx8e4AV2tZPNu3k4bRM5DGK\n1HzViu7nN3dhvM6O7NgbXeuw4iyUkxgred8FZvy7DQb5hSPx7U/pPtoy4LhA2TIP\n2cS9gITCLnr8FZ51YLu18OHK0IiN7RbXwJaDoBva0uGDMNVs85I2GHSRAoGBAMbK\ndjHk6LCE5GTGG1eABcZO1knKyxVSq09V57cVd7eWWMQPanvn5d9G9gNnK5Nntdc3\nbqY5y5WWMvQ+wHrzmp+ZWxHNei9ns/b8aMNEA4uKva9xEU5tw1EG5lRjZeSbqEtF\nnGLtDgjQbBMIIdsGOHOyB083PTHB+luMWI9Lg/+vAoGBANKRFRDBVAkWgFd6soBK\np5PrwibNfhxkrSLOxLW+iB8NGQvJWG1uvBzt4VoaYRhfvifsv6qpS+8PwfXVmiWE\nmlv1qcKlpDfL3HPhGg+gnMLldIwg7QEwoUcYmJLgWp1RS/SGqTfOm7Lz/kLX8DfK\najphy30UCnyIypQTuGvkRYpk\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "db:ba:59:6a:50:94:8d:e4:dc:8f:92:18:d7:ff:7d:c3",
            "public_key_fingerprint_sha256": "SHA256:0qLOjreXRDyTPpKbGbBcUMYfaUy8PMMxxBbkp5+LpPQ",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC75O8jlyfDLQZM/q8vXF4h2fJQnof2w8fxTRcpqRlJFL6NFpDgB6SMJ3Yzq1xl/HTHoOeDvqpA0d/o2x8qdV+45cudqJqpumfgNSyMuQrmMQZUqIO4QcepVjCHPseHNPH+m6wbLv9pG8RbWDWQFny7zZlZXmKT03oM80lYOnD8dXA2FN/eV3fd+NhEXe7mY05L6PdyXoNyeyEAZrudKXNjBvWwPQfWwB5ll/sVXFa6FUMuwHlZMyTXNS0xBfxixkzqtVMzJKVGmDLVVQJC++J0NRh9fU4akLgWpz6AFB0Jy2XQTOwKqmnRGivfrH3XE2EalOdorHrQw65cezl1KDIz\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu+TvI5cnwy0GTP6vL1xe\nIdnyUJ6H9sPH8U0XKakZSRS+jRaQ4AekjCd2M6tcZfx0x6Dng76qQNHf6NsfKnVf\nuOXLnaiaqbpn4DUsjLkK5jEGVKiDuEHHqVYwhz7HhzTx/pusGy7/aRvEW1g1kBZ8\nu82ZWV5ik9N6DPNJWDpw/HVwNhTf3ld33fjYRF3u5mNOS+j3cl6DcnshAGa7nSlz\nYwb1sD0H1sAeZZf7FVxWuhVDLsB5WTMk1zUtMQX8YsZM6rVTMySlRpgy1VUCQvvi\ndDUYfX1OGpC4Fqc+gBQdCctl0EzsCqpp0Ror36x91xNhGpTnaKx60MOuXHs5dSgy\nMwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "8975a3521fa93a00c7376ae6d50f34af438abda4",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAq2qtzDOKS0AnT/neE6ID5nlXhDw1G2vSZH+g7oLg\nTGTPkenx5v6rKjXlx2Czw9LR7RnxwnIpP7rpFaOMnp6/l/pkSR0MP6LzJzhOHeE2\nPzD/9Ou3VKwYOCuBvtaf941mi8n1yRg9C9qZu/b9IjFisV/LI29qOLgKGGNL9t7h\nHLR+wjd03Tku++XkwtkCLSNX2gm2OGp2ExMw7w7YS9KT/xz/uKICgiiAQ0g+Ke0n\nXN4K/gbqTzRUt4/q5jixNm+yVSnO90PpAmGeYM5nYWdjd1QkvNqys7GkFvSivMQo\n3lU5OSAMWARTY8t3LIe2U1m8Bx4xc7NT3v5rfgY3h+dTbwAAA7i46/nOuOv5zgAA\nAAdzc2gtcnNhAAABAQCraq3MM4pLQCdP+d4TogPmeVeEPDUba9Jkf6DuguBMZM+R\n6fHm/qsqNeXHYLPD0tHtGfHCcik/uukVo4yenr+X+mRJHQw/ovMnOE4d4TY/MP/0\n67dUrBg4K4G+1p/3jWaLyfXJGD0L2pm79v0iMWKxX8sjb2o4uAoYY0v23uEctH7C\nN3TdOS775eTC2QItI1faCbY4anYTEzDvDthL0pP/HP+4ogKCKIBDSD4p7Sdc3gr+\nBupPNFS3j+rmOLE2b7JVKc73Q+kCYZ5gzmdhZ2N3VCS82rKzsaQW9KK8xCjeVTk5\nIAxYBFNjy3csh7ZTWbwHHjFzs1Pe/mt+BjeH51NvAAAAAwEAAQAAAQA3IuE0RX++\nJKyAdQaRmhNXFsCnsBYE8/GAkezZyw8Kg4KglHdSraewtBVsxBYObslHUokI2l+a\nOCyw4SJiAv3tjISlX8qIzYkYnGvEAKTKPqCVzxvxCEniB1x8Xdyma70ISbXdMQax\nwWahpxhU3z23f/B/PV8VT10v6wCML7SI3p8CthlUAQ+KrUlAyvtTQCV3ZjghbK3B\nmdi8XmM6Kf2acJzWMZ11f6WXzZ5S+Jg7DFbiAvmQM5/9hIQd70Tohsuf7ltiEBPb\nPfmuSsshXLNi1Hq6kdL9qt1X/gMEJXl3iZV4T1bve6+jkBxJcDwyUaqV4BDSvDqB\nUwwhf36WjKZBAAAAgEgzAbgeOmgDXRMstyAwUzER2JQpdYMUDHuZmqeSgLKL4/DQ\ndamiAss7VNb5VkuxKwJoX1TRDdsx5d43MZ778+9rRgl1Z/B+PTeVqvdgfVVUOLGg\n8zxakIBnGYubP60F5qQx8hoB14Z77zIJgohAM0Q5RhMIty7Mrtk6BDZpMscgAAAA\ngQDTX+ep/Bnj+1q4m1XrVwBjLGwvgj5aD4pVOCGqATMhc58JEkD84/r24FRlrJqN\ngJvycn1TKyEV3Jv6wlQPvWxrSOa1MHxz0gP5jk8YI3LhN4ShwSYFy5gFq+UJaQUH\nhwttPErVJKxAwulFaijy6XcabYvBcqXj6z9RXPBT54q7HQAAAIEAz5suhFH8Xyop\n+JbMfMWs58MjgcLXTd/iTvXkif91rJbIlhf4cLEocncGOv8JNgoPKfSinNWb8D57\nDxo71xqhr08tTEqTHgByX/xQ8y/esE5JwrpEGplufp0/p0qC06eAC4DObI1fqVKt\nifS87xoNByGOFNcFT1aU3wEs0P8k9vsAAAAAAQID\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAq2qtzDOKS0AnT/neE6ID5nlXhDw1G2vSZH+g7oLgTGTPkenx\n5v6rKjXlx2Czw9LR7RnxwnIpP7rpFaOMnp6/l/pkSR0MP6LzJzhOHeE2PzD/9Ou3\nVKwYOCuBvtaf941mi8n1yRg9C9qZu/b9IjFisV/LI29qOLgKGGNL9t7hHLR+wjd0\n3Tku++XkwtkCLSNX2gm2OGp2ExMw7w7YS9KT/xz/uKICgiiAQ0g+Ke0nXN4K/gbq\nTzRUt4/q5jixNm+yVSnO90PpAmGeYM5nYWdjd1QkvNqys7GkFvSivMQo3lU5OSAM\nWARTY8t3LIe2U1m8Bx4xc7NT3v5rfgY3h+dTbwIDAQABAoIBADci4TRFf74krIB1\nBpGaE1cWwKewFgTz8YCR7NnLDwqDgqCUd1Ktp7C0FWzEFg5uyUdSiQjaX5o4LLDh\nImIC/e2MhKVfyojNiRica8QApMo+oJXPG/EISeIHXHxd3KZrvQhJtd0xBrHBZqGn\nGFTfPbd/8H89XxVPXS/rAIwvtIjenwK2GVQBD4qtSUDK+1NAJXdmOCFsrcGZ2Lxe\nYzop/ZpwnNYxnXV/pZfNnlL4mDsMVuIC+ZAzn/2EhB3vROiGy5/uW2IQE9s9+a5K\nyyFcs2LUerqR0v2q3Vf+AwQleXeJlXhPVu97r6OQHElwPDJRqpXgENK8OoFTDCF/\nfpaMpkECgYEA01/nqfwZ4/tauJtV61cAYyxsL4I+Wg+KVTghqgEzIXOfCRJA/OP6\n9uBUZayajYCb8nJ9UyshFdyb+sJUD71sa0jmtTB8c9ID+Y5PGCNy4TeEocEmBcuY\nBavlCWkFB4cLbTxK1SSsQMLpRWoo8ul3Gm2LwXKl4+s/UVzwU+eKux0CgYEAz5su\nhFH8Xyop+JbMfMWs58MjgcLXTd/iTvXkif91rJbIlhf4cLEocncGOv8JNgoPKfSi\nnNWb8D57Dxo71xqhr08tTEqTHgByX/xQ8y/esE5JwrpEGplufp0/p0qC06eAC4DO\nbI1fqVKtifS87xoNByGOFNcFT1aU3wEs0P8k9vsCgYAL4B2B3VoPBvYn3QJMwIyT\nBdHmMWkTYkAhXY/2ny6iOH684buo+Z4F9MCJHdNpE8qvKmOEIq4vLj/NLNHQOJI4\nzNW5ZEn5r9jtUmN7NbKkmJvpApMCTFf0KZ4qky3nKF0p+/MwWmkbElhMwBQg4aEB\naRoq+if70CG0joYqEJ4ouQKBgAX1ZUNk+wJcOnIpGdtm7QyF3EoIJpfUmjE7+4A+\ndckrVryAGaBaZVfLtMESutfzN/YzUEuCEgS2Nl/7l8YXvJZEhn9PEKPmzWGV41jn\ngdO7m4BcSkIdLz+xEbeietjKUPGDk+knsZwxhEuWW6ndLIyM2QAeH8fkK0evR/MD\nr7LrAoGASDMBuB46aANdEyy3IDBTMRHYlCl1gxQMe5map5KAsovj8NB1qaICyztU\n1vlWS7ErAmhfVNEN2zHl3jcxnvvz72tGCXVn8H49N5Wq92B9VVQ4saDzPFqQgGcZ\ni5s/rQXmpDHyGgHXhnvvMgmCiEAzRDlGEwi3Lsyu2ToENmkyxyA=\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCraq3MM4pLQCdP\n+d4TogPmeVeEPDUba9Jkf6DuguBMZM+R6fHm/qsqNeXHYLPD0tHtGfHCcik/uukV\no4yenr+X+mRJHQw/ovMnOE4d4TY/MP/067dUrBg4K4G+1p/3jWaLyfXJGD0L2pm7\n9v0iMWKxX8sjb2o4uAoYY0v23uEctH7CN3TdOS775eTC2QItI1faCbY4anYTEzDv\nDthL0pP/HP+4ogKCKIBDSD4p7Sdc3gr+BupPNFS3j+rmOLE2b7JVKc73Q+kCYZ5g\nzmdhZ2N3VCS82rKzsaQW9KK8xCjeVTk5IAxYBFNjy3csh7ZTWbwHHjFzs1Pe/mt+\nBjeH51NvAgMBAAECggEANyLhNEV/viSsgHUGkZoTVxbAp7AWBPPxgJHs2csPCoOC\noJR3Uq2nsLQVbMQWDm7JR1KJCNpfmjgssOEiYgL97YyEpV/KiM2JGJxrxACkyj6g\nlc8b8QhJ4gdcfF3cpmu9CEm13TEGscFmoacYVN89t3/wfz1fFU9dL+sAjC+0iN6f\nArYZVAEPiq1JQMr7U0Ald2Y4IWytwZnYvF5jOin9mnCc1jGddX+ll82eUviYOwxW\n4gL5kDOf/YSEHe9E6IbLn+5bYhAT2z35rkrLIVyzYtR6upHS/ardV/4DBCV5d4mV\neE9W73uvo5AcSXA8MlGqleAQ0rw6gVMMIX9+loymQQKBgQDTX+ep/Bnj+1q4m1Xr\nVwBjLGwvgj5aD4pVOCGqATMhc58JEkD84/r24FRlrJqNgJvycn1TKyEV3Jv6wlQP\nvWxrSOa1MHxz0gP5jk8YI3LhN4ShwSYFy5gFq+UJaQUHhwttPErVJKxAwulFaijy\n6XcabYvBcqXj6z9RXPBT54q7HQKBgQDPmy6EUfxfKin4lsx8xaznwyOBwtdN3+JO\n9eSJ/3WslsiWF/hwsShydwY6/wk2Cg8p9KKc1ZvwPnsPGjvXGqGvTy1MSpMeAHJf\n/FDzL96wTknCukQamW5+nT+nSoLTp4ALgM5sjV+pUq2J9LzvGg0HIY4U1wVPVpTf\nASzQ/yT2+wKBgAvgHYHdWg8G9ifdAkzAjJMF0eYxaRNiQCFdj/afLqI4frzhu6j5\nngX0wIkd02kTyq8qY4Qiri8uP80s0dA4kjjM1blkSfmv2O1SY3s1sqSYm+kCkwJM\nV/QpniqTLecoXSn78zBaaRsSWEzAFCDhoQFpGir6J/vQIbSOhioQnii5AoGABfVl\nQ2T7Alw6cikZ22btDIXcSggml9SaMTv7gD51yStWvIAZoFplV8u0wRK61/M39jNQ\nS4ISBLY2X/uXxhe8lkSGf08Qo+bNYZXjWOeB07ubgFxKQh0vP7ERt6J62MpQ8YOT\n6SexnDGES5Zbqd0sjIzZAB4fx+QrR69H8wOvsusCgYBIMwG4HjpoA10TLLcgMFMx\nEdiUKXWDFAx7mZqnkoCyi+Pw0HWpogLLO1TW+VZLsSsCaF9U0Q3bMeXeNzGe+/Pv\na0YJdWfwfj03lar3YH1VVDixoPM8WpCAZxmLmz+tBeakMfIaAdeGe+8yCYKIQDNE\nOUYTCLcuzK7ZOgQ2aTLHIA==\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "23:90:2d:08:87:7c:f9:50:6c:1e:a5:2b:56:86:10:1e",
            "public_key_fingerprint_sha256": "SHA256:DHqGgCRK6e4inQZlbqailhvfjH7bFPj1OM/+E31s3YY",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCraq3MM4pLQCdP+d4TogPmeVeEPDUba9Jkf6DuguBMZM+R6fHm/qsqNeXHYLPD0tHtGfHCcik/uukVo4yenr+X+mRJHQw/ovMnOE4d4TY/MP/067dUrBg4K4G+1p/3jWaLyfXJGD0L2pm79v0iMWKxX8sjb2o4uAoYY0v23uEctH7CN3TdOS775eTC2QItI1faCbY4anYTEzDvDthL0pP/HP+4ogKCKIBDSD4p7Sdc3gr+BupPNFS3j+rmOLE2b7JVKc73Q+kCYZ5gzmdhZ2N3VCS82rKzsaQW9KK8xCjeVTk5IAxYBFNjy3csh7ZTWbwHHjFzs1Pe/mt+BjeH51Nv\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq2qtzDOKS0AnT/neE6ID\n5nlXhDw1G2vSZH+g7oLgTGTPkenx5v6rKjXlx2Czw9LR7RnxwnIpP7rpFaOMnp6/\nl/pkSR0MP6LzJzhOHeE2PzD/9Ou3VKwYOCuBvtaf941mi8n1yRg9C9qZu/b9IjFi\nsV/LI29qOLgKGGNL9t7hHLR+wjd03Tku++XkwtkCLSNX2gm2OGp2ExMw7w7YS9KT\n/xz/uKICgiiAQ0g+Ke0nXN4K/gbqTzRUt4/q5jixNm+yVSnO90PpAmGeYM5nYWdj\nd1QkvNqys7GkFvSivMQo3lU5OSAMWARTY8t3LIe2U1m8Bx4xc7NT3v5rfgY3h+dT\nbwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_self_signed_cert",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "cert_signing",
              "crl_signing"
            ],
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQfmjfiIJxY2pOdHdec+I5OzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cucHJkLnZwbi5jYTAeFw0yNDExMjIw\nMDExMjlaFw0zNDExMjAwMDExMjlaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5wcmQudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1N8Q\nZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1PetVMte7upd6DK2r40ha1pk\na/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0/c5YXeK2dU4f0z214IIH\nPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3npAvizy0zhIfTT2ZTDd8f\ni/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5H7gLbOtI65/2v7RyhaV1\nCCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+qL3kr/G8xYJHLA3/DNM1z\nb88UerFBzEepRFSe4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQUgJ4xjmwOPsZv8Imr/SORJ5DRsf4wDQYJKoZIhvcN\nAQELBQADggEBAG8PMNClPlVE/qXk91Iz01uGHlLWy5AITwJWKpXRQDUK584o/9D5\ng2n+L1Tt9sfXXmZheCAq+D9gpliIllyVWCJTUJT2uu8BC1j8H52SaSSyjWjuh/Oc\nssMCEZIpv7sjImhT0IR13+YBXj/cbyNaIVmEcNAr2meAMyrD5s0m0yzfbYxxf/pP\nu6zgyjYv2sIHqY/h5PO1G68pJz+H699SEM/3qrs1P0rBq+nnyqPZgtqBVU6dy5n3\nG5ggwwY9EAP+iDVYK7D/prTToTehCsRlv+i7/ASGtHpNUz5mnKa63QvPXu5sIC5g\nS79itgCrtcJOeRmN6d/OT90Q72iPO/cwFkc=\n-----END CERTIFICATE-----\n",
            "dns_names": null,
            "early_renewal_hours": 0,
            "id": "168027260134928867691382576791439948091",
            "ip_addresses": null,
            "is_ca_certificate": true,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1N8QZdpgMjsmjIsPSS/YcBDPSWKj+CJ+noBU5Y5fkD9J1Pet\nVMte7upd6DK2r40ha1pka/acFuvSAiNy/JhbWQCfVka1h/3IyYhz8a/+82bgw1y0\n/c5YXeK2dU4f0z214IIHPkPhK7rpSfCQCBRcO6vM6ZePJUy1vNdO3A8z6KuhCI3n\npAvizy0zhIfTT2ZTDd8fi/61ICD8D26Idt2tHRuCyWGc2em8IAZTzmZIFswUnij5\nH7gLbOtI65/2v7RyhaV1CCnQxvTMxVBcsl8PZFGkcpQss1yeIaSfXS8hpqJy1b+q\nL3kr/G8xYJHLA3/DNM1zb88UerFBzEepRFSe4QIDAQABAoIBAQDSF0lOzOUODlTw\ndrpiaAc8K0r5yZG87wZ6lnuzh/2HFv9eYge+3WzXbZW6+npU7nwiQLdF2sGY2auO\nEsCEzjWxtKyNcQHusql9Rd/wk9uTDGEeTxwONp3+IygixDUivhAIASz25fWQvEtM\nf1EXuEiDV/7IOJ29mWTweKtLAvIfWZ591Z04zzY4MsibJcmK4L9UjhhcMrbouKA3\nCDiq50WbBcD7bQX/Ku+UVlxXzRi7EsZaEMWdioTFXpaGaVxsY8zC+GpUEentlAeu\n04juUeInekrw7strxazUbWEui7MLOeSiYnOVnB9wRHTSSnTY41bIH5GvKUuubbRv\nNhna5eZlAoGBAPrLu11MiGmabE/r2omLx4F9VKANPTA2h8/SY6H0oZMNu3HWUlSp\n9duwGlLj69snbo4VM8MEJxbsHVOw2eHTJ7c17cnLWT7ukb7gR+sUmVrc/w2VnHF9\njwc5H2X61cLvHyfSKHJ10iItFX/PXMuju6f5u12QEzicaI9tZYxGHrh/AoGBANlJ\n3wPzPiamnzA8tsCvIRdyozMUPrbwPdM3D3weygeRUbL1+QFdOSQFXjCZksa7GXXI\nKjBdEZbO/bri6sSdlMP98F1LAboGFbhZeBrJ7Vx/9Yy00eiInA3dt/Am1rvSi6QI\nn/HnZh3vLBQhpiIXXyJUUQ1dljVHLKDDKHrw+/ifAoGAKgeQi88yoTf+5Nnq0tg5\nBAtj7jqpwXWyBvMEPXUIyuMnQamgPI4LJNj7YF7P/Pc7wNXuycTdZCsHsynVKdJA\nOqTwB7xrZW+Hv0xI4S2fkamtmLI0+JQJLzW0fFuwDS4Ts5G1s5DpOU8C5lty+rGi\n1kC01LY7cmZL45V6yipKJbMCgYAK4aordnj8UofSUJgOWjbcB7+ohTEG1E0kULOT\n0a7oZhyjS7ImoVaFOUeYQ3iYPzJtNZL3TRHebYtDWq3LHuEeV487/M+fU0KvMrvT\nC525bicL3tpMPNsjzqCxhCBo04hutIfeA2qXwSyB7ZV2S5lWDMbqVm95R5Eyk9Np\nJLxZnQKBgQCk5bSiBb39hat46JTU1z1DIeoyJCAFsZ7OJ3ezaApXVvw4S+CA/DAs\nhSihkhwetVR56BcggI4z1X87NegtMEG+czAni3QecAo6ceepIEgPWkq3S38qjSRE\nX1kSYHfcFNz1tMpek7YLnO02AIT7fxP+jSAqcGHepPDSH0E84ogjig==\n-----END RSA PRIVATE KEY-----\n",
            "ready_for_renewal": false,
            "set_authority_key_id": false,
            "set_subject_key_id": false,
            "subject": [
              {
                "common_name": "wg.prd.vpn.ca",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null,
            "validity_end_time": "2034-11-19T19:11:29.811208-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-21T19:11:29.811208-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca"
          ]
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "module.eks.module.self_managed_node_group.var.platform",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.eks.module.eks_managed_node_group[\"one\"].module.user_data.null_resource.validate_cluster_service_cidr",
          "status": "pass"
        }
      ]
    }
  ]
}

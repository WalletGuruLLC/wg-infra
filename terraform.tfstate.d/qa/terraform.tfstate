{
  "version": 4,
  "terraform_version": "1.9.8",
  "serial": 761,
  "lineage": "df3b2776-6b66-4c5f-4764-81265a19e814",
  "outputs": {
    "cluster_endpoint": {
      "value": "https://146CD5DFB6FE6F97FEFA82AFF8F43E57.gr7.us-east-2.eks.amazonaws.com",
      "type": "string"
    },
    "cluster_name": {
      "value": "eks-fYrRWZOz",
      "type": "string"
    },
    "cluster_security_group_id": {
      "value": "sg-0bafedebfb3963747",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "us-east-2"
            ],
            "id": "us-east-2",
            "names": [
              "us-east-2a",
              "us-east-2b",
              "us-east-2c"
            ],
            "state": null,
            "timeouts": null,
            "zone_ids": [
              "use2-az1",
              "use2-az2",
              "use2-az3"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "eks",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-fYrRWZOz",
            "name": "eks-fYrRWZOz",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVzNNRUJMU1BNTTNNNlBIVSUyRjIwMjQxMjAzJTJGdXMtZWFzdC0yJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDEyMDNUMTY1OTI2WiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT1jM2RkZmFjYWRjODgwM2I0ZGUxNjY3NDAzYzA1NzM3ZGI5NzM1OThhMjNiODcwODM0OWM4MjFmN2M5MjJiOGMy"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_sqs_queue",
      "name": "queue_notifications",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sqs:us-east-2:471112703134:paystreme-notifications-qa",
            "content_based_deduplication": false,
            "deduplication_scope": "",
            "delay_seconds": 0,
            "fifo_queue": false,
            "fifo_throughput_limit": "",
            "id": "https://sqs.us-east-2.amazonaws.com/471112703134/paystreme-notifications-qa",
            "kms_data_key_reuse_period_seconds": 300,
            "kms_master_key_id": "",
            "max_message_size": 262144,
            "message_retention_seconds": 60,
            "name": "paystreme-notifications-qa",
            "name_prefix": "",
            "policy": "",
            "receive_wait_time_seconds": 0,
            "redrive_allow_policy": "",
            "redrive_policy": "",
            "sqs_managed_sse_enabled": true,
            "tags": {},
            "tags_all": {},
            "url": "https://sqs.us-east-2.amazonaws.com/471112703134/paystreme-notifications-qa",
            "visibility_timeout_seconds": 30
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "vpn",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:subnet/subnet-01859c473b71b2d72",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.8.0/22",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-01859c473b71b2d72",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "471112703134",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "VPN subnet for client connections"
            },
            "tags_all": {
              "Name": "VPN subnet for client connections"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "resources_name",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": "0",
          "schema_version": 0,
          "attributes": {
            "id": "qa",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "qa",
                "resource_version": "3046",
                "uid": "0346cb0e-4d36-4273-9396-196f77e433f4"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service_v1",
      "name": "traefik-dashboard",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "traefik/traefik-dashboard",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "traefik-dashboard",
                "namespace": "traefik",
                "resource_version": "3316",
                "uid": "a2a4a303-03ac-462e-a95f-04bca8ada474"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.112.252",
                "cluster_ips": [
                  "172.20.112.252"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 9000,
                    "protocol": "TCP",
                    "target_port": "9000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/name": "traefik"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "suffix",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "fYrRWZOz",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "fYrRWZOz",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.cognito",
      "mode": "managed",
      "type": "aws_cognito_user_pool",
      "name": "user_pool",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_recovery_setting": [
              {
                "recovery_mechanism": [
                  {
                    "name": "verified_email",
                    "priority": 1
                  },
                  {
                    "name": "verified_phone_number",
                    "priority": 2
                  }
                ]
              }
            ],
            "admin_create_user_config": [
              {
                "allow_admin_create_user_only": false,
                "invite_message_template": []
              }
            ],
            "alias_attributes": null,
            "arn": "arn:aws:cognito-idp:us-east-2:471112703134:userpool/us-east-2_6jXHbRymJ",
            "auto_verified_attributes": [],
            "creation_date": "2024-08-30T16:15:22Z",
            "custom_domain": "",
            "deletion_protection": "ACTIVE",
            "device_configuration": [],
            "domain": "",
            "email_configuration": [
              {
                "configuration_set": "",
                "email_sending_account": "DEVELOPER",
                "from_email_address": "no-reply@walletguru.co",
                "reply_to_email_address": "",
                "source_arn": "arn:aws:ses:us-east-2:471112703134:identity/walletguru.co"
              }
            ],
            "email_verification_message": "\u003c!DOCTYPE html\u003e  \u003chtml lang='en'\u003e  \u003chead\u003e  \u003cmeta charset='UTF-8'\u003e  \u003cmeta name='viewport' content='width=device-width, initial-scale=1.0'\u003e  \u003ctitle\u003e\u003c/title\u003e  \u003cstyle\u003e        body {            font-family: Arial, sans-serif;            background-color: #f4f4f4;            margin: 0;            padding: 0;        }        .email-container {            margin: 0 auto;            background-color: #ffffff;            padding: 20px;        }        .header {            display: flex;            justify-content: center; /* Center content horizontally */            align-items: center; /* Center content vertically */            padding-bottom: 20px;        }        .header img {          width: 50px;          height: 50px;          margin-right: 10px;        }        .content {            padding: 20px;            text-align: left;        }        .content h1 {            color: #000000;        }        .content p {            color: #333333;            font-size: 16px;            line-height: 1.5;        }        .activation-code {            font-weight: bold;            color: #000000;        }        .footer {            text-align: left;            color: #999999;            font-size: 12px;            padding-top: 20px;            padding-left: 20px;        }  \u003c/style\u003e  \u003c/head\u003e  \u003cbody\u003e  \u003cdiv class='email-container'\u003e  \u003cdiv class='header'\u003e  \u003cimg src='  https://walletguru-dev.s3.us-east-2.amazonaws.com/logo.png'  alt='Wallet Guru Logo'\u003e  \u003ch2\u003eWallet guru\u003c/h2\u003e  \u003c/div\u003e  \u003cdiv class='content'\u003e  \u003ch1\u003eHi,\u003c/h1\u003e  \u003cp\u003eWe received a request to update the password for your account.\u003c/p\u003e  \u003cp\u003eTo proceed, please use the following verification code (OTP): \u003cspan class='activation-code'\u003e{####}\u003c/span\u003e\u003c/p\u003e  \u003cbr\u003e  \u003cp\u003eThis OTP is valid for the next 05:00 minutes.\u003c/p\u003e  \u003c/div\u003e  \u003cdiv class='footer'\u003e  \u003cp\u003eIf you did not request this update, please disregard this email.\u003c/p\u003e  \u003cp\u003eIf you need further assistance, don't hesitate to contact us.\u003c/p\u003e  \u003cp\u003eBest regards, \u003cbr\u003e Wallet Guru Support Team\u003c/p\u003e  \u003c/div\u003e  \u003c/div\u003e  \u003c/body\u003e  \u003c/html\u003e",
            "email_verification_subject": "Verification Code to Update Your Password",
            "endpoint": "cognito-idp.us-east-2.amazonaws.com/us-east-2_6jXHbRymJ",
            "estimated_number_of_users": 26,
            "id": "us-east-2_6jXHbRymJ",
            "lambda_config": [],
            "last_modified_date": "2024-08-30T23:35:52Z",
            "mfa_configuration": "OFF",
            "name": "user-auth",
            "password_policy": [
              {
                "minimum_length": 8,
                "require_lowercase": true,
                "require_numbers": true,
                "require_symbols": true,
                "require_uppercase": true,
                "temporary_password_validity_days": 7
              }
            ],
            "schema": [
              {
                "attribute_data_type": "String",
                "developer_only_attribute": false,
                "mutable": true,
                "name": "email",
                "number_attribute_constraints": [],
                "required": true,
                "string_attribute_constraints": [
                  {
                    "max_length": "256",
                    "min_length": "1"
                  }
                ]
              },
              {
                "attribute_data_type": "String",
                "developer_only_attribute": false,
                "mutable": true,
                "name": "name",
                "number_attribute_constraints": [],
                "required": true,
                "string_attribute_constraints": [
                  {
                    "max_length": "256",
                    "min_length": "1"
                  }
                ]
              }
            ],
            "sms_authentication_message": "",
            "sms_configuration": [],
            "sms_verification_message": "",
            "software_token_mfa_configuration": [],
            "tags": {},
            "tags_all": {},
            "user_attribute_update_settings": [],
            "user_pool_add_ons": [],
            "username_attributes": [
              "email"
            ],
            "username_configuration": [],
            "verification_message_template": [
              {
                "default_email_option": "CONFIRM_WITH_CODE",
                "email_message": "\u003c!DOCTYPE html\u003e  \u003chtml lang='en'\u003e  \u003chead\u003e  \u003cmeta charset='UTF-8'\u003e  \u003cmeta name='viewport' content='width=device-width, initial-scale=1.0'\u003e  \u003ctitle\u003e\u003c/title\u003e  \u003cstyle\u003e        body {            font-family: Arial, sans-serif;            background-color: #f4f4f4;            margin: 0;            padding: 0;        }        .email-container {            margin: 0 auto;            background-color: #ffffff;            padding: 20px;        }        .header {            display: flex;            justify-content: center; /* Center content horizontally */            align-items: center; /* Center content vertically */            padding-bottom: 20px;        }        .header img {          width: 50px;          height: 50px;          margin-right: 10px;        }        .content {            padding: 20px;            text-align: left;        }        .content h1 {            color: #000000;        }        .content p {            color: #333333;            font-size: 16px;            line-height: 1.5;        }        .activation-code {            font-weight: bold;            color: #000000;        }        .footer {            text-align: left;            color: #999999;            font-size: 12px;            padding-top: 20px;            padding-left: 20px;        }  \u003c/style\u003e  \u003c/head\u003e  \u003cbody\u003e  \u003cdiv class='email-container'\u003e  \u003cdiv class='header'\u003e  \u003cimg src='  https://walletguru-dev.s3.us-east-2.amazonaws.com/logo.png'  alt='Wallet Guru Logo'\u003e  \u003ch2\u003eWallet guru\u003c/h2\u003e  \u003c/div\u003e  \u003cdiv class='content'\u003e  \u003ch1\u003eHi,\u003c/h1\u003e  \u003cp\u003eWe received a request to update the password for your account.\u003c/p\u003e  \u003cp\u003eTo proceed, please use the following verification code (OTP): \u003cspan class='activation-code'\u003e{####}\u003c/span\u003e\u003c/p\u003e  \u003cbr\u003e  \u003cp\u003eThis OTP is valid for the next 05:00 minutes.\u003c/p\u003e  \u003c/div\u003e  \u003cdiv class='footer'\u003e  \u003cp\u003eIf you did not request this update, please disregard this email.\u003c/p\u003e  \u003cp\u003eIf you need further assistance, don't hesitate to contact us.\u003c/p\u003e  \u003cp\u003eBest regards, \u003cbr\u003e Wallet Guru Support Team\u003c/p\u003e  \u003c/div\u003e  \u003c/div\u003e  \u003c/body\u003e  \u003c/html\u003e",
                "email_message_by_link": "",
                "email_subject": "Verification Code to Update Your Password",
                "email_subject_by_link": "",
                "sms_message": ""
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.cognito",
      "mode": "managed",
      "type": "aws_cognito_user_pool_client",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_token_validity": 120,
            "allowed_oauth_flows": [],
            "allowed_oauth_flows_user_pool_client": false,
            "allowed_oauth_scopes": [],
            "analytics_configuration": [],
            "auth_session_validity": 3,
            "callback_urls": [],
            "client_secret": "129898pq55e121k3kf1nn1f1v09hn4er82tpdjb43un29tdoo8ea",
            "default_redirect_uri": "",
            "enable_propagate_additional_user_context_data": false,
            "enable_token_revocation": true,
            "explicit_auth_flows": [
              "ALLOW_ADMIN_USER_PASSWORD_AUTH",
              "ALLOW_CUSTOM_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH",
              "ALLOW_USER_PASSWORD_AUTH",
              "ALLOW_USER_SRP_AUTH"
            ],
            "generate_secret": true,
            "id": "7jp59mt3n71asogsrchi3elqcg",
            "id_token_validity": 60,
            "logout_urls": [],
            "name": "cognito-client",
            "prevent_user_existence_errors": "ENABLED",
            "read_attributes": [],
            "refresh_token_validity": 30,
            "supported_identity_providers": [],
            "token_validity_units": [
              {
                "access_token": "minutes",
                "id_token": "minutes",
                "refresh_token": "days"
              }
            ],
            "user_pool_id": "us-east-2_6jXHbRymJ",
            "write_attributes": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_secret"
              }
            ]
          ],
          "dependencies": [
            "module.cognito.aws_cognito_user_pool.user_pool"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Attempts-AlarmHigh-1b5dcede-f0e9-4ea9-9a02-be4388b6b19c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Attempts-AlarmLow-e34dda10-b7a4-4efc-b5d7-5fd9e8550522",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Attempts-ProvisionedCapacityHigh-87b064ac-2503-4252-871e-f4aed9f6cc77",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Attempts-ProvisionedCapacityLow-a407650f-5f9e-4c23-bc99-cf257b36271b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:2c42f85b-b122-4a87-b8cb-97b68b81772e:resource/dynamodb/table/Attempts:policyName/DynamoDBReadCapacityUtilization:table/Attempts",
            "id": "DynamoDBReadCapacityUtilization:table/Attempts",
            "name": "DynamoDBReadCapacityUtilization:table/Attempts",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Attempts",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Attempts-AlarmHigh-5129ef07-2a1f-47c2-95f1-5914466ea44a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Attempts-AlarmLow-4b26bd06-dc0b-487a-94b0-e192e2b7ecfe",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Attempts-ProvisionedCapacityHigh-fd2c563e-f4db-407a-aa4e-a394c8bef42b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Attempts-ProvisionedCapacityLow-2e57d372-8ad6-4f7d-8dec-96f3c9d02416"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:f8eaed87-f0d2-4d0e-87eb-bad49e16ea5c:resource/dynamodb/table/Attempts:policyName/DynamoDBWriteCapacityUtilization:table/Attempts",
            "id": "DynamoDBWriteCapacityUtilization:table/Attempts",
            "name": "DynamoDBWriteCapacityUtilization:table/Attempts",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Attempts",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d262c42f85bb1224a87b8cb97b68b81772e",
            "id": "table/Attempts",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Attempts",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26f8eaed87f0d24d0e87ebbad49e16ea5c",
            "id": "table/Attempts",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Attempts",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Attempts",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Attempts",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Attempts",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "Attempts"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "Attempts"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments-AlarmHigh-495114b3-0df1-4915-9474-fb296ad4ccd4",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments-AlarmLow-110cc5cc-d1cf-434e-99c8-542ad079ea66",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityHigh-3ff529f1-86fd-4841-8dd6-23082bacdae2",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityLow-9ef3f923-92fd-48d2-8bbe-eb1ec15e9425"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:fda1608e-8ad7-418a-8093-0069aaded768:resource/dynamodb/table/ClearPayments:policyName/DynamoDBReadCapacityUtilization:table/ClearPayments",
            "id": "DynamoDBReadCapacityUtilization:table/ClearPayments",
            "name": "DynamoDBReadCapacityUtilization:table/ClearPayments",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmHigh-ed0e2451-73c3-48a6-bc94-b3b4f9b2d274",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmLow-b5e93f03-006c-441d-a998-3a20a58e9e51",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-981006d9-01b3-4e6a-8bbf-1264e7f66f9a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityLow-82facb72-1ed6-407c-be95-5b0b1619de3f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:1a3acca8-2d5e-4fc9-8376-f4726820991b:resource/dynamodb/table/ClearPayments/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments-AlarmHigh-403c04f4-662d-416b-b2ed-f6a885e8b509",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments-AlarmLow-53ea8b6b-3e34-4162-9e86-250b05091bb6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityHigh-3f818834-95da-4078-b861-79801452e8be",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityLow-2c69faf8-d3ab-4013-9ab7-15db8e25e35a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:c6dd9ff9-dbc2-467a-b288-c73481bb0e25:resource/dynamodb/table/ClearPayments:policyName/DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "id": "DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "name": "DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmHigh-7899f081-407c-49ba-aac8-72be95f1097f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmLow-b0a862ae-621e-47d3-863e-41168290658d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-cdb1c679-9eec-4a30-813f-162ab11dc45b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityLow-def9ce1a-ebb3-45da-895c-63fa7e472cbc"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:d69b27b1-1e63-425a-999b-1b641d153e67:resource/dynamodb/table/ClearPayments/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26fda1608e8ad7418a80930069aaded768",
            "id": "table/ClearPayments",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d261a3acca82d5e4fc98376f4726820991b",
            "id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26c6dd9ff9dbc2467ab288c73481bb0e25",
            "id": "table/ClearPayments",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26d69b27b11e63425a999b1b641d153e67",
            "id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/ClearPayments",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "ClearPayments",
            "import_table": [],
            "local_secondary_index": [],
            "name": "ClearPayments",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "ClearPayments"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "ClearPayments"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations-AlarmHigh-61276380-07cf-4064-b6f9-2a5a1333dfbb",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations-AlarmLow-1673b9ac-36ba-4840-afc8-2cd5c51653ed",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityHigh-811c5775-3719-4072-9456-7bcbe2efa029",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityLow-d319ac1d-9ac2-41c8-84f8-76b42a9f25ba"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:aec0037c-a1b5-4ef4-b42c-aa0450949205:resource/dynamodb/table/FeeConfigurations:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmHigh-033eecfd-e74f-40e6-ab87-a876fb0b645f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmLow-12e60b81-bb0b-4d3e-b814-d218132a7e5a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityHigh-d9045e97-dcd2-4d6f-8a53-983160309c21",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityLow-470d2385-ee27-426e-ab83-7160aa104af1"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:6dd04dd1-5db5-4ec2-b733-18fc495ec29b:resource/dynamodb/table/FeeConfigurations/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmHigh-3fb2d338-f526-4bdb-83a2-a6cb574b2571",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmLow-50a37144-5361-4a72-81ad-927f229cd625",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-31e1e6a7-ef00-49ce-aca4-1e021e3176d5",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityLow-5d1b9bcc-d645-42da-9b6f-63c72f5f855e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:0dfb216f-74cb-4a0c-85fa-692516b926ee:resource/dynamodb/table/FeeConfigurations/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations-AlarmHigh-e5db9539-8d80-4d64-987f-03347eaf9640",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations-AlarmLow-67d56d82-f8ab-4d63-a4d5-e08059a65a56",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityHigh-a65477da-9e85-4860-8256-1a01d55dfda2",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityLow-2550bde1-6ba9-4217-b365-11b6ba13f99c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:5647bc65-b8e8-4191-8476-8a42eaacafdd:resource/dynamodb/table/FeeConfigurations:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmHigh-fcf1b8a8-095f-49a3-88ae-9d48d74ffc3d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmLow-b1568c28-615d-4478-a41d-6b3af3c75928",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityHigh-b89220e9-01aa-45ee-877f-5cf88eda958b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityLow-52d2a281-df3a-48bb-bc66-f7802add433e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:dca84376-8b32-49a6-a0a9-98a7663d2696:resource/dynamodb/table/FeeConfigurations/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmHigh-7adfa794-1a69-4b1b-96d1-41ec8e239732",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmLow-e5cb9d79-0740-4d44-ae79-d0456f077fdf",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-30e4dbbc-26c6-4097-93e1-5ec6569c24d1",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityLow-007e09c5-679c-4077-9f54-4467a354cb3d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:f1161929-6099-4a7d-9b0b-3fb057aac2db:resource/dynamodb/table/FeeConfigurations/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26aec0037ca1b54ef4b42caa0450949205",
            "id": "table/FeeConfigurations",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d266dd04dd15db54ec2b73318fc495ec29b",
            "id": "table/FeeConfigurations/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d260dfb216f74cb4a0c85fa692516b926ee",
            "id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d265647bc65b8e8419184768a42eaacafdd",
            "id": "table/FeeConfigurations",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26dca843768b3249a6a0a998a7663d2696",
            "id": "table/FeeConfigurations/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26f116192960994a7d9b0b3fb057aac2db",
            "id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/FeeConfigurations",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "FeeConfigurations",
            "import_table": [],
            "local_secondary_index": [],
            "name": "FeeConfigurations",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "FeeConfigurations"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "FeeConfigurations"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules-AlarmHigh-a685c665-f863-4dfa-a35c-15bc426edbf0",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules-AlarmLow-218306c9-79d9-4fd3-9619-f41d2acb01af",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules-ProvisionedCapacityHigh-5b7ea960-e152-4b85-aa78-f695f3b0666c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules-ProvisionedCapacityLow-4c792c3f-61cd-4da9-b558-41facf3b6f92"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:dda380a5-3117-428d-b483-164b24433032:resource/dynamodb/table/Modules:policyName/DynamoDBReadCapacityUtilization:table/Modules",
            "id": "DynamoDBReadCapacityUtilization:table/Modules",
            "name": "DynamoDBReadCapacityUtilization:table/Modules",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmHigh-70006996-c441-4f23-ba83-cb3db51b59c3",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmLow-e609f536-6a99-43c2-8c1e-67eb6a0f4666",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityHigh-5f2ea26d-9c70-4977-b1c7-2a4f27c9c025",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityLow-3dc79e43-6c27-4c05-a304-1353013918d5"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:2db8d0ad-f9f2-44af-939b-6c4cca26f48a:resource/dynamodb/table/Modules/index/BelongsIndex:policyName/DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules-AlarmHigh-07440909-3988-4a90-9a76-45596f3aa45d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules-AlarmLow-509eaaf0-6507-47de-9918-95b7ff6e20e6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules-ProvisionedCapacityHigh-7075e871-da1b-4e41-bc3b-844e83cfe562",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules-ProvisionedCapacityLow-79c13eac-f622-4378-89ed-e0697d8be51d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:f389484f-320f-4030-9305-cdfb333ef7c7:resource/dynamodb/table/Modules:policyName/DynamoDBWriteCapacityUtilization:table/Modules",
            "id": "DynamoDBWriteCapacityUtilization:table/Modules",
            "name": "DynamoDBWriteCapacityUtilization:table/Modules",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmHigh-1cee797f-0982-4dc3-b249-60721771e245",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmLow-6c014343-e1ad-41b8-9f55-acc8207e4451",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityHigh-c98fa9a6-a522-4321-bdab-53a818452f67",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityLow-ec94a0ad-9be0-4fcd-a4dd-8c449283de61"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:9801b37a-4875-4694-8807-5589dc154dd5:resource/dynamodb/table/Modules/index/BelongsIndex:policyName/DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26dda380a53117428db483164b24433032",
            "id": "table/Modules",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d262db8d0adf9f244af939b6c4cca26f48a",
            "id": "table/Modules/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules/index/BelongsIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26f389484f320f40309305cdfb333ef7c7",
            "id": "table/Modules",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d269801b37a4875469488075589dc154dd5",
            "id": "table/Modules/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules/index/BelongsIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Modules",
            "attribute": [
              {
                "name": "Belongs",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Belongs",
                "name": "BelongsIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Modules",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Modules",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "Modules"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "Modules"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings-AlarmHigh-342fb916-1f8e-427e-97ea-272bb9e7358e",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings-AlarmLow-32e2dca6-07bd-415c-af6e-c25082c861c6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityHigh-7444cc75-a92e-442e-a081-0e40106ef0ea",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityLow-e62763d1-f552-4d27-a73d-504a3577dc05"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:e2badd24-a8d0-4f02-bdbf-70e9ceff80e5:resource/dynamodb/table/NotificationSettings:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmHigh-f0331eb5-ae78-4a0f-a9b3-0a81c09789ba",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmLow-c6ed8504-f70c-4910-a63d-0ecf6f0a591c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityHigh-7ba0b3e1-5679-4da7-bba4-35428ac3f45b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityLow-f678a715-62b5-42ae-b720-ea7312ccd1f2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:2be5b0ad-53fb-425e-8ccb-39ed630ead21:resource/dynamodb/table/NotificationSettings/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmHigh-671f0fa3-2cc8-4821-b791-ab2f7752eb75",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmLow-0e12eaa9-fd18-4781-a945-ea605bb3eacf",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityHigh-de286115-a3d8-40bf-bdc9-264a90be1a2a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityLow-332518db-c8d7-4a74-86a3-fc10f6c87b04"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:6ab9eb59-82c5-4e09-a621-811bf0412c35:resource/dynamodb/table/NotificationSettings/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings-AlarmHigh-7f5cb59b-f175-4a2d-9d96-39857620bb6d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings-AlarmLow-3bcc36fc-b183-4bc2-ae80-b1bf5817f168",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityHigh-453f1391-895b-445c-9444-39428b4c370c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityLow-c8a17b6b-b2b6-4274-96ed-0462daf5fb62"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:c943d616-9f9a-4c92-a709-07689b2bd5bf:resource/dynamodb/table/NotificationSettings:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmHigh-b8c694f0-25a7-42ad-ae26-25b6066c7003",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmLow-241f566a-29d8-452b-9834-7f19c870df9d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityHigh-cf4d61c0-0c02-4703-b8f3-d8249bc9b5a2",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityLow-672bbb7e-c57c-4f2e-ba4d-91a155b78a1c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:8a1fd9d7-f477-492c-869c-ce1d349d898c:resource/dynamodb/table/NotificationSettings/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmHigh-1096aa05-08f9-41f7-a56a-82a2ed454e18",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmLow-7b979457-cf05-467e-b02c-04499620a58b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityHigh-f0d8bdda-646b-41c1-9aa5-a514eea5cf1d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityLow-48ec524e-3c80-4cd6-8e6b-591493ce3e6d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:1f7a206a-579b-4bed-a316-30ce07479673:resource/dynamodb/table/NotificationSettings/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26e2badd24a8d04f02bdbf70e9ceff80e5",
            "id": "table/NotificationSettings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d262be5b0ad53fb425e8ccb39ed630ead21",
            "id": "table/NotificationSettings/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d266ab9eb5982c54e09a621811bf0412c35",
            "id": "table/NotificationSettings/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26c943d6169f9a4c92a70907689b2bd5bf",
            "id": "table/NotificationSettings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d268a1fd9d7f477492c869cce1d349d898c",
            "id": "table/NotificationSettings/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d261f7a206a579b4beda31630ce07479673",
            "id": "table/NotificationSettings/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/NotificationSettings",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "NotificationSettings",
            "import_table": [],
            "local_secondary_index": [],
            "name": "NotificationSettings",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "NotificationSettings"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "NotificationSettings"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps-AlarmHigh-ed8bb52d-0078-4b47-9893-f65cf450cf24",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps-AlarmLow-2574386c-1281-4022-a879-51c4fcdfa577",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps-ProvisionedCapacityHigh-2872e4d7-5984-4b7c-8dfb-d800b013326c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps-ProvisionedCapacityLow-49536c2e-6e8d-4bbf-add8-943b266c4465"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:698b80ba-a414-4d02-8b99-da58c583b17a:resource/dynamodb/table/Otps:policyName/DynamoDBReadCapacityUtilization:table/Otps",
            "id": "DynamoDBReadCapacityUtilization:table/Otps",
            "name": "DynamoDBReadCapacityUtilization:table/Otps",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmHigh-e2fdd833-a6bf-41cd-8c83-6c47b0456d0a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmLow-d4718efd-91b4-4e44-a6bb-8312a550535c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityHigh-e248d0f2-e83d-4883-ab2f-fdac22d2a4e5",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityLow-7cfe6289-b2c3-4b3d-9381-8a87a56c8aab"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:f8ad241d-1cf3-447d-937e-2ba2f3b2dad3:resource/dynamodb/table/Otps/index/EmailIndex:policyName/DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmHigh-62156a0b-a95f-4b46-b090-b3793bd144f3",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmLow-fbcb196c-1387-4ecf-b5e5-419866a724bd",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityHigh-63ee0383-8837-4284-99b1-50e7f4a8c78b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityLow-25716443-6b98-46ab-999b-b3f50a049fb8"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:a34f3d7c-e844-4c39-8d15-3ae295856986:resource/dynamodb/table/Otps/index/OtpIndex:policyName/DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/OtpIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps-AlarmHigh-a1738e8e-69b5-41d6-a164-7393ae828b7a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps-AlarmLow-90592441-85c1-4034-bc75-22635da684d5",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps-ProvisionedCapacityHigh-7570ea64-289c-4123-b212-3adddc40d2ed",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps-ProvisionedCapacityLow-e0fc8dac-6489-4abf-bfac-5a851d1a3ede"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:c6e1602f-d587-4498-bd40-70272dc8cc9b:resource/dynamodb/table/Otps:policyName/DynamoDBWriteCapacityUtilization:table/Otps",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmHigh-d011fab5-da91-491e-b2e7-2413394459ec",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmLow-eaca28ff-e5bc-48eb-9757-0d3de95fabf3",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityHigh-8fa927ae-6abc-452b-945e-6e02792a4dbf",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityLow-d3559750-bbcd-4fbf-9215-9e13fac21643"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:d2ae8546-5324-45ed-b4a9-0a9fa23df7da:resource/dynamodb/table/Otps/index/EmailIndex:policyName/DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmHigh-04cd7135-0674-4d22-8c61-3d50236dc458",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmLow-b43a9ea6-bc61-4516-a1b7-7de5d4aa17f3",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityHigh-e23d3b31-ef62-426c-ba20-fbc0ca34a425",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityLow-a1f16b72-0b34-4ea1-a29c-67270cb68b2f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:815254f3-6632-481f-9837-fab38f61b07f:resource/dynamodb/table/Otps/index/OtpIndex:policyName/DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/OtpIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26698b80baa4144d028b99da58c583b17a",
            "id": "table/Otps",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26f8ad241d1cf3447d937e2ba2f3b2dad3",
            "id": "table/Otps/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/EmailIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26a34f3d7ce8444c398d153ae295856986",
            "id": "table/Otps/index/OtpIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/OtpIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26c6e1602fd5874498bd4070272dc8cc9b",
            "id": "table/Otps",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26d2ae8546532445edb4a90a9fa23df7da",
            "id": "table/Otps/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/EmailIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26815254f36632481f9837fab38f61b07f",
            "id": "table/Otps/index/OtpIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/OtpIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Otps",
            "attribute": [
              {
                "name": "Email",
                "type": "S"
              },
              {
                "name": "Otp",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Email",
                "name": "EmailIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Otp",
                "name": "OtpIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Email",
            "id": "Otps",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Otps",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "Otps"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "Otps"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "Ttl",
                "enabled": true
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters-AlarmHigh-c4fdcf61-3453-4620-94e7-86bdb89ce226",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters-AlarmLow-6ad566c6-5e02-4919-afe8-f783a668a2ab",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityHigh-b824b044-b3b4-4479-b049-b2132ad63b7e",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityLow-c77dc00d-d6d3-4eec-aff9-8377c3d93571"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:90729e0a-ee99-4d6d-83a1-db362c5ca689:resource/dynamodb/table/PaymentParameters:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmHigh-b5de0f8c-0d10-4714-a79d-f6c130c6728c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmLow-a6f68ae6-675f-45ce-80aa-93e15f9d012c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-522fffee-f999-4ab3-be81-b3027ca0ca3d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityLow-ea1cb598-b4ec-4e3f-9cc9-205f924b1724"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:a7a6d640-4c62-4cd8-8012-17e595e2953c:resource/dynamodb/table/PaymentParameters/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmHigh-18df3f92-72e4-4d22-b7b6-42faf533f47c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmLow-fccc92be-ff6f-45f9-8bec-6329e1519d19",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityHigh-89cfeeab-9d0a-4812-8023-6067ca48973e",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityLow-9f7563d2-d932-412e-845d-19fe82cbd7fc"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:2f263ff2-6831-4577-ad10-a1684b50586f:resource/dynamodb/table/PaymentParameters/index/IntervalIndex:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters-AlarmHigh-96f1a127-91cb-4f82-8108-23e88a819d66",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters-AlarmLow-f5eaa31a-ec6a-4c4b-9e3d-ace9e45b9ac8",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityHigh-60faf22f-9dc4-4500-bed1-bcdede27999d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityLow-afadf321-a310-46a5-b595-a5ee97f2081c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:f7c0e690-f3fc-472a-8cfd-e04c23a2a6ab:resource/dynamodb/table/PaymentParameters:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmHigh-4c696185-41ec-45be-bb51-d8f47dc423e6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmLow-ab6c7ef5-dde3-4a16-81c1-abf886158f5b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-ef451a57-f6af-4c98-9f76-2dec10825b80",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityLow-8624342a-295c-40be-9a05-3a325ceb98a7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:d5ad9db4-ca78-4906-852d-d4d93e88a823:resource/dynamodb/table/PaymentParameters/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmHigh-003695b4-c26d-492e-9c52-7f648ae949b7",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmLow-a8e2f266-523d-49e9-8809-726d5f024e5d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityHigh-edecf1ba-f6a4-4839-bab4-7271c5ad0fdb",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityLow-6ba56ec2-ebf9-4a52-ba14-28e246a79289"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:5529f652-c7c1-452c-b1e3-29f5d7a77409:resource/dynamodb/table/PaymentParameters/index/IntervalIndex:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2690729e0aee994d6d83a1db362c5ca689",
            "id": "table/PaymentParameters",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26a7a6d6404c624cd8801217e595e2953c",
            "id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d262f263ff268314577ad10a1684b50586f",
            "id": "table/PaymentParameters/index/IntervalIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26f7c0e690f3fc472a8cfde04c23a2a6ab",
            "id": "table/PaymentParameters",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26d5ad9db4ca784906852dd4d93e88a823",
            "id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d265529f652c7c1452cb1e329f5d7a77409",
            "id": "table/PaymentParameters/index/IntervalIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/PaymentParameters",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "Interval",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Interval",
                "name": "IntervalIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "PaymentParameters",
            "import_table": [],
            "local_secondary_index": [],
            "name": "PaymentParameters",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "PaymentParameters"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "PaymentParameters"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Providers-AlarmHigh-0ebd1f42-0490-4725-9558-5769cf15d2e8",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Providers-AlarmLow-e6f12dd5-103d-4eb2-a493-794d6e10057c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Providers-ProvisionedCapacityHigh-4a976ae0-9ee9-4ede-a671-9679d2d57b90",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Providers-ProvisionedCapacityLow-e079b089-290a-4a51-a4da-28452942bdac"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:406b59ce-9d61-4524-807d-c1afb00a1090:resource/dynamodb/table/Providers:policyName/DynamoDBReadCapacityUtilization:table/Providers",
            "id": "DynamoDBReadCapacityUtilization:table/Providers",
            "name": "DynamoDBReadCapacityUtilization:table/Providers",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Providers",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Providers-AlarmHigh-276f4019-45dc-4a86-ba04-61c2e7f72d25",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Providers-AlarmLow-83edb741-6100-40c9-85f5-a7318078b7a8",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Providers-ProvisionedCapacityHigh-cabab97e-0143-42c9-b5e8-7757c4188a19",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Providers-ProvisionedCapacityLow-7572499e-e63b-48c6-b67f-6fd90681a8ac"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:cf960497-1af4-4a76-bfba-eee236954820:resource/dynamodb/table/Providers:policyName/DynamoDBWriteCapacityUtilization:table/Providers",
            "id": "DynamoDBWriteCapacityUtilization:table/Providers",
            "name": "DynamoDBWriteCapacityUtilization:table/Providers",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Providers",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26406b59ce9d614524807dc1afb00a1090",
            "id": "table/Providers",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Providers",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26cf9604971af44a76bfbaeee236954820",
            "id": "table/Providers",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Providers",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Providers",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Providers",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Providers",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "Providers"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "Providers"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Rates-AlarmHigh-642aab1e-a093-4082-a7e5-a6dd279e84f0",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Rates-AlarmLow-586759a4-15e7-408c-be99-89d053de46ae",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Rates-ProvisionedCapacityHigh-78ff78c3-ca0a-4405-bc35-212f96c1129f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Rates-ProvisionedCapacityLow-0bb913aa-a4a1-4019-ac4f-20a618e121f9"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:a00be5e1-5d1e-4034-b57c-61fb3c8f0ad2:resource/dynamodb/table/Rates:policyName/DynamoDBReadCapacityUtilization:table/Rates",
            "id": "DynamoDBReadCapacityUtilization:table/Rates",
            "name": "DynamoDBReadCapacityUtilization:table/Rates",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Rates",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Rates-AlarmHigh-0d5cd8cc-e42e-49c8-908d-b26b9df1aa7b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Rates-AlarmLow-dee16bd1-d787-4581-9f36-01bed3d2acd1",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Rates-ProvisionedCapacityHigh-96174b12-0435-439a-9fe5-0d824a8880b0",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Rates-ProvisionedCapacityLow-bfb0aa33-80eb-4f18-9424-599853615410"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:75b8a5d3-d891-4dbc-a4b6-262612a393e6:resource/dynamodb/table/Rates:policyName/DynamoDBWriteCapacityUtilization:table/Rates",
            "id": "DynamoDBWriteCapacityUtilization:table/Rates",
            "name": "DynamoDBWriteCapacityUtilization:table/Rates",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Rates",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26a00be5e15d1e4034b57c61fb3c8f0ad2",
            "id": "table/Rates",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Rates",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2675b8a5d3d8914dbca4b6262612a393e6",
            "id": "table/Rates",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Rates",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Rates",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Rates",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Rates",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "Rates"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "Rates"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds-AlarmHigh-68de585f-0c1e-45e0-b872-eb8b65a6aafb",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds-AlarmLow-62066c6b-d7d1-4c5d-9b53-297f256e5129",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds-ProvisionedCapacityHigh-681d70d4-84d8-4471-abad-78ac29d5731c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds-ProvisionedCapacityLow-2e5c30dd-2b76-4936-af58-489a5468301b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:28d9fdbb-3ac6-4aee-afb4-cbe3cbd70bf3:resource/dynamodb/table/Refunds:policyName/DynamoDBReadCapacityUtilization:table/Refunds",
            "id": "DynamoDBReadCapacityUtilization:table/Refunds",
            "name": "DynamoDBReadCapacityUtilization:table/Refunds",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmHigh-781e4ac4-5d17-4062-97bc-f1fab497d266",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmLow-f41a94a5-e7ca-4755-b1f0-c062cdafa3cd",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-5f56f2f4-0faa-4888-89a8-67f3d0279261",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityLow-c8fc49ca-21ed-4270-8c55-0704c682cd3a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:6eb9848e-d744-4608-8a7c-4fd16ec0f60b:resource/dynamodb/table/Refunds/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds-AlarmHigh-f844d81a-4326-486b-b2ee-9ab3bdcaede1",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds-AlarmLow-3b1fa1e8-ab06-46d0-a78f-ea0a6c1bb15c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds-ProvisionedCapacityHigh-a41da07b-49ac-4600-a9b9-7d84656dbbba",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds-ProvisionedCapacityLow-6258f4e5-8a43-431c-8a5f-fd84af86b56c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:a0360ed0-6908-4343-b7bb-c297fc494d08:resource/dynamodb/table/Refunds:policyName/DynamoDBWriteCapacityUtilization:table/Refunds",
            "id": "DynamoDBWriteCapacityUtilization:table/Refunds",
            "name": "DynamoDBWriteCapacityUtilization:table/Refunds",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmHigh-4fad0e54-d2a0-4dff-aff7-c26cb38fc6eb",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmLow-fb975c5e-327c-4d77-8931-bc981d56f5c8",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-921ef0b6-c52c-429e-9561-de331b616b8a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityLow-bf14c1c6-e551-431a-bbc6-ed8753739fc5"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:4b244388-dfd3-44b5-a34b-ba4e2c8c3d8e:resource/dynamodb/table/Refunds/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2628d9fdbb3ac64aeeafb4cbe3cbd70bf3",
            "id": "table/Refunds",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d266eb9848ed74446088a7c4fd16ec0f60b",
            "id": "table/Refunds/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26a0360ed069084343b7bbc297fc494d08",
            "id": "table/Refunds",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d264b244388dfd344b5a34bba4e2c8c3d8e",
            "id": "table/Refunds/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Refunds",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Refunds",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Refunds",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "Refunds"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "Refunds"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles-AlarmHigh-f7fa81ec-6bb9-44dd-b04b-1587c8329d01",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles-AlarmLow-de182b33-4e0a-489b-b5ff-0f7d730aeb77",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles-ProvisionedCapacityHigh-58ddb6b1-03d3-436f-8714-8415322be0c6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles-ProvisionedCapacityLow-839bb890-8517-4a51-834d-8316cd73f9db"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:749fffe5-301f-4408-80cf-7938cd715eb2:resource/dynamodb/table/Roles:policyName/DynamoDBReadCapacityUtilization:table/Roles",
            "id": "DynamoDBReadCapacityUtilization:table/Roles",
            "name": "DynamoDBReadCapacityUtilization:table/Roles",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmHigh-08e3be4f-36f2-435a-ab85-3932507e898b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmLow-bfdc54c8-3890-4a96-bbd1-f8ae8b60c528",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityHigh-a97e7178-5045-4764-a7aa-c73d44a56440",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityLow-7c75e5cb-9446-439c-9f89-1b00fbf696ad"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:c05433d0-fd4a-4106-8b4b-85b33e38308b:resource/dynamodb/table/Roles/index/ProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles-AlarmHigh-53e3296d-33f5-4bad-8cb6-1efb7fe9faba",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles-AlarmLow-43960609-aff7-4168-a8ca-c861a86dffb7",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles-ProvisionedCapacityHigh-513fd6cf-0432-4280-9765-a3b7d1fb50d3",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles-ProvisionedCapacityLow-c2d41764-0d87-4e02-99d4-19758ac797a9"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:e31ece96-387f-4145-adc5-058c439ed6f3:resource/dynamodb/table/Roles:policyName/DynamoDBWriteCapacityUtilization:table/Roles",
            "id": "DynamoDBWriteCapacityUtilization:table/Roles",
            "name": "DynamoDBWriteCapacityUtilization:table/Roles",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmHigh-88563da7-47b9-48ae-8112-ea54da530470",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmLow-2dc88c6b-063b-4487-81ea-c6363fc0ab65",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityHigh-e82493d2-9b18-40c6-b543-dbf49c9703fc",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityLow-cb70bcdd-6eb6-467d-aa07-2916fab48515"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:8e170a83-817a-4674-897e-38579c164174:resource/dynamodb/table/Roles/index/ProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26749fffe5301f440880cf7938cd715eb2",
            "id": "table/Roles",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26c05433d0fd4a41068b4b85b33e38308b",
            "id": "table/Roles/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26e31ece96387f4145adc5058c439ed6f3",
            "id": "table/Roles",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d268e170a83817a4674897e38579c164174",
            "id": "table/Roles/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Roles",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ProviderId",
                "name": "ProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Roles",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Roles",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "Roles"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "Roles"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings-AlarmHigh-1e35ca8a-fab3-4a33-a06f-3ee69dc5cfb0",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings-AlarmLow-ce9b7cbb-4375-4f9d-a394-083ff73ca4c9",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings-ProvisionedCapacityHigh-f736193d-0bed-4c97-ac72-7d85099aa279",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings-ProvisionedCapacityLow-c12a30b3-f9f8-40ad-bf6f-4ca7c82ea286"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:1c303211-3f27-4f54-9091-a1725eaa3c09:resource/dynamodb/table/Settings:policyName/DynamoDBReadCapacityUtilization:table/Settings",
            "id": "DynamoDBReadCapacityUtilization:table/Settings",
            "name": "DynamoDBReadCapacityUtilization:table/Settings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmHigh-4a629aa1-4f65-40ab-916e-4297de5b74b1",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmLow-b577ca03-8ab9-45c9-8bde-f2ecba5740f1",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityHigh-b367e032-1316-4049-9dc1-717d63d4eece",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityLow-b6ecc683-53b8-4d14-b811-025354339e93"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:ad816e19-f01a-478c-96b0-b42fd2918367:resource/dynamodb/table/Settings/index/BelongsIndex:policyName/DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings-AlarmHigh-98f51708-8a81-4f61-8d35-f077cd9d2671",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings-AlarmLow-ecd8f930-56ad-43b7-a0bb-a7e843c5f773",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings-ProvisionedCapacityHigh-36b836ae-0b01-4d74-99cd-5d9792e2872b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings-ProvisionedCapacityLow-85a3dca3-fe2f-483e-82ec-a1c0a6b5623d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:8c1c9a93-5eb4-4e44-9478-8b7dbed98db1:resource/dynamodb/table/Settings:policyName/DynamoDBWriteCapacityUtilization:table/Settings",
            "id": "DynamoDBWriteCapacityUtilization:table/Settings",
            "name": "DynamoDBWriteCapacityUtilization:table/Settings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmHigh-7ce55462-ebb7-456a-96be-debeeaf2ab5e",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmLow-7531cd0e-e647-4ff5-9e81-d29aa8a43729",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityHigh-2fdd3a98-d3ab-460c-9fd1-b9bf269e32e4",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityLow-3c6e99f1-5954-4a42-acd2-7061e12abc2a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:cf27172d-d8b6-41d0-862d-f283c6489a1b:resource/dynamodb/table/Settings/index/BelongsIndex:policyName/DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d261c3032113f274f549091a1725eaa3c09",
            "id": "table/Settings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26ad816e19f01a478c96b0b42fd2918367",
            "id": "table/Settings/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings/index/BelongsIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d268c1c9a935eb44e4494788b7dbed98db1",
            "id": "table/Settings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26cf27172dd8b641d0862df283c6489a1b",
            "id": "table/Settings/index/BelongsIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings/index/BelongsIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Settings",
            "attribute": [
              {
                "name": "Belongs",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Belongs",
                "name": "BelongsIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Settings",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Settings",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "Settings"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "Settings"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys-AlarmHigh-8843b8a6-e2bf-457c-bb75-6d91a5ce167e",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys-AlarmLow-559a66cf-dbad-4bb9-9873-3f51716d91f0",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityHigh-8c4bc6f8-01be-4cd3-967b-e352c9002a24",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityLow-e4af0767-4536-4411-afe9-94badff28cfb"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:63c3a1a0-ccae-4050-8ec9-d74352cf2858:resource/dynamodb/table/SocketKeys:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmHigh-61ff8cb9-12e0-4de5-9cf0-eceba309eefb",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmLow-2834216a-2eea-4eb7-ac82-51f5231185be",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityHigh-f8b7a346-f2cb-489d-8d13-1d32f8dd6501",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityLow-e294b27e-6f04-4a9e-afce-84ac9d14fa89"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:23b6fb91-5d45-4d5d-8b34-c85893f8ecb4:resource/dynamodb/table/SocketKeys/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmHigh-885d6cb4-e799-47cc-8686-cd055b632f27",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmLow-20bd2ddb-4599-4d74-bed3-57b1d600ca39",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-37f548e9-ef9f-4ef5-b3bc-ef554e22e800",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityLow-ea94792c-3059-4a11-8862-ac56ba74e613"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:fdd690f3-9ea7-4266-a723-dd4dfd259f42:resource/dynamodb/table/SocketKeys/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmHigh-3e5adf05-95c1-4707-ba9e-d2e4f1657ab5",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmLow-0d97652b-9f2c-4127-8216-db10d72ffe53",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityHigh-b55ebe82-0c1e-4183-a9a1-a10c0bac15f3",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityLow-8d53e732-4fa4-4ad8-a3b3-fc3fedca57a0"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:47fe25cc-935b-480f-94ec-170eec9092b6:resource/dynamodb/table/SocketKeys/index/PublicKeyIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys-AlarmHigh-63ec457e-13d0-48ae-abfa-bcf1b89efb8f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys-AlarmLow-ba19e066-d9e4-4a36-94ea-72cbcc1a898e",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityHigh-b46fd200-fbc4-4956-a170-5554b0bc7b86",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityLow-f0394fcf-c574-4928-a654-e620206f4b3c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:79d837b4-c296-40d7-859f-a2ab9e0b92d9:resource/dynamodb/table/SocketKeys:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmHigh-08878693-d92f-4d7f-bb2d-05d54c1e9e08",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmLow-5e1e7fb5-335f-46d1-a4f3-43bd354dbc8f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityHigh-2c6adc91-14e3-4d6d-8cf8-2c944cefd462",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityLow-6070b2fe-3ac4-492a-bc01-236a1cb30d2a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:883cf418-bb73-4169-b7cd-02d0b372dd7b:resource/dynamodb/table/SocketKeys/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmHigh-bd4e6eb5-94e2-4f8e-9c14-bf4cd9133109",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmLow-9d78ed35-9081-4cc9-8e96-65faeda1b34b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-d143c7be-7548-4fc3-84d8-5027ce1fd4a6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityLow-62406aee-fc1e-480b-a252-d03c3cbad459"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:a4d7b341-13be-43f1-bc96-e5388601d900:resource/dynamodb/table/SocketKeys/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmHigh-bb1f0821-03ab-4108-bf4f-d7f3131423b4",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmLow-1c7eb5c5-6854-4ad1-85b1-32d25005316c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityHigh-601b0cd6-40f7-40c5-88ae-3fa83de967ba",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityLow-f69a811c-32cc-44c5-847e-5731e3d208fa"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:8a6a1308-5ff8-40e1-bfea-fa2d67251364:resource/dynamodb/table/SocketKeys/index/PublicKeyIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2663c3a1a0ccae40508ec9d74352cf2858",
            "id": "table/SocketKeys",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2623b6fb915d454d5d8b34c85893f8ecb4",
            "id": "table/SocketKeys/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26fdd690f39ea74266a723dd4dfd259f42",
            "id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2647fe25cc935b480f94ec170eec9092b6",
            "id": "table/SocketKeys/index/PublicKeyIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2679d837b4c29640d7859fa2ab9e0b92d9",
            "id": "table/SocketKeys",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26883cf418bb734169b7cd02d0b372dd7b",
            "id": "table/SocketKeys/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26a4d7b34113be43f1bc96e5388601d900",
            "id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d268a6a13085ff840e1bfeafa2d67251364",
            "id": "table/SocketKeys/index/PublicKeyIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/SocketKeys",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "PublicKey",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "PublicKey",
                "name": "PublicKeyIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "SocketKeys",
            "import_table": [],
            "local_secondary_index": [],
            "name": "SocketKeys",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "SocketKeys"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "SocketKeys"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode-AlarmHigh-920a4722-3336-4afd-b39f-49cd85bf464e",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode-AlarmLow-f170049d-4e5e-4ad5-b5c4-2b49c537087a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityHigh-feb547ad-8fd4-4a3c-94a9-db57ce6f2ff6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityLow-3c7dc6f8-71c0-4df1-89d1-59ffda676b8f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:01534a63-6a47-4406-99d0-ffb464fec072:resource/dynamodb/table/StatusCode:policyName/DynamoDBReadCapacityUtilization:table/StatusCode",
            "id": "DynamoDBReadCapacityUtilization:table/StatusCode",
            "name": "DynamoDBReadCapacityUtilization:table/StatusCode",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmHigh-9053f6ec-9e4a-4870-a9dc-13b9eb390378",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmLow-4aaf96fb-89b5-4fe6-891b-1c1af72bdd68",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityHigh-b45f4f97-f4f7-49cb-a869-bca02ee4dda4",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityLow-5049e7b1-de23-4163-8a6e-d7ccf99c915c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:6c004457-d8fa-474d-be01-8079a744fe70:resource/dynamodb/table/StatusCode/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode-AlarmHigh-a1721843-30b1-4cd3-9449-4c35c442e2ad",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode-AlarmLow-500b34d2-8f59-4095-b88a-276601029477",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityHigh-ed326aef-d21d-48b0-a23d-59e2cbdbb772",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityLow-3b844e25-6f89-4148-81ca-29af3e5993e2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:b2f968d5-60d7-4594-bf1e-f889414124ac:resource/dynamodb/table/StatusCode:policyName/DynamoDBWriteCapacityUtilization:table/StatusCode",
            "id": "DynamoDBWriteCapacityUtilization:table/StatusCode",
            "name": "DynamoDBWriteCapacityUtilization:table/StatusCode",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmHigh-e5d7c0d7-8f7f-4fea-967e-8608addc901a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmLow-9ce59c1a-e871-424a-9bae-25d8f4e10a0d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityHigh-3b92eda2-705c-45ca-89a3-524adb152d14",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityLow-d2c4be0e-2672-4287-a885-c4a8a409c338"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:7dcb0b5b-9d46-49bc-b0d3-222b6fdf5f85:resource/dynamodb/table/StatusCode/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2601534a636a47440699d0ffb464fec072",
            "id": "table/StatusCode",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d266c004457d8fa474dbe018079a744fe70",
            "id": "table/StatusCode/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26b2f968d560d74594bf1ef889414124ac",
            "id": "table/StatusCode",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d267dcb0b5b9d4649bcb0d3222b6fdf5f85",
            "id": "table/StatusCode/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/StatusCode",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "StatusCode",
            "import_table": [],
            "local_secondary_index": [],
            "name": "StatusCode",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "StatusCode"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "StatusCode"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals-AlarmHigh-6ad6bc66-cf6a-4743-8eed-4c7cbaf71bec",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals-AlarmLow-e70bd5bb-06b6-415e-b865-9fceb9d4d79d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityHigh-2253aaa0-079e-4bb9-a5ca-10916ff540ea",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityLow-77c6f875-2ed9-4ea2-ae69-7aa7dbdb8ff2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:4f436d12-ba47-48ad-9f4d-ef71da3a4643:resource/dynamodb/table/TimeIntervals:policyName/DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "id": "DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "name": "DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmHigh-e42b040b-355c-4004-a002-3426992a6501",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmLow-80158ba2-8da2-4b1c-a924-3e9d74cf9f47",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityHigh-03cb2f81-7df4-40d9-a238-0aa1c00fb3d5",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityLow-db28b2a5-1228-4acf-8d93-4bb7769ba86b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:c5b88cc7-c5f2-453b-a770-30cbd6c82405:resource/dynamodb/table/TimeIntervals/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals-AlarmHigh-ebab4258-68b0-4c54-ae95-5cc57aa9e91b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals-AlarmLow-630fb49c-b54c-4778-ad47-acd4d135ad39",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityHigh-a8ccc908-21fe-4a5d-9c1f-8f325f2a5d9b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityLow-d7b5dc2e-0edc-4ba7-a0d2-df54bb9e6200"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:e99c51ea-d99e-4275-b4d6-cfaf79579b32:resource/dynamodb/table/TimeIntervals:policyName/DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "id": "DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "name": "DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmHigh-a70bf647-a15b-4486-a0e1-bdfee37826f0",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmLow-33d991b3-1a59-4914-8a3f-1ada3cfd6e79",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityHigh-c0a48260-4293-4c38-aa9c-b2dc6cd1338d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityLow-83ed4492-32e5-4cd5-b10d-6c02599dc4fe"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:42ab38c7-da6f-428a-a8fc-be552fa0f0b9:resource/dynamodb/table/TimeIntervals/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d264f436d12ba4748ad9f4def71da3a4643",
            "id": "table/TimeIntervals",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26c5b88cc7c5f2453ba77030cbd6c82405",
            "id": "table/TimeIntervals/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26e99c51ead99e4275b4d6cfaf79579b32",
            "id": "table/TimeIntervals",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2642ab38c7da6f428aa8fcbe552fa0f0b9",
            "id": "table/TimeIntervals/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/TimeIntervals",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "TimeIntervals",
            "import_table": [],
            "local_secondary_index": [],
            "name": "TimeIntervals",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "TimeIntervals"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "TimeIntervals"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions-AlarmHigh-9930584f-f681-42a1-b941-fcfdbd28def8",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions-AlarmLow-7bb296bb-8d20-47af-8951-472d43415b03",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions-ProvisionedCapacityHigh-9716fa3f-cd71-4d28-a942-299fb78bc247",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions-ProvisionedCapacityLow-96f949a4-fb94-4f4f-82c5-722507e2d0f8"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:559b6993-56fa-43dd-9b4b-e813207d8706:resource/dynamodb/table/Transactions:policyName/DynamoDBReadCapacityUtilization:table/Transactions",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmHigh-ab80c122-b130-412b-95ed-196330261ef8",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmLow-66e8058b-dfba-4dae-8c73-15fea0c307b2",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityHigh-2f295357-043f-43f6-a3d7-4dca85b99221",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityLow-48a1ea47-a223-4c50-b92c-0fde035278d6"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:0975d5bf-0b9a-407f-b677-ddf87222c0de:resource/dynamodb/table/Transactions/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmHigh-54fb9081-92a6-4fb8-8fbf-ced9a19c37bf",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmLow-83e32d4b-eac1-458b-a9ed-9c47174704d7",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityHigh-3170c56c-b61c-42a2-849c-fcd7166be933",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityLow-f8428623-aef8-4aac-a11d-d39736bc77ab"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:2dc2e159-8f45-4534-b19f-1300fded895a:resource/dynamodb/table/Transactions/index/OutgoingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmHigh-50a6ee12-3d2b-4f2e-b0c4-66d026b0c938",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmLow-e6e5aa04-d515-478b-abba-ae428d55a939",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-46cfbc38-5a95-4c4c-b023-80e7d84010c5",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-38338cd0-170e-449a-a5da-09ee345c1a86"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:dfee83b0-32cb-46c4-9758-c59f8f5eeeed:resource/dynamodb/table/Transactions/index/IncomingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmHigh-227b9062-4147-4b30-88ca-4658a4d0a664",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmLow-b6c05907-0142-408c-b5b2-707faf75716e",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityHigh-ffcc60ab-b0dc-4dba-8e19-f270dbc16cf9",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityLow-1e6ed9ed-2781-4f02-b27b-260ed40d4fc7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:cfe5437e-050d-484e-80f2-2e18bfeb7548:resource/dynamodb/table/Transactions/index/WalletAddressIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmHigh-615d6094-9dcb-4f93-929a-fce91ccbd555",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmLow-45e14631-e7eb-4579-a739-5efbb90981e4",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityHigh-dc669d78-ca67-4996-83b3-b3a1a727da63",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityLow-f5cebbfb-321c-4d43-956c-2e0dc2db6301"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:c59b58f9-8ce7-4fd9-8751-6ceeb3e3a758:resource/dynamodb/table/Transactions/index/ReceiverUrlIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions-AlarmHigh-6fd7de60-2d6f-47f5-9b42-388156989761",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions-AlarmLow-152972fc-9786-4c6a-8d28-2f83b7ec904d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions-ProvisionedCapacityHigh-bab542a5-6091-4d3f-840b-2566d91fecf3",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions-ProvisionedCapacityLow-38131232-7b11-4d7d-be0e-503b01c4eebf"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:a25dbed8-2a93-4684-a822-b7b455aa538f:resource/dynamodb/table/Transactions:policyName/DynamoDBWriteCapacityUtilization:table/Transactions",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmHigh-b51c3c2c-ba68-44cc-8e42-a7f9d40b3b5a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmLow-6493f56e-f33a-4c27-9bd0-802fd1ed58a0",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityHigh-54ffde9c-f301-443a-a7d1-39676c305127",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityLow-9d20eb59-5bc9-4c36-bbf1-f29bf6b460da"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:21ed130f-3183-4082-a269-5e6aae7bec30:resource/dynamodb/table/Transactions/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmHigh-20da3f15-e71e-4252-85f2-9ae20dec64f4",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmLow-dbc16698-1e1a-4e79-bf55-4dee7144b132",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityHigh-d54b3ef5-0663-4840-9bff-90f77b0c88c9",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityLow-21f6e527-f892-40b4-a830-8126de933da2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:c15bf88d-5047-46e7-9921-c0465f73a466:resource/dynamodb/table/Transactions/index/OutgoingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmHigh-2b52a129-f1d2-4a5b-9ff8-e82ce83811bd",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmLow-ef7b499c-7478-4adc-94ae-2d3a2d83f0b1",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-d8f15c7c-eb1e-497d-9a28-61a85042b62b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-dd3eaccf-0f28-42d6-ac34-d1f530502634"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:129b8196-4666-432c-8496-1198bd014064:resource/dynamodb/table/Transactions/index/IncomingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmHigh-6a3de248-109c-4dc3-9f70-17ba7906846d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmLow-6c66bd13-fa5d-47b4-aacc-0c9d83461e2d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityHigh-f8abbd4a-f55d-472b-885a-aa479433be89",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityLow-d085dc77-ad3e-46c1-90fd-9db040469bb5"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:e3a3efa9-ef63-4d17-9865-66b404bef2b3:resource/dynamodb/table/Transactions/index/WalletAddressIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmHigh-20f0a797-e6e2-411e-a64d-37550691c702",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmLow-75f74d46-1a46-46e8-bd68-cc3fd7a41ed8",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityHigh-abf2484d-4132-4cc4-9fd8-d4ca2197b58b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityLow-500724e7-4b3a-4198-8c74-023ec5f3aa0a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:2fadb3b4-7a0d-45f2-a22e-97aae429d91b:resource/dynamodb/table/Transactions/index/ReceiverUrlIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26559b699356fa43dd9b4be813207d8706",
            "id": "table/Transactions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d260975d5bf0b9a407fb677ddf87222c0de",
            "id": "table/Transactions/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d262dc2e1598f454534b19f1300fded895a",
            "id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26dfee83b032cb46c49758c59f8f5eeeed",
            "id": "table/Transactions/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26cfe5437e050d484e80f22e18bfeb7548",
            "id": "table/Transactions/index/WalletAddressIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26c59b58f98ce74fd987516ceeb3e3a758",
            "id": "table/Transactions/index/ReceiverUrlIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26a25dbed82a934684a822b7b455aa538f",
            "id": "table/Transactions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2621ed130f31834082a2695e6aae7bec30",
            "id": "table/Transactions/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26c15bf88d504746e79921c0465f73a466",
            "id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26129b81964666432c84961198bd014064",
            "id": "table/Transactions/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26e3a3efa9ef634d17986566b404bef2b3",
            "id": "table/Transactions/index/WalletAddressIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d262fadb3b47a0d45f2a22e97aae429d91b",
            "id": "table/Transactions/index/ReceiverUrlIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Transactions",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "IncomingPaymentId",
                "type": "S"
              },
              {
                "name": "OutgoingPaymentId",
                "type": "S"
              },
              {
                "name": "ReceiverUrl",
                "type": "S"
              },
              {
                "name": "WalletAddressId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "IncomingPaymentId",
                "name": "IncomingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "OutgoingPaymentId",
                "name": "OutgoingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ReceiverUrl",
                "name": "ReceiverUrlIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "WalletAddressId",
                "name": "WalletAddressIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Transactions",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Transactions",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "UserIncoming"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "UserIncoming"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming-AlarmHigh-d21f753d-d52b-40ba-bf79-bd60c38fe328",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming-AlarmLow-18586c1c-cf37-4025-98fa-228db1cf5cf9",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityHigh-8f61dafa-21f4-4d2d-a873-5b8491bf3ed4",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityLow-e90e5504-f5b7-4185-9ee5-8f2da9064e7f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:e14f1b42-e336-4972-ad9a-a71caba239ed:resource/dynamodb/table/UserIncoming:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmHigh-f23d5088-9f46-435e-8a69-e97d9118dabf",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmLow-c4b37118-4c30-45f7-8ce8-322be9fa1590",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityHigh-8e0ee740-2053-4fa0-9454-0d28d84a996f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityLow-b374c74d-84cf-447c-9c6c-032a9af23acf"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:df3d17e2-6878-445b-9b40-1650294ac878:resource/dynamodb/table/UserIncoming/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmHigh-c168ce4e-878e-4236-9284-364357e01be6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmLow-af320cba-721a-4380-9c0c-643ef084fa3c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityHigh-1ac1397b-d99c-4018-85f2-b5509da2fc9f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityLow-6929fae9-de4d-4010-850d-e9e28ad31895"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:482a7c5c-0d76-4f81-b831-fd986e46bf51:resource/dynamodb/table/UserIncoming/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmHigh-7e5a216b-01d0-439d-a4f1-300213798a9d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmLow-2dd2b75b-31e0-471a-b5fb-cd3980510009",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-ab8f0f32-f2ca-4bbe-8d26-c6b828098c35",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityLow-a79ef403-0daa-4213-ae87-2b341c15d771"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:88ce4604-77f2-40bf-8d79-4f467076d6fe:resource/dynamodb/table/UserIncoming/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmHigh-7eb6adea-563f-4563-89a0-b7726cf66c2a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmLow-bfc6dadd-7588-4be3-94cf-67d22c1826b9",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-8b02dce6-b103-49e4-bc3b-ed2f3e9b1872",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-dae632bb-996e-474c-9394-ec657ac9998c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:46ab125f-3f57-449d-91e7-cfa7a4bdc0ad:resource/dynamodb/table/UserIncoming/index/IncomingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming-AlarmHigh-2c67b00f-67ce-4448-89e0-c569210abbd8",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming-AlarmLow-1f088876-440f-47c9-96fc-4e43c59384dd",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityHigh-083d844d-92ef-46b8-a4dc-77976d690807",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityLow-91f32290-9c75-4a1a-84fd-3a8a3ea537a3"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:368b43ab-a358-423b-ba95-8680a65e8364:resource/dynamodb/table/UserIncoming:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmHigh-234c3600-c5bb-4635-aedd-8afc7e8241f3",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmLow-8f4be970-805d-42d9-bb1f-912a9b1f45b6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityHigh-34310d0d-997f-4c10-8e52-67017a183f9b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityLow-3a942a2a-3add-41e7-aa36-8ec6a55ce252"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:7c920c43-10f0-4131-bf92-fb91f32c1b45:resource/dynamodb/table/UserIncoming/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmHigh-4c877445-0d65-44a2-baf5-341c76ac0771",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmLow-e56437b7-859e-4e0c-a932-bf2f767f2168",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityHigh-96daa05b-371a-41ad-9bd2-ee9d477a63e1",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityLow-8e02c211-9d80-4696-bd78-3b14eb87f63e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:3430e64e-cb8d-44fb-b2d9-beec1c27eea4:resource/dynamodb/table/UserIncoming/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmHigh-3a2eb0f6-05a7-4e1b-b03a-e30b28187029",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmLow-f43a4ae2-7f3c-4960-9da7-4977959fc1e2",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-634417f1-6a89-40bd-b4f6-00169a1317f8",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityLow-2f4c2f9c-51de-45b6-ba8e-b0aee77eab9d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:2bb1c33e-e808-4755-8c2e-4f41224d77ad:resource/dynamodb/table/UserIncoming/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmHigh-d3a8bf2d-d290-4a29-806d-c99dd795f1f2",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmLow-9ea41426-20ca-4c8e-8aae-79e50888ba6c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-cb24672f-8c51-4f0d-be71-45272817bd34",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-75880491-af7e-43d8-b8be-fdcdbb11aa4c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:9fc0552f-87e4-4f2c-ba6d-3584187730cc:resource/dynamodb/table/UserIncoming/index/IncomingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26e14f1b42e3364972ad9aa71caba239ed",
            "id": "table/UserIncoming",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26df3d17e26878445b9b401650294ac878",
            "id": "table/UserIncoming/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26482a7c5c0d764f81b831fd986e46bf51",
            "id": "table/UserIncoming/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2688ce460477f240bf8d794f467076d6fe",
            "id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d2646ab125f3f57449d91e7cfa7a4bdc0ad",
            "id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26368b43aba358423bba958680a65e8364",
            "id": "table/UserIncoming",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d267c920c4310f04131bf92fb91f32c1b45",
            "id": "table/UserIncoming/index/IdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d263430e64ecb8d44fbb2d9beec1c27eea4",
            "id": "table/UserIncoming/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d262bb1c33ee80847558c2e4f41224d77ad",
            "id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d269fc0552f87e44f2cba6d3584187730cc",
            "id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/UserIncoming",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "IncomingPaymentId",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "IncomingPaymentId",
                "name": "IncomingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "UserIncoming",
            "import_table": [],
            "local_secondary_index": [],
            "name": "UserIncoming",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "UserIncoming"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "UserIncoming"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users-AlarmHigh-4ad5e4e7-c597-42c0-8985-029531ce2342",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users-AlarmLow-8347cbb4-1c3b-4c21-a6b9-024591f5bb91",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users-ProvisionedCapacityHigh-a5870732-a19c-4d64-8a71-def19768da14",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users-ProvisionedCapacityLow-dc5e4290-eb7e-4e57-a520-6cd697d9a87f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:2b2a3e57-3f34-4702-ade8-8827d3339902:resource/dynamodb/table/Users:policyName/DynamoDBReadCapacityUtilization:table/Users",
            "id": "DynamoDBReadCapacityUtilization:table/Users",
            "name": "DynamoDBReadCapacityUtilization:table/Users",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmHigh-c63714dd-632d-4596-88e4-4bf1446207e0",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmLow-5851ebb2-294a-4390-869d-9e260067a8eb",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityHigh-61d71b38-a6af-4186-b9a1-267df3235213",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityLow-3f0126c5-3343-4f4b-b72c-74bc17f3fc9c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:ef2bde03-7606-4664-bbd2-296631f0d55c:resource/dynamodb/table/Users/index/EmailIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmHigh-659e838c-28fb-40a4-b2f6-df4df3335c16",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmLow-2f366802-7e4b-4f5e-9764-306ca88a7bc7",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityHigh-d8437d80-8940-4525-823f-b94b4ed72ae2",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityLow-7296f99b-d12a-49b3-9353-d5c44765de4f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:0520d60e-d3fd-4059-8321-f2bb3df813a0:resource/dynamodb/table/Users/index/UserTypeIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/UserTypeIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmHigh-74eb0b49-b85c-48a3-9b85-0eb8216d9cd7",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmLow-ac4c9578-98b8-4d83-b7ec-66f1aa46def6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityHigh-56ed2b57-7ef3-4b14-bfb7-65f77238757b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityLow-f5792ce0-3d5a-4a9a-a5cf-fd60b0ccd649"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:bb09499d-7bb7-4143-b8c2-e4f5afd0796b:resource/dynamodb/table/Users/index/PhoneIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/PhoneIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users-AlarmHigh-b6ba2316-f7d2-434e-a4bc-16a63288059f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users-AlarmLow-aba9883b-a643-4af0-9b40-d0ed13beb175",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users-ProvisionedCapacityHigh-beab4c99-6bf9-4510-a704-191daddefca5",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users-ProvisionedCapacityLow-5614c0e8-8c30-4070-8bed-129e746e6d0b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:f2c436a1-ded5-48f3-8a91-73cc4b014494:resource/dynamodb/table/Users:policyName/DynamoDBWriteCapacityUtilization:table/Users",
            "id": "DynamoDBWriteCapacityUtilization:table/Users",
            "name": "DynamoDBWriteCapacityUtilization:table/Users",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmHigh-22f3090c-54a1-4588-beb7-0cd77e534812",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmLow-d7b091db-0bb2-48cb-9422-a46743ca0f14",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityHigh-6728a3a7-5083-401e-a3ce-c851c5cebc1f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityLow-e6abe864-9687-4869-b720-a64d3efbfcad"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:fc4426f5-f48d-40a0-9a23-4ac364d00034:resource/dynamodb/table/Users/index/EmailIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmHigh-c93fd1c2-0f6a-4760-93cd-3e44b6ca8bd4",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmLow-cb94db73-79cc-481d-a4ea-e97fe1bcfd8a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityHigh-142ec8ac-d863-42b9-9a5d-d0146dae3a6e",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityLow-a4858bef-4a44-4e48-b4a9-a7f4891b9618"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:1eff9d54-d641-4108-8727-5118e4cdaa69:resource/dynamodb/table/Users/index/UserTypeIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/UserTypeIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmHigh-acc64511-2b3d-4b8f-a309-f9ad658ec825",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmLow-048baae6-aad1-4183-bbe9-e4732c1091d7",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityHigh-0b7db61f-4c80-404d-ac03-83e55caef8c6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityLow-9f21e1ab-b3d0-449a-897c-917ca00617fc"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:e68522e7-9e58-4c34-9255-80c101d1ad5a:resource/dynamodb/table/Users/index/PhoneIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/PhoneIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d262b2a3e573f344702ade88827d3339902",
            "id": "table/Users",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26ef2bde0376064664bbd2296631f0d55c",
            "id": "table/Users/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/EmailIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d260520d60ed3fd40598321f2bb3df813a0",
            "id": "table/Users/index/UserTypeIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/UserTypeIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26bb09499d7bb74143b8c2e4f5afd0796b",
            "id": "table/Users/index/PhoneIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/PhoneIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26f2c436a1ded548f38a9173cc4b014494",
            "id": "table/Users",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26fc4426f5f48d40a09a234ac364d00034",
            "id": "table/Users/index/EmailIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/EmailIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d261eff9d54d641410887275118e4cdaa69",
            "id": "table/Users/index/UserTypeIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/UserTypeIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26e68522e79e584c34925580c101d1ad5a",
            "id": "table/Users/index/PhoneIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users/index/PhoneIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Users",
            "attribute": [
              {
                "name": "Email",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "Phone",
                "type": "S"
              },
              {
                "name": "Type",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Email",
                "name": "EmailIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Phone",
                "name": "PhoneIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Type",
                "name": "UserTypeIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Users",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Users",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "Users"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "Users"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets-AlarmHigh-5d9d7dd9-1da1-41e1-b566-8c74eee118e5",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets-AlarmLow-78a87283-3872-46f4-8242-30c21e94afd4",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets-ProvisionedCapacityHigh-59f860aa-0044-4791-a865-499cd157f4a6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets-ProvisionedCapacityLow-3895128b-46a2-4ac1-8547-752e70ea8773"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:ab2d7303-d624-48e8-ac95-101051c851d3:resource/dynamodb/table/Wallets:policyName/DynamoDBReadCapacityUtilization:table/Wallets",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmHigh-610954af-7adb-40c3-a79c-b7ab03eb3a64",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmLow-8bd39afd-9799-4756-8b1e-b9226e3a6166",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityHigh-3781edb3-238c-44d9-a94e-abdc6e8555d0",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityLow-7cee3132-3133-477d-b2dd-7cf606c3e510"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:194fe186-fca8-46ff-ab12-dbb53377e9b9:resource/dynamodb/table/Wallets/index/WalletAddressIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmHigh-b257fec9-a819-4543-aaca-d1b1f817d050",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmLow-d2c8a0da-1b7e-44c6-b68f-39ae4ae6f8c4",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityHigh-03327b37-c555-4d33-be9e-5ad0bd4e99fa",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityLow-166b301d-21df-4690-81ed-d87e38fe4d12"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:1070b782-3964-4e6b-af6d-5d49cfcd24dc:resource/dynamodb/table/Wallets/index/RafikiIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmHigh-6115620e-6f0c-414b-be70-a32827a06ba5",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmLow-43a7c91a-cbc0-4592-99e5-498af38f2320",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityHigh-ef36d8e2-0fec-4f4b-b08c-ea706bc8d714",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityLow-c5537641-bcad-4924-83e0-57704117c5cd"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:1f196ff0-3ce1-4244-9b52-924fb0a9aeeb:resource/dynamodb/table/Wallets/index/ProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmHigh-61f56738-a771-4c0a-a449-246ca1ad207a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmLow-242ebc74-eea6-442c-bd87-4f788fe93041",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityHigh-ff473c0e-d7e8-4433-8747-1d59e1a8477b",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityLow-2bbe34d5-54dc-4526-9824-7ef00036efc2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:617bc623-8922-471f-ac4d-99bc623a190d:resource/dynamodb/table/Wallets/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets-AlarmHigh-19030eaa-68fd-444e-8dd6-d4bcef69f220",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets-AlarmLow-db87797c-59df-4027-a088-649eab9b9459",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets-ProvisionedCapacityHigh-2d584b7a-de99-42d8-a81c-e6aefce82dee",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets-ProvisionedCapacityLow-8b6e6069-5591-4465-9f28-3efff5d49ed9"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:0c44046e-e35b-4ebf-8972-acced6935fc1:resource/dynamodb/table/Wallets:policyName/DynamoDBWriteCapacityUtilization:table/Wallets",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmHigh-a71a5fea-4b85-4f44-a01a-21f4c2118bd0",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmLow-7f4fd756-1f92-444e-9b13-43481ef142b8",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityHigh-c32b4518-55a8-4bbd-abb3-3bb8b5ce5dc6",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityLow-16cae2f1-c008-40c7-ab5e-39db27065fa4"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:c5346e42-b704-4819-b464-92986095bca5:resource/dynamodb/table/Wallets/index/WalletAddressIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmHigh-d4101ec2-18f9-4ad6-bbb1-99a97d303793",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmLow-d649d56b-764f-4e39-8648-ed42b4f0117d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityHigh-a5ca35b5-6123-4f6f-9ba5-7732b999ac2a",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityLow-41cd3ef8-9139-4afb-b285-f9cd06f0caa3"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:9eabaf01-6515-49a9-aeb7-190f537d3fca:resource/dynamodb/table/Wallets/index/RafikiIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmHigh-4a5dd8b3-001f-4861-b010-007fd55c7d30",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmLow-fab5c442-6b44-4e83-bcce-34fc935664a9",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityHigh-194e316e-5092-4ab3-8cae-68e0b766e210",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityLow-f2acdcbb-6cf4-454e-87ea-c3238ee97952"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:5b507198-2450-46e1-a0e9-0483ee426200:resource/dynamodb/table/Wallets/index/ProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmHigh-9774d369-7866-47aa-8503-e3284388376c",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmLow-c934bd95-3313-4848-a26d-3d69518fd305",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityHigh-452e4017-7454-48c0-8d48-af86ecbb829d",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityLow-4c58b66a-9261-44e9-8e4c-a230b9b965c0"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:a23e0b14-9c1d-412a-aa17-6a46184bed50:resource/dynamodb/table/Wallets/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26ab2d7303d62448e8ac95101051c851d3",
            "id": "table/Wallets",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26194fe186fca846ffab12dbb53377e9b9",
            "id": "table/Wallets/index/WalletAddressIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d261070b78239644e6baf6d5d49cfcd24dc",
            "id": "table/Wallets/index/RafikiIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d261f196ff03ce142449b52924fb0a9aeeb",
            "id": "table/Wallets/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26617bc6238922471fac4d99bc623a190d",
            "id": "table/Wallets/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/UserIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d260c44046ee35b4ebf8972acced6935fc1",
            "id": "table/Wallets",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26c5346e42b7044819b46492986095bca5",
            "id": "table/Wallets/index/WalletAddressIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d269eabaf01651549a9aeb7190f537d3fca",
            "id": "table/Wallets/index/RafikiIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d265b507198245046e1a0e90483ee426200",
            "id": "table/Wallets/index/ProviderIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26a23e0b149c1d412aaa176a46184bed50",
            "id": "table/Wallets/index/UserIdIndex",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/UserIdIndex",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/Wallets",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ProviderId",
                "type": "S"
              },
              {
                "name": "RafikiId",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              },
              {
                "name": "WalletAddress",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ProviderId",
                "name": "ProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "RafikiId",
                "name": "RafikiIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "WalletAddress",
                "name": "WalletAddressIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Wallets",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Wallets",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "Wallets"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "Wallets"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/WebSocketActions-AlarmHigh-18a5a2b1-5527-49a5-bae8-d18125d1be07",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/WebSocketActions-AlarmLow-17b989ed-7646-4946-b273-07c8177d719f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityHigh-bec5692a-e887-4556-8744-96e4d8381eb1",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityLow-bd9c5a2a-4d2a-4fb3-9d62-84d1bcc4284f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:718ac7cf-8a2b-4ff9-a3a2-a7e3bf99c007:resource/dynamodb/table/WebSocketActions:policyName/DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "id": "DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "name": "DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/WebSocketActions",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/WebSocketActions-AlarmHigh-a2d992b5-1a80-4f95-9d9a-d48c863b2b1f",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/WebSocketActions-AlarmLow-7e85ce87-f6a3-4672-a9e4-441205895e41",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityHigh-66498857-e9d1-43e9-8f31-b5ceb1f67e59",
              "arn:aws:cloudwatch:us-east-2:471112703134:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityLow-c069069d-2938-4bd9-a9be-4ac643ede2de"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:471112703134:scalingPolicy:1b195f22-da1f-48d1-afcf-6c3d5c993e65:resource/dynamodb/table/WebSocketActions:policyName/DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "id": "DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "name": "DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/WebSocketActions",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d26718ac7cf8a2b4ff9a3a2a7e3bf99c007",
            "id": "table/WebSocketActions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/WebSocketActions",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:471112703134:scalable-target/0d261b195f22da1f48d1afcf6c3d5c993e65",
            "id": "table/WebSocketActions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/WebSocketActions",
            "role_arn": "arn:aws:iam::471112703134:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:471112703134:table/WebSocketActions",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "WebSocketActions",
            "import_table": [],
            "local_secondary_index": [],
            "name": "WebSocketActions",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "WebSocketActions"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "WebSocketActions"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_dev_k8s_ecr_login_renew_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "name": "k8s-ecr-login-renew-role"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "namespaces"
                    ],
                    "verbs": [
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "secrets",
                      "serviceaccounts",
                      "serviceaccounts/token"
                    ],
                    "verbs": [
                      "delete",
                      "create",
                      "patch",
                      "get",
                      "list"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-role",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "namespaces"
                    ],
                    "verbs": [
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "secrets",
                      "serviceaccounts",
                      "serviceaccounts/token"
                    ],
                    "verbs": [
                      "delete",
                      "create",
                      "patch",
                      "get",
                      "list"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_dev_k8s_ecr_login_renew_binding",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "name": "k8s-ecr-login-renew-binding"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "k8s-ecr-login-renew-role"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "k8s-ecr-login-renew-account",
                    "namespace": "qa"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-binding",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "k8s-ecr-login-renew-role"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "k8s-ecr-login-renew-account",
                    "namespace": "qa"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "cronjob_dev_k8s_ecr_login_renew_cron",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "batch/v1",
                "kind": "CronJob",
                "metadata": {
                  "name": "ecr-cred-helper",
                  "namespace": "qa"
                },
                "spec": {
                  "concurrencyPolicy": "Allow",
                  "failedJobsHistoryLimit": 1,
                  "jobTemplate": {
                    "metadata": {
                      "creationTimestamp": null
                    },
                    "spec": {
                      "template": {
                        "metadata": {
                          "creationTimestamp": null
                        },
                        "spec": {
                          "containers": [
                            {
                              "command": [
                                "/bin/sh",
                                "-c",
                                "                    TOKEN=`aws ecr get-login --region $AWS_REGION --registry-ids $ACCOUNT | cut -d' ' -f6`\n                    echo 'ENV variables setup done.'\n                    kubectl delete secret -n $TARGET_NAMESPACE --ignore-not-found $DOCKER_SECRET_NAME\n                    kubectl create secret -n $TARGET_NAMESPACE docker-registry $DOCKER_SECRET_NAME --docker-server=$ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com --docker-username=AWS --docker-password=$TOKEN --docker-email=none\n                    echo \"Secret created by name $DOCKER_SECRET_NAME\"\n                    kubectl patch serviceaccount k8s-ecr-login-renew-account -p '{\"imagePullSecrets\":[{\"name\":\"'$DOCKER_SECRET_NAME'\"}]}' -n $TARGET_NAMESPACE\n                    echo 'All done.'\n"
                              ],
                              "env": [
                                {
                                  "name": "AWS_ACCESS_KEY_ID",
                                  "value": "AKIAW3MEBLSPMM3M6PHU"
                                },
                                {
                                  "name": "AWS_SECRET_ACCESS_KEY",
                                  "value": "JxOqgr8n0Aoi6v+ruKP0sjTaD7zA4eASOEBG9mBG"
                                },
                                {
                                  "name": "AWS_REGION",
                                  "value": "us-east-2"
                                },
                                {
                                  "name": "DOCKER_SECRET_NAME",
                                  "value": "docker-cfg"
                                },
                                {
                                  "name": "TARGET_NAMESPACE",
                                  "value": "qa"
                                },
                                {
                                  "name": "ACCOUNT",
                                  "value": "471112703134"
                                }
                              ],
                              "image": "odaniait/aws-kubectl:latest",
                              "imagePullPolicy": "IfNotPresent",
                              "name": "k8s-ecr-login-renew",
                              "terminationMessagePath": "/dev/termination-log",
                              "terminationMessagePolicy": "File"
                            }
                          ],
                          "restartPolicy": "Never",
                          "serviceAccountName": "k8s-ecr-login-renew-account",
                          "terminationGracePeriodSeconds": 30
                        }
                      }
                    }
                  },
                  "schedule": "0 */6 * * *",
                  "successfulJobsHistoryLimit": 3,
                  "suspend": false
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "concurrencyPolicy": "string",
                      "failedJobsHistoryLimit": "number",
                      "jobTemplate": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "creationTimestamp": "dynamic"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "template": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "creationTimestamp": "dynamic"
                                    }
                                  ],
                                  "spec": [
                                    "object",
                                    {
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "command": [
                                                "tuple",
                                                [
                                                  "string",
                                                  "string",
                                                  "string"
                                                ]
                                              ],
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "image": "string",
                                              "imagePullPolicy": "string",
                                              "name": "string",
                                              "terminationMessagePath": "string",
                                              "terminationMessagePolicy": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "restartPolicy": "string",
                                      "serviceAccountName": "string",
                                      "terminationGracePeriodSeconds": "number"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "schedule": "string",
                      "successfulJobsHistoryLimit": "number",
                      "suspend": "bool"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "batch/v1",
                "kind": "CronJob",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ecr-cred-helper",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "concurrencyPolicy": "Allow",
                  "failedJobsHistoryLimit": 1,
                  "jobTemplate": {
                    "metadata": {
                      "annotations": null,
                      "creationTimestamp": null,
                      "deletionGracePeriodSeconds": null,
                      "deletionTimestamp": null,
                      "finalizers": null,
                      "generateName": null,
                      "generation": null,
                      "labels": null,
                      "managedFields": null,
                      "name": null,
                      "namespace": null,
                      "ownerReferences": null,
                      "resourceVersion": null,
                      "selfLink": null,
                      "uid": null
                    },
                    "spec": {
                      "activeDeadlineSeconds": null,
                      "backoffLimit": null,
                      "backoffLimitPerIndex": null,
                      "completionMode": null,
                      "completions": null,
                      "managedBy": null,
                      "manualSelector": null,
                      "maxFailedIndexes": null,
                      "parallelism": null,
                      "podFailurePolicy": {
                        "rules": null
                      },
                      "podReplacementPolicy": null,
                      "selector": {
                        "matchExpressions": null,
                        "matchLabels": null
                      },
                      "successPolicy": {
                        "rules": null
                      },
                      "suspend": null,
                      "template": {
                        "metadata": {
                          "annotations": null,
                          "creationTimestamp": null,
                          "deletionGracePeriodSeconds": null,
                          "deletionTimestamp": null,
                          "finalizers": null,
                          "generateName": null,
                          "generation": null,
                          "labels": null,
                          "managedFields": null,
                          "name": null,
                          "namespace": null,
                          "ownerReferences": null,
                          "resourceVersion": null,
                          "selfLink": null,
                          "uid": null
                        },
                        "spec": {
                          "activeDeadlineSeconds": null,
                          "affinity": {
                            "nodeAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": null
                              }
                            },
                            "podAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": null
                            },
                            "podAntiAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": null
                            }
                          },
                          "automountServiceAccountToken": null,
                          "containers": [
                            {
                              "args": null,
                              "command": [
                                "/bin/sh",
                                "-c",
                                "                    TOKEN=`aws ecr get-login --region $AWS_REGION --registry-ids $ACCOUNT | cut -d' ' -f6`\n                    echo 'ENV variables setup done.'\n                    kubectl delete secret -n $TARGET_NAMESPACE --ignore-not-found $DOCKER_SECRET_NAME\n                    kubectl create secret -n $TARGET_NAMESPACE docker-registry $DOCKER_SECRET_NAME --docker-server=$ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com --docker-username=AWS --docker-password=$TOKEN --docker-email=none\n                    echo \"Secret created by name $DOCKER_SECRET_NAME\"\n                    kubectl patch serviceaccount k8s-ecr-login-renew-account -p '{\"imagePullSecrets\":[{\"name\":\"'$DOCKER_SECRET_NAME'\"}]}' -n $TARGET_NAMESPACE\n                    echo 'All done.'\n"
                              ],
                              "env": [
                                {
                                  "name": "AWS_ACCESS_KEY_ID",
                                  "value": "AKIAW3MEBLSPMM3M6PHU",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "AWS_SECRET_ACCESS_KEY",
                                  "value": "JxOqgr8n0Aoi6v+ruKP0sjTaD7zA4eASOEBG9mBG",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "AWS_REGION",
                                  "value": "us-east-2",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "DOCKER_SECRET_NAME",
                                  "value": "docker-cfg",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "TARGET_NAMESPACE",
                                  "value": "qa",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "ACCOUNT",
                                  "value": "471112703134",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                }
                              ],
                              "envFrom": null,
                              "image": "odaniait/aws-kubectl:latest",
                              "imagePullPolicy": "IfNotPresent",
                              "lifecycle": {
                                "postStart": {
                                  "exec": {
                                    "command": null
                                  },
                                  "httpGet": {
                                    "host": null,
                                    "httpHeaders": null,
                                    "path": null,
                                    "port": null,
                                    "scheme": null
                                  },
                                  "sleep": {
                                    "seconds": null
                                  },
                                  "tcpSocket": {
                                    "host": null,
                                    "port": null
                                  }
                                },
                                "preStop": {
                                  "exec": {
                                    "command": null
                                  },
                                  "httpGet": {
                                    "host": null,
                                    "httpHeaders": null,
                                    "path": null,
                                    "port": null,
                                    "scheme": null
                                  },
                                  "sleep": {
                                    "seconds": null
                                  },
                                  "tcpSocket": {
                                    "host": null,
                                    "port": null
                                  }
                                }
                              },
                              "livenessProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "name": "k8s-ecr-login-renew",
                              "ports": null,
                              "readinessProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "resizePolicy": null,
                              "resources": {
                                "claims": null,
                                "limits": null,
                                "requests": null
                              },
                              "restartPolicy": null,
                              "securityContext": {
                                "allowPrivilegeEscalation": null,
                                "appArmorProfile": {
                                  "localhostProfile": null,
                                  "type": null
                                },
                                "capabilities": {
                                  "add": null,
                                  "drop": null
                                },
                                "privileged": null,
                                "procMount": null,
                                "readOnlyRootFilesystem": null,
                                "runAsGroup": null,
                                "runAsNonRoot": null,
                                "runAsUser": null,
                                "seLinuxOptions": {
                                  "level": null,
                                  "role": null,
                                  "type": null,
                                  "user": null
                                },
                                "seccompProfile": {
                                  "localhostProfile": null,
                                  "type": null
                                },
                                "windowsOptions": {
                                  "gmsaCredentialSpec": null,
                                  "gmsaCredentialSpecName": null,
                                  "hostProcess": null,
                                  "runAsUserName": null
                                }
                              },
                              "startupProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "stdin": null,
                              "stdinOnce": null,
                              "terminationMessagePath": "/dev/termination-log",
                              "terminationMessagePolicy": "File",
                              "tty": null,
                              "volumeDevices": null,
                              "volumeMounts": null,
                              "workingDir": null
                            }
                          ],
                          "dnsConfig": {
                            "nameservers": null,
                            "options": null,
                            "searches": null
                          },
                          "dnsPolicy": "ClusterFirst",
                          "enableServiceLinks": null,
                          "ephemeralContainers": null,
                          "hostAliases": null,
                          "hostIPC": null,
                          "hostNetwork": null,
                          "hostPID": null,
                          "hostUsers": null,
                          "hostname": null,
                          "imagePullSecrets": null,
                          "initContainers": null,
                          "nodeName": null,
                          "nodeSelector": null,
                          "os": {
                            "name": null
                          },
                          "overhead": null,
                          "preemptionPolicy": null,
                          "priority": null,
                          "priorityClassName": null,
                          "readinessGates": null,
                          "resourceClaims": null,
                          "restartPolicy": "Never",
                          "runtimeClassName": null,
                          "schedulerName": "default-scheduler",
                          "schedulingGates": null,
                          "securityContext": {
                            "appArmorProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "fsGroup": null,
                            "fsGroupChangePolicy": null,
                            "runAsGroup": null,
                            "runAsNonRoot": null,
                            "runAsUser": null,
                            "seLinuxOptions": {
                              "level": null,
                              "role": null,
                              "type": null,
                              "user": null
                            },
                            "seccompProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "supplementalGroups": null,
                            "supplementalGroupsPolicy": null,
                            "sysctls": null,
                            "windowsOptions": {
                              "gmsaCredentialSpec": null,
                              "gmsaCredentialSpecName": null,
                              "hostProcess": null,
                              "runAsUserName": null
                            }
                          },
                          "serviceAccount": "k8s-ecr-login-renew-account",
                          "serviceAccountName": "k8s-ecr-login-renew-account",
                          "setHostnameAsFQDN": null,
                          "shareProcessNamespace": null,
                          "subdomain": null,
                          "terminationGracePeriodSeconds": 30,
                          "tolerations": null,
                          "topologySpreadConstraints": null,
                          "volumes": null
                        }
                      },
                      "ttlSecondsAfterFinished": null
                    }
                  },
                  "schedule": "0 */6 * * *",
                  "startingDeadlineSeconds": null,
                  "successfulJobsHistoryLimit": 3,
                  "suspend": false,
                  "timeZone": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "concurrencyPolicy": "string",
                      "failedJobsHistoryLimit": "number",
                      "jobTemplate": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "creationTimestamp": "string",
                              "deletionGracePeriodSeconds": "number",
                              "deletionTimestamp": "string",
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "generateName": "string",
                              "generation": "number",
                              "labels": [
                                "map",
                                "string"
                              ],
                              "managedFields": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "apiVersion": "string",
                                      "fieldsType": "string",
                                      "fieldsV1": "dynamic",
                                      "manager": "string",
                                      "operation": "string",
                                      "subresource": "string",
                                      "time": "string"
                                    }
                                  ]
                                ]
                              ],
                              "name": "string",
                              "namespace": "string",
                              "ownerReferences": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "blockOwnerDeletion": "bool",
                                    "controller": "bool",
                                    "kind": "string",
                                    "name": "string",
                                    "uid": "string"
                                  }
                                ]
                              ],
                              "resourceVersion": "string",
                              "selfLink": "string",
                              "uid": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "activeDeadlineSeconds": "number",
                              "backoffLimit": "number",
                              "backoffLimitPerIndex": "number",
                              "completionMode": "string",
                              "completions": "number",
                              "managedBy": "string",
                              "manualSelector": "bool",
                              "maxFailedIndexes": "number",
                              "parallelism": "number",
                              "podFailurePolicy": [
                                "object",
                                {
                                  "rules": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "action": "string",
                                        "onExitCodes": [
                                          "object",
                                          {
                                            "containerName": "string",
                                            "operator": "string",
                                            "values": [
                                              "list",
                                              "number"
                                            ]
                                          }
                                        ],
                                        "onPodConditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "podReplacementPolicy": "string",
                              "selector": [
                                "object",
                                {
                                  "matchExpressions": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "key": "string",
                                        "operator": "string",
                                        "values": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ]
                                  ],
                                  "matchLabels": [
                                    "map",
                                    "string"
                                  ]
                                }
                              ],
                              "successPolicy": [
                                "object",
                                {
                                  "rules": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "succeededCount": "number",
                                        "succeededIndexes": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "suspend": "bool",
                              "template": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": [
                                        "map",
                                        "string"
                                      ],
                                      "creationTimestamp": "string",
                                      "deletionGracePeriodSeconds": "number",
                                      "deletionTimestamp": "string",
                                      "finalizers": [
                                        "list",
                                        "string"
                                      ],
                                      "generateName": "string",
                                      "generation": "number",
                                      "labels": [
                                        "map",
                                        "string"
                                      ],
                                      "managedFields": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "apiVersion": "string",
                                              "fieldsType": "string",
                                              "fieldsV1": "dynamic",
                                              "manager": "string",
                                              "operation": "string",
                                              "subresource": "string",
                                              "time": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "name": "string",
                                      "namespace": "string",
                                      "ownerReferences": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "apiVersion": "string",
                                            "blockOwnerDeletion": "bool",
                                            "controller": "bool",
                                            "kind": "string",
                                            "name": "string",
                                            "uid": "string"
                                          }
                                        ]
                                      ],
                                      "resourceVersion": "string",
                                      "selfLink": "string",
                                      "uid": "string"
                                    }
                                  ],
                                  "spec": [
                                    "object",
                                    {
                                      "activeDeadlineSeconds": "number",
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "preference": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchFields": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchFields": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "podAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "podAffinityTerm": [
                                                      "object",
                                                      {
                                                        "labelSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "matchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "mismatchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "namespaceSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "namespaces": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "topologyKey": "string"
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "labelSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "matchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "mismatchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "namespaceSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "namespaces": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "topologyKey": "string"
                                                  }
                                                ]
                                              ]
                                            }
                                          ],
                                          "podAntiAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "podAffinityTerm": [
                                                      "object",
                                                      {
                                                        "labelSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "matchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "mismatchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "namespaceSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "namespaces": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "topologyKey": "string"
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "labelSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "matchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "mismatchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "namespaceSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "namespaces": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "topologyKey": "string"
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "automountServiceAccountToken": "bool",
                                      "containers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "dnsConfig": [
                                        "object",
                                        {
                                          "nameservers": [
                                            "list",
                                            "string"
                                          ],
                                          "options": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "searches": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "dnsPolicy": "string",
                                      "enableServiceLinks": "bool",
                                      "ephemeralContainers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "targetContainerName": "string",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "hostAliases": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "hostnames": [
                                              "list",
                                              "string"
                                            ],
                                            "ip": "string"
                                          }
                                        ]
                                      ],
                                      "hostIPC": "bool",
                                      "hostNetwork": "bool",
                                      "hostPID": "bool",
                                      "hostUsers": "bool",
                                      "hostname": "string",
                                      "imagePullSecrets": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "initContainers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "nodeName": "string",
                                      "nodeSelector": [
                                        "map",
                                        "string"
                                      ],
                                      "os": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "overhead": [
                                        "map",
                                        "string"
                                      ],
                                      "preemptionPolicy": "string",
                                      "priority": "number",
                                      "priorityClassName": "string",
                                      "readinessGates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "conditionType": "string"
                                          }
                                        ]
                                      ],
                                      "resourceClaims": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "resourceClaimName": "string",
                                            "resourceClaimTemplateName": "string"
                                          }
                                        ]
                                      ],
                                      "restartPolicy": "string",
                                      "runtimeClassName": "string",
                                      "schedulerName": "string",
                                      "schedulingGates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "securityContext": [
                                        "object",
                                        {
                                          "appArmorProfile": [
                                            "object",
                                            {
                                              "localhostProfile": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "fsGroup": "number",
                                          "fsGroupChangePolicy": "string",
                                          "runAsGroup": "number",
                                          "runAsNonRoot": "bool",
                                          "runAsUser": "number",
                                          "seLinuxOptions": [
                                            "object",
                                            {
                                              "level": "string",
                                              "role": "string",
                                              "type": "string",
                                              "user": "string"
                                            }
                                          ],
                                          "seccompProfile": [
                                            "object",
                                            {
                                              "localhostProfile": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "supplementalGroups": [
                                            "list",
                                            "number"
                                          ],
                                          "supplementalGroupsPolicy": "string",
                                          "sysctls": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "windowsOptions": [
                                            "object",
                                            {
                                              "gmsaCredentialSpec": "string",
                                              "gmsaCredentialSpecName": "string",
                                              "hostProcess": "bool",
                                              "runAsUserName": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "serviceAccount": "string",
                                      "serviceAccountName": "string",
                                      "setHostnameAsFQDN": "bool",
                                      "shareProcessNamespace": "bool",
                                      "subdomain": "string",
                                      "terminationGracePeriodSeconds": "number",
                                      "tolerations": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "effect": "string",
                                            "key": "string",
                                            "operator": "string",
                                            "tolerationSeconds": "number",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "topologySpreadConstraints": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "matchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "maxSkew": "number",
                                            "minDomains": "number",
                                            "nodeAffinityPolicy": "string",
                                            "nodeTaintsPolicy": "string",
                                            "topologyKey": "string",
                                            "whenUnsatisfiable": "string"
                                          }
                                        ]
                                      ],
                                      "volumes": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "awsElasticBlockStore": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "partition": "number",
                                                  "readOnly": "bool",
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "azureDisk": [
                                                "object",
                                                {
                                                  "cachingMode": "string",
                                                  "diskName": "string",
                                                  "diskURI": "string",
                                                  "fsType": "string",
                                                  "kind": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "azureFile": [
                                                "object",
                                                {
                                                  "readOnly": "bool",
                                                  "secretName": "string",
                                                  "shareName": "string"
                                                }
                                              ],
                                              "cephfs": [
                                                "object",
                                                {
                                                  "monitors": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "path": "string",
                                                  "readOnly": "bool",
                                                  "secretFile": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "user": "string"
                                                }
                                              ],
                                              "cinder": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "configMap": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "csi": [
                                                "object",
                                                {
                                                  "driver": "string",
                                                  "fsType": "string",
                                                  "nodePublishSecretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "readOnly": "bool",
                                                  "volumeAttributes": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "downwardAPI": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "fieldRef": [
                                                          "object",
                                                          {
                                                            "apiVersion": "string",
                                                            "fieldPath": "string"
                                                          }
                                                        ],
                                                        "mode": "number",
                                                        "path": "string",
                                                        "resourceFieldRef": [
                                                          "object",
                                                          {
                                                            "containerName": "string",
                                                            "divisor": "string",
                                                            "resource": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "emptyDir": [
                                                "object",
                                                {
                                                  "medium": "string",
                                                  "sizeLimit": "string"
                                                }
                                              ],
                                              "ephemeral": [
                                                "object",
                                                {
                                                  "volumeClaimTemplate": [
                                                    "object",
                                                    {
                                                      "metadata": [
                                                        "object",
                                                        {
                                                          "annotations": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "creationTimestamp": "string",
                                                          "deletionGracePeriodSeconds": "number",
                                                          "deletionTimestamp": "string",
                                                          "finalizers": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "generateName": "string",
                                                          "generation": "number",
                                                          "labels": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "managedFields": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "apiVersion": "string",
                                                                  "fieldsType": "string",
                                                                  "fieldsV1": "dynamic",
                                                                  "manager": "string",
                                                                  "operation": "string",
                                                                  "subresource": "string",
                                                                  "time": "string"
                                                                }
                                                              ]
                                                            ]
                                                          ],
                                                          "name": "string",
                                                          "namespace": "string",
                                                          "ownerReferences": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "apiVersion": "string",
                                                                "blockOwnerDeletion": "bool",
                                                                "controller": "bool",
                                                                "kind": "string",
                                                                "name": "string",
                                                                "uid": "string"
                                                              }
                                                            ]
                                                          ],
                                                          "resourceVersion": "string",
                                                          "selfLink": "string",
                                                          "uid": "string"
                                                        }
                                                      ],
                                                      "spec": [
                                                        "object",
                                                        {
                                                          "accessModes": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "dataSource": [
                                                            "object",
                                                            {
                                                              "apiGroup": "string",
                                                              "kind": "string",
                                                              "name": "string"
                                                            }
                                                          ],
                                                          "dataSourceRef": [
                                                            "object",
                                                            {
                                                              "apiGroup": "string",
                                                              "kind": "string",
                                                              "name": "string",
                                                              "namespace": "string"
                                                            }
                                                          ],
                                                          "resources": [
                                                            "object",
                                                            {
                                                              "limits": [
                                                                "map",
                                                                "string"
                                                              ],
                                                              "requests": [
                                                                "map",
                                                                "string"
                                                              ]
                                                            }
                                                          ],
                                                          "selector": [
                                                            "object",
                                                            {
                                                              "matchExpressions": [
                                                                "list",
                                                                [
                                                                  "object",
                                                                  {
                                                                    "key": "string",
                                                                    "operator": "string",
                                                                    "values": [
                                                                      "list",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ]
                                                              ],
                                                              "matchLabels": [
                                                                "map",
                                                                "string"
                                                              ]
                                                            }
                                                          ],
                                                          "storageClassName": "string",
                                                          "volumeAttributesClassName": "string",
                                                          "volumeMode": "string",
                                                          "volumeName": "string"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "fc": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "lun": "number",
                                                  "readOnly": "bool",
                                                  "targetWWNs": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "wwids": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "flexVolume": [
                                                "object",
                                                {
                                                  "driver": "string",
                                                  "fsType": "string",
                                                  "options": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "flocker": [
                                                "object",
                                                {
                                                  "datasetName": "string",
                                                  "datasetUUID": "string"
                                                }
                                              ],
                                              "gcePersistentDisk": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "partition": "number",
                                                  "pdName": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "gitRepo": [
                                                "object",
                                                {
                                                  "directory": "string",
                                                  "repository": "string",
                                                  "revision": "string"
                                                }
                                              ],
                                              "glusterfs": [
                                                "object",
                                                {
                                                  "endpoints": "string",
                                                  "path": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "hostPath": [
                                                "object",
                                                {
                                                  "path": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "image": [
                                                "object",
                                                {
                                                  "pullPolicy": "string",
                                                  "reference": "string"
                                                }
                                              ],
                                              "iscsi": [
                                                "object",
                                                {
                                                  "chapAuthDiscovery": "bool",
                                                  "chapAuthSession": "bool",
                                                  "fsType": "string",
                                                  "initiatorName": "string",
                                                  "iqn": "string",
                                                  "iscsiInterface": "string",
                                                  "lun": "number",
                                                  "portals": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "targetPortal": "string"
                                                }
                                              ],
                                              "name": "string",
                                              "nfs": [
                                                "object",
                                                {
                                                  "path": "string",
                                                  "readOnly": "bool",
                                                  "server": "string"
                                                }
                                              ],
                                              "persistentVolumeClaim": [
                                                "object",
                                                {
                                                  "claimName": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "photonPersistentDisk": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "pdID": "string"
                                                }
                                              ],
                                              "portworxVolume": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "projected": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "sources": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "clusterTrustBundle": [
                                                          "object",
                                                          {
                                                            "labelSelector": [
                                                              "object",
                                                              {
                                                                "matchExpressions": [
                                                                  "list",
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "key": "string",
                                                                      "operator": "string",
                                                                      "values": [
                                                                        "list",
                                                                        "string"
                                                                      ]
                                                                    }
                                                                  ]
                                                                ],
                                                                "matchLabels": [
                                                                  "map",
                                                                  "string"
                                                                ]
                                                              }
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool",
                                                            "path": "string",
                                                            "signerName": "string"
                                                          }
                                                        ],
                                                        "configMap": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "mode": "number",
                                                                  "path": "string"
                                                                }
                                                              ]
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool"
                                                          }
                                                        ],
                                                        "downwardAPI": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "fieldRef": [
                                                                    "object",
                                                                    {
                                                                      "apiVersion": "string",
                                                                      "fieldPath": "string"
                                                                    }
                                                                  ],
                                                                  "mode": "number",
                                                                  "path": "string",
                                                                  "resourceFieldRef": [
                                                                    "object",
                                                                    {
                                                                      "containerName": "string",
                                                                      "divisor": "string",
                                                                      "resource": "string"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          }
                                                        ],
                                                        "secret": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "mode": "number",
                                                                  "path": "string"
                                                                }
                                                              ]
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool"
                                                          }
                                                        ],
                                                        "serviceAccountToken": [
                                                          "object",
                                                          {
                                                            "audience": "string",
                                                            "expirationSeconds": "number",
                                                            "path": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "quobyte": [
                                                "object",
                                                {
                                                  "group": "string",
                                                  "readOnly": "bool",
                                                  "registry": "string",
                                                  "tenant": "string",
                                                  "user": "string",
                                                  "volume": "string"
                                                }
                                              ],
                                              "rbd": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "image": "string",
                                                  "keyring": "string",
                                                  "monitors": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "pool": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "user": "string"
                                                }
                                              ],
                                              "scaleIO": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "gateway": "string",
                                                  "protectionDomain": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "sslEnabled": "bool",
                                                  "storageMode": "string",
                                                  "storagePool": "string",
                                                  "system": "string",
                                                  "volumeName": "string"
                                                }
                                              ],
                                              "secret": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "optional": "bool",
                                                  "secretName": "string"
                                                }
                                              ],
                                              "storageos": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "volumeName": "string",
                                                  "volumeNamespace": "string"
                                                }
                                              ],
                                              "vsphereVolume": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "storagePolicyID": "string",
                                                  "storagePolicyName": "string",
                                                  "volumePath": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "ttlSecondsAfterFinished": "number"
                            }
                          ]
                        }
                      ],
                      "schedule": "string",
                      "startingDeadlineSeconds": "number",
                      "successfulJobsHistoryLimit": "number",
                      "suspend": "bool",
                      "timeZone": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_dev_k8s_ecr_login_renew_account",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "name": "k8s-ecr-login-renew-account",
                  "namespace": "qa"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": null,
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-account",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": null
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "471112703134",
            "arn": "arn:aws:iam::471112703134:user/terraform",
            "id": "471112703134",
            "user_id": "AIDAW3MEBLSPJOK3PXCG2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::471112703134:user/terraform",
            "id": "arn:aws:iam::471112703134:user/terraform",
            "issuer_arn": "arn:aws:iam::471112703134:user/terraform",
            "issuer_id": "",
            "issuer_name": "",
            "session_name": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSTNQG0mfAmRzdKZqfODF5hTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjYwNFoXDTMwMDgyMzIyMjYwNFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALd/pVko\n8vuM475Tf45HV3BbCl/B9Jy89G1CRkFjcPY06WA9lS+7dWbUA7GtWUKoksr69hKM\nwcMsNpxlw7b3jeXFgxB09/nmalcAWtnLzF+LaDKEA5DQmvKzuh1nfIfqEiKCQSmX\nXh09Xs+dO7cm5qbaL2hhNJCSAejciwcvOFgFNgEMR42wm6KIFHsQW28jhA+1u/M0\np6fVwReuEgZfLfdx82Px0LJck3lST3EB/JfbdsdOzzzg5YkY1dfuqf8y5fUeZ7Cz\nWXbTjujwX/TovmeWKA36VLCz75azW6tDNuDn66FOpADZZ9omVaF6BqNJiLMVl6P3\n/c0OiUMC6Z5OfKcCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUVdkYX9IczAHhWLS+q9lVQgHXLgIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAGjeWm2cC+3z2MzSCnte46/7JZvj3iQZDY7EvODNdZF41n71Lrk9kbfNwerK0d\nVNzW36Wefr7j7ZSwBVg50W5ay65jNSN74TTQV1yt4WnSbVvN6KlMs1hiyOZdoHKs\nKDV2UGNxbdoBYCQNa2GYF8FQIWLugNp35aSOpMy6cFlymFQomIrnOQHwK1nvVY4q\nxDSJMU/gNJz17D8ArPN3ngnyZ2TwepJ0uBINz3G5te2rdFUF4i4Y3Bb7FUlHDYm4\nu8aIRGpk2ZpfXmxaoxnbIBZRvGLPSUuPwnwoUOMsJ8jirI5vs2dvchPb7MtI1rle\ni02f2ivH2vxkjDLltSpe2fiC\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:26:04Z",
                "not_before": "2022-08-23T22:26:04Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129356476704345391986644047206454194698629",
                "sha1_fingerprint": "d9fe0a65fa00cabf61f5120d373a8135e1461f15",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF6TCCBNGgAwIBAgIQC1pmj3MJbfdZEwuZaK0yeDANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAzMB4XDTI0MDMyNzAwMDAwMFoXDTI1MDQyNTIzNTk1OVowKDEm\nMCQGA1UEAwwdKi5la3MudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20wggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCyfP2lMr2GZr3NlTFQcpZ1LcOH8Zao627X\ntI4MO+P1IarmDJT7rne8+pjduGWhmddZmN8IcpiDCREoFvyf2jC5Lk0CwRnzLIhZ\nj6vd75gFCWJFzKnfz6F/xtUudATESARr/E8JlsScKY5eoqHPRPqMgzW6HFY46ONu\nBN8pk3iA6S8tN2LvF/aWUc8J546V1Zrruw2h3FvGAQtqDxBgcA/SwXjiIO6+4D8P\ntu0qdTlA7/AS8ph1tJDQ5Xv4wG0ZJ5uMm9S9pS/3SPWMEkTKNp+QpNMGYvX7sure\n0oqX+oJIDC9IbKIscrsmkAwqS7PWFWszpojo8Ur/62RmLQOiJ/PXAgMBAAGjggL5\nMIIC9TAfBgNVHSMEGDAWgBRV2Rhf0hzMAeFYtL6r2VVCAdcuAjAdBgNVHQ4EFgQU\npytkck5Jdaa1DjuIJMpyBxd3ztMwKAYDVR0RBCEwH4IdKi5la3MudXMtZWFzdC0y\nLmFtYXpvbmF3cy5jb20wEwYDVR0gBAwwCjAIBgZngQwBAgEwDgYDVR0PAQH/BAQD\nAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCg\nLqAshipodHRwOi8vY3JsLnIybTAzLmFtYXpvbnRydXN0LmNvbS9yMm0wMy5jcmww\ndQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5yMm0wMy5h\nbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJtMDMuYW1h\nem9udHJ1c3QuY29tL3IybTAzLmNlcjAMBgNVHRMBAf8EAjAAMIIBgQYKKwYBBAHW\neQIEAgSCAXEEggFtAWsAdwBOdaMnXJoQwzhbbNTfP1LrHfDgjhuNacCx+mSxYpo5\n3wAAAY6B4toRAAAEAwBIMEYCIQCL2lZOGqo75PNnFiLldA7Gd39egtnXDTY+HHYO\n++O98gIhALSzX7cp+Y17fzfL5TAFWZm0+/7LFdyrQEEsgntEXCdTAHcAfVkeEuF4\nKnscYWd8Xv340IdcFKBOlZ65Ay/ZDowuebgAAAGOgeLZyAAABAMASDBGAiEA2EeA\nVUmkO2biyHSh0v+5Uo/NRG53wDwMKBRMLB+03oYCIQCBdgI4o8mFSYNASwhYKGWP\nIt5yi7Hmoi1pFefYiBmGbAB3AObSMWNAd4zBEEEG13G5zsHSQPaWhIb7uocyHf0e\nN45QAAABjoHi2dgAAAQDAEgwRgIhAK2MT0pX3Et7hx26gxiJwGj7u3v/9xMJHVhK\nC5fnxlfNAiEAizPUX2b3GrMeYnINHOy98KbPvkCzGHtN6qcdbf7w3T8wDQYJKoZI\nhvcNAQELBQADggEBAKknRf08AG7Hpn2h4HOyZPC0weNsrS/c8VIXRRSFth1nxQsZ\nyscbVOiJ6j7M6VvfjEmvsL7tvj3UlWmxJuadatX9HIX2KT2mq1fJxv/kX0laHtGl\nWbP3+CYHYCnZf8yPV7EaRJB2AtbGwV7rBd6mb9tDy2uAouTeANQi2XNVoCvGNkSQ\n/zIt0K+TA+efYW3wGhFuMHJOnwJ0a4mXwI7rHclijeztb680ga+F+Indpp5pMmsr\neNyO2TImDxtfDd/l8z2qNDzpyXIeSt2JgORnO5AjGC0EWD2p/hIsLCbG+QnB5IYo\nwHAg3LNrgxkdOWoY23z/WYylg4DdPzPT1SuHKYk=\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "not_after": "2025-04-25T23:59:59Z",
                "not_before": "2024-03-27T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "15090894841911196861235261040086561400",
                "sha1_fingerprint": "32f9e66ae934e90332545a9e7494591af3f34938",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=*.eks.us-east-2.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "41c9ad86376859231a2244535dff0f089ba892cb",
            "url": "https://oidc.eks.us-east-2.amazonaws.com/id/146CD5DFB6FE6F97FEFA82AFF8F43E57",
            "verify_chain": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:471112703134:log-group:/aws/eks/eks-fYrRWZOz/cluster",
            "id": "/aws/eks/eks-fYrRWZOz/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/eks-fYrRWZOz/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/eks-fYrRWZOz/cluster"
            },
            "tags_all": {
              "Name": "/aws/eks/eks-fYrRWZOz/cluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": false
              }
            ],
            "arn": "arn:aws:eks:us-east-2:471112703134:cluster/eks-fYrRWZOz",
            "bootstrap_self_managed_addons": true,
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTHd3dXl3RkNobEl3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBNE16QXhORE00TkRsYUZ3MHpOREE0TWpneE5EUXpORGxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMvajN2VVkyTFR1aXVQVjJzMUV5UHdmdXBQZzZHcHFtT1ZudytaMjlsdGpSUmdXQUZPMFJkdlYvYU8KV29DMVJYbXBwc1JUcHlYMGZKTWpjOEtlT1M5NDBCVWw3RmZZeDVrMGxuTzFuNm9nclVJYmZTQUxPazFxQlBqRQpLOWdXTFc3dnU0T0F5SnlGdFZHWk1xSldNRUQyNitpK0hSWkxZY3VIRVUzeTJSUUp1QzMrcER4TXdVemlkbFV6CnMzazUwQ2Rhdm5QWmZRb0NsMWdxQ3EzY1hrbHc4SERXTVFpbTFCbktyb3V2UGhIbGppSEN1YU03UU1WSjJhTDEKMGZIYnRkQ2xWVVV6Z3hJOXdlQWtJSUEvTTk0VmNBQmMrWlJUSTRuNnZBTWFkbUcraVNPb1pYaVFReHZlZXQ1LwpBSWpmNHpFR0luaWV5K3lZZXE4ZHV5dmVKUGxmQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUeEVWR3NjUEVZOHBUWEpCWEZ5NXBXZk56M0xUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkg4QzhHNXAwago5bHc5ZnBPZlBuT3k1NkIvdGEvQjNwcWtSS0dVOTZlV3E1M0dtdU40UURiTDM2TXZtYlFvZmF2UXhIK3JzOGZpCitTbW42elRJU21Fd210bDVldmxTWHkrSlJsY1IzT2xTN3NIdlJPR3YraTdzd0xWZ01lTnVuNG5XazZuSkpaQmsKWGRDVjYxaU5sQmF3c2dRczgzSHVJK05hSDNQVDZuSzhhd1JqbUtybnRuY0c4Nzd5eHZ2VEcyVlg4dC81TG1vegpxZGk2RVJ1WVhPTlpTVjBWOUhDL0FFREpQQ2JWcmY0cDJYZjgveTFUc00vR01SSmJZd09ycWZoSDVPOTlEMnZECklrMCt3K2kwYXgvYWJ5QmEvY0lIN2JIcUM5UEQrV0VIVGV0SVI1ck9iWkhOVFNLVitUK3ZQYUd2eUtXNW4xRUUKSjJZRGw0VjlSRGtICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-08-30 14:39:12.999 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:us-east-2:471112703134:key/ff037378-801a-442d-a490-c69c829b6db6"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://146CD5DFB6FE6F97FEFA82AFF8F43E57.gr7.us-east-2.eks.amazonaws.com",
            "id": "eks-fYrRWZOz",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-2.amazonaws.com/id/146CD5DFB6FE6F97FEFA82AFF8F43E57"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "eks-fYrRWZOz",
            "outpost_config": [],
            "platform_version": "eks.12",
            "role_arn": "arn:aws:iam::471112703134:role/eks-fYrRWZOz-cluster-20240830143847643100000002",
            "status": "ACTIVE",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.31",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-06766186b84bc4682",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0bafedebfb3963747"
                ],
                "subnet_ids": [
                  "subnet-0a0c645e4396ec0ca",
                  "subnet-0c67d0e45013d9ed2",
                  "subnet-0db748ac309effe57"
                ],
                "vpc_id": "vpc-0e410be858ecb330b"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::471112703134:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/146CD5DFB6FE6F97FEFA82AFF8F43E57",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::471112703134:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/146CD5DFB6FE6F97FEFA82AFF8F43E57",
            "tags": {
              "Name": "eks-fYrRWZOz-eks-irsa"
            },
            "tags_all": {
              "Name": "eks-fYrRWZOz-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-east-2.amazonaws.com/id/146CD5DFB6FE6F97FEFA82AFF8F43E57"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::471112703134:policy/eks-fYrRWZOz-cluster-ClusterEncryption2024083014390798400000000f",
            "attachment_count": 1,
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::471112703134:policy/eks-fYrRWZOz-cluster-ClusterEncryption2024083014390798400000000f",
            "name": "eks-fYrRWZOz-cluster-ClusterEncryption2024083014390798400000000f",
            "name_prefix": "eks-fYrRWZOz-cluster-ClusterEncryption",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-2:471112703134:key/ff037378-801a-442d-a490-c69c829b6db6\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAW3MEBLSPASZ6D7Z3D",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::471112703134:role/eks-fYrRWZOz-cluster-20240830143847643100000002",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-08-30T14:38:47Z",
            "description": "",
            "force_detach_policies": true,
            "id": "eks-fYrRWZOz-cluster-20240830143847643100000002",
            "inline_policy": [
              {
                "name": "eks-fYrRWZOz-cluster",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::471112703134:policy/eks-fYrRWZOz-cluster-ClusterEncryption2024083014390798400000000f",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "eks-fYrRWZOz-cluster-20240830143847643100000002",
            "name_prefix": "eks-fYrRWZOz-cluster-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAW3MEBLSPD5F3E7ZGO"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "eks-fYrRWZOz-cluster-20240830143847643100000002-20240830143908601000000010",
            "policy_arn": "arn:aws:iam::471112703134:policy/eks-fYrRWZOz-cluster-ClusterEncryption2024083014390798400000000f",
            "role": "eks-fYrRWZOz-cluster-20240830143847643100000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "eks-fYrRWZOz-cluster-20240830143847643100000002-20240830143850000400000003",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "eks-fYrRWZOz-cluster-20240830143847643100000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "eks-fYrRWZOz-cluster-20240830143847643100000002-20240830143850300600000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "eks-fYrRWZOz-cluster-20240830143847643100000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:security-group/sg-0bafedebfb3963747",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-0bafedebfb3963747",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-08914a10ee235c741"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "eks-fYrRWZOz-cluster-2024083014385703960000000c",
            "name_prefix": "eks-fYrRWZOz-cluster-",
            "owner_id": "471112703134",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-fYrRWZOz-cluster"
            },
            "tags_all": {
              "Name": "eks-fYrRWZOz-cluster"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:security-group/sg-08914a10ee235c741",
            "description": "EKS node shared security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all egress",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-08914a10ee235c741",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [
                  "sg-00999c707e71c167a"
                ],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 4443/tcp webhook",
                "from_port": 4443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0bafedebfb3963747"
                ],
                "self": false,
                "to_port": 4443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 6443/tcp webhook",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0bafedebfb3963747"
                ],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 8443/tcp webhook",
                "from_port": 8443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0bafedebfb3963747"
                ],
                "self": false,
                "to_port": 8443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 9443/tcp webhook",
                "from_port": 9443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0bafedebfb3963747"
                ],
                "self": false,
                "to_port": 9443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0bafedebfb3963747"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0bafedebfb3963747"
                ],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS UDP",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node ingress on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 65535
              }
            ],
            "name": "eks-fYrRWZOz-node-2024083014385651660000000b",
            "name_prefix": "eks-fYrRWZOz-node-",
            "owner_id": "471112703134",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-fYrRWZOz-node",
              "kubernetes.io/cluster/eks-fYrRWZOz": "owned"
            },
            "tags_all": {
              "Name": "eks-fYrRWZOz-node",
              "kubernetes.io/cluster/eks-fYrRWZOz": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-2902346183",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0bafedebfb3963747",
            "security_group_rule_id": "sgr-0a21d60531d2ccf9c",
            "self": false,
            "source_security_group_id": "sg-08914a10ee235c741",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-728246630",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-08914a10ee235c741",
            "security_group_rule_id": "sgr-0761c4fb7192bc7c9",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-335386552",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08914a10ee235c741",
            "security_group_rule_id": "sgr-06700341dd238b9f4",
            "self": false,
            "source_security_group_id": "sg-0bafedebfb3963747",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-3120028310",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08914a10ee235c741",
            "security_group_rule_id": "sgr-02785163387f5424f",
            "self": false,
            "source_security_group_id": "sg-0bafedebfb3963747",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-1890958592",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08914a10ee235c741",
            "security_group_rule_id": "sgr-0f3c93695f30aa566",
            "self": false,
            "source_security_group_id": "sg-0bafedebfb3963747",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-1676247329",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08914a10ee235c741",
            "security_group_rule_id": "sgr-057860a52664f57bc",
            "self": false,
            "source_security_group_id": "sg-0bafedebfb3963747",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-122204906",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08914a10ee235c741",
            "security_group_rule_id": "sgr-0547143150ac1b843",
            "self": false,
            "source_security_group_id": "sg-0bafedebfb3963747",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-33264403",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08914a10ee235c741",
            "security_group_rule_id": "sgr-073543e6c951586d5",
            "self": false,
            "source_security_group_id": "sg-0bafedebfb3963747",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-3186376050",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08914a10ee235c741",
            "security_group_rule_id": "sgr-0a4e676c155ce592f",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-4194557546",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08914a10ee235c741",
            "security_group_rule_id": "sgr-05bbf26e31e49a2a4",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-1583119749",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-08914a10ee235c741",
            "security_group_rule_id": "sgr-0b6e0fd916cbd5d27",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2024-11-13T22:55:27Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTHd3dXl3RkNobEl3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBNE16QXhORE00TkRsYUZ3MHpOREE0TWpneE5EUXpORGxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMvajN2VVkyTFR1aXVQVjJzMUV5UHdmdXBQZzZHcHFtT1ZudytaMjlsdGpSUmdXQUZPMFJkdlYvYU8KV29DMVJYbXBwc1JUcHlYMGZKTWpjOEtlT1M5NDBCVWw3RmZZeDVrMGxuTzFuNm9nclVJYmZTQUxPazFxQlBqRQpLOWdXTFc3dnU0T0F5SnlGdFZHWk1xSldNRUQyNitpK0hSWkxZY3VIRVUzeTJSUUp1QzMrcER4TXdVemlkbFV6CnMzazUwQ2Rhdm5QWmZRb0NsMWdxQ3EzY1hrbHc4SERXTVFpbTFCbktyb3V2UGhIbGppSEN1YU03UU1WSjJhTDEKMGZIYnRkQ2xWVVV6Z3hJOXdlQWtJSUEvTTk0VmNBQmMrWlJUSTRuNnZBTWFkbUcraVNPb1pYaVFReHZlZXQ1LwpBSWpmNHpFR0luaWV5K3lZZXE4ZHV5dmVKUGxmQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUeEVWR3NjUEVZOHBUWEpCWEZ5NXBXZk56M0xUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkg4QzhHNXAwago5bHc5ZnBPZlBuT3k1NkIvdGEvQjNwcWtSS0dVOTZlV3E1M0dtdU40UURiTDM2TXZtYlFvZmF2UXhIK3JzOGZpCitTbW42elRJU21Fd210bDVldmxTWHkrSlJsY1IzT2xTN3NIdlJPR3YraTdzd0xWZ01lTnVuNG5XazZuSkpaQmsKWGRDVjYxaU5sQmF3c2dRczgzSHVJK05hSDNQVDZuSzhhd1JqbUtybnRuY0c4Nzd5eHZ2VEcyVlg4dC81TG1vegpxZGk2RVJ1WVhPTlpTVjBWOUhDL0FFREpQQ2JWcmY0cDJYZjgveTFUc00vR01SSmJZd09ycWZoSDVPOTlEMnZECklrMCt3K2kwYXgvYWJ5QmEvY0lIN2JIcUM5UEQrV0VIVGV0SVI1ck9iWkhOVFNLVitUK3ZQYUd2eUtXNW4xRUUKSjJZRGw0VjlSRGtICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "cluster_endpoint": "https://146CD5DFB6FE6F97FEFA82AFF8F43E57.gr7.us-east-2.eks.amazonaws.com",
              "cluster_name": "eks-fYrRWZOz",
              "cluster_service_cidr": "172.20.0.0/16",
              "cluster_version": "1.31"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "471112703134",
            "arn": "arn:aws:iam::471112703134:user/terraform",
            "id": "471112703134",
            "user_id": "AIDAW3MEBLSPJOK3PXCG2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:us-east-2:471112703134:nodegroup/eks-fYrRWZOz/node-group-1-20240830144801100900000013/5ac8d1e0-f72d-209a-0938-b750fa82aa18",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "eks-fYrRWZOz",
            "disk_size": 0,
            "force_update_version": null,
            "id": "eks-fYrRWZOz:node-group-1-20240830144801100900000013",
            "instance_types": [
              "t3.large"
            ],
            "labels": {},
            "launch_template": [
              {
                "id": "lt-0648567431b8df502",
                "name": "one-20240830144800201200000011",
                "version": "1"
              }
            ],
            "node_group_name": "node-group-1-20240830144801100900000013",
            "node_group_name_prefix": "node-group-1-",
            "node_role_arn": "arn:aws:iam::471112703134:role/node-group-1-eks-node-group-20240830143846705400000001",
            "release_version": "1.31.0-20241109",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-node-group-1-20240830144801100900000013-5ac8d1e0-f72d-209a-0938-b750fa82aa18"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 3,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-0a0c645e4396ec0ca",
              "subnet-0c67d0e45013d9ed2",
              "subnet-0db748ac309effe57"
            ],
            "tags": {
              "Name": "node-group-1"
            },
            "tags_all": {
              "Name": "node-group-1"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.31"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::471112703134:role/node-group-1-eks-node-group-20240830143846705400000001",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-08-30T14:38:47Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "node-group-1-eks-node-group-20240830143846705400000001",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "node-group-1-eks-node-group-20240830143846705400000001",
            "name_prefix": "node-group-1-eks-node-group-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAW3MEBLSPB33CS32UR"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240830143846705400000001-20240830143850593600000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "node-group-1-eks-node-group-20240830143846705400000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240830143846705400000001-20240830143850768400000006",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "node-group-1-eks-node-group-20240830143846705400000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240830143846705400000001-20240830143850878000000007",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "node-group-1-eks-node-group-20240830143846705400000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:launch-template/lt-0648567431b8df502",
            "block_device_mappings": [],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "default_version": 1,
            "description": "Custom launch template for node-group-1 EKS managed node group",
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_optimized": "",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-0648567431b8df502",
            "image_id": "",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_requirements": [],
            "instance_type": "",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "maintenance_options": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": ""
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "one-20240830144800201200000011",
            "name_prefix": "one-",
            "network_interfaces": [],
            "placement": [],
            "private_dns_name_options": [],
            "ram_disk_id": "",
            "security_group_names": [],
            "tag_specifications": [
              {
                "resource_type": "instance",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "network-interface",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "volume",
                "tags": {
                  "Name": "node-group-1"
                }
              }
            ],
            "tags": {},
            "tags_all": {},
            "update_default_version": true,
            "user_data": "",
            "vpc_security_group_ids": [
              "sg-08914a10ee235c741"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"].module.user_data",
      "mode": "managed",
      "type": "null_resource",
      "name": "validate_cluster_service_cidr",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2230301633166333131",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "471112703134",
            "arn": "arn:aws:iam::471112703134:user/terraform",
            "id": "471112703134",
            "user_id": "AIDAW3MEBLSPJOK3PXCG2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1487736152",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Default\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::471112703134:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:ReplicateKey\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:ImportKeyMaterial\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::471112703134:user/terraform\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::471112703134:role/eks-fYrRWZOz-cluster-20240830143847643100000002\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Default\",\"Effect\":\"Allow\",\"Action\":\"kms:*\",\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::471112703134:root\"}},{\"Sid\":\"KeyAdministration\",\"Effect\":\"Allow\",\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::471112703134:user/terraform\"}},{\"Sid\":\"KeyUsage\",\"Effect\":\"Allow\",\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::471112703134:role/eks-fYrRWZOz-cluster-20240830143847643100000002\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::471112703134:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "Default"
              },
              {
                "actions": [
                  "kms:CancelKeyDeletion",
                  "kms:Create*",
                  "kms:Delete*",
                  "kms:Describe*",
                  "kms:Disable*",
                  "kms:Enable*",
                  "kms:Get*",
                  "kms:ImportKeyMaterial",
                  "kms:List*",
                  "kms:Put*",
                  "kms:ReplicateKey",
                  "kms:Revoke*",
                  "kms:ScheduleKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:Update*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::471112703134:user/terraform"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyAdministration"
              },
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::471112703134:role/eks-fYrRWZOz-cluster-20240830143847643100000002"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyUsage"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-2:471112703134:alias/eks/eks-fYrRWZOz",
            "id": "alias/eks/eks-fYrRWZOz",
            "name": "alias/eks/eks-fYrRWZOz",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:us-east-2:471112703134:key/ff037378-801a-442d-a490-c69c829b6db6",
            "target_key_id": "ff037378-801a-442d-a490-c69c829b6db6"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-2:471112703134:key/ff037378-801a-442d-a490-c69c829b6db6",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "eks-fYrRWZOz cluster encryption key",
            "enable_key_rotation": true,
            "id": "ff037378-801a-442d-a490-c69c829b6db6",
            "is_enabled": true,
            "key_id": "ff037378-801a-442d-a490-c69c829b6db6",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::471112703134:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::471112703134:user/terraform\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::471112703134:role/eks-fYrRWZOz-cluster-20240830143847643100000002\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
            "rotation_period_in_days": 365,
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": null,
            "xks_key_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "qa",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "qa",
                "resource_version": "3046",
                "uid": "0346cb0e-4d36-4273-9396-196f77e433f4"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/backend-auth",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 130,
                "labels": {},
                "name": "backend-auth",
                "namespace": "qa",
                "resource_version": "23523836",
                "uid": "096ab260-197b-4c1a-899e-47041506f1ca"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-auth"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-auth"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "471112703134.dkr.ecr.us-east-2.amazonaws.com/backend-auth:qa-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-auth",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/backend-auth",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-auth",
                "namespace": "qa",
                "resource_version": "3135",
                "uid": "14ee9282-7173-4165-9678-9a35a501c9cd"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.45.77",
                "cluster_ips": [
                  "172.20.45.77"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-auth"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-codes\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "qa",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "qa",
                "resource_version": "3046",
                "uid": "0346cb0e-4d36-4273-9396-196f77e433f4"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-codes\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/backend-codes",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 15,
                "labels": {},
                "name": "backend-codes",
                "namespace": "qa",
                "resource_version": "18095914",
                "uid": "ebe36d68-2874-455d-9ed8-1633e93f70b6"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-codes"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-codes"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "471112703134.dkr.ecr.us-east-2.amazonaws.com/backend-codes:main-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-codes",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-codes\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/backend-codes",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-codes",
                "namespace": "qa",
                "resource_version": "1026704",
                "uid": "7127ff24-2d31-4c5e-8461-2b3bd92f7517"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.119.80",
                "cluster_ips": [
                  "172.20.119.80"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-codes"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "qa",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "qa",
                "resource_version": "3046",
                "uid": "0346cb0e-4d36-4273-9396-196f77e433f4"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/backend-notification",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 25,
                "labels": {},
                "name": "backend-notification",
                "namespace": "qa",
                "resource_version": "21917783",
                "uid": "93f9467e-7fbb-44a9-897b-f8fdc247d81d"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-notification"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-notification"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "471112703134.dkr.ecr.us-east-2.amazonaws.com/backend-notification:qa-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-notification",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/backend-notification",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-notification",
                "namespace": "qa",
                "resource_version": "3114",
                "uid": "36ae73cb-0836-48df-8a15-d55133d3a7ec"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.230.164",
                "cluster_ips": [
                  "172.20.230.164"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-notification"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "qa",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "qa",
                "resource_version": "3046",
                "uid": "0346cb0e-4d36-4273-9396-196f77e433f4"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/backend-wallet",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 149,
                "labels": {},
                "name": "backend-wallet",
                "namespace": "qa",
                "resource_version": "23696732",
                "uid": "472504b1-092b-4ddb-a6d7-e0d03c2ba255"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-wallet"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-wallet"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "471112703134.dkr.ecr.us-east-2.amazonaws.com/backend-wallet:qa-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-wallet",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/backend-wallet",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-wallet",
                "namespace": "qa",
                "resource_version": "3102",
                "uid": "440dcc5a-7e56-47f1-a9a0-0bd37b982e14"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.93.73",
                "cluster_ips": [
                  "172.20.93.73"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-wallet"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "qa",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "qa",
                "resource_version": "3046",
                "uid": "0346cb0e-4d36-4273-9396-196f77e433f4"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/backend-ws",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 9,
                "labels": {},
                "name": "backend-ws",
                "namespace": "qa",
                "resource_version": "23696659",
                "uid": "1f3fb8ce-af36-4cc5-9512-5605bba7a082"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-ws"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-ws"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "471112703134.dkr.ecr.us-east-2.amazonaws.com/ws:qa-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-ws",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/backend-ws",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-ws",
                "namespace": "qa",
                "resource_version": "21917562",
                "uid": "b5977050-e77a-4d40-9a7a-0e9e0969a64c"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.198.97",
                "cluster_ips": [
                  "172.20.198.97"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-ws"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "qa",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "qa",
                "resource_version": "3046",
                "uid": "0346cb0e-4d36-4273-9396-196f77e433f4"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/frontend-admin",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 123,
                "labels": {},
                "name": "frontend-admin",
                "namespace": "qa",
                "resource_version": "23524033",
                "uid": "c6545fc8-5e76-4414-baad-c25cf75b37ab"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "frontend-admin"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "frontend-admin"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "471112703134.dkr.ecr.us-east-2.amazonaws.com/frontend-admin:qa-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "frontend-admin",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "qa/frontend-admin",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "frontend-admin",
                "namespace": "qa",
                "resource_version": "3142",
                "uid": "f781dd90-34de-47de-a76e-e559558b8383"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.87.44",
                "cluster_ips": [
                  "172.20.87.44"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "frontend-admin"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"codes.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "codes.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_codes.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "codes.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.admin.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qa.admin.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.admin.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.auth.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qa.auth.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.auth.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.graphql.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qa.graphql.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.graphql.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.interaction.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qa.interaction.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.interaction.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.mock.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qa.mock.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.mock.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.notification.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qa.notification.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.notification.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.rafiki-auth.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qa.rafiki-auth.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.rafiki-auth.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.rafiki.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qa.rafiki.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.rafiki.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.wallet.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qa.wallet.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.wallet.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.walletguru.me\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.walletguru.me",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z005616523M0XVD03LD0M_qa.walletguru.me_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.walletguru.me",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z005616523M0XVD03LD0M"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"qa.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "qa.websocket.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_qa.websocket.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "qa.websocket.walletguru.co",
            "records": [
              "a94705f6350834a51a99e08b95236f24-1640821681.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-auth\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:471112703134:repository/backend-auth",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-auth",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-auth",
            "registry_id": "471112703134",
            "repository_url": "471112703134.dkr.ecr.us-east-2.amazonaws.com/backend-auth",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-codes\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:471112703134:repository/backend-codes",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-codes",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-codes",
            "registry_id": "471112703134",
            "repository_url": "471112703134.dkr.ecr.us-east-2.amazonaws.com/backend-codes",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-notification\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:471112703134:repository/backend-notification",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-notification",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-notification",
            "registry_id": "471112703134",
            "repository_url": "471112703134.dkr.ecr.us-east-2.amazonaws.com/backend-notification",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-wallet\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:471112703134:repository/backend-wallet",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-wallet",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-wallet",
            "registry_id": "471112703134",
            "repository_url": "471112703134.dkr.ecr.us-east-2.amazonaws.com/backend-wallet",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"frontend-admin\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:471112703134:repository/frontend-admin",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "frontend-admin",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "frontend-admin",
            "registry_id": "471112703134",
            "repository_url": "471112703134.dkr.ecr.us-east-2.amazonaws.com/frontend-admin",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"ws\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:471112703134:repository/ws",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "ws",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "ws",
            "registry_id": "471112703134",
            "repository_url": "471112703134.dkr.ecr.us-east-2.amazonaws.com/ws",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-qa\"]",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::walletguru-qa",
            "bucket": "walletguru-qa",
            "bucket_domain_name": "walletguru-qa.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "walletguru-qa.s3.us-east-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [
              {
                "id": "",
                "permissions": [
                  "READ"
                ],
                "type": "Group",
                "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
              },
              {
                "id": "ff9ed7c7ca6697f42b6879b230f6df359b48991bdc87bdf86a96afc05f4445b0",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z2O1EMRO9K5GLX",
            "id": "walletguru-qa",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "us-east-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-qa\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_acl",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_control_policy": [
              {
                "grant": [
                  {
                    "grantee": [
                      {
                        "display_name": "",
                        "email_address": "",
                        "id": "",
                        "type": "Group",
                        "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
                      }
                    ],
                    "permission": "READ"
                  },
                  {
                    "grantee": [
                      {
                        "display_name": "",
                        "email_address": "",
                        "id": "ff9ed7c7ca6697f42b6879b230f6df359b48991bdc87bdf86a96afc05f4445b0",
                        "type": "CanonicalUser",
                        "uri": ""
                      }
                    ],
                    "permission": "FULL_CONTROL"
                  }
                ],
                "owner": [
                  {
                    "display_name": "",
                    "id": "ff9ed7c7ca6697f42b6879b230f6df359b48991bdc87bdf86a96afc05f4445b0"
                  }
                ]
              }
            ],
            "acl": "public-read",
            "bucket": "walletguru-qa",
            "expected_bucket_owner": "",
            "id": "walletguru-qa,public-read"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example",
            "module.s3.aws_s3_bucket_ownership_controls.example",
            "module.s3.aws_s3_bucket_public_access_block.example"
          ]
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-qa\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_ownership_controls",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "walletguru-qa",
            "id": "walletguru-qa",
            "rule": [
              {
                "object_ownership": "BucketOwnerPreferred"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example"
          ]
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-qa\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": false,
            "block_public_policy": false,
            "bucket": "walletguru-qa",
            "id": "walletguru-qa",
            "ignore_public_acls": false,
            "restrict_public_buckets": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example"
          ]
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "managed",
      "type": "helm_release",
      "name": "traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "traefik",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "traefik",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.9.7",
                "chart": "traefik",
                "first_deployed": 1725030036,
                "last_deployed": 1725030036,
                "name": "traefik",
                "namespace": "traefik",
                "notes": "\n\nTraefik Proxy v2.9.7 has been deployed successfully\non traefik namespace !\n",
                "revision": 1,
                "values": "{\"additionalArguments\":[\"--log.level=DEBUG\",\"--certificatesresolvers.le.acme.email=youremmail@gmail.com\",\"--certificatesresolvers.le.acme.storage=/data/acme.json\",\"--certificatesresolvers.le.acme.tlschallenge=true\",\"--certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory\"],\"dashboard\":{\"domain\":\"traefik.ui.kube\",\"enabled\":true},\"deployment\":{\"replicas\":1},\"rbac\":{\"enabled\":true}}",
                "version": "21.1.0"
              }
            ],
            "name": "traefik",
            "namespace": "traefik",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://traefik.github.io/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "deployment.replicas",
                "type": "",
                "value": "1"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 800,
            "values": [
              "dashboard:\n  enabled: true\n  domain: traefik.ui.kube\nrbac:\n  enabled: true\nadditionalArguments:\n  - \"--log.level=DEBUG\"\n  - \"--certificatesresolvers.le.acme.email=youremmail@gmail.com\"\n  - \"--certificatesresolvers.le.acme.storage=/data/acme.json\"\n  - \"--certificatesresolvers.le.acme.tlschallenge=true\"\n  - \"--certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory\""
            ],
            "verify": false,
            "version": "21.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"codes.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "codes",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`codes.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "codes",
                          "namespace": "qa"
                        },
                        {
                          "name": "codes-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-codes",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "codes",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`codes.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "codes",
                          "namespace": "qa"
                        },
                        {
                          "name": "codes-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-codes",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"codes.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "codes-http",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`codes.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "codes-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-codes",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "codes-http",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`codes.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "codes-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-codes",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"codes.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "codes",
                  "namespace": "qa"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "codes",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"codes.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "codes-to-https",
                  "namespace": "qa"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "codes-to-https",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "admin",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin",
                          "namespace": "qa"
                        },
                        {
                          "name": "admin-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "frontend-admin",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin",
                          "namespace": "qa"
                        },
                        {
                          "name": "admin-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "frontend-admin",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "admin-http",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "frontend-admin",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin-http",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "frontend-admin",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "admin",
                  "namespace": "qa"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "admin-to-https",
                  "namespace": "qa"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin-to-https",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "auth",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth",
                          "namespace": "qa"
                        },
                        {
                          "name": "auth-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-auth",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth",
                          "namespace": "qa"
                        },
                        {
                          "name": "auth-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "auth-http",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-auth",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth-http",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "auth",
                  "namespace": "qa"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "auth-to-https",
                  "namespace": "qa"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth-to-https",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "graphql-backend",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend",
                          "namespace": "default"
                        },
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "3001"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend",
                          "namespace": "default"
                        },
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3001",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "graphql-backend-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "3001"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3001",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "graphql-backend",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "graphql-backend-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-interaction",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3009"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3009",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-interaction-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3009"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3009",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-interaction",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-interaction-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-mock",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-mock",
                          "port": "3030"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-mock",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3030",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-mock-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-mock",
                          "port": "3030"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-mock",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3030",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-mock",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-mock-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "notification",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification",
                          "namespace": "qa"
                        },
                        {
                          "name": "notification-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-notification",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification",
                          "namespace": "qa"
                        },
                        {
                          "name": "notification-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-notification",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "notification-http",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-notification",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification-http",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-notification",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "notification",
                  "namespace": "qa"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "notification-to-https",
                  "namespace": "qa"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification-to-https",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-auth",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3006"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3006",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-auth-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3006"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3006",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-auth",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-auth-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-frontend",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-frontend",
                          "port": "3010"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-frontend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3010",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-frontend-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-frontend",
                          "port": "3010"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-frontend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3010",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-frontend",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-frontend-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "wallet",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet",
                          "namespace": "qa"
                        },
                        {
                          "name": "wallet-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-wallet",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet",
                          "namespace": "qa"
                        },
                        {
                          "name": "wallet-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-wallet",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "wallet-http",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-wallet",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet-http",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-wallet",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "wallet",
                  "namespace": "qa"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "wallet-to-https",
                  "namespace": "qa"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet-to-https",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-open-payments",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "80"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "80",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-open-payments-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "80"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "80",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-open-payments",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-open-payments-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "ws",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws",
                          "namespace": "qa"
                        },
                        {
                          "name": "ws-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-ws",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws",
                          "namespace": "qa"
                        },
                        {
                          "name": "ws-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-ws",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "ws-http",
                  "namespace": "qa"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-ws",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws-http",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`qa.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws-to-https",
                          "namespace": "qa"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-ws",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "ws",
                  "namespace": "qa"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"qa.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "ws-to-https",
                  "namespace": "qa"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws-to-https",
                  "namespace": "qa",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:network-acl/acl-0011f7dd9c66cac2e",
            "default_network_acl_id": "acl-0011f7dd9c66cac2e",
            "egress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "id": "acl-0011f7dd9c66cac2e",
            "ingress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "owner_id": "471112703134",
            "subnet_ids": [
              "subnet-01859c473b71b2d72",
              "subnet-0563c3bd4ac1afd6d",
              "subnet-065cab7f7b02c105c",
              "subnet-071f03006a9be4046",
              "subnet-0a0c645e4396ec0ca",
              "subnet-0c67d0e45013d9ed2",
              "subnet-0db748ac309effe57"
            ],
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:route-table/rtb-00ca8d74689f6056d",
            "default_route_table_id": "rtb-00ca8d74689f6056d",
            "id": "rtb-00ca8d74689f6056d",
            "owner_id": "471112703134",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "timeouts": {
              "create": "5m",
              "update": "5m"
            },
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:security-group/sg-0a78285305fcfe7ba",
            "description": "default VPC security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0a78285305fcfe7ba",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "name": "default",
            "name_prefix": "",
            "owner_id": "471112703134",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-06b4aac34cb021528",
            "arn": "arn:aws:ec2:us-east-2:471112703134:elastic-ip/eipalloc-06b4aac34cb021528",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-06bb19651b17f9638",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-06b4aac34cb021528",
            "instance": "",
            "network_border_group": "us-east-2",
            "network_interface": "eni-0c75919548a6d440c",
            "private_dns": "ip-10-0-4-32.us-east-2.compute.internal",
            "private_ip": "10.0.4.32",
            "ptr_record": "",
            "public_dns": "ec2-3-22-161-75.us-east-2.compute.amazonaws.com",
            "public_ip": "3.22.161.75",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "vpc-us-east-2a"
            },
            "tags_all": {
              "Name": "vpc-us-east-2a"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:internet-gateway/igw-0b6e2200dace67ea4",
            "id": "igw-0b6e2200dace67ea4",
            "owner_id": "471112703134",
            "tags": {
              "Name": "vpc"
            },
            "tags_all": {
              "Name": "vpc"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-06b4aac34cb021528",
            "association_id": "eipassoc-06bb19651b17f9638",
            "connectivity_type": "public",
            "id": "nat-0330bc4d4ebccc656",
            "network_interface_id": "eni-0c75919548a6d440c",
            "private_ip": "10.0.4.32",
            "public_ip": "3.22.161.75",
            "secondary_allocation_ids": [],
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-071f03006a9be4046",
            "tags": {
              "Name": "vpc-us-east-2a"
            },
            "tags_all": {
              "Name": "vpc-us-east-2a"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0bdfc1ef3a03f35471080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-0330bc4d4ebccc656",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0bdfc1ef3a03f3547",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0b6e2200dace67ea4",
            "id": "r-rtb-08821a2ba1fba12b41080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-08821a2ba1fba12b4",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:route-table/rtb-0bdfc1ef3a03f3547",
            "id": "rtb-0bdfc1ef3a03f3547",
            "owner_id": "471112703134",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-0330bc4d4ebccc656",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "vpc-private"
            },
            "tags_all": {
              "Name": "vpc-private"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:route-table/rtb-08821a2ba1fba12b4",
            "id": "rtb-08821a2ba1fba12b4",
            "owner_id": "471112703134",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-0b6e2200dace67ea4",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "vpc-public"
            },
            "tags_all": {
              "Name": "vpc-public"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0f73c77a548faef12",
            "route_table_id": "rtb-0bdfc1ef3a03f3547",
            "subnet_id": "subnet-0c67d0e45013d9ed2",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0c9c129e5b1e54b50",
            "route_table_id": "rtb-0bdfc1ef3a03f3547",
            "subnet_id": "subnet-0a0c645e4396ec0ca",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0c73eb6d794c45e76",
            "route_table_id": "rtb-0bdfc1ef3a03f3547",
            "subnet_id": "subnet-0db748ac309effe57",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0282b347ed4920fdb",
            "route_table_id": "rtb-08821a2ba1fba12b4",
            "subnet_id": "subnet-071f03006a9be4046",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-027591d16a6756a4c",
            "route_table_id": "rtb-08821a2ba1fba12b4",
            "subnet_id": "subnet-065cab7f7b02c105c",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0f9c1f184292c45b6",
            "route_table_id": "rtb-08821a2ba1fba12b4",
            "subnet_id": "subnet-0563c3bd4ac1afd6d",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:subnet/subnet-0c67d0e45013d9ed2",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0c67d0e45013d9ed2",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "471112703134",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2a",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2a",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:subnet/subnet-0a0c645e4396ec0ca",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0a0c645e4396ec0ca",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "471112703134",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2b",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2b",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:subnet/subnet-0db748ac309effe57",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0db748ac309effe57",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "471112703134",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2c",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2c",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:subnet/subnet-071f03006a9be4046",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-071f03006a9be4046",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "471112703134",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2a",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2a",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:subnet/subnet-065cab7f7b02c105c",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.5.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-065cab7f7b02c105c",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "471112703134",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2b",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2b",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:subnet/subnet-0563c3bd4ac1afd6d",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.6.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0563c3bd4ac1afd6d",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "471112703134",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2c",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2c",
              "kubernetes.io/cluster/eks-fYrRWZOz": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:vpc/vpc-0e410be858ecb330b",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-0011f7dd9c66cac2e",
            "default_route_table_id": "rtb-00ca8d74689f6056d",
            "default_security_group_id": "sg-0a78285305fcfe7ba",
            "dhcp_options_id": "dopt-0f3fc3a5a24dfeae3",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-0e410be858ecb330b",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-00ca8d74689f6056d",
            "owner_id": "471112703134",
            "tags": {
              "Name": "vpc"
            },
            "tags_all": {
              "Name": "vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "307426687",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::wg-qa-vpn-config-files/*\",\n        \"arn:aws:s3:::wg-qa-vpn-config-files\"\n      ],\n      \"Principal\": \"*\",\n      \"Condition\": {\n        \"Bool\": {\n          \"aws:SecureTransport\": \"false\"\n        }\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Deny\",\"Action\":\"s3:*\",\"Resource\":[\"arn:aws:s3:::wg-qa-vpn-config-files/*\",\"arn:aws:s3:::wg-qa-vpn-config-files\"],\"Principal\":\"*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:*"
                ],
                "condition": [
                  {
                    "test": "Bool",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:SecureTransport"
                  }
                ],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "*"
                  }
                ],
                "resources": [
                  "arn:aws:s3:::wg-qa-vpn-config-files",
                  "arn:aws:s3:::wg-qa-vpn-config-files/*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (Ohio)",
            "endpoint": "ec2.us-east-2.amazonaws.com",
            "id": "us-east-2",
            "name": "us-east-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:471112703134:certificate/9a16f3e0-6597-4e4b-b832-b58ea3fb5201",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "certificate_chain": null,
            "domain_name": "wg.qa.vpn.ca",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:471112703134:certificate/9a16f3e0-6597-4e4b-b832-b58ea3fb5201",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-11T22:48:11Z",
            "not_before": "2024-11-13T22:48:11Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAv9jcDkNThmH7RcDlNG3VB2XVzzGTtYpicTN2/ZKrO1lxnS3e\nWHKnP4hYnVrzOVbcS5KD0oS3iqXC33SNhTwGo37RvIRr3h7Od8DBAfR0V0ZS4eP5\nut+a0sJLnG83Gs/rxlj2/Lds4eW4XLNq2fqUpbg2B1WUuioeEDoF7ja5Vy7fi3qY\nbeMXqJIRKL/5BRCQCrdw7FkfWisB3b5f5tB/7+9pMrQgUIlBSirDjchejK4mRErw\n2ajx4M14L4FF523ZwnLj+3z75K5mlJAGLXicOGN3HTgaGQ5YetvpqgjYOwNEhQ7X\ndvhrsWf/hzq9LNPVbFCRxlkk3ZQx4iN7SBYHZwIDAQABAoIBAFCqOjy1ClWitShr\nJvSYic4Gf5QS4Gygtyup3ApatSzLOv4/3xGJg9Eu3zOqnkIpx47vGAZYT2Q4tmuG\nckrnJlNwa3e8pi5K/b1UitLrmk9n/kmEtehhRJQBphEsohrf+d74YUF5TordMFuq\nBO+KcR4NCoqi7Vopg2KHQx8aW2vQSztKZW9rE6RBSE5LoWRCdKVeXi+rw59gKIV2\nhx8THAkug0hg6bkggujlb5YkraQ7Jknim6vxDAN8o+TEQL7bychXIr2+z+scXJP2\nsZzw9bDoh2RTg8KVO7RRQoPeGDzS21gSYrS1jJ6Z+5wINuNYgc0/e6+RPUeSbcIC\n5Yhi8SECgYEA4vTpb2/jS2PIYy95s+cWacv+3YeEye4b//+HpXIb5d+Lf0ufldEa\ntTI6LNDL7udsGnqkOnkroKN4SrLFXWMwdZED7NoBz9xHpGfCN7sajY11TrRnUxVr\ntaJybsG5d6mV2grSHDRMKBPbUipOzVdLYTSvEjoeanmIhosQ4W85s2sCgYEA2GXC\nijmQI4c4+HweLS/HTh68HDNZtcAnwdy8dth/lO7ihA41aKAcyxrfTftD0uSvFtoa\n5kDb7crorJnUWJB18amjx3uLUkpb6RRI3jTOLw3xY1ad8NZwTJ4/ILU+4Hw3kYsX\nlQfO2S+RHa5Xo3kVNUAz+hzQJLMzWDUjjOv+dvUCgYEAkhvXeE1Qx8UaSXhT4lSf\n4kZY8qb+/rzSu9D2s7UtbqSmerHlsB5pEkOeniFhWJEV0EoqFhbR1l3G4FgMpV1o\n4hcUrtN+nSGT4ayGpThIFN7/qUaMyjkdGVbWUqVW0EmV1kRnFY85hAech14DU0Ci\nn5a6KoLN9//7u5olqOvg+rcCgYANqqeVqTsEM2cSsmwJeIoC0ggZU9jnlKIuKS2x\n58xu8INXybnvyKTo4uKVfzfyWsUAEXg/cHszUmxNck2p5j28rHUOhSvwX4fceY58\nkiMvb5b+KhtBeZmQDTJ5c1jsPowX4gv0OpECwHFOyZL5XQ1M1qgxtJ4kozir6nc7\nUDA6/QKBgFPQYxVKDoVo+CGkLsOzt3lFOjil44G9eoR7ZX82QYvRjoq5EeSBsgJh\noCU8EeSj1Ota/jLi7LZsnIKXkJsYmRbO/jMDhtzjb1793tigjZfet9g7+Hr/IrxP\nZpWAG/Bb7YHfEwgYk9q5+tJOTvV16X9hxtzYxSFfj7bnUlVV1RwT\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.qa.vpn.ca"
            ],
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:471112703134:certificate/47f80bb9-8d44-4f93-9bf5-f60f00fa41ae",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDOTCCAiGgAwIBAgIQAOOPc/fbgIaSXTvG+d3hqzANBgkqhkiG9w0BAQsFADAk\nMQswCQYDVQQKEwJ3ZzEVMBMGA1UEAxMMd2cucWEudnBuLmNhMB4XDTI0MTExMzIy\nNDgxMVoXDTM0MTExMTIyNDgxMVowNTELMAkGA1UEChMCd2cxJjAkBgNVBAMTHXdn\nLnFhLnZwbi5kYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAzGJrHxVRdMqRt3kWoxdlU3IIVOWNuPo7b7t0i9AdTxOKdV65\nzqUKsW5sXMUVYIKxrPN2LdTDXe1IzhO4t1X9nV7fFDBEMUaDeyVHjWRYEd5qPlZG\nHUndX6mIbZsDD09Dw32r67UWEIwuioN7D/grbvybk4R7eqvhb3oznVnHK5YiuAiT\nz9nWwEDucNgVHHiucis+4Rg+7bszCdIjMKjJPB8H16mm/L33InOxUl/V8k1qwXjv\nYOM0T2+/BGSTh1J8+/PjKwzHYV67+SowunJ8HaPybHsQ0MkOffYhkj526qxL3x6Z\nKKauNOG9GOGziUgJHEsJfBiEqtl12g79PE5zmwIDAQABo1YwVDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME\nGDAWgBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0BAQsFAAOCAQEAuaA8\nimz8DqnQqgk2G1un7rxVpiXgbSL9HQ9mcV5CnplTnQL5sbqiVG0Nc0bxBWUD9Bvv\nv1dpcIdugxbPavfO9UjpuwvIMg2s0QLBNHZlwRwht6G5NZigoeI9A3TLVJMBUbs2\nmQluElAA/Xo3Qatywk/s+HFY0bf6+9iwGTMjxPSuYEaLDGjIWsI8EpUnJYJpdTXW\ncThmsBOhdawpjF513BY1aGJ8hU5nUp/H+gZzLuiLNNwj/3hPxml89Jo23WQY2yiR\nziJRyjnZz0gtMOH/avvoBeD2sfugzqfIXW4T8BqIJq1OzodRCaBNClgwd3Nm95Jm\nC8nQ47iB1qynBqDZHQ==\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.qa.vpn.daniel.gomez-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:471112703134:certificate/47f80bb9-8d44-4f93-9bf5-f60f00fa41ae",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-11T22:48:11Z",
            "not_before": "2024-11-13T22:48:11Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAzGJrHxVRdMqRt3kWoxdlU3IIVOWNuPo7b7t0i9AdTxOKdV65\nzqUKsW5sXMUVYIKxrPN2LdTDXe1IzhO4t1X9nV7fFDBEMUaDeyVHjWRYEd5qPlZG\nHUndX6mIbZsDD09Dw32r67UWEIwuioN7D/grbvybk4R7eqvhb3oznVnHK5YiuAiT\nz9nWwEDucNgVHHiucis+4Rg+7bszCdIjMKjJPB8H16mm/L33InOxUl/V8k1qwXjv\nYOM0T2+/BGSTh1J8+/PjKwzHYV67+SowunJ8HaPybHsQ0MkOffYhkj526qxL3x6Z\nKKauNOG9GOGziUgJHEsJfBiEqtl12g79PE5zmwIDAQABAoIBAQDJ37wm64uVbDAZ\npMSzOnyeu1d3Y3Vka+UhK2qmXl1Uqdxsqa+laGbzcjoeN5wxw2VzitYD1s9RivoK\ncnhUvd7O/dIhwrrYYOmlTOEryx0iKSmPgO+oJjk+L9nNSPrwuD4abZrOKgMtPQkL\nT2rSDzH3YhLY1laQiA0XawBoPzD23oHV4ZWmThtNNec1DapdqjVz/sarg+XIrawU\n9g8On/iBUhShWVl9ixZb8UZZIxQo7gdqkgmU+mAbIPTLrZFgVdwIH7jzwGMK6K8s\nJBsQbAo05DeJccTxMiJSXTcldcMpyRnvh7IGY07CsskwwbpYr/WSaEqIHJfOFVa2\nDAkvCaeBAoGBAM1gvgPhnWiBaoUu2UMSZHPO3qGLYRj7o2KrwCzaM9hZUFjVlsMR\ndpQ2u+7b3cCIXGQ29quLWxZOKjlyHu31n2fCi+jk5FFtv62KFlJR365YeeXJlmtR\ndUzriXPb+OqTv2NlTNUIMtYcqle58CgeN83dG49zQ+VmXJ7qvX7RDwRRAoGBAP7C\n/WICHyCbsNLKepdWY0/j1xWM+iMIXlEHg/xs5F+5nr5/SiquoFJUlXh7wSIh4IJS\nqWqkZdlL+xflL6+LHzBgs6LQAAgvl60szG7Zru9+JJMDQfxA1GYSj5HH3+yNjDEA\n+JiFa50Y7BDmGx7jzR41n5UtrTeYNqWxR+kXMJorAoGAEiaapH0sDDBj2aFqUiMt\n/Y4q3twSmMKkjfPf6Bbgvh4mm7NEv7irYi30LggAcSOcBr9UzZRjWHVQBgOv+Bfd\nHq5y7wJLq2anqg6qKlxSCHaJT2WhhZqNY17tpu+p8BFeuMobIDi5RXMDGv2z29fP\n1sHTzbnCJmQFi4XzeWHAkgECgYEAwgTQIe8Js7S+gppPqKfS9InJSRFXgoyh/8Xg\nf8KSXlCoE94vJrhdQrZGKz7chFkWeUno2l2fb1DNRpJ1sZQbSaWryQftrk5Ijkt6\n2cUQ1DXWNtwZSbo5yA7Epjp5T9cw+DUMHmQl47uSNQB5kRneIe6mvV7O93MF00Rj\nRqIxkocCgYEAmkxcCJXo/Jn42c1DZNcQQOhwIMkPCsKuegSJBP61fggLTHKh767W\nL5WxKLoCZ3169NeXzW6LfUMobiTSRstnB+MeWmBVt9ts4NlapfeItUzfByHvznId\nPBVQxKyHh1ppHc9svzcrjn631mowr+Z7BJMPdrotE33lttqJ7LVlcdg=\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.qa.vpn.daniel.gomez-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:471112703134:certificate/3365f152-ba8d-4d75-8bdb-24871c4f6318",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDMjCCAhqgAwIBAgIRAPsQPdf7Di+aT9AIC+PMz2IwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMC0xCzAJBgNVBAoTAndnMR4wHAYDVQQDExV3\nZy5xYS52cG4ucm9vdC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDPpqMKPsq4IZ/ntN6YbxSdFmgIlbiPlbaiVDt86hE88bvHgnWq8I9TrlxZ\nrnEzaWcw0kgKeTTlUOV9432X429AYE3VkfMBjINDRFOTBecupHjT7HPgTmtqlPPs\nSwxMta/eroVMhEXjhNtfr4zoc2BNog/Boa/AnjjZOKs6UCNbJhppxsdSE5VZGf6e\nX6jDfN83CyZnOOYrwzbjsiWigyc50XYRV+aAWw/+qx9xhw/9aoSh+2nYPI8Rw42G\nyttaHyTQyQltUxHjsc3zQwUWUdrKLh+mduA1+dLLmFQIeTvgGYvvR7CF7ZPnFSoQ\n2+10Lks3qvOb6DMuOOIuZBYqqjKdAgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDAT\nBgNVHSUEDDAKBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFFHN\nANvqwxvMWeIy1rL6O6QqIKQnMA0GCSqGSIb3DQEBCwUAA4IBAQAF70pwzGmbqGAl\nlUkdOogYGQJIkh/02yYX6WcmvKOmdhX/KN1LoabJnilb2ttTKsASjM3+SVDJ55z7\nrJVDGmy/6GG92uG5gjIMoiJdF8g0lMWK0Xk/xpRoYqyg9canZgoeK2nL08ePMI28\nejSIx6VZ/2xnc6r8t8Eog3z6VVUvP2YzRStV7fIP8QT6z/rxN3eqINc+Xo+fLDW9\nLZLGAbVx554F9+J0NEN/53IO0TWF2JDT/1Ut2d5wMISbNDjc/UVpOGxV2hygkVvh\nN3t2qN3q/oqeZYjummT6Nb3gQLJqj96uiJaQ0IpPmjit60wL4iVLWb3us1YIjgAU\nK4+JZCdB\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.qa.vpn.root-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:471112703134:certificate/3365f152-ba8d-4d75-8bdb-24871c4f6318",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-11T22:48:11Z",
            "not_before": "2024-11-13T22:48:11Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAz6ajCj7KuCGf57TemG8UnRZoCJW4j5W2olQ7fOoRPPG7x4J1\nqvCPU65cWa5xM2lnMNJICnk05VDlfeN9l+NvQGBN1ZHzAYyDQ0RTkwXnLqR40+xz\n4E5rapTz7EsMTLWv3q6FTIRF44TbX6+M6HNgTaIPwaGvwJ442TirOlAjWyYaacbH\nUhOVWRn+nl+ow3zfNwsmZzjmK8M247IlooMnOdF2EVfmgFsP/qsfcYcP/WqEoftp\n2DyPEcONhsrbWh8k0MkJbVMR47HN80MFFlHayi4fpnbgNfnSy5hUCHk74BmL70ew\nhe2T5xUqENvtdC5LN6rzm+gzLjjiLmQWKqoynQIDAQABAoIBAAzntVBIsL6a0F5N\nHlxo4uYUY2jNLUg3LL+P7paH0YRxHZN7pyZ1huLTfkfQkJZ6YYBmQTXtbH0n9utI\n/SA4cUyV76BrTqf0/J9smqkTf9elPyEkm9r/5KseEL7Jtzz5ObHkNMKZoeJO+ndK\n6L31lbGddc855jtZWf0eCX45Rsk+SzSYFxZBtHYRH/nVM0BbELSnb1iGV0OpMB4E\nUkYpq5wThX6xTwKT7ogVzM7tr0FfvAYrz7iwQSDiLcZOMlcZCzLohCfXU0EbAwXf\ny7jAcqn/Ytb4X5TevS5YTmxV0+Cb42lWv/dZrNbINhgNP+7/LBh6tXhtS3ReZdT4\ngTOpYv0CgYEA0mC66t+7MBOrBstnxqEQqRh9+rLveIZ3xnSL6vvA51VhROzrf5AG\n+yNgJx11nhfqzBiJo2ywL2fwgNjKYhbpzat87m2j3J8FQPi/OATPGzSaTyqXKlz9\nNebED0lPoBVK0B+wq0Q51AoOuN80m+K7iaefNZhRMxJr1YnBx3dAdAsCgYEA/K6E\n/69zkNe33/FQsHIZroAXIgcFXzB8SjTrgZT5kxAMyRtypKrhLe8SGEZV0T2ejn6E\ns1gg2ASgqbf/TT85eFXGWbQa3oEPGJUEzPicPZOQHcVFz8pifofWzBd0hBG4a2hg\nEWGHPNlgZHsrf8/6893u1ULVrBhqi9WTRlS4NPcCgYBriKwigGfzJCqIl5IdEpks\nhetnKO2FIt64XzxhyXuKA7drftrFYn5fAm8Ur1c+jyUiW+yGz3ijUrK5eZbBWsr5\nqQ175ikbDWGnGz7KyJKAanvxuWh5a/y1/5X55lRAFIIgLgKlGIOiod1ynA0NHXEU\n5MxZndjrjR/3j6mwZoFYjwKBgGaJ37julyQpFhoPkGH5+4f/vON3G+vz/gwTC5rr\nPJg8RCP8OnquSXDdemdVa4/cxJIor2skETf4MMaOv1C2nnjBvhs65khy8RBVsLwJ\nC0ZFso8SNfFLvMqCD12FCyhpFICpu4pyHHJJ+D7uaMmWOc1qu3fZhmIvClWylvBM\ngvAjAoGBAK166jhDV/GZ82AmF4/5XQxCuJ/VHNfhQrHoHnhrRUBSSCYk8XvQgaus\n0KRMAT8TrzdX/aueor5qCZwqSvLcpmRGMsxlKcs62rwdmhHmCAyY2AOXHEihJrYH\nBtx4OtCwyuxvu4kphI+ATCOlEWLXxzK0eg98yOtK/z7r4mBVQBpF\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.qa.vpn.root-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:471112703134:certificate/2785992c-aa83-4fec-9277-88ab19f2def1",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDNzCCAh+gAwIBAgIRANgxrkewit6cnWvqvCojQ4YwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMDIxCzAJBgNVBAoTAndnMSMwIQYDVQQDExp3\nZy5xYS52cG4udGVycmFmb3JtLWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEP\nADCCAQoCggEBANAXTqFWhmltEbl4+nKbkjFSCfLm1Ayp+bTZcBNqwE8yMwl79jOL\nollo3poXRJG+brOYLCNTnCpTaz2V3Hrl+932LoAb/v/rUm7+TjFutJAF/IGix0Br\nCh8qkUPnuWu/av1msY+9+4mjn90NgzJgCuCfulVk69W3ZlYUHKi/4ZAR4GXo3si8\n57h2N8vKUx6/2e1Ul/UkyvBbic1e0KGlRNZ9vIhr6rn0+/xIn95qSo4T6O+fi3me\ncttzLl0b6WmW+IrdfmmSbGkHdfMxsoxmIFTjjv54d0jq/H780IHuF71cH0W+bpcr\ndFHx8+4uNyVoc4Q1X97MMAAYbAO1nKLq6M0CAwEAAaNWMFQwDgYDVR0PAQH/BAQD\nAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgw\nFoAUUc0A2+rDG8xZ4jLWsvo7pCogpCcwDQYJKoZIhvcNAQELBQADggEBAGqcZFL4\nrtghVvIbATQIjDpJrxU3U/t8DFeUG3V6TJ2khFNTwfUIL6ikIFuk5+ghlMm79oIQ\n89JmHKCJRUV8nPGnW6fNYpQ7qtZ+FtYTmAIbQYkOydXyoAUZUXpUwvgrYGWXx1Aq\nc4U/t4Ftvenl5OTpb/bT4dztr+IU/D/9jXQwEKImeIoXF/0BOEzFatqambTRyD8I\nZy5Bs6nRZ03gTJ1QeBvKOUopZ9/g6c+pQWBddPBwdSr6dTyAqcj3+t+3mOF4+9qJ\nA04lvquF+ajeeTYd8d20i7pQsfV4NzTqrk22evJ+VkYrcxCPMAiMvFbwTwUnUYeW\nlyIcVDPSwhlrkAQ=\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.qa.vpn.terraform-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:471112703134:certificate/2785992c-aa83-4fec-9277-88ab19f2def1",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-11T22:48:11Z",
            "not_before": "2024-11-13T22:48:11Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA0BdOoVaGaW0RuXj6cpuSMVIJ8ubUDKn5tNlwE2rATzIzCXv2\nM4uiWWjemhdEkb5us5gsI1OcKlNrPZXceuX73fYugBv+/+tSbv5OMW60kAX8gaLH\nQGsKHyqRQ+e5a79q/Waxj737iaOf3Q2DMmAK4J+6VWTr1bdmVhQcqL/hkBHgZeje\nyLznuHY3y8pTHr/Z7VSX9STK8FuJzV7QoaVE1n28iGvqufT7/Eif3mpKjhPo75+L\neZ5y23MuXRvpaZb4it1+aZJsaQd18zGyjGYgVOOO/nh3SOr8fvzQge4XvVwfRb5u\nlyt0UfHz7i43JWhzhDVf3swwABhsA7WcourozQIDAQABAoIBAQCXWPxVmAr2zt9f\nWMA/bysrOBIIWx7Lfy0g/izn0nLApzA7q69r2hlgkkelJ1s17Z2yffFMWFly521O\nQ5syv+cqjw1PHA2hsVQpakkQ5wXo4pG+79ef4Lph5KH3E6jm1zhHydNHStSSTTHO\noy9TCkufCE2MInTs4hFKdiJKEhVKpIRzfoeSzNkJtv+UpdYnm0m6NTIfggyKNi31\n81/TWDyqZ/EfpQEmZVocl1jQ6hRJGm32kGH1d8iVpcCuaVh2WXvVeGvoUuhqDHHj\nNAsdsqghKHD8vBe3iHCGa4ctbDo3c45Co/CqAZIHXa5gxL304AQuOnGn0+j5xtui\nUSTFrGaBAoGBAP8xiTtUDg58v9GzuZLRHhAWDirRkgikzSjK/o7noXVxWEp6K4K+\nM0Kiqz9RkfA+ODuOKyDa9JpjtJ9fnvherEPsq+DJSXqOrhRb4HuL8NbZJ2JwgsAQ\ntPtQI1vyjanNvhwk6MXM8a4MbaR6rnzMm6ZGmjh6qR+bStbAPaVrk/RdAoGBANC/\nqbSdCUVHLyLSjNeltuudV3teF2/EeqVjbZ7JTLDHVInUIQ74+5XUGhlNDs4m1TSI\n1LXdOQn9G57PuAD+ykE3xeo61rS1KyPJcqExV/FD4Gzupe/ULOVFr3VkjcrXFcfN\nam58YaV71nOHdhFHdqkjMIkHc6GLSlkCOJtk638xAoGBAOS2ELgLbU2uoHvhB8B9\niuP/4FKf4LG+geC9jcel8R7AptCZDcXvkSF3iOMGyDT4jo1RrXWUxwRXt9neaStQ\nLjPyOVkNDb25gmrcrSQNF5x2osWm8IgScSGLgSU3DZ/RtUCkE7qzIydKHDn9ecR/\n3D/5pt5XkJuzIi+1u4o2EDRBAoGBALzZyJRHxY1RWwlr5lNp7lS2YeCQPS+2Vyat\nDw0qHCGKE6clrEq5YhIocvwUxKIoa5Y9fAKUAvhQbd59GYB9AUmDRaAkXv3ZMRAN\nPZEq7N6ug6jJNoIEOCGrq5LOx6CMeX3rDrCqAkUOBfM6x8vWFTnrRguSHEA3nals\n4v1ijdLhAoGBALAJ9uQKwjiOxSUmCdX3URZlurtvrQVko1bWm2e16q14ycT+Sg1P\n9wpGgHbdhsi+HBPf4U6nV6H8kyYyJrx9uElwpHKxjf7YbbFucYq+Yuf9/Bbs1l6x\n+g6ryi5Qr1GvRZr5iVVtyaPpWPBGqlp+VLK8Q788TGH04nKxfhCrt5gQ\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.qa.vpn.terraform-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:471112703134:certificate/92bf3b26-a0cb-43a2-9c60-5a27a8155068",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDLDCCAhSgAwIBAgIQfoYq9OL3fPPvsZnxvCuIgDANBgkqhkiG9w0BAQsFADAk\nMQswCQYDVQQKEwJ3ZzEVMBMGA1UEAxMMd2cucWEudnBuLmNhMB4XDTI0MTExMzIy\nNDgxMVoXDTM0MTExMTIyNDgxMVowKDELMAkGA1UEChMCd2cxGTAXBgNVBAMTEHdn\nLnFhLnZwbi5zZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDL\nDbCAIdMHday3AL9HzOoYSjuip5gr0ckD+8u5ZpfKrPL6SqQnYz0lhVJfaYaQ8NlN\nTOcZMA71Af4ejqP7iH0kMkRUiObM/xRhnCfHZhQ2X1xURSlkXXQhenvE38EaD+U6\nW6uhReukcGKWq+9IxLLiV7NXovQym6dZgeamF6gXJTATWVXJS0vOXhEWrmgkkyTM\nD6mM5rsDGq2ixocjTxZvVEYZs/MG0JApzj0uE76rQk8gtrjLgfIpk+P95B0fq165\n18XhC5eimI5G8OKOvYR/5niJiWFqFoT4Oa4fU8FZ9svrpboma5bgTh/gyFXJEUHk\n/90Dr5u//9tXZJ/t2z0/AgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUE\nDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFFHNANvqwxvM\nWeIy1rL6O6QqIKQnMA0GCSqGSIb3DQEBCwUAA4IBAQBRssxqBYqreprVywhlouS3\nrIx5jqTXrZvzLfYbVsjE1E606XVKLfEf9FqiLWpENtIhdiSv14o6adXlEeixWlVn\n11gOZGg4gjuqe79u9j+1ZMHSa+SlPYfLrLM5r4trSZce4wvomd9/2FDFaV1mGnQ/\nU4dfmUtVVYVFK+lV+PaGsxcijggLSZcuvAzE/G0hk6O4EtwGGB8gF86MwSpbvuz+\nhYSHyn5W/b5nkynqCDOOSapByxm0aBp/bbSPjOBpaxschmQECWifFI2WqoRcTw4g\nJZCGUiEfxT15eN5ukRWM8o2W9xkNWliusIS+T/AJSoFUdChjcfJz345tyC8EaEfx\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.qa.vpn.server",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:471112703134:certificate/92bf3b26-a0cb-43a2-9c60-5a27a8155068",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-11T22:48:11Z",
            "not_before": "2024-11-13T22:48:11Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAyw2wgCHTB3WstwC/R8zqGEo7oqeYK9HJA/vLuWaXyqzy+kqk\nJ2M9JYVSX2mGkPDZTUznGTAO9QH+Ho6j+4h9JDJEVIjmzP8UYZwnx2YUNl9cVEUp\nZF10IXp7xN/BGg/lOluroUXrpHBilqvvSMSy4lezV6L0MpunWYHmpheoFyUwE1lV\nyUtLzl4RFq5oJJMkzA+pjOa7AxqtosaHI08Wb1RGGbPzBtCQKc49LhO+q0JPILa4\ny4HyKZPj/eQdH6teudfF4QuXopiORvDijr2Ef+Z4iYlhahaE+DmuH1PBWfbL66W6\nJmuW4E4f4MhVyRFB5P/dA6+bv//bV2Sf7ds9PwIDAQABAoIBAHLbcH5aI7OxhZwS\nySBFMhnBS9Bq+rG2vf0J3igmdzBG+j5IIGjDQuBJdNnRqDOueUy3dnWR8LP4h5Uj\nXHC4uQjTgkFLGzrUAuRf30R0YnSLJn/oi0xhbIJPdVlctC8Y1LJZDlFwaqWeiLXv\n1a+UzBcqQqEM5RMHZvdDeoNzGDrWZUIPwClh9Msdn7kjMOCc6teM1YtJNBS7wElk\n1XXOAF4Ae40ZAQ2syXsnuvQ1JZ6Gi1CbjKEdc4vXjxFWyk0BIBKXrecRPJ1++hZ1\nUvxf1ulHi9r7pPkpFvIFpDVnGfji1+faai0brHYtrfXbny35ZclLs57MQXWkUClv\n3xst2FECgYEA6dMrmUiNLESfdpceNHWKbrocN/jFFfJC73zZVt0tbINNYcdAObI1\nSbH8sZvepAt52KVpgI3GekkA0vDCXTJwh+gjyxUEMaCxtMPY4Zp3p1fxwKN1xpSB\nPOs1vYIMyR3wVHC9hjF2MZ9hYTtI7tKfEnTM2NZ7hFGbH70Ro/lGL8cCgYEA3k9y\ncHTu48or6hg8AEBtaBE/sgWA5iby7iQ72h8QHYJPINUaeyBfiIOlgAZ4dow5nsSs\n4Be1ieRg93PjnzWD8uuWUsUhEaucgZC+URbyjUxRaYXNHLCYj5fAy2R7naqu1dIN\n6iN554l2ADSGGbY2YkXkTJfFyRgS/6q0RHp2dskCgYA0xnzos/9pJnP3iFRA8uaz\n5z3HRFb3hR6mfz9u460E+P3WO+q7GwX8BDhMvimaTRzLUUpmwZkysJeHBOBZuLC9\nfB/YDn5L1UFG0414Hi0zkB34pOxITex9m3kdtOS94AwGgwvD5hYPTTHliEQF43QT\n7ljt+DsYunKQz1PT9sdosQKBgC/UP/bZ8Zuon5IZ7K7RLbi6HU4byQO7VYDO4uGm\n1TzEEGor7yqWaHdie3Tz727x9GOoRNlhwHkOXZ5fnJVgWiclcI4WQ2sd1Oo7Tfb8\nTOsBhHKDiwGlLO2X5K7dy4q8cikmrD+3qj6aYHzi0AcwILs79kZUUQVW3J+NBoPF\nJT+hAoGARdRvBvC3yEQbi5aIwcnDuCzdcoe4dJdOcCTuUdUJMlKQbeyLsrLTCLdi\nFXrZ5wL72l3BjWWRHrk9X8LTEMhDpF8U8nKdy82OiN9gScrEyCkMCxSCg1jofRMP\n/z7DKIMGiWpVuSqO1TqgQugaYDbWTdwqSgJ82tZKT26ScDI6U3I=\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.qa.vpn.server"
            ],
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "vpn-logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:471112703134:log-group:wg/qa/vpn/logs/",
            "id": "wg/qa/vpn/logs/",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "wg/qa/vpn/logs/",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_cloudwatch_log_stream",
      "name": "vpn-logs-stream",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:471112703134:log-group:wg/qa/vpn/logs/:log-stream:connection_logs",
            "id": "connection_logs",
            "log_group_name": "wg/qa/vpn/logs/",
            "name": "connection_logs"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_authorization_rule",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_group_id": "",
            "authorize_all_groups": true,
            "client_vpn_endpoint_id": "cvpn-endpoint-0b8f50668a3755fcc",
            "description": "",
            "id": "cvpn-endpoint-0b8f50668a3755fcc,0.0.0.0/0",
            "target_network_cidr": "0.0.0.0/0",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_ec2_client_vpn_network_association.vpn-client",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_endpoint",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:client-vpn-endpoint/cvpn-endpoint-0b8f50668a3755fcc",
            "authentication_options": [
              {
                "active_directory_id": "",
                "root_certificate_chain_arn": "arn:aws:acm:us-east-2:471112703134:certificate/3365f152-ba8d-4d75-8bdb-24871c4f6318",
                "saml_provider_arn": "",
                "self_service_saml_provider_arn": "",
                "type": "certificate-authentication"
              }
            ],
            "client_cidr_block": "10.0.0.0/22",
            "client_connect_options": [
              {
                "enabled": false,
                "lambda_function_arn": ""
              }
            ],
            "client_login_banner_options": [
              {
                "banner_text": "",
                "enabled": false
              }
            ],
            "connection_log_options": [
              {
                "cloudwatch_log_group": "wg/qa/vpn/logs/",
                "cloudwatch_log_stream": "connection_logs",
                "enabled": true
              }
            ],
            "description": "wg-qa-vpn-client",
            "dns_name": "*.cvpn-endpoint-0b8f50668a3755fcc.prod.clientvpn.us-east-2.amazonaws.com",
            "dns_servers": [],
            "id": "cvpn-endpoint-0b8f50668a3755fcc",
            "security_group_ids": [
              "sg-09eee282ae63ed013"
            ],
            "self_service_portal": "disabled",
            "self_service_portal_url": "",
            "server_certificate_arn": "arn:aws:acm:us-east-2:471112703134:certificate/92bf3b26-a0cb-43a2-9c60-5a27a8155068",
            "session_timeout_hours": 8,
            "split_tunnel": true,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "transport_protocol": "udp",
            "vpc_id": "vpc-0e410be858ecb330b",
            "vpn_port": 443
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_network_association",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "association_id": "cvpn-assoc-0316def047f87f20b",
            "client_vpn_endpoint_id": "cvpn-endpoint-0b8f50668a3755fcc",
            "id": "cvpn-assoc-0316def047f87f20b",
            "subnet_id": "subnet-01859c473b71b2d72",
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::wg-qa-vpn-config-files",
            "bucket": "wg-qa-vpn-config-files",
            "bucket_domain_name": "wg-qa-vpn-config-files.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "wg-qa-vpn-config-files.s3.us-east-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": true,
            "grant": [
              {
                "id": "ff9ed7c7ca6697f42b6879b230f6df359b48991bdc87bdf86a96afc05f4445b0",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z2O1EMRO9K5GLX",
            "id": "wg-qa-vpn-config-files",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "{\"Statement\":[{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::wg-qa-vpn-config-files/*\",\"arn:aws:s3:::wg-qa-vpn-config-files\"]}],\"Version\":\"2012-10-17\"}",
            "region": "us-east-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "wg-qa-vpn-config-files",
              "Terraform": "true"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "wg-qa-vpn-config-files",
              "Terraform": "true"
            },
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "wg-qa-vpn-config-files",
            "id": "wg-qa-vpn-config-files",
            "policy": "{\"Statement\":[{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::wg-qa-vpn-config-files/*\",\"arn:aws:s3:::wg-qa-vpn-config-files\"]}],\"Version\":\"2012-10-17\"}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.data.aws_iam_policy_document.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": true,
            "block_public_policy": true,
            "bucket": "wg-qa-vpn-config-files",
            "id": "wg-qa-vpn-config-files",
            "ignore_public_acls": true,
            "restrict_public_buckets": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_server_side_encryption_configuration",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "wg-qa-vpn-config-files",
            "expected_bucket_owner": "",
            "id": "wg-qa-vpn-config-files",
            "rule": [
              {
                "apply_server_side_encryption_by_default": [
                  {
                    "kms_master_key_id": "",
                    "sse_algorithm": "AES256"
                  }
                ],
                "bucket_key_enabled": false
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_object",
      "name": "vpn-config-file",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-qa-vpn-config-files/daniel.gomez-wg-qa-vpn.ovpn",
            "bucket": "wg-qa-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTBiOGY1MDY2OGEzNzU1ZmNjLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZUQ0NBZjJnQXdJQkFnSVJBTjJpejJ2UnNQTWV1cHpDdFU0ZWc2Z3dEUVlKS29aSWh2Y05BUUVMQlFBdwpKREVMTUFrR0ExVUVDaE1DZDJjeEZUQVRCZ05WQkFNVERIZG5MbkZoTG5ad2JpNWpZVEFlRncweU5ERXhNVE15Ck1qUTRNVEZhRncwek5ERXhNVEV5TWpRNE1URmFNQ1F4Q3pBSkJnTlZCQW9UQW5kbk1SVXdFd1lEVlFRREV3eDMKWnk1eFlTNTJjRzR1WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvMk53TwpRMU9HWWZ0RndPVTBiZFVIWmRYUE1aTzFpbUp4TTNiOWtxczdXWEdkTGQ1WWNxYy9pRmlkV3ZNNVZ0eExrb1BTCmhMZUtwY0xmZEkyRlBBYWpmdEc4aEd2ZUhzNTN3TUVCOUhSWFJsTGg0L202MzVyU3drdWNiemNheit2R1dQYjgKdDJ6aDViaGNzMnJaK3BTbHVEWUhWWlM2S2g0UU9nWHVOcmxYTHQrTGVwaHQ0eGVva2hFb3Yva0ZFSkFLdDNEcwpXUjlhS3dIZHZsL20wSC92NzJreXRDQlFpVUZLS3NPTnlGNk1yaVpFU3ZEWnFQSGd6WGd2Z1VYbmJkbkNjdVA3CmZQdmtybWFVa0FZdGVKdzRZM2NkT0JvWkRsaDYyK21xQ05nN0EwU0ZEdGQyK0d1eFovK0hPcjBzMDlWc1VKSEcKV1NUZGxESGlJM3RJRmdkbkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lCQmpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlJ6UURiNnNNYnpGbmlNdGF5K2p1a0tpQ2tKekFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQWg1V2NHQmRsZjU4S24wb2EwUmhuc2gvNmQwNThpOUFaU0FzMnBmZE1HSDZadUQvZGhoaS8KUUY3R1hhZE9FOUF0WTBPYkdrTU4rTGgxcVByck15azg0dlp5Tk53bnNJVkk3OTh3M0FYK1ErRmI5VzF1T2tPOAp2YThCYnBRcFZrek9PeDFhZkQ1Zm9pajQ2bDJYRFRWWEo2Q3FkK1ZiV09jT1Yxa08rK1k2TVo2cXZJc2tKK2FnClhDdkpaTVZOK0lrVVMyTlI5SDEvYnNUM1BocDArT3ZlRFVJbnBFUytwTCt2SkJvYWk5SGRldnF6QXN2TVNqS2gKeWptazY2SVFXMXE3dE1JL2ppeFoxVVlRVDBaRlNPV0prQTBkU0lqSGtJSFhoVTRlSkhRK010dytYLys0RGI4cwpiaHVRMGs5OEJyR0dPbG8vU1hCcGJFdVdrQzVDWFlWbVJnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPVENDQWlHZ0F3SUJBZ0lRQU9PUGMvZmJnSWFTWFR2RytkM2hxekFOQmdrcWhraUc5dzBCQVFzRkFEQWsKTVFzd0NRWURWUVFLRXdKM1p6RVZNQk1HQTFVRUF4TU1kMmN1Y1dFdWRuQnVMbU5oTUI0WERUSTBNVEV4TXpJeQpORGd4TVZvWERUTTBNVEV4TVRJeU5EZ3hNVm93TlRFTE1Ba0dBMVVFQ2hNQ2QyY3hKakFrQmdOVkJBTVRIWGRuCkxuRmhMblp3Ymk1a1lXNXBaV3d1WjI5dFpYb3RZMnhwWlc1ME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0MKQVE4QU1JSUJDZ0tDQVFFQXpHSnJIeFZSZE1xUnQza1dveGRsVTNJSVZPV051UG83Yjd0MGk5QWRUeE9LZFY2NQp6cVVLc1c1c1hNVVZZSUt4clBOMkxkVERYZTFJemhPNHQxWDluVjdmRkRCRU1VYURleVZIaldSWUVkNXFQbFpHCkhVbmRYNm1JYlpzREQwOUR3MzJyNjdVV0VJd3Vpb043RC9ncmJ2eWJrNFI3ZXF2aGIzb3puVm5ISzVZaXVBaVQKejluV3dFRHVjTmdWSEhpdWNpcys0UmcrN2JzekNkSWpNS2pKUEI4SDE2bW0vTDMzSW5PeFVsL1Y4azFxd1hqdgpZT00wVDIrL0JHU1RoMUo4Ky9Qakt3ekhZVjY3K1Nvd3VuSjhIYVB5YkhzUTBNa09mZlloa2o1MjZxeEwzeDZaCktLYXVOT0c5R09HemlVZ0pIRXNKZkJpRXF0bDEyZzc5UEU1em13SURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEUKQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRQpHREFXZ0JSUnpRRGI2c01iekZuaU10YXkranVrS2lDa0p6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF1YUE4CmltejhEcW5RcWdrMkcxdW43cnhWcGlYZ2JTTDlIUTltY1Y1Q25wbFRuUUw1c2JxaVZHME5jMGJ4QldVRDlCdnYKdjFkcGNJZHVneGJQYXZmTzlVanB1d3ZJTWcyczBRTEJOSFpsd1J3aHQ2RzVOWmlnb2VJOUEzVExWSk1CVWJzMgptUWx1RWxBQS9YbzNRYXR5d2svcytIRlkwYmY2Kzlpd0dUTWp4UFN1WUVhTERHaklXc0k4RXBVbkpZSnBkVFhXCmNUaG1zQk9oZGF3cGpGNTEzQlkxYUdKOGhVNW5VcC9IK2daekx1aUxOTndqLzNoUHhtbDg5Sm8yM1dRWTJ5aVIKemlKUnlqblp6MGd0TU9IL2F2dm9CZUQyc2Z1Z3pxZklYVzRUOEJxSUpxMU96b2RSQ2FCTkNsZ3dkM05tOTVKbQpDOG5RNDdpQjFxeW5CcURaSFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgo8L2NlcnQ+Cgo8a2V5PgotLS0tLUJFR0lOIFJTQSBQUklWQVRFIEtFWS0tLS0tCk1JSUVwUUlCQUFLQ0FRRUF6R0pySHhWUmRNcVJ0M2tXb3hkbFUzSUlWT1dOdVBvN2I3dDBpOUFkVHhPS2RWNjUKenFVS3NXNXNYTVVWWUlLeHJQTjJMZFREWGUxSXpoTzR0MVg5blY3ZkZEQkVNVWFEZXlWSGpXUllFZDVxUGxaRwpIVW5kWDZtSWJac0REMDlEdzMycjY3VVdFSXd1aW9ON0QvZ3JidnliazRSN2VxdmhiM296blZuSEs1WWl1QWlUCno5bld3RUR1Y05nVkhIaXVjaXMrNFJnKzdic3pDZElqTUtqSlBCOEgxNm1tL0wzM0luT3hVbC9WOGsxcXdYanYKWU9NMFQyKy9CR1NUaDFKOCsvUGpLd3pIWVY2NytTb3d1bko4SGFQeWJIc1EwTWtPZmZZaGtqNTI2cXhMM3g2WgpLS2F1Tk9HOUdPR3ppVWdKSEVzSmZCaUVxdGwxMmc3OVBFNXptd0lEQVFBQkFvSUJBUURKMzd3bTY0dVZiREFaCnBNU3pPbnlldTFkM1kzVmthK1VoSzJxbVhsMVVxZHhzcWErbGFHYnpjam9lTjV3eHcyVnppdFlEMXM5Uml2b0sKY25oVXZkN08vZElod3JyWVlPbWxUT0VyeXgwaUtTbVBnTytvSmprK0w5bk5TUHJ3dUQ0YWJack9LZ010UFFrTApUMnJTRHpIM1loTFkxbGFRaUEwWGF3Qm9QekQyM29IVjRaV21UaHROTmVjMURhcGRxalZ6L3NhcmcrWElyYXdVCjlnOE9uL2lCVWhTaFdWbDlpeFpiOFVaWkl4UW83Z2Rxa2dtVSttQWJJUFRMclpGZ1Zkd0lIN2p6d0dNSzZLOHMKSkJzUWJBbzA1RGVKY2NUeE1pSlNYVGNsZGNNcHlSbnZoN0lHWTA3Q3Nza3d3YnBZci9XU2FFcUlISmZPRlZhMgpEQWt2Q2FlQkFvR0JBTTFndmdQaG5XaUJhb1V1MlVNU1pIUE8zcUdMWVJqN28yS3J3Q3phTTloWlVGalZsc01SCmRwUTJ1KzdiM2NDSVhHUTI5cXVMV3haT0tqbHlIdTMxbjJmQ2krams1RkZ0djYyS0ZsSlIzNjVZZWVYSmxtdFIKZFV6cmlYUGIrT3FUdjJObFROVUlNdFljcWxlNThDZ2VOODNkRzQ5elErVm1YSjdxdlg3UkR3UlJBb0dCQVA3QwovV0lDSHlDYnNOTEtlcGRXWTAvajF4V00raU1JWGxFSGcveHM1Ris1bnI1L1NpcXVvRkpVbFhoN3dTSWg0SUpTCnFXcWtaZGxMK3hmbEw2K0xIekJnczZMUUFBZ3ZsNjBzekc3WnJ1OStKSk1EUWZ4QTFHWVNqNUhIMyt5TmpERUEKK0ppRmE1MFk3QkRtR3g3anpSNDFuNVV0clRlWU5xV3hSK2tYTUpvckFvR0FFaWFhcEgwc0REQmoyYUZxVWlNdAovWTRxM3R3U21NS2tqZlBmNkJiZ3ZoNG1tN05FdjdpcllpMzBMZ2dBY1NPY0JyOVV6WlJqV0hWUUJnT3YrQmZkCkhxNXk3d0pMcTJhbnFnNnFLbHhTQ0hhSlQyV2hoWnFOWTE3dHB1K3A4QkZldU1vYklEaTVSWE1ER3YyejI5ZlAKMXNIVHpibkNKbVFGaTRYemVXSEFrZ0VDZ1lFQXdnVFFJZThKczdTK2dwcFBxS2ZTOUluSlNSRlhnb3loLzhYZwpmOEtTWGxDb0U5NHZKcmhkUXJaR0t6N2NoRmtXZVVubzJsMmZiMUROUnBKMXNaUWJTYVdyeVFmdHJrNUlqa3Q2CjJjVVExRFhXTnR3WlNibzV5QTdFcGpwNVQ5Y3crRFVNSG1RbDQ3dVNOUUI1a1JuZUllNm12VjdPOTNNRjAwUmoKUnFJeGtvY0NnWUVBbWt4Y0NKWG8vSm40MmMxRFpOY1FRT2h3SU1rUENzS3VlZ1NKQlA2MWZnZ0xUSEtoNzY3VwpMNVd4S0xvQ1ozMTY5TmVYelc2TGZVTW9iaVRTUnN0bkIrTWVXbUJWdDl0czRObGFwZmVJdFV6ZkJ5SHZ6bklkClBCVlF4S3lIaDFwcEhjOXN2emNyam42MzFtb3dyK1o3QkpNUGRyb3RFMzNsdHRxSjdMVmxjZGc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCgo8L2tleT4K",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "484d7a946eefae0402383e09506710f7",
            "force_destroy": false,
            "id": "daniel.gomez-wg-qa-vpn.ovpn",
            "key": "daniel.gomez-wg-qa-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-qa-vpn-config-files/root-wg-qa-vpn.ovpn",
            "bucket": "wg-qa-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTBiOGY1MDY2OGEzNzU1ZmNjLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZUQ0NBZjJnQXdJQkFnSVJBTjJpejJ2UnNQTWV1cHpDdFU0ZWc2Z3dEUVlKS29aSWh2Y05BUUVMQlFBdwpKREVMTUFrR0ExVUVDaE1DZDJjeEZUQVRCZ05WQkFNVERIZG5MbkZoTG5ad2JpNWpZVEFlRncweU5ERXhNVE15Ck1qUTRNVEZhRncwek5ERXhNVEV5TWpRNE1URmFNQ1F4Q3pBSkJnTlZCQW9UQW5kbk1SVXdFd1lEVlFRREV3eDMKWnk1eFlTNTJjRzR1WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvMk53TwpRMU9HWWZ0RndPVTBiZFVIWmRYUE1aTzFpbUp4TTNiOWtxczdXWEdkTGQ1WWNxYy9pRmlkV3ZNNVZ0eExrb1BTCmhMZUtwY0xmZEkyRlBBYWpmdEc4aEd2ZUhzNTN3TUVCOUhSWFJsTGg0L202MzVyU3drdWNiemNheit2R1dQYjgKdDJ6aDViaGNzMnJaK3BTbHVEWUhWWlM2S2g0UU9nWHVOcmxYTHQrTGVwaHQ0eGVva2hFb3Yva0ZFSkFLdDNEcwpXUjlhS3dIZHZsL20wSC92NzJreXRDQlFpVUZLS3NPTnlGNk1yaVpFU3ZEWnFQSGd6WGd2Z1VYbmJkbkNjdVA3CmZQdmtybWFVa0FZdGVKdzRZM2NkT0JvWkRsaDYyK21xQ05nN0EwU0ZEdGQyK0d1eFovK0hPcjBzMDlWc1VKSEcKV1NUZGxESGlJM3RJRmdkbkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lCQmpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlJ6UURiNnNNYnpGbmlNdGF5K2p1a0tpQ2tKekFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQWg1V2NHQmRsZjU4S24wb2EwUmhuc2gvNmQwNThpOUFaU0FzMnBmZE1HSDZadUQvZGhoaS8KUUY3R1hhZE9FOUF0WTBPYkdrTU4rTGgxcVByck15azg0dlp5Tk53bnNJVkk3OTh3M0FYK1ErRmI5VzF1T2tPOAp2YThCYnBRcFZrek9PeDFhZkQ1Zm9pajQ2bDJYRFRWWEo2Q3FkK1ZiV09jT1Yxa08rK1k2TVo2cXZJc2tKK2FnClhDdkpaTVZOK0lrVVMyTlI5SDEvYnNUM1BocDArT3ZlRFVJbnBFUytwTCt2SkJvYWk5SGRldnF6QXN2TVNqS2gKeWptazY2SVFXMXE3dE1JL2ppeFoxVVlRVDBaRlNPV0prQTBkU0lqSGtJSFhoVTRlSkhRK010dytYLys0RGI4cwpiaHVRMGs5OEJyR0dPbG8vU1hCcGJFdVdrQzVDWFlWbVJnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lSQVBzUVBkZjdEaSthVDlBSUMrUE16Mkl3RFFZSktvWklodmNOQVFFTEJRQXcKSkRFTE1Ba0dBMVVFQ2hNQ2QyY3hGVEFUQmdOVkJBTVRESGRuTG5GaExuWndiaTVqWVRBZUZ3MHlOREV4TVRNeQpNalE0TVRGYUZ3MHpOREV4TVRFeU1qUTRNVEZhTUMweEN6QUpCZ05WQkFvVEFuZG5NUjR3SEFZRFZRUURFeFYzClp5NXhZUzUyY0c0dWNtOXZkQzFqYkdsbGJuUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFBwcU1LUHNxNElaL250TjZZYnhTZEZtZ0lsYmlQbGJhaVZEdDg2aEU4OGJ2SGduV3E4STlUcmx4WgpybkV6YVdjdzBrZ0tlVFRsVU9WOTQzMlg0MjlBWUUzVmtmTUJqSU5EUkZPVEJlY3VwSGpUN0hQZ1RtdHFsUFBzClN3eE10YS9lcm9WTWhFWGpoTnRmcjR6b2MyQk5vZy9Cb2EvQW5qalpPS3M2VUNOYkpocHB4c2RTRTVWWkdmNmUKWDZqRGZOODNDeVpuT09Zcnd6YmpzaVdpZ3ljNTBYWVJWK2FBV3cvK3F4OXhody85YW9TaCsybllQSThSdzQyRwp5dHRhSHlUUXlRbHRVeEhqc2MzelF3VVdVZHJLTGgrbWR1QTErZExMbUZRSWVUdmdHWXZ2UjdDRjdaUG5GU29RCjIrMTBMa3MzcXZPYjZETXVPT0l1WkJZcXFqS2RBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVQKQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkZITgpBTnZxd3h2TVdlSXkxckw2TzZRcUlLUW5NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFGNzBwd3pHbWJxR0FsCmxVa2RPb2dZR1FKSWtoLzAyeVlYNldjbXZLT21kaFgvS04xTG9hYkpuaWxiMnR0VEtzQVNqTTMrU1ZESjU1ejcKckpWREdteS82R0c5MnVHNWdqSU1vaUpkRjhnMGxNV0swWGsveHBSb1lxeWc5Y2FuWmdvZUsybkwwOGVQTUkyOAplalNJeDZWWi8yeG5jNnI4dDhFb2czejZWVlV2UDJZelJTdFY3ZklQOFFUNnovcnhOM2VxSU5jK1hvK2ZMRFc5CkxaTEdBYlZ4NTU0RjkrSjBORU4vNTNJTzBUV0YySkRULzFVdDJkNXdNSVNiTkRqYy9VVnBPR3hWMmh5Z2tWdmgKTjN0MnFOM3Evb3FlWllqdW1tVDZOYjNnUUxKcWo5NnVpSmFRMElwUG1qaXQ2MHdMNGlWTFdiM3VzMVlJamdBVQpLNCtKWkNkQgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgo8L2NlcnQ+Cgo8a2V5PgotLS0tLUJFR0lOIFJTQSBQUklWQVRFIEtFWS0tLS0tCk1JSUVvd0lCQUFLQ0FRRUF6NmFqQ2o3S3VDR2Y1N1RlbUc4VW5SWm9DSlc0ajVXMm9sUTdmT29SUFBHN3g0SjEKcXZDUFU2NWNXYTV4TTJsbk1OSklDbmswNVZEbGZlTjlsK052UUdCTjFaSHpBWXlEUTBSVGt3WG5McVI0MCt4ego0RTVyYXBUejdFc01UTFd2M3E2RlRJUkY0NFRiWDYrTTZITmdUYUlQd2FHdndKNDQyVGlyT2xBald5WWFhY2JIClVoT1ZXUm4rbmwrb3czemZOd3NtWnpqbUs4TTI0N0lsb29Nbk9kRjJFVmZtZ0ZzUC9xc2ZjWWNQL1dxRW9mdHAKMkR5UEVjT05oc3JiV2g4azBNa0piVk1SNDdITjgwTUZGbEhheWk0ZnBuYmdOZm5TeTVoVUNIazc0Qm1MNzBldwpoZTJUNXhVcUVOdnRkQzVMTjZyem0rZ3pMamppTG1RV0txb3luUUlEQVFBQkFvSUJBQXpudFZCSXNMNmEwRjVOCkhseG80dVlVWTJqTkxVZzNMTCtQN3BhSDBZUnhIWk43cHlaMWh1TFRma2ZRa0paNllZQm1RVFh0Ykgwbjl1dEkKL1NBNGNVeVY3NkJyVHFmMC9KOXNtcWtUZjllbFB5RWttOXIvNUtzZUVMN0p0eno1T2JIa05NS1pvZUpPK25kSwo2TDMxbGJHZGRjODU1anRaV2YwZUNYNDVSc2srU3pTWUZ4WkJ0SFlSSC9uVk0wQmJFTFNuYjFpR1YwT3BNQjRFClVrWXBxNXdUaFg2eFR3S1Q3b2dWek03dHIwRmZ2QVlyejdpd1FTRGlMY1pPTWxjWkN6TG9oQ2ZYVTBFYkF3WGYKeTdqQWNxbi9ZdGI0WDVUZXZTNVlUbXhWMCtDYjQybFd2L2Rack5iSU5oZ05QKzcvTEJoNnRYaHRTM1JlWmRUNApnVE9wWXYwQ2dZRUEwbUM2NnQrN01CT3JCc3RueHFFUXFSaDkrckx2ZUlaM3huU0w2dnZBNTFWaFJPenJmNUFHCit5TmdKeDExbmhmcXpCaUpvMnl3TDJmd2dOaktZaGJwemF0ODdtMmozSjhGUVBpL09BVFBHelNhVHlxWEtsejkKTmViRUQwbFBvQlZLMEIrd3EwUTUxQW9PdU44MG0rSzdpYWVmTlpoUk14SnIxWW5CeDNkQWRBc0NnWUVBL0s2RQovNjl6a05lMzMvRlFzSElacm9BWElnY0ZYekI4U2pUcmdaVDVreEFNeVJ0eXBLcmhMZThTR0VaVjBUMmVqbjZFCnMxZ2cyQVNncWJmL1RUODVlRlhHV2JRYTNvRVBHSlVFelBpY1BaT1FIY1ZGejhwaWZvZld6QmQwaEJHNGEyaGcKRVdHSFBObGdaSHNyZjgvNjg5M3UxVUxWckJocWk5V1RSbFM0TlBjQ2dZQnJpS3dpZ0dmekpDcUlsNUlkRXBrcwpoZXRuS08yRkl0NjRYenhoeVh1S0E3ZHJmdHJGWW41ZkFtOFVyMWMranlVaVcreUd6M2lqVXJLNWVaYkJXc3I1CnFRMTc1aWtiRFdHbkd6N0t5SktBYW52eHVXaDVhL3kxLzVYNTVsUkFGSUlnTGdLbEdJT2lvZDF5bkEwTkhYRVUKNU14Wm5kanJqUi8zajZtd1pvRllqd0tCZ0dhSjM3anVseVFwRmhvUGtHSDUrNGYvdk9OM0crdnovZ3dUQzVycgpQSmc4UkNQOE9ucXVTWERkZW1kVmE0L2N4SklvcjJza0VUZjRNTWFPdjFDMm5uakJ2aHM2NWtoeThSQlZzTHdKCkMwWkZzbzhTTmZGTHZNcUNEMTJGQ3locEZJQ3B1NHB5SEhKSitEN3VhTW1XT2MxcXUzZlpobUl2Q2xXeWx2Qk0KZ3ZBakFvR0JBSzE2NmpoRFYvR1o4MkFtRjQvNVhReEN1Si9WSE5maFFySG9IbmhyUlVCU1NDWWs4WHZRZ2F1cwowS1JNQVQ4VHJ6ZFgvYXVlb3I1cUNad3FTdkxjcG1SR01zeGxLY3M2MnJ3ZG1oSG1DQXlZMkFPWEhFaWhKcllICkJ0eDRPdEN3eXV4dnU0a3BoSStBVENPbEVXTFh4ekswZWc5OHlPdEsvejdyNG1CVlFCcEYKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0KCjwva2V5Pgo=",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "cb0c6b87700da94e2aca6e37c82b0fdd",
            "force_destroy": false,
            "id": "root-wg-qa-vpn.ovpn",
            "key": "root-wg-qa-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-qa-vpn-config-files/terraform-wg-qa-vpn.ovpn",
            "bucket": "wg-qa-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTBiOGY1MDY2OGEzNzU1ZmNjLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZUQ0NBZjJnQXdJQkFnSVJBTjJpejJ2UnNQTWV1cHpDdFU0ZWc2Z3dEUVlKS29aSWh2Y05BUUVMQlFBdwpKREVMTUFrR0ExVUVDaE1DZDJjeEZUQVRCZ05WQkFNVERIZG5MbkZoTG5ad2JpNWpZVEFlRncweU5ERXhNVE15Ck1qUTRNVEZhRncwek5ERXhNVEV5TWpRNE1URmFNQ1F4Q3pBSkJnTlZCQW9UQW5kbk1SVXdFd1lEVlFRREV3eDMKWnk1eFlTNTJjRzR1WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMvMk53TwpRMU9HWWZ0RndPVTBiZFVIWmRYUE1aTzFpbUp4TTNiOWtxczdXWEdkTGQ1WWNxYy9pRmlkV3ZNNVZ0eExrb1BTCmhMZUtwY0xmZEkyRlBBYWpmdEc4aEd2ZUhzNTN3TUVCOUhSWFJsTGg0L202MzVyU3drdWNiemNheit2R1dQYjgKdDJ6aDViaGNzMnJaK3BTbHVEWUhWWlM2S2g0UU9nWHVOcmxYTHQrTGVwaHQ0eGVva2hFb3Yva0ZFSkFLdDNEcwpXUjlhS3dIZHZsL20wSC92NzJreXRDQlFpVUZLS3NPTnlGNk1yaVpFU3ZEWnFQSGd6WGd2Z1VYbmJkbkNjdVA3CmZQdmtybWFVa0FZdGVKdzRZM2NkT0JvWkRsaDYyK21xQ05nN0EwU0ZEdGQyK0d1eFovK0hPcjBzMDlWc1VKSEcKV1NUZGxESGlJM3RJRmdkbkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lCQmpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCUlJ6UURiNnNNYnpGbmlNdGF5K2p1a0tpQ2tKekFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQWg1V2NHQmRsZjU4S24wb2EwUmhuc2gvNmQwNThpOUFaU0FzMnBmZE1HSDZadUQvZGhoaS8KUUY3R1hhZE9FOUF0WTBPYkdrTU4rTGgxcVByck15azg0dlp5Tk53bnNJVkk3OTh3M0FYK1ErRmI5VzF1T2tPOAp2YThCYnBRcFZrek9PeDFhZkQ1Zm9pajQ2bDJYRFRWWEo2Q3FkK1ZiV09jT1Yxa08rK1k2TVo2cXZJc2tKK2FnClhDdkpaTVZOK0lrVVMyTlI5SDEvYnNUM1BocDArT3ZlRFVJbnBFUytwTCt2SkJvYWk5SGRldnF6QXN2TVNqS2gKeWptazY2SVFXMXE3dE1JL2ppeFoxVVlRVDBaRlNPV0prQTBkU0lqSGtJSFhoVTRlSkhRK010dytYLys0RGI4cwpiaHVRMGs5OEJyR0dPbG8vU1hCcGJFdVdrQzVDWFlWbVJnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROekNDQWgrZ0F3SUJBZ0lSQU5neHJrZXdpdDZjbld2cXZDb2pRNFl3RFFZSktvWklodmNOQVFFTEJRQXcKSkRFTE1Ba0dBMVVFQ2hNQ2QyY3hGVEFUQmdOVkJBTVRESGRuTG5GaExuWndiaTVqWVRBZUZ3MHlOREV4TVRNeQpNalE0TVRGYUZ3MHpOREV4TVRFeU1qUTRNVEZhTURJeEN6QUpCZ05WQkFvVEFuZG5NU013SVFZRFZRUURFeHAzClp5NXhZUzUyY0c0dWRHVnljbUZtYjNKdExXTnNhV1Z1ZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5BWFRxRldobWx0RWJsNCtuS2JrakZTQ2ZMbTFBeXArYlRaY0JOcXdFOHlNd2w3OWpPTApvbGxvM3BvWFJKRytick9ZTENOVG5DcFRhejJWM0hybCs5MzJMb0FiL3YvclVtNytUakZ1dEpBRi9JR2l4MEJyCkNoOHFrVVBudVd1L2F2MW1zWSs5KzRtam45ME5nekpnQ3VDZnVsVms2OVczWmxZVUhLaS80WkFSNEdYbzNzaTgKNTdoMk44dktVeDYvMmUxVWwvVWt5dkJiaWMxZTBLR2xSTlo5dklocjZybjArL3hJbjk1cVNvNFQ2TytmaTNtZQpjdHR6TGwwYjZXbVcrSXJkZm1tU2JHa0hkZk14c294bUlGVGpqdjU0ZDBqcS9INzgwSUh1RjcxY0gwVyticGNyCmRGSHg4KzR1TnlWb2M0UTFYOTdNTUFBWWJBTzFuS0xxNk0wQ0F3RUFBYU5XTUZRd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJndwpGb0FVVWMwQTIrckRHOHhaNGpMV3N2bzdwQ29ncENjd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHcWNaRkw0CnJ0Z2hWdkliQVRRSWpEcEpyeFUzVS90OERGZVVHM1Y2VEoya2hGTlR3ZlVJTDZpa0lGdWs1K2dobE1tNzlvSVEKODlKbUhLQ0pSVVY4blBHblc2Zk5ZcFE3cXRaK0Z0WVRtQUliUVlrT3lkWHlvQVVaVVhwVXd2Z3JZR1dYeDFBcQpjNFUvdDRGdHZlbmw1T1RwYi9iVDRkenRyK0lVL0QvOWpYUXdFS0ltZUlvWEYvMEJPRXpGYXRxYW1iVFJ5RDhJClp5NUJzNm5SWjAzZ1RKMVFlQnZLT1VvcFo5L2c2YytwUVdCZGRQQndkU3I2ZFR5QXFjajMrdCszbU9GNCs5cUoKQTA0bHZxdUYrYWplZVRZZDhkMjBpN3BRc2ZWNE56VHFyazIyZXZKK1ZrWXJjeENQTUFpTXZGYndUd1VuVVllVwpseUljVkRQU3dobHJrQVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCjwvY2VydD4KCjxrZXk+Ci0tLS0tQkVHSU4gUlNBIFBSSVZBVEUgS0VZLS0tLS0KTUlJRXBnSUJBQUtDQVFFQTBCZE9vVmFHYVcwUnVYajZjcHVTTVZJSjh1YlVES241dE5sd0UyckFUekl6Q1h2MgpNNHVpV1dqZW1oZEVrYjV1czVnc0kxT2NLbE5yUFpYY2V1WDczZll1Z0J2Ky8rdFNidjVPTVc2MGtBWDhnYUxIClFHc0tIeXFSUStlNWE3OXEvV2F4ajczN2lhT2YzUTJETW1BSzRKKzZWV1RyMWJkbVZoUWNxTC9oa0JIZ1plamUKeUx6bnVIWTN5OHBUSHIvWjdWU1g5U1RLOEZ1SnpWN1FvYVZFMW4yOGlHdnF1ZlQ3L0VpZjNtcEtqaFBvNzUrTAplWjV5MjNNdVhSdnBhWmI0aXQxK2FaSnNhUWQxOHpHeWpHWWdWT09PL25oM1NPcjhmdnpRZ2U0WHZWd2ZSYjV1Cmx5dDBVZkh6N2k0M0pXaHpoRFZmM3N3d0FCaHNBN1djb3Vyb3pRSURBUUFCQW9JQkFRQ1hXUHhWbUFyMnp0OWYKV01BL2J5c3JPQklJV3g3TGZ5MGcvaXpuMG5MQXB6QTdxNjlyMmhsZ2trZWxKMXMxN1oyeWZmRk1XRmx5NTIxTwpRNXN5ditjcWp3MVBIQTJoc1ZRcGFra1E1d1hvNHBHKzc5ZWY0THBoNUtIM0U2am0xemhIeWROSFN0U1NUVEhPCm95OVRDa3VmQ0UyTUluVHM0aEZLZGlKS0VoVktwSVJ6Zm9lU3pOa0p0ditVcGRZbm0wbTZOVElmZ2d5S05pMzEKODEvVFdEeXFaL0VmcFFFbVpWb2NsMWpRNmhSSkdtMzJrR0gxZDhpVnBjQ3VhVmgyV1h2VmVHdm9VdWhxREhIagpOQXNkc3FnaEtIRDh2QmUzaUhDR2E0Y3RiRG8zYzQ1Q28vQ3FBWklIWGE1Z3hMMzA0QVF1T25HbjArajV4dHVpClVTVEZyR2FCQW9HQkFQOHhpVHRVRGc1OHY5R3p1WkxSSGhBV0RpclJrZ2lrelNqSy9vN25vWFZ4V0VwNks0SysKTTBLaXF6OVJrZkErT0R1T0t5RGE5SnBqdEo5Zm52aGVyRVBzcStESlNYcU9yaFJiNEh1TDhOYlpKMkp3Z3NBUQp0UHRRSTF2eWphbk52aHdrNk1YTThhNE1iYVI2cm56TW02Wkdtamg2cVIrYlN0YkFQYVZyay9SZEFvR0JBTkMvCnFiU2RDVVZITHlMU2pOZWx0dXVkVjN0ZUYyL0VlcVZqYlo3SlRMREhWSW5VSVE3NCs1WFVHaGxORHM0bTFUU0kKMUxYZE9RbjlHNTdQdUFEK3lrRTN4ZW82MXJTMUt5UEpjcUV4Vi9GRDRHenVwZS9VTE9WRnIzVmtqY3JYRmNmTgphbTU4WWFWNzFuT0hkaEZIZHFrak1Ja0hjNkdMU2xrQ09KdGs2Mzh4QW9HQkFPUzJFTGdMYlUydW9IdmhCOEI5Cml1UC80RktmNExHK2dlQzlqY2VsOFI3QXB0Q1pEY1h2a1NGM2lPTUd5RFQ0am8xUnJYV1V4d1JYdDluZWFTdFEKTGpQeU9Wa05EYjI1Z21yY3JTUU5GNXgyb3NXbThJZ1NjU0dMZ1NVM0RaL1J0VUNrRTdxekl5ZEtIRG45ZWNSLwozRC81cHQ1WGtKdXpJaSsxdTRvMkVEUkJBb0dCQUx6WnlKUkh4WTFSV3dscjVsTnA3bFMyWWVDUVBTKzJWeWF0CkR3MHFIQ0dLRTZjbHJFcTVZaElvY3Z3VXhLSW9hNVk5ZkFLVUF2aFFiZDU5R1lCOUFVbURSYUFrWHYzWk1SQU4KUFpFcTdONnVnNmpKTm9JRU9DR3JxNUxPeDZDTWVYM3JEckNxQWtVT0JmTTZ4OHZXRlRuclJndVNIRUEzbmFscwo0djFpamRMaEFvR0JBTEFKOXVRS3dqaU94U1VtQ2RYM1VSWmx1cnR2clFWa28xYldtMmUxNnExNHljVCtTZzFQCjl3cEdnSGJkaHNpK0hCUGY0VTZuVjZIOGt5WXlKcng5dUVsd3BIS3hqZjdZYmJGdWNZcStZdWY5L0JiczFsNngKK2c2cnlpNVFyMUd2UlpyNWlWVnR5YVBwV1BCR3FscCtWTEs4UTc4OFRHSDA0bkt4ZmhDcnQ1Z1EKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0KCjwva2V5Pgo=",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "f8d8ae426f7b87a1a3fe4968d89e875a",
            "force_destroy": false,
            "id": "terraform-wg-qa-vpn.ovpn",
            "key": "terraform-wg-qa-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "vpn",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:471112703134:security-group/sg-09eee282ae63ed013",
            "description": "wg-qa-vpn-security-group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-09eee282ae63ed013",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "wg-qa-vpn-security-group",
            "name_prefix": "",
            "owner_id": "471112703134",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "production",
              "Name": "wg-qa-vpn-security-group",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Name": "wg-qa-vpn-security-group",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0e410be858ecb330b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_ca_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:471112703134:parameter/wg/qa/acm/vpn/ca_cert",
            "data_type": "text",
            "description": "VPN CA cert",
            "id": "/wg/qa/acm/vpn/ca_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/qa/acm/vpn/ca_cert",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_ca_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:471112703134:parameter/wg/qa/acm/vpn/ca_key",
            "data_type": "text",
            "description": "VPN CA key",
            "id": "/wg/qa/acm/vpn/ca_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/qa/acm/vpn/ca_key",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAv9jcDkNThmH7RcDlNG3VB2XVzzGTtYpicTN2/ZKrO1lxnS3e\nWHKnP4hYnVrzOVbcS5KD0oS3iqXC33SNhTwGo37RvIRr3h7Od8DBAfR0V0ZS4eP5\nut+a0sJLnG83Gs/rxlj2/Lds4eW4XLNq2fqUpbg2B1WUuioeEDoF7ja5Vy7fi3qY\nbeMXqJIRKL/5BRCQCrdw7FkfWisB3b5f5tB/7+9pMrQgUIlBSirDjchejK4mRErw\n2ajx4M14L4FF523ZwnLj+3z75K5mlJAGLXicOGN3HTgaGQ5YetvpqgjYOwNEhQ7X\ndvhrsWf/hzq9LNPVbFCRxlkk3ZQx4iN7SBYHZwIDAQABAoIBAFCqOjy1ClWitShr\nJvSYic4Gf5QS4Gygtyup3ApatSzLOv4/3xGJg9Eu3zOqnkIpx47vGAZYT2Q4tmuG\nckrnJlNwa3e8pi5K/b1UitLrmk9n/kmEtehhRJQBphEsohrf+d74YUF5TordMFuq\nBO+KcR4NCoqi7Vopg2KHQx8aW2vQSztKZW9rE6RBSE5LoWRCdKVeXi+rw59gKIV2\nhx8THAkug0hg6bkggujlb5YkraQ7Jknim6vxDAN8o+TEQL7bychXIr2+z+scXJP2\nsZzw9bDoh2RTg8KVO7RRQoPeGDzS21gSYrS1jJ6Z+5wINuNYgc0/e6+RPUeSbcIC\n5Yhi8SECgYEA4vTpb2/jS2PIYy95s+cWacv+3YeEye4b//+HpXIb5d+Lf0ufldEa\ntTI6LNDL7udsGnqkOnkroKN4SrLFXWMwdZED7NoBz9xHpGfCN7sajY11TrRnUxVr\ntaJybsG5d6mV2grSHDRMKBPbUipOzVdLYTSvEjoeanmIhosQ4W85s2sCgYEA2GXC\nijmQI4c4+HweLS/HTh68HDNZtcAnwdy8dth/lO7ihA41aKAcyxrfTftD0uSvFtoa\n5kDb7crorJnUWJB18amjx3uLUkpb6RRI3jTOLw3xY1ad8NZwTJ4/ILU+4Hw3kYsX\nlQfO2S+RHa5Xo3kVNUAz+hzQJLMzWDUjjOv+dvUCgYEAkhvXeE1Qx8UaSXhT4lSf\n4kZY8qb+/rzSu9D2s7UtbqSmerHlsB5pEkOeniFhWJEV0EoqFhbR1l3G4FgMpV1o\n4hcUrtN+nSGT4ayGpThIFN7/qUaMyjkdGVbWUqVW0EmV1kRnFY85hAech14DU0Ci\nn5a6KoLN9//7u5olqOvg+rcCgYANqqeVqTsEM2cSsmwJeIoC0ggZU9jnlKIuKS2x\n58xu8INXybnvyKTo4uKVfzfyWsUAEXg/cHszUmxNck2p5j28rHUOhSvwX4fceY58\nkiMvb5b+KhtBeZmQDTJ5c1jsPowX4gv0OpECwHFOyZL5XQ1M1qgxtJ4kozir6nc7\nUDA6/QKBgFPQYxVKDoVo+CGkLsOzt3lFOjil44G9eoR7ZX82QYvRjoq5EeSBsgJh\noCU8EeSj1Ota/jLi7LZsnIKXkJsYmRbO/jMDhtzjb1793tigjZfet9g7+Hr/IrxP\nZpWAG/Bb7YHfEwgYk9q5+tJOTvV16X9hxtzYxSFfj7bnUlVV1RwT\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_client_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:471112703134:parameter/wg/qa/acm/vpn/daniel.gomez_client_cert",
            "data_type": "text",
            "description": "VPN daniel.gomez client cert",
            "id": "/wg/qa/acm/vpn/daniel.gomez_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/qa/acm/vpn/daniel.gomez_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDOTCCAiGgAwIBAgIQAOOPc/fbgIaSXTvG+d3hqzANBgkqhkiG9w0BAQsFADAk\nMQswCQYDVQQKEwJ3ZzEVMBMGA1UEAxMMd2cucWEudnBuLmNhMB4XDTI0MTExMzIy\nNDgxMVoXDTM0MTExMTIyNDgxMVowNTELMAkGA1UEChMCd2cxJjAkBgNVBAMTHXdn\nLnFhLnZwbi5kYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAzGJrHxVRdMqRt3kWoxdlU3IIVOWNuPo7b7t0i9AdTxOKdV65\nzqUKsW5sXMUVYIKxrPN2LdTDXe1IzhO4t1X9nV7fFDBEMUaDeyVHjWRYEd5qPlZG\nHUndX6mIbZsDD09Dw32r67UWEIwuioN7D/grbvybk4R7eqvhb3oznVnHK5YiuAiT\nz9nWwEDucNgVHHiucis+4Rg+7bszCdIjMKjJPB8H16mm/L33InOxUl/V8k1qwXjv\nYOM0T2+/BGSTh1J8+/PjKwzHYV67+SowunJ8HaPybHsQ0MkOffYhkj526qxL3x6Z\nKKauNOG9GOGziUgJHEsJfBiEqtl12g79PE5zmwIDAQABo1YwVDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME\nGDAWgBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0BAQsFAAOCAQEAuaA8\nimz8DqnQqgk2G1un7rxVpiXgbSL9HQ9mcV5CnplTnQL5sbqiVG0Nc0bxBWUD9Bvv\nv1dpcIdugxbPavfO9UjpuwvIMg2s0QLBNHZlwRwht6G5NZigoeI9A3TLVJMBUbs2\nmQluElAA/Xo3Qatywk/s+HFY0bf6+9iwGTMjxPSuYEaLDGjIWsI8EpUnJYJpdTXW\ncThmsBOhdawpjF513BY1aGJ8hU5nUp/H+gZzLuiLNNwj/3hPxml89Jo23WQY2yiR\nziJRyjnZz0gtMOH/avvoBeD2sfugzqfIXW4T8BqIJq1OzodRCaBNClgwd3Nm95Jm\nC8nQ47iB1qynBqDZHQ==\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:471112703134:parameter/wg/qa/acm/vpn/root_client_cert",
            "data_type": "text",
            "description": "VPN root client cert",
            "id": "/wg/qa/acm/vpn/root_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/qa/acm/vpn/root_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDMjCCAhqgAwIBAgIRAPsQPdf7Di+aT9AIC+PMz2IwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMC0xCzAJBgNVBAoTAndnMR4wHAYDVQQDExV3\nZy5xYS52cG4ucm9vdC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDPpqMKPsq4IZ/ntN6YbxSdFmgIlbiPlbaiVDt86hE88bvHgnWq8I9TrlxZ\nrnEzaWcw0kgKeTTlUOV9432X429AYE3VkfMBjINDRFOTBecupHjT7HPgTmtqlPPs\nSwxMta/eroVMhEXjhNtfr4zoc2BNog/Boa/AnjjZOKs6UCNbJhppxsdSE5VZGf6e\nX6jDfN83CyZnOOYrwzbjsiWigyc50XYRV+aAWw/+qx9xhw/9aoSh+2nYPI8Rw42G\nyttaHyTQyQltUxHjsc3zQwUWUdrKLh+mduA1+dLLmFQIeTvgGYvvR7CF7ZPnFSoQ\n2+10Lks3qvOb6DMuOOIuZBYqqjKdAgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDAT\nBgNVHSUEDDAKBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFFHN\nANvqwxvMWeIy1rL6O6QqIKQnMA0GCSqGSIb3DQEBCwUAA4IBAQAF70pwzGmbqGAl\nlUkdOogYGQJIkh/02yYX6WcmvKOmdhX/KN1LoabJnilb2ttTKsASjM3+SVDJ55z7\nrJVDGmy/6GG92uG5gjIMoiJdF8g0lMWK0Xk/xpRoYqyg9canZgoeK2nL08ePMI28\nejSIx6VZ/2xnc6r8t8Eog3z6VVUvP2YzRStV7fIP8QT6z/rxN3eqINc+Xo+fLDW9\nLZLGAbVx554F9+J0NEN/53IO0TWF2JDT/1Ut2d5wMISbNDjc/UVpOGxV2hygkVvh\nN3t2qN3q/oqeZYjummT6Nb3gQLJqj96uiJaQ0IpPmjit60wL4iVLWb3us1YIjgAU\nK4+JZCdB\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:471112703134:parameter/wg/qa/acm/vpn/terraform_client_cert",
            "data_type": "text",
            "description": "VPN terraform client cert",
            "id": "/wg/qa/acm/vpn/terraform_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/qa/acm/vpn/terraform_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDNzCCAh+gAwIBAgIRANgxrkewit6cnWvqvCojQ4YwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMDIxCzAJBgNVBAoTAndnMSMwIQYDVQQDExp3\nZy5xYS52cG4udGVycmFmb3JtLWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEP\nADCCAQoCggEBANAXTqFWhmltEbl4+nKbkjFSCfLm1Ayp+bTZcBNqwE8yMwl79jOL\nollo3poXRJG+brOYLCNTnCpTaz2V3Hrl+932LoAb/v/rUm7+TjFutJAF/IGix0Br\nCh8qkUPnuWu/av1msY+9+4mjn90NgzJgCuCfulVk69W3ZlYUHKi/4ZAR4GXo3si8\n57h2N8vKUx6/2e1Ul/UkyvBbic1e0KGlRNZ9vIhr6rn0+/xIn95qSo4T6O+fi3me\ncttzLl0b6WmW+IrdfmmSbGkHdfMxsoxmIFTjjv54d0jq/H780IHuF71cH0W+bpcr\ndFHx8+4uNyVoc4Q1X97MMAAYbAO1nKLq6M0CAwEAAaNWMFQwDgYDVR0PAQH/BAQD\nAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgw\nFoAUUc0A2+rDG8xZ4jLWsvo7pCogpCcwDQYJKoZIhvcNAQELBQADggEBAGqcZFL4\nrtghVvIbATQIjDpJrxU3U/t8DFeUG3V6TJ2khFNTwfUIL6ikIFuk5+ghlMm79oIQ\n89JmHKCJRUV8nPGnW6fNYpQ7qtZ+FtYTmAIbQYkOydXyoAUZUXpUwvgrYGWXx1Aq\nc4U/t4Ftvenl5OTpb/bT4dztr+IU/D/9jXQwEKImeIoXF/0BOEzFatqambTRyD8I\nZy5Bs6nRZ03gTJ1QeBvKOUopZ9/g6c+pQWBddPBwdSr6dTyAqcj3+t+3mOF4+9qJ\nA04lvquF+ajeeTYd8d20i7pQsfV4NzTqrk22evJ+VkYrcxCPMAiMvFbwTwUnUYeW\nlyIcVDPSwhlrkAQ=\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_client_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:471112703134:parameter/wg/qa/acm/vpn/daniel.gomez_client_key",
            "data_type": "text",
            "description": "VPN daniel.gomez client key",
            "id": "/wg/qa/acm/vpn/daniel.gomez_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/qa/acm/vpn/daniel.gomez_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAzGJrHxVRdMqRt3kWoxdlU3IIVOWNuPo7b7t0i9AdTxOKdV65\nzqUKsW5sXMUVYIKxrPN2LdTDXe1IzhO4t1X9nV7fFDBEMUaDeyVHjWRYEd5qPlZG\nHUndX6mIbZsDD09Dw32r67UWEIwuioN7D/grbvybk4R7eqvhb3oznVnHK5YiuAiT\nz9nWwEDucNgVHHiucis+4Rg+7bszCdIjMKjJPB8H16mm/L33InOxUl/V8k1qwXjv\nYOM0T2+/BGSTh1J8+/PjKwzHYV67+SowunJ8HaPybHsQ0MkOffYhkj526qxL3x6Z\nKKauNOG9GOGziUgJHEsJfBiEqtl12g79PE5zmwIDAQABAoIBAQDJ37wm64uVbDAZ\npMSzOnyeu1d3Y3Vka+UhK2qmXl1Uqdxsqa+laGbzcjoeN5wxw2VzitYD1s9RivoK\ncnhUvd7O/dIhwrrYYOmlTOEryx0iKSmPgO+oJjk+L9nNSPrwuD4abZrOKgMtPQkL\nT2rSDzH3YhLY1laQiA0XawBoPzD23oHV4ZWmThtNNec1DapdqjVz/sarg+XIrawU\n9g8On/iBUhShWVl9ixZb8UZZIxQo7gdqkgmU+mAbIPTLrZFgVdwIH7jzwGMK6K8s\nJBsQbAo05DeJccTxMiJSXTcldcMpyRnvh7IGY07CsskwwbpYr/WSaEqIHJfOFVa2\nDAkvCaeBAoGBAM1gvgPhnWiBaoUu2UMSZHPO3qGLYRj7o2KrwCzaM9hZUFjVlsMR\ndpQ2u+7b3cCIXGQ29quLWxZOKjlyHu31n2fCi+jk5FFtv62KFlJR365YeeXJlmtR\ndUzriXPb+OqTv2NlTNUIMtYcqle58CgeN83dG49zQ+VmXJ7qvX7RDwRRAoGBAP7C\n/WICHyCbsNLKepdWY0/j1xWM+iMIXlEHg/xs5F+5nr5/SiquoFJUlXh7wSIh4IJS\nqWqkZdlL+xflL6+LHzBgs6LQAAgvl60szG7Zru9+JJMDQfxA1GYSj5HH3+yNjDEA\n+JiFa50Y7BDmGx7jzR41n5UtrTeYNqWxR+kXMJorAoGAEiaapH0sDDBj2aFqUiMt\n/Y4q3twSmMKkjfPf6Bbgvh4mm7NEv7irYi30LggAcSOcBr9UzZRjWHVQBgOv+Bfd\nHq5y7wJLq2anqg6qKlxSCHaJT2WhhZqNY17tpu+p8BFeuMobIDi5RXMDGv2z29fP\n1sHTzbnCJmQFi4XzeWHAkgECgYEAwgTQIe8Js7S+gppPqKfS9InJSRFXgoyh/8Xg\nf8KSXlCoE94vJrhdQrZGKz7chFkWeUno2l2fb1DNRpJ1sZQbSaWryQftrk5Ijkt6\n2cUQ1DXWNtwZSbo5yA7Epjp5T9cw+DUMHmQl47uSNQB5kRneIe6mvV7O93MF00Rj\nRqIxkocCgYEAmkxcCJXo/Jn42c1DZNcQQOhwIMkPCsKuegSJBP61fggLTHKh767W\nL5WxKLoCZ3169NeXzW6LfUMobiTSRstnB+MeWmBVt9ts4NlapfeItUzfByHvznId\nPBVQxKyHh1ppHc9svzcrjn631mowr+Z7BJMPdrotE33lttqJ7LVlcdg=\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:471112703134:parameter/wg/qa/acm/vpn/root_client_key",
            "data_type": "text",
            "description": "VPN root client key",
            "id": "/wg/qa/acm/vpn/root_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/qa/acm/vpn/root_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAz6ajCj7KuCGf57TemG8UnRZoCJW4j5W2olQ7fOoRPPG7x4J1\nqvCPU65cWa5xM2lnMNJICnk05VDlfeN9l+NvQGBN1ZHzAYyDQ0RTkwXnLqR40+xz\n4E5rapTz7EsMTLWv3q6FTIRF44TbX6+M6HNgTaIPwaGvwJ442TirOlAjWyYaacbH\nUhOVWRn+nl+ow3zfNwsmZzjmK8M247IlooMnOdF2EVfmgFsP/qsfcYcP/WqEoftp\n2DyPEcONhsrbWh8k0MkJbVMR47HN80MFFlHayi4fpnbgNfnSy5hUCHk74BmL70ew\nhe2T5xUqENvtdC5LN6rzm+gzLjjiLmQWKqoynQIDAQABAoIBAAzntVBIsL6a0F5N\nHlxo4uYUY2jNLUg3LL+P7paH0YRxHZN7pyZ1huLTfkfQkJZ6YYBmQTXtbH0n9utI\n/SA4cUyV76BrTqf0/J9smqkTf9elPyEkm9r/5KseEL7Jtzz5ObHkNMKZoeJO+ndK\n6L31lbGddc855jtZWf0eCX45Rsk+SzSYFxZBtHYRH/nVM0BbELSnb1iGV0OpMB4E\nUkYpq5wThX6xTwKT7ogVzM7tr0FfvAYrz7iwQSDiLcZOMlcZCzLohCfXU0EbAwXf\ny7jAcqn/Ytb4X5TevS5YTmxV0+Cb42lWv/dZrNbINhgNP+7/LBh6tXhtS3ReZdT4\ngTOpYv0CgYEA0mC66t+7MBOrBstnxqEQqRh9+rLveIZ3xnSL6vvA51VhROzrf5AG\n+yNgJx11nhfqzBiJo2ywL2fwgNjKYhbpzat87m2j3J8FQPi/OATPGzSaTyqXKlz9\nNebED0lPoBVK0B+wq0Q51AoOuN80m+K7iaefNZhRMxJr1YnBx3dAdAsCgYEA/K6E\n/69zkNe33/FQsHIZroAXIgcFXzB8SjTrgZT5kxAMyRtypKrhLe8SGEZV0T2ejn6E\ns1gg2ASgqbf/TT85eFXGWbQa3oEPGJUEzPicPZOQHcVFz8pifofWzBd0hBG4a2hg\nEWGHPNlgZHsrf8/6893u1ULVrBhqi9WTRlS4NPcCgYBriKwigGfzJCqIl5IdEpks\nhetnKO2FIt64XzxhyXuKA7drftrFYn5fAm8Ur1c+jyUiW+yGz3ijUrK5eZbBWsr5\nqQ175ikbDWGnGz7KyJKAanvxuWh5a/y1/5X55lRAFIIgLgKlGIOiod1ynA0NHXEU\n5MxZndjrjR/3j6mwZoFYjwKBgGaJ37julyQpFhoPkGH5+4f/vON3G+vz/gwTC5rr\nPJg8RCP8OnquSXDdemdVa4/cxJIor2skETf4MMaOv1C2nnjBvhs65khy8RBVsLwJ\nC0ZFso8SNfFLvMqCD12FCyhpFICpu4pyHHJJ+D7uaMmWOc1qu3fZhmIvClWylvBM\ngvAjAoGBAK166jhDV/GZ82AmF4/5XQxCuJ/VHNfhQrHoHnhrRUBSSCYk8XvQgaus\n0KRMAT8TrzdX/aueor5qCZwqSvLcpmRGMsxlKcs62rwdmhHmCAyY2AOXHEihJrYH\nBtx4OtCwyuxvu4kphI+ATCOlEWLXxzK0eg98yOtK/z7r4mBVQBpF\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:471112703134:parameter/wg/qa/acm/vpn/terraform_client_key",
            "data_type": "text",
            "description": "VPN terraform client key",
            "id": "/wg/qa/acm/vpn/terraform_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/qa/acm/vpn/terraform_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA0BdOoVaGaW0RuXj6cpuSMVIJ8ubUDKn5tNlwE2rATzIzCXv2\nM4uiWWjemhdEkb5us5gsI1OcKlNrPZXceuX73fYugBv+/+tSbv5OMW60kAX8gaLH\nQGsKHyqRQ+e5a79q/Waxj737iaOf3Q2DMmAK4J+6VWTr1bdmVhQcqL/hkBHgZeje\nyLznuHY3y8pTHr/Z7VSX9STK8FuJzV7QoaVE1n28iGvqufT7/Eif3mpKjhPo75+L\neZ5y23MuXRvpaZb4it1+aZJsaQd18zGyjGYgVOOO/nh3SOr8fvzQge4XvVwfRb5u\nlyt0UfHz7i43JWhzhDVf3swwABhsA7WcourozQIDAQABAoIBAQCXWPxVmAr2zt9f\nWMA/bysrOBIIWx7Lfy0g/izn0nLApzA7q69r2hlgkkelJ1s17Z2yffFMWFly521O\nQ5syv+cqjw1PHA2hsVQpakkQ5wXo4pG+79ef4Lph5KH3E6jm1zhHydNHStSSTTHO\noy9TCkufCE2MInTs4hFKdiJKEhVKpIRzfoeSzNkJtv+UpdYnm0m6NTIfggyKNi31\n81/TWDyqZ/EfpQEmZVocl1jQ6hRJGm32kGH1d8iVpcCuaVh2WXvVeGvoUuhqDHHj\nNAsdsqghKHD8vBe3iHCGa4ctbDo3c45Co/CqAZIHXa5gxL304AQuOnGn0+j5xtui\nUSTFrGaBAoGBAP8xiTtUDg58v9GzuZLRHhAWDirRkgikzSjK/o7noXVxWEp6K4K+\nM0Kiqz9RkfA+ODuOKyDa9JpjtJ9fnvherEPsq+DJSXqOrhRb4HuL8NbZJ2JwgsAQ\ntPtQI1vyjanNvhwk6MXM8a4MbaR6rnzMm6ZGmjh6qR+bStbAPaVrk/RdAoGBANC/\nqbSdCUVHLyLSjNeltuudV3teF2/EeqVjbZ7JTLDHVInUIQ74+5XUGhlNDs4m1TSI\n1LXdOQn9G57PuAD+ykE3xeo61rS1KyPJcqExV/FD4Gzupe/ULOVFr3VkjcrXFcfN\nam58YaV71nOHdhFHdqkjMIkHc6GLSlkCOJtk638xAoGBAOS2ELgLbU2uoHvhB8B9\niuP/4FKf4LG+geC9jcel8R7AptCZDcXvkSF3iOMGyDT4jo1RrXWUxwRXt9neaStQ\nLjPyOVkNDb25gmrcrSQNF5x2osWm8IgScSGLgSU3DZ/RtUCkE7qzIydKHDn9ecR/\n3D/5pt5XkJuzIi+1u4o2EDRBAoGBALzZyJRHxY1RWwlr5lNp7lS2YeCQPS+2Vyat\nDw0qHCGKE6clrEq5YhIocvwUxKIoa5Y9fAKUAvhQbd59GYB9AUmDRaAkXv3ZMRAN\nPZEq7N6ug6jJNoIEOCGrq5LOx6CMeX3rDrCqAkUOBfM6x8vWFTnrRguSHEA3nals\n4v1ijdLhAoGBALAJ9uQKwjiOxSUmCdX3URZlurtvrQVko1bWm2e16q14ycT+Sg1P\n9wpGgHbdhsi+HBPf4U6nV6H8kyYyJrx9uElwpHKxjf7YbbFucYq+Yuf9/Bbs1l6x\n+g6ryi5Qr1GvRZr5iVVtyaPpWPBGqlp+VLK8Q788TGH04nKxfhCrt5gQ\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_server_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:471112703134:parameter/wg/qa/acm/vpn/server_cert",
            "data_type": "text",
            "description": "VPN server cert",
            "id": "/wg/qa/acm/vpn/server_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/qa/acm/vpn/server_cert",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDLDCCAhSgAwIBAgIQfoYq9OL3fPPvsZnxvCuIgDANBgkqhkiG9w0BAQsFADAk\nMQswCQYDVQQKEwJ3ZzEVMBMGA1UEAxMMd2cucWEudnBuLmNhMB4XDTI0MTExMzIy\nNDgxMVoXDTM0MTExMTIyNDgxMVowKDELMAkGA1UEChMCd2cxGTAXBgNVBAMTEHdn\nLnFhLnZwbi5zZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDL\nDbCAIdMHday3AL9HzOoYSjuip5gr0ckD+8u5ZpfKrPL6SqQnYz0lhVJfaYaQ8NlN\nTOcZMA71Af4ejqP7iH0kMkRUiObM/xRhnCfHZhQ2X1xURSlkXXQhenvE38EaD+U6\nW6uhReukcGKWq+9IxLLiV7NXovQym6dZgeamF6gXJTATWVXJS0vOXhEWrmgkkyTM\nD6mM5rsDGq2ixocjTxZvVEYZs/MG0JApzj0uE76rQk8gtrjLgfIpk+P95B0fq165\n18XhC5eimI5G8OKOvYR/5niJiWFqFoT4Oa4fU8FZ9svrpboma5bgTh/gyFXJEUHk\n/90Dr5u//9tXZJ/t2z0/AgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUE\nDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFFHNANvqwxvM\nWeIy1rL6O6QqIKQnMA0GCSqGSIb3DQEBCwUAA4IBAQBRssxqBYqreprVywhlouS3\nrIx5jqTXrZvzLfYbVsjE1E606XVKLfEf9FqiLWpENtIhdiSv14o6adXlEeixWlVn\n11gOZGg4gjuqe79u9j+1ZMHSa+SlPYfLrLM5r4trSZce4wvomd9/2FDFaV1mGnQ/\nU4dfmUtVVYVFK+lV+PaGsxcijggLSZcuvAzE/G0hk6O4EtwGGB8gF86MwSpbvuz+\nhYSHyn5W/b5nkynqCDOOSapByxm0aBp/bbSPjOBpaxschmQECWifFI2WqoRcTw4g\nJZCGUiEfxT15eN5ukRWM8o2W9xkNWliusIS+T/AJSoFUdChjcfJz345tyC8EaEfx\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_server_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:471112703134:parameter/wg/qa/acm/vpn/server_key",
            "data_type": "text",
            "description": "VPN server key",
            "id": "/wg/qa/acm/vpn/server_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/qa/acm/vpn/server_key",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAyw2wgCHTB3WstwC/R8zqGEo7oqeYK9HJA/vLuWaXyqzy+kqk\nJ2M9JYVSX2mGkPDZTUznGTAO9QH+Ho6j+4h9JDJEVIjmzP8UYZwnx2YUNl9cVEUp\nZF10IXp7xN/BGg/lOluroUXrpHBilqvvSMSy4lezV6L0MpunWYHmpheoFyUwE1lV\nyUtLzl4RFq5oJJMkzA+pjOa7AxqtosaHI08Wb1RGGbPzBtCQKc49LhO+q0JPILa4\ny4HyKZPj/eQdH6teudfF4QuXopiORvDijr2Ef+Z4iYlhahaE+DmuH1PBWfbL66W6\nJmuW4E4f4MhVyRFB5P/dA6+bv//bV2Sf7ds9PwIDAQABAoIBAHLbcH5aI7OxhZwS\nySBFMhnBS9Bq+rG2vf0J3igmdzBG+j5IIGjDQuBJdNnRqDOueUy3dnWR8LP4h5Uj\nXHC4uQjTgkFLGzrUAuRf30R0YnSLJn/oi0xhbIJPdVlctC8Y1LJZDlFwaqWeiLXv\n1a+UzBcqQqEM5RMHZvdDeoNzGDrWZUIPwClh9Msdn7kjMOCc6teM1YtJNBS7wElk\n1XXOAF4Ae40ZAQ2syXsnuvQ1JZ6Gi1CbjKEdc4vXjxFWyk0BIBKXrecRPJ1++hZ1\nUvxf1ulHi9r7pPkpFvIFpDVnGfji1+faai0brHYtrfXbny35ZclLs57MQXWkUClv\n3xst2FECgYEA6dMrmUiNLESfdpceNHWKbrocN/jFFfJC73zZVt0tbINNYcdAObI1\nSbH8sZvepAt52KVpgI3GekkA0vDCXTJwh+gjyxUEMaCxtMPY4Zp3p1fxwKN1xpSB\nPOs1vYIMyR3wVHC9hjF2MZ9hYTtI7tKfEnTM2NZ7hFGbH70Ro/lGL8cCgYEA3k9y\ncHTu48or6hg8AEBtaBE/sgWA5iby7iQ72h8QHYJPINUaeyBfiIOlgAZ4dow5nsSs\n4Be1ieRg93PjnzWD8uuWUsUhEaucgZC+URbyjUxRaYXNHLCYj5fAy2R7naqu1dIN\n6iN554l2ADSGGbY2YkXkTJfFyRgS/6q0RHp2dskCgYA0xnzos/9pJnP3iFRA8uaz\n5z3HRFb3hR6mfz9u460E+P3WO+q7GwX8BDhMvimaTRzLUUpmwZkysJeHBOBZuLC9\nfB/YDn5L1UFG0414Hi0zkB34pOxITex9m3kdtOS94AwGgwvD5hYPTTHliEQF43QT\n7ljt+DsYunKQz1PT9sdosQKBgC/UP/bZ8Zuon5IZ7K7RLbi6HU4byQO7VYDO4uGm\n1TzEEGor7yqWaHdie3Tz727x9GOoRNlhwHkOXZ5fnJVgWiclcI4WQ2sd1Oo7Tfb8\nTOsBhHKDiwGlLO2X5K7dy4q8cikmrD+3qj6aYHzi0AcwILs79kZUUQVW3J+NBoPF\nJT+hAoGARdRvBvC3yEQbi5aIwcnDuCzdcoe4dJdOcCTuUdUJMlKQbeyLsrLTCLdi\nFXrZ5wL72l3BjWWRHrk9X8LTEMhDpF8U8nKdy82OiN9gScrEyCkMCxSCg1jofRMP\n/z7DKIMGiWpVuSqO1TqgQugaYDbWTdwqSgJ82tZKT26ScDI6U3I=\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.server"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_cert_request",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICejCCAWICAQAwNTELMAkGA1UEChMCd2cxJjAkBgNVBAMTHXdnLnFhLnZwbi5k\nYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEAzGJrHxVRdMqRt3kWoxdlU3IIVOWNuPo7b7t0i9AdTxOKdV65zqUKsW5sXMUV\nYIKxrPN2LdTDXe1IzhO4t1X9nV7fFDBEMUaDeyVHjWRYEd5qPlZGHUndX6mIbZsD\nD09Dw32r67UWEIwuioN7D/grbvybk4R7eqvhb3oznVnHK5YiuAiTz9nWwEDucNgV\nHHiucis+4Rg+7bszCdIjMKjJPB8H16mm/L33InOxUl/V8k1qwXjvYOM0T2+/BGST\nh1J8+/PjKwzHYV67+SowunJ8HaPybHsQ0MkOffYhkj526qxL3x6ZKKauNOG9GOGz\niUgJHEsJfBiEqtl12g79PE5zmwIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAIeY\nypNAFfeLxqSCh2+A3Njezp3/20N2hEidwrF9xiPDoJUxuruRa0UFg271ZEDAh8q3\nu0RZKFpzAc45JgDRJHQrvHenfyfDQYTZiNE5PhymVNjrgSN5ZGsGju9IMkTpj5LM\nbOjhfjro03UnJ/DdvNw6Kh2zuOzSrxAjzvh3x9LzExa9eQBYrp0N70CRc9SfVimk\nIBCKoVCcfCYgbAfP5daJyB+qDmfr/9WkWVqH8oszpOK64C0Wr8hymBPzRy9D+Ep3\n6Q2QzH3ryDP0LvpzMTrT2a7aoAUZjyNVemFuDEwTU4bLn2W2Uv8jy1WpgqLxk2C4\nGF44K6Ah6jusk7NuWis=\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "67dd456226fea1eb06a25aa514d710626dd3ead2",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAzGJrHxVRdMqRt3kWoxdlU3IIVOWNuPo7b7t0i9AdTxOKdV65\nzqUKsW5sXMUVYIKxrPN2LdTDXe1IzhO4t1X9nV7fFDBEMUaDeyVHjWRYEd5qPlZG\nHUndX6mIbZsDD09Dw32r67UWEIwuioN7D/grbvybk4R7eqvhb3oznVnHK5YiuAiT\nz9nWwEDucNgVHHiucis+4Rg+7bszCdIjMKjJPB8H16mm/L33InOxUl/V8k1qwXjv\nYOM0T2+/BGSTh1J8+/PjKwzHYV67+SowunJ8HaPybHsQ0MkOffYhkj526qxL3x6Z\nKKauNOG9GOGziUgJHEsJfBiEqtl12g79PE5zmwIDAQABAoIBAQDJ37wm64uVbDAZ\npMSzOnyeu1d3Y3Vka+UhK2qmXl1Uqdxsqa+laGbzcjoeN5wxw2VzitYD1s9RivoK\ncnhUvd7O/dIhwrrYYOmlTOEryx0iKSmPgO+oJjk+L9nNSPrwuD4abZrOKgMtPQkL\nT2rSDzH3YhLY1laQiA0XawBoPzD23oHV4ZWmThtNNec1DapdqjVz/sarg+XIrawU\n9g8On/iBUhShWVl9ixZb8UZZIxQo7gdqkgmU+mAbIPTLrZFgVdwIH7jzwGMK6K8s\nJBsQbAo05DeJccTxMiJSXTcldcMpyRnvh7IGY07CsskwwbpYr/WSaEqIHJfOFVa2\nDAkvCaeBAoGBAM1gvgPhnWiBaoUu2UMSZHPO3qGLYRj7o2KrwCzaM9hZUFjVlsMR\ndpQ2u+7b3cCIXGQ29quLWxZOKjlyHu31n2fCi+jk5FFtv62KFlJR365YeeXJlmtR\ndUzriXPb+OqTv2NlTNUIMtYcqle58CgeN83dG49zQ+VmXJ7qvX7RDwRRAoGBAP7C\n/WICHyCbsNLKepdWY0/j1xWM+iMIXlEHg/xs5F+5nr5/SiquoFJUlXh7wSIh4IJS\nqWqkZdlL+xflL6+LHzBgs6LQAAgvl60szG7Zru9+JJMDQfxA1GYSj5HH3+yNjDEA\n+JiFa50Y7BDmGx7jzR41n5UtrTeYNqWxR+kXMJorAoGAEiaapH0sDDBj2aFqUiMt\n/Y4q3twSmMKkjfPf6Bbgvh4mm7NEv7irYi30LggAcSOcBr9UzZRjWHVQBgOv+Bfd\nHq5y7wJLq2anqg6qKlxSCHaJT2WhhZqNY17tpu+p8BFeuMobIDi5RXMDGv2z29fP\n1sHTzbnCJmQFi4XzeWHAkgECgYEAwgTQIe8Js7S+gppPqKfS9InJSRFXgoyh/8Xg\nf8KSXlCoE94vJrhdQrZGKz7chFkWeUno2l2fb1DNRpJ1sZQbSaWryQftrk5Ijkt6\n2cUQ1DXWNtwZSbo5yA7Epjp5T9cw+DUMHmQl47uSNQB5kRneIe6mvV7O93MF00Rj\nRqIxkocCgYEAmkxcCJXo/Jn42c1DZNcQQOhwIMkPCsKuegSJBP61fggLTHKh767W\nL5WxKLoCZ3169NeXzW6LfUMobiTSRstnB+MeWmBVt9ts4NlapfeItUzfByHvznId\nPBVQxKyHh1ppHc9svzcrjn631mowr+Z7BJMPdrotE33lttqJ7LVlcdg=\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.qa.vpn.daniel.gomez-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICcjCCAVoCAQAwLTELMAkGA1UEChMCd2cxHjAcBgNVBAMTFXdnLnFhLnZwbi5y\nb290LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM+mowo+\nyrghn+e03phvFJ0WaAiVuI+VtqJUO3zqETzxu8eCdarwj1OuXFmucTNpZzDSSAp5\nNOVQ5X3jfZfjb0BgTdWR8wGMg0NEU5MF5y6keNPsc+BOa2qU8+xLDEy1r96uhUyE\nReOE21+vjOhzYE2iD8Ghr8CeONk4qzpQI1smGmnGx1ITlVkZ/p5fqMN83zcLJmc4\n5ivDNuOyJaKDJznRdhFX5oBbD/6rH3GHD/1qhKH7adg8jxHDjYbK21ofJNDJCW1T\nEeOxzfNDBRZR2souH6Z24DX50suYVAh5O+AZi+9HsIXtk+cVKhDb7XQuSzeq85vo\nMy444i5kFiqqMp0CAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQCTNSVyTtpnRbn4\nTpwgn+mVzze3E8xeAKAIBWqL30dx9xNEhN54cFAfz+PIFTSa0mjTY2FDMmRy1Uci\neeEDNH5z8CzXtF7eFFFuYqBu1iqX0kMpmSCDEBbLngR8lfALiA5/ryjVEjK65cGc\nC3MGVDBbyKIt1DQEPLECgikZtX5PFMtSxsIls28pCO3A11LGPpModYHtVOOQD132\n57GQPd7itFMU7CfaP4DFu5GekMxT84yvxg6pBhGyzuduQEXtMh6BHX72E0Ch0C65\nO2IpqdCUbDTbaHRR86011+T/mF2eGvQdEXwFFxuliLKcQ8FZNyYIOp3DtPvt9Uxk\nZjNa7gtX\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "b01243c0bb57a29bc2b4f0cb05fa79a3b6092dd7",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAz6ajCj7KuCGf57TemG8UnRZoCJW4j5W2olQ7fOoRPPG7x4J1\nqvCPU65cWa5xM2lnMNJICnk05VDlfeN9l+NvQGBN1ZHzAYyDQ0RTkwXnLqR40+xz\n4E5rapTz7EsMTLWv3q6FTIRF44TbX6+M6HNgTaIPwaGvwJ442TirOlAjWyYaacbH\nUhOVWRn+nl+ow3zfNwsmZzjmK8M247IlooMnOdF2EVfmgFsP/qsfcYcP/WqEoftp\n2DyPEcONhsrbWh8k0MkJbVMR47HN80MFFlHayi4fpnbgNfnSy5hUCHk74BmL70ew\nhe2T5xUqENvtdC5LN6rzm+gzLjjiLmQWKqoynQIDAQABAoIBAAzntVBIsL6a0F5N\nHlxo4uYUY2jNLUg3LL+P7paH0YRxHZN7pyZ1huLTfkfQkJZ6YYBmQTXtbH0n9utI\n/SA4cUyV76BrTqf0/J9smqkTf9elPyEkm9r/5KseEL7Jtzz5ObHkNMKZoeJO+ndK\n6L31lbGddc855jtZWf0eCX45Rsk+SzSYFxZBtHYRH/nVM0BbELSnb1iGV0OpMB4E\nUkYpq5wThX6xTwKT7ogVzM7tr0FfvAYrz7iwQSDiLcZOMlcZCzLohCfXU0EbAwXf\ny7jAcqn/Ytb4X5TevS5YTmxV0+Cb42lWv/dZrNbINhgNP+7/LBh6tXhtS3ReZdT4\ngTOpYv0CgYEA0mC66t+7MBOrBstnxqEQqRh9+rLveIZ3xnSL6vvA51VhROzrf5AG\n+yNgJx11nhfqzBiJo2ywL2fwgNjKYhbpzat87m2j3J8FQPi/OATPGzSaTyqXKlz9\nNebED0lPoBVK0B+wq0Q51AoOuN80m+K7iaefNZhRMxJr1YnBx3dAdAsCgYEA/K6E\n/69zkNe33/FQsHIZroAXIgcFXzB8SjTrgZT5kxAMyRtypKrhLe8SGEZV0T2ejn6E\ns1gg2ASgqbf/TT85eFXGWbQa3oEPGJUEzPicPZOQHcVFz8pifofWzBd0hBG4a2hg\nEWGHPNlgZHsrf8/6893u1ULVrBhqi9WTRlS4NPcCgYBriKwigGfzJCqIl5IdEpks\nhetnKO2FIt64XzxhyXuKA7drftrFYn5fAm8Ur1c+jyUiW+yGz3ijUrK5eZbBWsr5\nqQ175ikbDWGnGz7KyJKAanvxuWh5a/y1/5X55lRAFIIgLgKlGIOiod1ynA0NHXEU\n5MxZndjrjR/3j6mwZoFYjwKBgGaJ37julyQpFhoPkGH5+4f/vON3G+vz/gwTC5rr\nPJg8RCP8OnquSXDdemdVa4/cxJIor2skETf4MMaOv1C2nnjBvhs65khy8RBVsLwJ\nC0ZFso8SNfFLvMqCD12FCyhpFICpu4pyHHJJ+D7uaMmWOc1qu3fZhmIvClWylvBM\ngvAjAoGBAK166jhDV/GZ82AmF4/5XQxCuJ/VHNfhQrHoHnhrRUBSSCYk8XvQgaus\n0KRMAT8TrzdX/aueor5qCZwqSvLcpmRGMsxlKcs62rwdmhHmCAyY2AOXHEihJrYH\nBtx4OtCwyuxvu4kphI+ATCOlEWLXxzK0eg98yOtK/z7r4mBVQBpF\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.qa.vpn.root-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICdzCCAV8CAQAwMjELMAkGA1UEChMCd2cxIzAhBgNVBAMTGndnLnFhLnZwbi50\nZXJyYWZvcm0tY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\n0BdOoVaGaW0RuXj6cpuSMVIJ8ubUDKn5tNlwE2rATzIzCXv2M4uiWWjemhdEkb5u\ns5gsI1OcKlNrPZXceuX73fYugBv+/+tSbv5OMW60kAX8gaLHQGsKHyqRQ+e5a79q\n/Waxj737iaOf3Q2DMmAK4J+6VWTr1bdmVhQcqL/hkBHgZejeyLznuHY3y8pTHr/Z\n7VSX9STK8FuJzV7QoaVE1n28iGvqufT7/Eif3mpKjhPo75+LeZ5y23MuXRvpaZb4\nit1+aZJsaQd18zGyjGYgVOOO/nh3SOr8fvzQge4XvVwfRb5ulyt0UfHz7i43JWhz\nhDVf3swwABhsA7WcourozQIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBALh66wDW\npYg/lMw//jErCkQXG5VPs44HUGjhGkVL9aFy6xI6z5/We/UrSbaOXdlLwxNpoyOS\npiYuA2EOT2S196X6MMvr0mkRL+GyrxVZdzH767QFYCSalKNbEiAkhMvsd8bbRYc/\nnJGJN0JEwQ4qWD+fRXBTs/d7cwhY/eJfkF1yhRtEP9Gf1++dVYf9DsMwnqc6tUTR\nPnGieMx+oPXnXiWcNNSmlqmgUWfIgwQB/aZV0zDhR2qPC3sdNmoOnxBmEIuX8o78\nK+HdvO3ZUf0h1ryszEw1MgYzS2XcQQLzfiBapGkaoh7HNmuSPIgyPV5kPMChfEkq\nigvR7rIJ4csMDmg=\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "6e94e9320d62454f89e2ce342033519978888c33",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA0BdOoVaGaW0RuXj6cpuSMVIJ8ubUDKn5tNlwE2rATzIzCXv2\nM4uiWWjemhdEkb5us5gsI1OcKlNrPZXceuX73fYugBv+/+tSbv5OMW60kAX8gaLH\nQGsKHyqRQ+e5a79q/Waxj737iaOf3Q2DMmAK4J+6VWTr1bdmVhQcqL/hkBHgZeje\nyLznuHY3y8pTHr/Z7VSX9STK8FuJzV7QoaVE1n28iGvqufT7/Eif3mpKjhPo75+L\neZ5y23MuXRvpaZb4it1+aZJsaQd18zGyjGYgVOOO/nh3SOr8fvzQge4XvVwfRb5u\nlyt0UfHz7i43JWhzhDVf3swwABhsA7WcourozQIDAQABAoIBAQCXWPxVmAr2zt9f\nWMA/bysrOBIIWx7Lfy0g/izn0nLApzA7q69r2hlgkkelJ1s17Z2yffFMWFly521O\nQ5syv+cqjw1PHA2hsVQpakkQ5wXo4pG+79ef4Lph5KH3E6jm1zhHydNHStSSTTHO\noy9TCkufCE2MInTs4hFKdiJKEhVKpIRzfoeSzNkJtv+UpdYnm0m6NTIfggyKNi31\n81/TWDyqZ/EfpQEmZVocl1jQ6hRJGm32kGH1d8iVpcCuaVh2WXvVeGvoUuhqDHHj\nNAsdsqghKHD8vBe3iHCGa4ctbDo3c45Co/CqAZIHXa5gxL304AQuOnGn0+j5xtui\nUSTFrGaBAoGBAP8xiTtUDg58v9GzuZLRHhAWDirRkgikzSjK/o7noXVxWEp6K4K+\nM0Kiqz9RkfA+ODuOKyDa9JpjtJ9fnvherEPsq+DJSXqOrhRb4HuL8NbZJ2JwgsAQ\ntPtQI1vyjanNvhwk6MXM8a4MbaR6rnzMm6ZGmjh6qR+bStbAPaVrk/RdAoGBANC/\nqbSdCUVHLyLSjNeltuudV3teF2/EeqVjbZ7JTLDHVInUIQ74+5XUGhlNDs4m1TSI\n1LXdOQn9G57PuAD+ykE3xeo61rS1KyPJcqExV/FD4Gzupe/ULOVFr3VkjcrXFcfN\nam58YaV71nOHdhFHdqkjMIkHc6GLSlkCOJtk638xAoGBAOS2ELgLbU2uoHvhB8B9\niuP/4FKf4LG+geC9jcel8R7AptCZDcXvkSF3iOMGyDT4jo1RrXWUxwRXt9neaStQ\nLjPyOVkNDb25gmrcrSQNF5x2osWm8IgScSGLgSU3DZ/RtUCkE7qzIydKHDn9ecR/\n3D/5pt5XkJuzIi+1u4o2EDRBAoGBALzZyJRHxY1RWwlr5lNp7lS2YeCQPS+2Vyat\nDw0qHCGKE6clrEq5YhIocvwUxKIoa5Y9fAKUAvhQbd59GYB9AUmDRaAkXv3ZMRAN\nPZEq7N6ug6jJNoIEOCGrq5LOx6CMeX3rDrCqAkUOBfM6x8vWFTnrRguSHEA3nals\n4v1ijdLhAoGBALAJ9uQKwjiOxSUmCdX3URZlurtvrQVko1bWm2e16q14ycT+Sg1P\n9wpGgHbdhsi+HBPf4U6nV6H8kyYyJrx9uElwpHKxjf7YbbFucYq+Yuf9/Bbs1l6x\n+g6ryi5Qr1GvRZr5iVVtyaPpWPBGqlp+VLK8Q788TGH04nKxfhCrt5gQ\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.qa.vpn.terraform-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_cert_request",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICbTCCAVUCAQAwKDELMAkGA1UEChMCd2cxGTAXBgNVBAMTEHdnLnFhLnZwbi5z\nZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDLDbCAIdMHday3\nAL9HzOoYSjuip5gr0ckD+8u5ZpfKrPL6SqQnYz0lhVJfaYaQ8NlNTOcZMA71Af4e\njqP7iH0kMkRUiObM/xRhnCfHZhQ2X1xURSlkXXQhenvE38EaD+U6W6uhReukcGKW\nq+9IxLLiV7NXovQym6dZgeamF6gXJTATWVXJS0vOXhEWrmgkkyTMD6mM5rsDGq2i\nxocjTxZvVEYZs/MG0JApzj0uE76rQk8gtrjLgfIpk+P95B0fq16518XhC5eimI5G\n8OKOvYR/5niJiWFqFoT4Oa4fU8FZ9svrpboma5bgTh/gyFXJEUHk/90Dr5u//9tX\nZJ/t2z0/AgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEALuwtQPQ0il8dxo9440/4\nJhhu5VxWUL5AGzuZOUcsTcb4iqu7fmTK0Ngs/ln8bI1O3XcbiO4C5QCtHmHKnkKk\nl465BFdf+gR6NiiQedUbUKl/jDLI6dDhRhp8Ge+VVBabTPkUUefvCEYorCxUngF2\nyxkheT9n0eZ4om8nfPTI6jz82IyuVJebEkWOBNfemdCMcGVY2ANkBeZA4llrOJYW\nkvzHDGQUykWi1uZWONnr98tX3KhJkb1uzCnORDGdNUjDxXLBSifqBw5ju7nW8Doc\nxhmztwlrpzyZX9oTX6tqD8EJTenzg8Ni2oxz8y7Gmf8YASK2aZEVoh6qGFR4mwMo\nvg==\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "34b541eed13b3c979976a61192f0f181ba8ad653",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAyw2wgCHTB3WstwC/R8zqGEo7oqeYK9HJA/vLuWaXyqzy+kqk\nJ2M9JYVSX2mGkPDZTUznGTAO9QH+Ho6j+4h9JDJEVIjmzP8UYZwnx2YUNl9cVEUp\nZF10IXp7xN/BGg/lOluroUXrpHBilqvvSMSy4lezV6L0MpunWYHmpheoFyUwE1lV\nyUtLzl4RFq5oJJMkzA+pjOa7AxqtosaHI08Wb1RGGbPzBtCQKc49LhO+q0JPILa4\ny4HyKZPj/eQdH6teudfF4QuXopiORvDijr2Ef+Z4iYlhahaE+DmuH1PBWfbL66W6\nJmuW4E4f4MhVyRFB5P/dA6+bv//bV2Sf7ds9PwIDAQABAoIBAHLbcH5aI7OxhZwS\nySBFMhnBS9Bq+rG2vf0J3igmdzBG+j5IIGjDQuBJdNnRqDOueUy3dnWR8LP4h5Uj\nXHC4uQjTgkFLGzrUAuRf30R0YnSLJn/oi0xhbIJPdVlctC8Y1LJZDlFwaqWeiLXv\n1a+UzBcqQqEM5RMHZvdDeoNzGDrWZUIPwClh9Msdn7kjMOCc6teM1YtJNBS7wElk\n1XXOAF4Ae40ZAQ2syXsnuvQ1JZ6Gi1CbjKEdc4vXjxFWyk0BIBKXrecRPJ1++hZ1\nUvxf1ulHi9r7pPkpFvIFpDVnGfji1+faai0brHYtrfXbny35ZclLs57MQXWkUClv\n3xst2FECgYEA6dMrmUiNLESfdpceNHWKbrocN/jFFfJC73zZVt0tbINNYcdAObI1\nSbH8sZvepAt52KVpgI3GekkA0vDCXTJwh+gjyxUEMaCxtMPY4Zp3p1fxwKN1xpSB\nPOs1vYIMyR3wVHC9hjF2MZ9hYTtI7tKfEnTM2NZ7hFGbH70Ro/lGL8cCgYEA3k9y\ncHTu48or6hg8AEBtaBE/sgWA5iby7iQ72h8QHYJPINUaeyBfiIOlgAZ4dow5nsSs\n4Be1ieRg93PjnzWD8uuWUsUhEaucgZC+URbyjUxRaYXNHLCYj5fAy2R7naqu1dIN\n6iN554l2ADSGGbY2YkXkTJfFyRgS/6q0RHp2dskCgYA0xnzos/9pJnP3iFRA8uaz\n5z3HRFb3hR6mfz9u460E+P3WO+q7GwX8BDhMvimaTRzLUUpmwZkysJeHBOBZuLC9\nfB/YDn5L1UFG0414Hi0zkB34pOxITex9m3kdtOS94AwGgwvD5hYPTTHliEQF43QT\n7ljt+DsYunKQz1PT9sdosQKBgC/UP/bZ8Zuon5IZ7K7RLbi6HU4byQO7VYDO4uGm\n1TzEEGor7yqWaHdie3Tz727x9GOoRNlhwHkOXZ5fnJVgWiclcI4WQ2sd1Oo7Tfb8\nTOsBhHKDiwGlLO2X5K7dy4q8cikmrD+3qj6aYHzi0AcwILs79kZUUQVW3J+NBoPF\nJT+hAoGARdRvBvC3yEQbi5aIwcnDuCzdcoe4dJdOcCTuUdUJMlKQbeyLsrLTCLdi\nFXrZ5wL72l3BjWWRHrk9X8LTEMhDpF8U8nKdy82OiN9gScrEyCkMCxSCg1jofRMP\n/z7DKIMGiWpVuSqO1TqgQugaYDbWTdwqSgJ82tZKT26ScDI6U3I=\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.qa.vpn.server",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.server"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_locally_signed_cert",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAv9jcDkNThmH7RcDlNG3VB2XVzzGTtYpicTN2/ZKrO1lxnS3e\nWHKnP4hYnVrzOVbcS5KD0oS3iqXC33SNhTwGo37RvIRr3h7Od8DBAfR0V0ZS4eP5\nut+a0sJLnG83Gs/rxlj2/Lds4eW4XLNq2fqUpbg2B1WUuioeEDoF7ja5Vy7fi3qY\nbeMXqJIRKL/5BRCQCrdw7FkfWisB3b5f5tB/7+9pMrQgUIlBSirDjchejK4mRErw\n2ajx4M14L4FF523ZwnLj+3z75K5mlJAGLXicOGN3HTgaGQ5YetvpqgjYOwNEhQ7X\ndvhrsWf/hzq9LNPVbFCRxlkk3ZQx4iN7SBYHZwIDAQABAoIBAFCqOjy1ClWitShr\nJvSYic4Gf5QS4Gygtyup3ApatSzLOv4/3xGJg9Eu3zOqnkIpx47vGAZYT2Q4tmuG\nckrnJlNwa3e8pi5K/b1UitLrmk9n/kmEtehhRJQBphEsohrf+d74YUF5TordMFuq\nBO+KcR4NCoqi7Vopg2KHQx8aW2vQSztKZW9rE6RBSE5LoWRCdKVeXi+rw59gKIV2\nhx8THAkug0hg6bkggujlb5YkraQ7Jknim6vxDAN8o+TEQL7bychXIr2+z+scXJP2\nsZzw9bDoh2RTg8KVO7RRQoPeGDzS21gSYrS1jJ6Z+5wINuNYgc0/e6+RPUeSbcIC\n5Yhi8SECgYEA4vTpb2/jS2PIYy95s+cWacv+3YeEye4b//+HpXIb5d+Lf0ufldEa\ntTI6LNDL7udsGnqkOnkroKN4SrLFXWMwdZED7NoBz9xHpGfCN7sajY11TrRnUxVr\ntaJybsG5d6mV2grSHDRMKBPbUipOzVdLYTSvEjoeanmIhosQ4W85s2sCgYEA2GXC\nijmQI4c4+HweLS/HTh68HDNZtcAnwdy8dth/lO7ihA41aKAcyxrfTftD0uSvFtoa\n5kDb7crorJnUWJB18amjx3uLUkpb6RRI3jTOLw3xY1ad8NZwTJ4/ILU+4Hw3kYsX\nlQfO2S+RHa5Xo3kVNUAz+hzQJLMzWDUjjOv+dvUCgYEAkhvXeE1Qx8UaSXhT4lSf\n4kZY8qb+/rzSu9D2s7UtbqSmerHlsB5pEkOeniFhWJEV0EoqFhbR1l3G4FgMpV1o\n4hcUrtN+nSGT4ayGpThIFN7/qUaMyjkdGVbWUqVW0EmV1kRnFY85hAech14DU0Ci\nn5a6KoLN9//7u5olqOvg+rcCgYANqqeVqTsEM2cSsmwJeIoC0ggZU9jnlKIuKS2x\n58xu8INXybnvyKTo4uKVfzfyWsUAEXg/cHszUmxNck2p5j28rHUOhSvwX4fceY58\nkiMvb5b+KhtBeZmQDTJ5c1jsPowX4gv0OpECwHFOyZL5XQ1M1qgxtJ4kozir6nc7\nUDA6/QKBgFPQYxVKDoVo+CGkLsOzt3lFOjil44G9eoR7ZX82QYvRjoq5EeSBsgJh\noCU8EeSj1Ota/jLi7LZsnIKXkJsYmRbO/jMDhtzjb1793tigjZfet9g7+Hr/IrxP\nZpWAG/Bb7YHfEwgYk9q5+tJOTvV16X9hxtzYxSFfj7bnUlVV1RwT\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDOTCCAiGgAwIBAgIQAOOPc/fbgIaSXTvG+d3hqzANBgkqhkiG9w0BAQsFADAk\nMQswCQYDVQQKEwJ3ZzEVMBMGA1UEAxMMd2cucWEudnBuLmNhMB4XDTI0MTExMzIy\nNDgxMVoXDTM0MTExMTIyNDgxMVowNTELMAkGA1UEChMCd2cxJjAkBgNVBAMTHXdn\nLnFhLnZwbi5kYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAzGJrHxVRdMqRt3kWoxdlU3IIVOWNuPo7b7t0i9AdTxOKdV65\nzqUKsW5sXMUVYIKxrPN2LdTDXe1IzhO4t1X9nV7fFDBEMUaDeyVHjWRYEd5qPlZG\nHUndX6mIbZsDD09Dw32r67UWEIwuioN7D/grbvybk4R7eqvhb3oznVnHK5YiuAiT\nz9nWwEDucNgVHHiucis+4Rg+7bszCdIjMKjJPB8H16mm/L33InOxUl/V8k1qwXjv\nYOM0T2+/BGSTh1J8+/PjKwzHYV67+SowunJ8HaPybHsQ0MkOffYhkj526qxL3x6Z\nKKauNOG9GOGziUgJHEsJfBiEqtl12g79PE5zmwIDAQABo1YwVDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME\nGDAWgBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0BAQsFAAOCAQEAuaA8\nimz8DqnQqgk2G1un7rxVpiXgbSL9HQ9mcV5CnplTnQL5sbqiVG0Nc0bxBWUD9Bvv\nv1dpcIdugxbPavfO9UjpuwvIMg2s0QLBNHZlwRwht6G5NZigoeI9A3TLVJMBUbs2\nmQluElAA/Xo3Qatywk/s+HFY0bf6+9iwGTMjxPSuYEaLDGjIWsI8EpUnJYJpdTXW\ncThmsBOhdawpjF513BY1aGJ8hU5nUp/H+gZzLuiLNNwj/3hPxml89Jo23WQY2yiR\nziJRyjnZz0gtMOH/avvoBeD2sfugzqfIXW4T8BqIJq1OzodRCaBNClgwd3Nm95Jm\nC8nQ47iB1qynBqDZHQ==\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICejCCAWICAQAwNTELMAkGA1UEChMCd2cxJjAkBgNVBAMTHXdnLnFhLnZwbi5k\nYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEAzGJrHxVRdMqRt3kWoxdlU3IIVOWNuPo7b7t0i9AdTxOKdV65zqUKsW5sXMUV\nYIKxrPN2LdTDXe1IzhO4t1X9nV7fFDBEMUaDeyVHjWRYEd5qPlZGHUndX6mIbZsD\nD09Dw32r67UWEIwuioN7D/grbvybk4R7eqvhb3oznVnHK5YiuAiTz9nWwEDucNgV\nHHiucis+4Rg+7bszCdIjMKjJPB8H16mm/L33InOxUl/V8k1qwXjvYOM0T2+/BGST\nh1J8+/PjKwzHYV67+SowunJ8HaPybHsQ0MkOffYhkj526qxL3x6ZKKauNOG9GOGz\niUgJHEsJfBiEqtl12g79PE5zmwIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAIeY\nypNAFfeLxqSCh2+A3Njezp3/20N2hEidwrF9xiPDoJUxuruRa0UFg271ZEDAh8q3\nu0RZKFpzAc45JgDRJHQrvHenfyfDQYTZiNE5PhymVNjrgSN5ZGsGju9IMkTpj5LM\nbOjhfjro03UnJ/DdvNw6Kh2zuOzSrxAjzvh3x9LzExa9eQBYrp0N70CRc9SfVimk\nIBCKoVCcfCYgbAfP5daJyB+qDmfr/9WkWVqH8oszpOK64C0Wr8hymBPzRy9D+Ep3\n6Q2QzH3ryDP0LvpzMTrT2a7aoAUZjyNVemFuDEwTU4bLn2W2Uv8jy1WpgqLxk2C4\nGF44K6Ah6jusk7NuWis=\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "1181560959407576326633870965323194795",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T17:48:11.398213-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T17:48:11.398213-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAv9jcDkNThmH7RcDlNG3VB2XVzzGTtYpicTN2/ZKrO1lxnS3e\nWHKnP4hYnVrzOVbcS5KD0oS3iqXC33SNhTwGo37RvIRr3h7Od8DBAfR0V0ZS4eP5\nut+a0sJLnG83Gs/rxlj2/Lds4eW4XLNq2fqUpbg2B1WUuioeEDoF7ja5Vy7fi3qY\nbeMXqJIRKL/5BRCQCrdw7FkfWisB3b5f5tB/7+9pMrQgUIlBSirDjchejK4mRErw\n2ajx4M14L4FF523ZwnLj+3z75K5mlJAGLXicOGN3HTgaGQ5YetvpqgjYOwNEhQ7X\ndvhrsWf/hzq9LNPVbFCRxlkk3ZQx4iN7SBYHZwIDAQABAoIBAFCqOjy1ClWitShr\nJvSYic4Gf5QS4Gygtyup3ApatSzLOv4/3xGJg9Eu3zOqnkIpx47vGAZYT2Q4tmuG\nckrnJlNwa3e8pi5K/b1UitLrmk9n/kmEtehhRJQBphEsohrf+d74YUF5TordMFuq\nBO+KcR4NCoqi7Vopg2KHQx8aW2vQSztKZW9rE6RBSE5LoWRCdKVeXi+rw59gKIV2\nhx8THAkug0hg6bkggujlb5YkraQ7Jknim6vxDAN8o+TEQL7bychXIr2+z+scXJP2\nsZzw9bDoh2RTg8KVO7RRQoPeGDzS21gSYrS1jJ6Z+5wINuNYgc0/e6+RPUeSbcIC\n5Yhi8SECgYEA4vTpb2/jS2PIYy95s+cWacv+3YeEye4b//+HpXIb5d+Lf0ufldEa\ntTI6LNDL7udsGnqkOnkroKN4SrLFXWMwdZED7NoBz9xHpGfCN7sajY11TrRnUxVr\ntaJybsG5d6mV2grSHDRMKBPbUipOzVdLYTSvEjoeanmIhosQ4W85s2sCgYEA2GXC\nijmQI4c4+HweLS/HTh68HDNZtcAnwdy8dth/lO7ihA41aKAcyxrfTftD0uSvFtoa\n5kDb7crorJnUWJB18amjx3uLUkpb6RRI3jTOLw3xY1ad8NZwTJ4/ILU+4Hw3kYsX\nlQfO2S+RHa5Xo3kVNUAz+hzQJLMzWDUjjOv+dvUCgYEAkhvXeE1Qx8UaSXhT4lSf\n4kZY8qb+/rzSu9D2s7UtbqSmerHlsB5pEkOeniFhWJEV0EoqFhbR1l3G4FgMpV1o\n4hcUrtN+nSGT4ayGpThIFN7/qUaMyjkdGVbWUqVW0EmV1kRnFY85hAech14DU0Ci\nn5a6KoLN9//7u5olqOvg+rcCgYANqqeVqTsEM2cSsmwJeIoC0ggZU9jnlKIuKS2x\n58xu8INXybnvyKTo4uKVfzfyWsUAEXg/cHszUmxNck2p5j28rHUOhSvwX4fceY58\nkiMvb5b+KhtBeZmQDTJ5c1jsPowX4gv0OpECwHFOyZL5XQ1M1qgxtJ4kozir6nc7\nUDA6/QKBgFPQYxVKDoVo+CGkLsOzt3lFOjil44G9eoR7ZX82QYvRjoq5EeSBsgJh\noCU8EeSj1Ota/jLi7LZsnIKXkJsYmRbO/jMDhtzjb1793tigjZfet9g7+Hr/IrxP\nZpWAG/Bb7YHfEwgYk9q5+tJOTvV16X9hxtzYxSFfj7bnUlVV1RwT\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDMjCCAhqgAwIBAgIRAPsQPdf7Di+aT9AIC+PMz2IwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMC0xCzAJBgNVBAoTAndnMR4wHAYDVQQDExV3\nZy5xYS52cG4ucm9vdC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDPpqMKPsq4IZ/ntN6YbxSdFmgIlbiPlbaiVDt86hE88bvHgnWq8I9TrlxZ\nrnEzaWcw0kgKeTTlUOV9432X429AYE3VkfMBjINDRFOTBecupHjT7HPgTmtqlPPs\nSwxMta/eroVMhEXjhNtfr4zoc2BNog/Boa/AnjjZOKs6UCNbJhppxsdSE5VZGf6e\nX6jDfN83CyZnOOYrwzbjsiWigyc50XYRV+aAWw/+qx9xhw/9aoSh+2nYPI8Rw42G\nyttaHyTQyQltUxHjsc3zQwUWUdrKLh+mduA1+dLLmFQIeTvgGYvvR7CF7ZPnFSoQ\n2+10Lks3qvOb6DMuOOIuZBYqqjKdAgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDAT\nBgNVHSUEDDAKBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFFHN\nANvqwxvMWeIy1rL6O6QqIKQnMA0GCSqGSIb3DQEBCwUAA4IBAQAF70pwzGmbqGAl\nlUkdOogYGQJIkh/02yYX6WcmvKOmdhX/KN1LoabJnilb2ttTKsASjM3+SVDJ55z7\nrJVDGmy/6GG92uG5gjIMoiJdF8g0lMWK0Xk/xpRoYqyg9canZgoeK2nL08ePMI28\nejSIx6VZ/2xnc6r8t8Eog3z6VVUvP2YzRStV7fIP8QT6z/rxN3eqINc+Xo+fLDW9\nLZLGAbVx554F9+J0NEN/53IO0TWF2JDT/1Ut2d5wMISbNDjc/UVpOGxV2hygkVvh\nN3t2qN3q/oqeZYjummT6Nb3gQLJqj96uiJaQ0IpPmjit60wL4iVLWb3us1YIjgAU\nK4+JZCdB\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICcjCCAVoCAQAwLTELMAkGA1UEChMCd2cxHjAcBgNVBAMTFXdnLnFhLnZwbi5y\nb290LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM+mowo+\nyrghn+e03phvFJ0WaAiVuI+VtqJUO3zqETzxu8eCdarwj1OuXFmucTNpZzDSSAp5\nNOVQ5X3jfZfjb0BgTdWR8wGMg0NEU5MF5y6keNPsc+BOa2qU8+xLDEy1r96uhUyE\nReOE21+vjOhzYE2iD8Ghr8CeONk4qzpQI1smGmnGx1ITlVkZ/p5fqMN83zcLJmc4\n5ivDNuOyJaKDJznRdhFX5oBbD/6rH3GHD/1qhKH7adg8jxHDjYbK21ofJNDJCW1T\nEeOxzfNDBRZR2souH6Z24DX50suYVAh5O+AZi+9HsIXtk+cVKhDb7XQuSzeq85vo\nMy444i5kFiqqMp0CAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQCTNSVyTtpnRbn4\nTpwgn+mVzze3E8xeAKAIBWqL30dx9xNEhN54cFAfz+PIFTSa0mjTY2FDMmRy1Uci\neeEDNH5z8CzXtF7eFFFuYqBu1iqX0kMpmSCDEBbLngR8lfALiA5/ryjVEjK65cGc\nC3MGVDBbyKIt1DQEPLECgikZtX5PFMtSxsIls28pCO3A11LGPpModYHtVOOQD132\n57GQPd7itFMU7CfaP4DFu5GekMxT84yvxg6pBhGyzuduQEXtMh6BHX72E0Ch0C65\nO2IpqdCUbDTbaHRR86011+T/mF2eGvQdEXwFFxuliLKcQ8FZNyYIOp3DtPvt9Uxk\nZjNa7gtX\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "333720558030489091884047108320185339746",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T17:48:11.397479-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T17:48:11.397479-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAv9jcDkNThmH7RcDlNG3VB2XVzzGTtYpicTN2/ZKrO1lxnS3e\nWHKnP4hYnVrzOVbcS5KD0oS3iqXC33SNhTwGo37RvIRr3h7Od8DBAfR0V0ZS4eP5\nut+a0sJLnG83Gs/rxlj2/Lds4eW4XLNq2fqUpbg2B1WUuioeEDoF7ja5Vy7fi3qY\nbeMXqJIRKL/5BRCQCrdw7FkfWisB3b5f5tB/7+9pMrQgUIlBSirDjchejK4mRErw\n2ajx4M14L4FF523ZwnLj+3z75K5mlJAGLXicOGN3HTgaGQ5YetvpqgjYOwNEhQ7X\ndvhrsWf/hzq9LNPVbFCRxlkk3ZQx4iN7SBYHZwIDAQABAoIBAFCqOjy1ClWitShr\nJvSYic4Gf5QS4Gygtyup3ApatSzLOv4/3xGJg9Eu3zOqnkIpx47vGAZYT2Q4tmuG\nckrnJlNwa3e8pi5K/b1UitLrmk9n/kmEtehhRJQBphEsohrf+d74YUF5TordMFuq\nBO+KcR4NCoqi7Vopg2KHQx8aW2vQSztKZW9rE6RBSE5LoWRCdKVeXi+rw59gKIV2\nhx8THAkug0hg6bkggujlb5YkraQ7Jknim6vxDAN8o+TEQL7bychXIr2+z+scXJP2\nsZzw9bDoh2RTg8KVO7RRQoPeGDzS21gSYrS1jJ6Z+5wINuNYgc0/e6+RPUeSbcIC\n5Yhi8SECgYEA4vTpb2/jS2PIYy95s+cWacv+3YeEye4b//+HpXIb5d+Lf0ufldEa\ntTI6LNDL7udsGnqkOnkroKN4SrLFXWMwdZED7NoBz9xHpGfCN7sajY11TrRnUxVr\ntaJybsG5d6mV2grSHDRMKBPbUipOzVdLYTSvEjoeanmIhosQ4W85s2sCgYEA2GXC\nijmQI4c4+HweLS/HTh68HDNZtcAnwdy8dth/lO7ihA41aKAcyxrfTftD0uSvFtoa\n5kDb7crorJnUWJB18amjx3uLUkpb6RRI3jTOLw3xY1ad8NZwTJ4/ILU+4Hw3kYsX\nlQfO2S+RHa5Xo3kVNUAz+hzQJLMzWDUjjOv+dvUCgYEAkhvXeE1Qx8UaSXhT4lSf\n4kZY8qb+/rzSu9D2s7UtbqSmerHlsB5pEkOeniFhWJEV0EoqFhbR1l3G4FgMpV1o\n4hcUrtN+nSGT4ayGpThIFN7/qUaMyjkdGVbWUqVW0EmV1kRnFY85hAech14DU0Ci\nn5a6KoLN9//7u5olqOvg+rcCgYANqqeVqTsEM2cSsmwJeIoC0ggZU9jnlKIuKS2x\n58xu8INXybnvyKTo4uKVfzfyWsUAEXg/cHszUmxNck2p5j28rHUOhSvwX4fceY58\nkiMvb5b+KhtBeZmQDTJ5c1jsPowX4gv0OpECwHFOyZL5XQ1M1qgxtJ4kozir6nc7\nUDA6/QKBgFPQYxVKDoVo+CGkLsOzt3lFOjil44G9eoR7ZX82QYvRjoq5EeSBsgJh\noCU8EeSj1Ota/jLi7LZsnIKXkJsYmRbO/jMDhtzjb1793tigjZfet9g7+Hr/IrxP\nZpWAG/Bb7YHfEwgYk9q5+tJOTvV16X9hxtzYxSFfj7bnUlVV1RwT\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDNzCCAh+gAwIBAgIRANgxrkewit6cnWvqvCojQ4YwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMDIxCzAJBgNVBAoTAndnMSMwIQYDVQQDExp3\nZy5xYS52cG4udGVycmFmb3JtLWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEP\nADCCAQoCggEBANAXTqFWhmltEbl4+nKbkjFSCfLm1Ayp+bTZcBNqwE8yMwl79jOL\nollo3poXRJG+brOYLCNTnCpTaz2V3Hrl+932LoAb/v/rUm7+TjFutJAF/IGix0Br\nCh8qkUPnuWu/av1msY+9+4mjn90NgzJgCuCfulVk69W3ZlYUHKi/4ZAR4GXo3si8\n57h2N8vKUx6/2e1Ul/UkyvBbic1e0KGlRNZ9vIhr6rn0+/xIn95qSo4T6O+fi3me\ncttzLl0b6WmW+IrdfmmSbGkHdfMxsoxmIFTjjv54d0jq/H780IHuF71cH0W+bpcr\ndFHx8+4uNyVoc4Q1X97MMAAYbAO1nKLq6M0CAwEAAaNWMFQwDgYDVR0PAQH/BAQD\nAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgw\nFoAUUc0A2+rDG8xZ4jLWsvo7pCogpCcwDQYJKoZIhvcNAQELBQADggEBAGqcZFL4\nrtghVvIbATQIjDpJrxU3U/t8DFeUG3V6TJ2khFNTwfUIL6ikIFuk5+ghlMm79oIQ\n89JmHKCJRUV8nPGnW6fNYpQ7qtZ+FtYTmAIbQYkOydXyoAUZUXpUwvgrYGWXx1Aq\nc4U/t4Ftvenl5OTpb/bT4dztr+IU/D/9jXQwEKImeIoXF/0BOEzFatqambTRyD8I\nZy5Bs6nRZ03gTJ1QeBvKOUopZ9/g6c+pQWBddPBwdSr6dTyAqcj3+t+3mOF4+9qJ\nA04lvquF+ajeeTYd8d20i7pQsfV4NzTqrk22evJ+VkYrcxCPMAiMvFbwTwUnUYeW\nlyIcVDPSwhlrkAQ=\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICdzCCAV8CAQAwMjELMAkGA1UEChMCd2cxIzAhBgNVBAMTGndnLnFhLnZwbi50\nZXJyYWZvcm0tY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\n0BdOoVaGaW0RuXj6cpuSMVIJ8ubUDKn5tNlwE2rATzIzCXv2M4uiWWjemhdEkb5u\ns5gsI1OcKlNrPZXceuX73fYugBv+/+tSbv5OMW60kAX8gaLHQGsKHyqRQ+e5a79q\n/Waxj737iaOf3Q2DMmAK4J+6VWTr1bdmVhQcqL/hkBHgZejeyLznuHY3y8pTHr/Z\n7VSX9STK8FuJzV7QoaVE1n28iGvqufT7/Eif3mpKjhPo75+LeZ5y23MuXRvpaZb4\nit1+aZJsaQd18zGyjGYgVOOO/nh3SOr8fvzQge4XvVwfRb5ulyt0UfHz7i43JWhz\nhDVf3swwABhsA7WcourozQIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBALh66wDW\npYg/lMw//jErCkQXG5VPs44HUGjhGkVL9aFy6xI6z5/We/UrSbaOXdlLwxNpoyOS\npiYuA2EOT2S196X6MMvr0mkRL+GyrxVZdzH767QFYCSalKNbEiAkhMvsd8bbRYc/\nnJGJN0JEwQ4qWD+fRXBTs/d7cwhY/eJfkF1yhRtEP9Gf1++dVYf9DsMwnqc6tUTR\nPnGieMx+oPXnXiWcNNSmlqmgUWfIgwQB/aZV0zDhR2qPC3sdNmoOnxBmEIuX8o78\nK+HdvO3ZUf0h1ryszEw1MgYzS2XcQQLzfiBapGkaoh7HNmuSPIgyPV5kPMChfEkq\nigvR7rIJ4csMDmg=\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "287371204454717853750500296965973296006",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T17:48:11.397986-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T17:48:11.397986-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_locally_signed_cert",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "server_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAv9jcDkNThmH7RcDlNG3VB2XVzzGTtYpicTN2/ZKrO1lxnS3e\nWHKnP4hYnVrzOVbcS5KD0oS3iqXC33SNhTwGo37RvIRr3h7Od8DBAfR0V0ZS4eP5\nut+a0sJLnG83Gs/rxlj2/Lds4eW4XLNq2fqUpbg2B1WUuioeEDoF7ja5Vy7fi3qY\nbeMXqJIRKL/5BRCQCrdw7FkfWisB3b5f5tB/7+9pMrQgUIlBSirDjchejK4mRErw\n2ajx4M14L4FF523ZwnLj+3z75K5mlJAGLXicOGN3HTgaGQ5YetvpqgjYOwNEhQ7X\ndvhrsWf/hzq9LNPVbFCRxlkk3ZQx4iN7SBYHZwIDAQABAoIBAFCqOjy1ClWitShr\nJvSYic4Gf5QS4Gygtyup3ApatSzLOv4/3xGJg9Eu3zOqnkIpx47vGAZYT2Q4tmuG\nckrnJlNwa3e8pi5K/b1UitLrmk9n/kmEtehhRJQBphEsohrf+d74YUF5TordMFuq\nBO+KcR4NCoqi7Vopg2KHQx8aW2vQSztKZW9rE6RBSE5LoWRCdKVeXi+rw59gKIV2\nhx8THAkug0hg6bkggujlb5YkraQ7Jknim6vxDAN8o+TEQL7bychXIr2+z+scXJP2\nsZzw9bDoh2RTg8KVO7RRQoPeGDzS21gSYrS1jJ6Z+5wINuNYgc0/e6+RPUeSbcIC\n5Yhi8SECgYEA4vTpb2/jS2PIYy95s+cWacv+3YeEye4b//+HpXIb5d+Lf0ufldEa\ntTI6LNDL7udsGnqkOnkroKN4SrLFXWMwdZED7NoBz9xHpGfCN7sajY11TrRnUxVr\ntaJybsG5d6mV2grSHDRMKBPbUipOzVdLYTSvEjoeanmIhosQ4W85s2sCgYEA2GXC\nijmQI4c4+HweLS/HTh68HDNZtcAnwdy8dth/lO7ihA41aKAcyxrfTftD0uSvFtoa\n5kDb7crorJnUWJB18amjx3uLUkpb6RRI3jTOLw3xY1ad8NZwTJ4/ILU+4Hw3kYsX\nlQfO2S+RHa5Xo3kVNUAz+hzQJLMzWDUjjOv+dvUCgYEAkhvXeE1Qx8UaSXhT4lSf\n4kZY8qb+/rzSu9D2s7UtbqSmerHlsB5pEkOeniFhWJEV0EoqFhbR1l3G4FgMpV1o\n4hcUrtN+nSGT4ayGpThIFN7/qUaMyjkdGVbWUqVW0EmV1kRnFY85hAech14DU0Ci\nn5a6KoLN9//7u5olqOvg+rcCgYANqqeVqTsEM2cSsmwJeIoC0ggZU9jnlKIuKS2x\n58xu8INXybnvyKTo4uKVfzfyWsUAEXg/cHszUmxNck2p5j28rHUOhSvwX4fceY58\nkiMvb5b+KhtBeZmQDTJ5c1jsPowX4gv0OpECwHFOyZL5XQ1M1qgxtJ4kozir6nc7\nUDA6/QKBgFPQYxVKDoVo+CGkLsOzt3lFOjil44G9eoR7ZX82QYvRjoq5EeSBsgJh\noCU8EeSj1Ota/jLi7LZsnIKXkJsYmRbO/jMDhtzjb1793tigjZfet9g7+Hr/IrxP\nZpWAG/Bb7YHfEwgYk9q5+tJOTvV16X9hxtzYxSFfj7bnUlVV1RwT\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDLDCCAhSgAwIBAgIQfoYq9OL3fPPvsZnxvCuIgDANBgkqhkiG9w0BAQsFADAk\nMQswCQYDVQQKEwJ3ZzEVMBMGA1UEAxMMd2cucWEudnBuLmNhMB4XDTI0MTExMzIy\nNDgxMVoXDTM0MTExMTIyNDgxMVowKDELMAkGA1UEChMCd2cxGTAXBgNVBAMTEHdn\nLnFhLnZwbi5zZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDL\nDbCAIdMHday3AL9HzOoYSjuip5gr0ckD+8u5ZpfKrPL6SqQnYz0lhVJfaYaQ8NlN\nTOcZMA71Af4ejqP7iH0kMkRUiObM/xRhnCfHZhQ2X1xURSlkXXQhenvE38EaD+U6\nW6uhReukcGKWq+9IxLLiV7NXovQym6dZgeamF6gXJTATWVXJS0vOXhEWrmgkkyTM\nD6mM5rsDGq2ixocjTxZvVEYZs/MG0JApzj0uE76rQk8gtrjLgfIpk+P95B0fq165\n18XhC5eimI5G8OKOvYR/5niJiWFqFoT4Oa4fU8FZ9svrpboma5bgTh/gyFXJEUHk\n/90Dr5u//9tXZJ/t2z0/AgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUE\nDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFFHNANvqwxvM\nWeIy1rL6O6QqIKQnMA0GCSqGSIb3DQEBCwUAA4IBAQBRssxqBYqreprVywhlouS3\nrIx5jqTXrZvzLfYbVsjE1E606XVKLfEf9FqiLWpENtIhdiSv14o6adXlEeixWlVn\n11gOZGg4gjuqe79u9j+1ZMHSa+SlPYfLrLM5r4trSZce4wvomd9/2FDFaV1mGnQ/\nU4dfmUtVVYVFK+lV+PaGsxcijggLSZcuvAzE/G0hk6O4EtwGGB8gF86MwSpbvuz+\nhYSHyn5W/b5nkynqCDOOSapByxm0aBp/bbSPjOBpaxschmQECWifFI2WqoRcTw4g\nJZCGUiEfxT15eN5ukRWM8o2W9xkNWliusIS+T/AJSoFUdChjcfJz345tyC8EaEfx\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICbTCCAVUCAQAwKDELMAkGA1UEChMCd2cxGTAXBgNVBAMTEHdnLnFhLnZwbi5z\nZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDLDbCAIdMHday3\nAL9HzOoYSjuip5gr0ckD+8u5ZpfKrPL6SqQnYz0lhVJfaYaQ8NlNTOcZMA71Af4e\njqP7iH0kMkRUiObM/xRhnCfHZhQ2X1xURSlkXXQhenvE38EaD+U6W6uhReukcGKW\nq+9IxLLiV7NXovQym6dZgeamF6gXJTATWVXJS0vOXhEWrmgkkyTMD6mM5rsDGq2i\nxocjTxZvVEYZs/MG0JApzj0uE76rQk8gtrjLgfIpk+P95B0fq16518XhC5eimI5G\n8OKOvYR/5niJiWFqFoT4Oa4fU8FZ9svrpboma5bgTh/gyFXJEUHk/90Dr5u//9tX\nZJ/t2z0/AgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEALuwtQPQ0il8dxo9440/4\nJhhu5VxWUL5AGzuZOUcsTcb4iqu7fmTK0Ngs/ln8bI1O3XcbiO4C5QCtHmHKnkKk\nl465BFdf+gR6NiiQedUbUKl/jDLI6dDhRhp8Ge+VVBabTPkUUefvCEYorCxUngF2\nyxkheT9n0eZ4om8nfPTI6jz82IyuVJebEkWOBNfemdCMcGVY2ANkBeZA4llrOJYW\nkvzHDGQUykWi1uZWONnr98tX3KhJkb1uzCnORDGdNUjDxXLBSifqBw5ju7nW8Doc\nxhmztwlrpzyZX9oTX6tqD8EJTenzg8Ni2oxz8y7Gmf8YASK2aZEVoh6qGFR4mwMo\nvg==\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "168179366511060880709102194707562989696",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T17:48:11.264484-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T17:48:11.264484-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "143a111f3e3068a5a7b650b21bb2933193eefb19",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAv9jcDkNThmH7RcDlNG3VB2XVzzGTtYpicTN2/ZKr\nO1lxnS3eWHKnP4hYnVrzOVbcS5KD0oS3iqXC33SNhTwGo37RvIRr3h7Od8DBAfR0\nV0ZS4eP5ut+a0sJLnG83Gs/rxlj2/Lds4eW4XLNq2fqUpbg2B1WUuioeEDoF7ja5\nVy7fi3qYbeMXqJIRKL/5BRCQCrdw7FkfWisB3b5f5tB/7+9pMrQgUIlBSirDjche\njK4mRErw2ajx4M14L4FF523ZwnLj+3z75K5mlJAGLXicOGN3HTgaGQ5YetvpqgjY\nOwNEhQ7XdvhrsWf/hzq9LNPVbFCRxlkk3ZQx4iN7SBYHZwAAA7jIw7NUyMOzVAAA\nAAdzc2gtcnNhAAABAQC/2NwOQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGd\nLd5Ycqc/iFidWvM5VtxLkoPShLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh\n4/m635rSwkucbzcaz+vGWPb8t2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+L\nepht4xeokhEov/kFEJAKt3DsWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZE\nSvDZqPHgzXgvgUXnbdnCcuP7fPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SF\nDtd2+GuxZ/+HOr0s09VsUJHGWSTdlDHiI3tIFgdnAAAAAwEAAQAAAQBQqjo8tQpV\norUoayb0mInOBn+UEuBsoLcrqdwKWrUsyzr+P98RiYPRLt8zqp5CKceO7xgGWE9k\nOLZrhnJK5yZTcGt3vKYuSv29VIrS65pPZ/5JhLXoYUSUAaYRLKIa3/ne+GFBeU6K\n3TBbqgTvinEeDQqKou1aKYNih0MfGltr0Es7SmVvaxOkQUhOS6FkQnSlXl4vq8Of\nYCiFdocfExwJLoNIYOm5IILo5W+WJK2kOyZJ4pur8QwDfKPkxEC+28nIVyK9vs/r\nHFyT9rGc8PWw6IdkU4PClTu0UUKD3hg80ttYEmK0tYyemfucCDbjWIHNP3uvkT1H\nkm3CAuWIYvEhAAAAgFPQYxVKDoVo+CGkLsOzt3lFOjil44G9eoR7ZX82QYvRjoq5\nEeSBsgJhoCU8EeSj1Ota/jLi7LZsnIKXkJsYmRbO/jMDhtzjb1793tigjZfet9g7\n+Hr/IrxPZpWAG/Bb7YHfEwgYk9q5+tJOTvV16X9hxtzYxSFfj7bnUlVV1RwTAAAA\ngQDi9Olvb+NLY8hjL3mz5xZpy/7dh4TJ7hv//4elchvl34t/S5+V0Rq1Mjos0Mvu\n52waeqQ6eSugo3hKssVdYzB1kQPs2gHP3EekZ8I3uxqNjXVOtGdTFWu1onJuwbl3\nqZXaCtIcNEwoE9tSKk7NV0thNK8SOh5qeYiGixDhbzmzawAAAIEA2GXCijmQI4c4\n+HweLS/HTh68HDNZtcAnwdy8dth/lO7ihA41aKAcyxrfTftD0uSvFtoa5kDb7cro\nrJnUWJB18amjx3uLUkpb6RRI3jTOLw3xY1ad8NZwTJ4/ILU+4Hw3kYsXlQfO2S+R\nHa5Xo3kVNUAz+hzQJLMzWDUjjOv+dvUAAAAAAQID\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAv9jcDkNThmH7RcDlNG3VB2XVzzGTtYpicTN2/ZKrO1lxnS3e\nWHKnP4hYnVrzOVbcS5KD0oS3iqXC33SNhTwGo37RvIRr3h7Od8DBAfR0V0ZS4eP5\nut+a0sJLnG83Gs/rxlj2/Lds4eW4XLNq2fqUpbg2B1WUuioeEDoF7ja5Vy7fi3qY\nbeMXqJIRKL/5BRCQCrdw7FkfWisB3b5f5tB/7+9pMrQgUIlBSirDjchejK4mRErw\n2ajx4M14L4FF523ZwnLj+3z75K5mlJAGLXicOGN3HTgaGQ5YetvpqgjYOwNEhQ7X\ndvhrsWf/hzq9LNPVbFCRxlkk3ZQx4iN7SBYHZwIDAQABAoIBAFCqOjy1ClWitShr\nJvSYic4Gf5QS4Gygtyup3ApatSzLOv4/3xGJg9Eu3zOqnkIpx47vGAZYT2Q4tmuG\nckrnJlNwa3e8pi5K/b1UitLrmk9n/kmEtehhRJQBphEsohrf+d74YUF5TordMFuq\nBO+KcR4NCoqi7Vopg2KHQx8aW2vQSztKZW9rE6RBSE5LoWRCdKVeXi+rw59gKIV2\nhx8THAkug0hg6bkggujlb5YkraQ7Jknim6vxDAN8o+TEQL7bychXIr2+z+scXJP2\nsZzw9bDoh2RTg8KVO7RRQoPeGDzS21gSYrS1jJ6Z+5wINuNYgc0/e6+RPUeSbcIC\n5Yhi8SECgYEA4vTpb2/jS2PIYy95s+cWacv+3YeEye4b//+HpXIb5d+Lf0ufldEa\ntTI6LNDL7udsGnqkOnkroKN4SrLFXWMwdZED7NoBz9xHpGfCN7sajY11TrRnUxVr\ntaJybsG5d6mV2grSHDRMKBPbUipOzVdLYTSvEjoeanmIhosQ4W85s2sCgYEA2GXC\nijmQI4c4+HweLS/HTh68HDNZtcAnwdy8dth/lO7ihA41aKAcyxrfTftD0uSvFtoa\n5kDb7crorJnUWJB18amjx3uLUkpb6RRI3jTOLw3xY1ad8NZwTJ4/ILU+4Hw3kYsX\nlQfO2S+RHa5Xo3kVNUAz+hzQJLMzWDUjjOv+dvUCgYEAkhvXeE1Qx8UaSXhT4lSf\n4kZY8qb+/rzSu9D2s7UtbqSmerHlsB5pEkOeniFhWJEV0EoqFhbR1l3G4FgMpV1o\n4hcUrtN+nSGT4ayGpThIFN7/qUaMyjkdGVbWUqVW0EmV1kRnFY85hAech14DU0Ci\nn5a6KoLN9//7u5olqOvg+rcCgYANqqeVqTsEM2cSsmwJeIoC0ggZU9jnlKIuKS2x\n58xu8INXybnvyKTo4uKVfzfyWsUAEXg/cHszUmxNck2p5j28rHUOhSvwX4fceY58\nkiMvb5b+KhtBeZmQDTJ5c1jsPowX4gv0OpECwHFOyZL5XQ1M1qgxtJ4kozir6nc7\nUDA6/QKBgFPQYxVKDoVo+CGkLsOzt3lFOjil44G9eoR7ZX82QYvRjoq5EeSBsgJh\noCU8EeSj1Ota/jLi7LZsnIKXkJsYmRbO/jMDhtzjb1793tigjZfet9g7+Hr/IrxP\nZpWAG/Bb7YHfEwgYk9q5+tJOTvV16X9hxtzYxSFfj7bnUlVV1RwT\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC/2NwOQ1OGYftF\nwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPShLeKpcLf\ndI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8t2zh5bhc\ns2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3DsWR9aKwHd\nvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7fPvkrmaU\nkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHGWSTdlDHi\nI3tIFgdnAgMBAAECggEAUKo6PLUKVaK1KGsm9JiJzgZ/lBLgbKC3K6ncClq1LMs6\n/j/fEYmD0S7fM6qeQinHju8YBlhPZDi2a4ZySucmU3Brd7ymLkr9vVSK0uuaT2f+\nSYS16GFElAGmESyiGt/53vhhQXlOit0wW6oE74pxHg0KiqLtWimDYodDHxpba9BL\nO0plb2sTpEFITkuhZEJ0pV5eL6vDn2AohXaHHxMcCS6DSGDpuSCC6OVvliStpDsm\nSeKbq/EMA3yj5MRAvtvJyFcivb7P6xxck/axnPD1sOiHZFODwpU7tFFCg94YPNLb\nWBJitLWMnpn7nAg241iBzT97r5E9R5JtwgLliGLxIQKBgQDi9Olvb+NLY8hjL3mz\n5xZpy/7dh4TJ7hv//4elchvl34t/S5+V0Rq1Mjos0Mvu52waeqQ6eSugo3hKssVd\nYzB1kQPs2gHP3EekZ8I3uxqNjXVOtGdTFWu1onJuwbl3qZXaCtIcNEwoE9tSKk7N\nV0thNK8SOh5qeYiGixDhbzmzawKBgQDYZcKKOZAjhzj4fB4tL8dOHrwcM1m1wCfB\n3Lx22H+U7uKEDjVooBzLGt9N+0PS5K8W2hrmQNvtyuismdRYkHXxqaPHe4tSSlvp\nFEjeNM4vDfFjVp3w1nBMnj8gtT7gfDeRixeVB87ZL5EdrlejeRU1QDP6HNAkszNY\nNSOM6/529QKBgQCSG9d4TVDHxRpJeFPiVJ/iRljypv7+vNK70PaztS1upKZ6seWw\nHmkSQ56eIWFYkRXQSioWFtHWXcbgWAylXWjiFxSu036dIZPhrIalOEgU3v+pRozK\nOR0ZVtZSpVbQSZXWRGcVjzmEB5yHXgNTQKKflroqgs33//u7miWo6+D6twKBgA2q\np5WpOwQzZxKybAl4igLSCBlT2OeUoi4pLbHnzG7wg1fJue/IpOji4pV/N/JaxQAR\neD9wezNSbE1yTanmPbysdQ6FK/Bfh9x5jnySIy9vlv4qG0F5mZANMnlzWOw+jBfi\nC/Q6kQLAcU7JkvldDUzWqDG0niSjOKvqdztQMDr9AoGAU9BjFUoOhWj4IaQuw7O3\neUU6OKXjgb16hHtlfzZBi9GOirkR5IGyAmGgJTwR5KPU61r+MuLstmycgpeQmxiZ\nFs7+MwOG3ONvXv3e2KCNl9632Dv4ev8ivE9mlYAb8Fvtgd8TCBiT2rn60k5O9XXp\nf2HG3NjFIV+PtudSVVXVHBM=\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "29:8f:f7:e3:30:d6:21:1d:fc:05:b6:74:1b:91:fe:68",
            "public_key_fingerprint_sha256": "SHA256:BUgQ5eknnZF60DDZIQZX2fixDPpr6Q3cQ7aWUQ7GBFM",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/2NwOQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPShLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8t2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3DsWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7fPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHGWSTdlDHiI3tIFgdn\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv9jcDkNThmH7RcDlNG3V\nB2XVzzGTtYpicTN2/ZKrO1lxnS3eWHKnP4hYnVrzOVbcS5KD0oS3iqXC33SNhTwG\no37RvIRr3h7Od8DBAfR0V0ZS4eP5ut+a0sJLnG83Gs/rxlj2/Lds4eW4XLNq2fqU\npbg2B1WUuioeEDoF7ja5Vy7fi3qYbeMXqJIRKL/5BRCQCrdw7FkfWisB3b5f5tB/\n7+9pMrQgUIlBSirDjchejK4mRErw2ajx4M14L4FF523ZwnLj+3z75K5mlJAGLXic\nOGN3HTgaGQ5YetvpqgjYOwNEhQ7XdvhrsWf/hzq9LNPVbFCRxlkk3ZQx4iN7SBYH\nZwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "78c9c873676730d1101aad4d7f7f51d95bfb70ab",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAzGJrHxVRdMqRt3kWoxdlU3IIVOWNuPo7b7t0i9Ad\nTxOKdV65zqUKsW5sXMUVYIKxrPN2LdTDXe1IzhO4t1X9nV7fFDBEMUaDeyVHjWRY\nEd5qPlZGHUndX6mIbZsDD09Dw32r67UWEIwuioN7D/grbvybk4R7eqvhb3oznVnH\nK5YiuAiTz9nWwEDucNgVHHiucis+4Rg+7bszCdIjMKjJPB8H16mm/L33InOxUl/V\n8k1qwXjvYOM0T2+/BGSTh1J8+/PjKwzHYV67+SowunJ8HaPybHsQ0MkOffYhkj52\n6qxL3x6ZKKauNOG9GOGziUgJHEsJfBiEqtl12g79PE5zmwAAA7hbDFwwWwxcMAAA\nAAdzc2gtcnNhAAABAQDMYmsfFVF0ypG3eRajF2VTcghU5Y24+jtvu3SL0B1PE4p1\nXrnOpQqxbmxcxRVggrGs83Yt1MNd7UjOE7i3Vf2dXt8UMEQxRoN7JUeNZFgR3mo+\nVkYdSd1fqYhtmwMPT0PDfavrtRYQjC6Kg3sP+Ctu/JuThHt6q+FvejOdWccrliK4\nCJPP2dbAQO5w2BUceK5yKz7hGD7tuzMJ0iMwqMk8HwfXqab8vfcic7FSX9XyTWrB\neO9g4zRPb78EZJOHUnz78+MrDMdhXrv5KjC6cnwdo/JsexDQyQ599iGSPnbqrEvf\nHpkopq404b0Y4bOJSAkcSwl8GISq2XXaDv08TnObAAAAAwEAAQAAAQEAyd+8JuuL\nlWwwGaTEszp8nrtXd2N1ZGvlIStqpl5dVKncbKmvpWhm83I6HjecMcNlc4rWA9bP\nUYr6CnJ4VL3ezv3SIcK62GDppUzhK8sdIikpj4DvqCY5Pi/ZzUj68Lg+Gm2azioD\nLT0JC09q0g8x92IS2NZWkIgNF2sAaD8w9t6B1eGVpk4bTTXnNQ2qXao1c/7Gq4Pl\nyK2sFPYPDp/4gVIUoVlZfYsWW/FGWSMUKO4HapIJlPpgGyD0y62RYFXcCB+488Bj\nCuivLCQbEGwKNOQ3iXHE8TIiUl03JXXDKckZ74eyBmNOwrLJMMG6WK/1kmhKiByX\nzhVWtgwJLwmngQAAAIEAmkxcCJXo/Jn42c1DZNcQQOhwIMkPCsKuegSJBP61fggL\nTHKh767WL5WxKLoCZ3169NeXzW6LfUMobiTSRstnB+MeWmBVt9ts4NlapfeItUzf\nByHvznIdPBVQxKyHh1ppHc9svzcrjn631mowr+Z7BJMPdrotE33lttqJ7LVlcdgA\nAACBAM1gvgPhnWiBaoUu2UMSZHPO3qGLYRj7o2KrwCzaM9hZUFjVlsMRdpQ2u+7b\n3cCIXGQ29quLWxZOKjlyHu31n2fCi+jk5FFtv62KFlJR365YeeXJlmtRdUzriXPb\n+OqTv2NlTNUIMtYcqle58CgeN83dG49zQ+VmXJ7qvX7RDwRRAAAAgQD+wv1iAh8g\nm7DSynqXVmNP49cVjPojCF5RB4P8bORfuZ6+f0oqrqBSVJV4e8EiIeCCUqlqpGXZ\nS/sX5S+vix8wYLOi0AAIL5etLMxu2a7vfiSTA0H8QNRmEo+Rx9/sjYwxAPiYhWud\nGOwQ5hse480eNZ+VLa03mDalsUfpFzCaKwAAAAAB\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAzGJrHxVRdMqRt3kWoxdlU3IIVOWNuPo7b7t0i9AdTxOKdV65\nzqUKsW5sXMUVYIKxrPN2LdTDXe1IzhO4t1X9nV7fFDBEMUaDeyVHjWRYEd5qPlZG\nHUndX6mIbZsDD09Dw32r67UWEIwuioN7D/grbvybk4R7eqvhb3oznVnHK5YiuAiT\nz9nWwEDucNgVHHiucis+4Rg+7bszCdIjMKjJPB8H16mm/L33InOxUl/V8k1qwXjv\nYOM0T2+/BGSTh1J8+/PjKwzHYV67+SowunJ8HaPybHsQ0MkOffYhkj526qxL3x6Z\nKKauNOG9GOGziUgJHEsJfBiEqtl12g79PE5zmwIDAQABAoIBAQDJ37wm64uVbDAZ\npMSzOnyeu1d3Y3Vka+UhK2qmXl1Uqdxsqa+laGbzcjoeN5wxw2VzitYD1s9RivoK\ncnhUvd7O/dIhwrrYYOmlTOEryx0iKSmPgO+oJjk+L9nNSPrwuD4abZrOKgMtPQkL\nT2rSDzH3YhLY1laQiA0XawBoPzD23oHV4ZWmThtNNec1DapdqjVz/sarg+XIrawU\n9g8On/iBUhShWVl9ixZb8UZZIxQo7gdqkgmU+mAbIPTLrZFgVdwIH7jzwGMK6K8s\nJBsQbAo05DeJccTxMiJSXTcldcMpyRnvh7IGY07CsskwwbpYr/WSaEqIHJfOFVa2\nDAkvCaeBAoGBAM1gvgPhnWiBaoUu2UMSZHPO3qGLYRj7o2KrwCzaM9hZUFjVlsMR\ndpQ2u+7b3cCIXGQ29quLWxZOKjlyHu31n2fCi+jk5FFtv62KFlJR365YeeXJlmtR\ndUzriXPb+OqTv2NlTNUIMtYcqle58CgeN83dG49zQ+VmXJ7qvX7RDwRRAoGBAP7C\n/WICHyCbsNLKepdWY0/j1xWM+iMIXlEHg/xs5F+5nr5/SiquoFJUlXh7wSIh4IJS\nqWqkZdlL+xflL6+LHzBgs6LQAAgvl60szG7Zru9+JJMDQfxA1GYSj5HH3+yNjDEA\n+JiFa50Y7BDmGx7jzR41n5UtrTeYNqWxR+kXMJorAoGAEiaapH0sDDBj2aFqUiMt\n/Y4q3twSmMKkjfPf6Bbgvh4mm7NEv7irYi30LggAcSOcBr9UzZRjWHVQBgOv+Bfd\nHq5y7wJLq2anqg6qKlxSCHaJT2WhhZqNY17tpu+p8BFeuMobIDi5RXMDGv2z29fP\n1sHTzbnCJmQFi4XzeWHAkgECgYEAwgTQIe8Js7S+gppPqKfS9InJSRFXgoyh/8Xg\nf8KSXlCoE94vJrhdQrZGKz7chFkWeUno2l2fb1DNRpJ1sZQbSaWryQftrk5Ijkt6\n2cUQ1DXWNtwZSbo5yA7Epjp5T9cw+DUMHmQl47uSNQB5kRneIe6mvV7O93MF00Rj\nRqIxkocCgYEAmkxcCJXo/Jn42c1DZNcQQOhwIMkPCsKuegSJBP61fggLTHKh767W\nL5WxKLoCZ3169NeXzW6LfUMobiTSRstnB+MeWmBVt9ts4NlapfeItUzfByHvznId\nPBVQxKyHh1ppHc9svzcrjn631mowr+Z7BJMPdrotE33lttqJ7LVlcdg=\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDMYmsfFVF0ypG3\neRajF2VTcghU5Y24+jtvu3SL0B1PE4p1XrnOpQqxbmxcxRVggrGs83Yt1MNd7UjO\nE7i3Vf2dXt8UMEQxRoN7JUeNZFgR3mo+VkYdSd1fqYhtmwMPT0PDfavrtRYQjC6K\ng3sP+Ctu/JuThHt6q+FvejOdWccrliK4CJPP2dbAQO5w2BUceK5yKz7hGD7tuzMJ\n0iMwqMk8HwfXqab8vfcic7FSX9XyTWrBeO9g4zRPb78EZJOHUnz78+MrDMdhXrv5\nKjC6cnwdo/JsexDQyQ599iGSPnbqrEvfHpkopq404b0Y4bOJSAkcSwl8GISq2XXa\nDv08TnObAgMBAAECggEBAMnfvCbri5VsMBmkxLM6fJ67V3djdWRr5SEraqZeXVSp\n3Gypr6VoZvNyOh43nDHDZXOK1gPWz1GK+gpyeFS93s790iHCuthg6aVM4SvLHSIp\nKY+A76gmOT4v2c1I+vC4Phptms4qAy09CQtPatIPMfdiEtjWVpCIDRdrAGg/MPbe\ngdXhlaZOG0015zUNql2qNXP+xquD5citrBT2Dw6f+IFSFKFZWX2LFlvxRlkjFCju\nB2qSCZT6YBsg9MutkWBV3AgfuPPAYwrorywkGxBsCjTkN4lxxPEyIlJdNyV1wynJ\nGe+HsgZjTsKyyTDBuliv9ZJoSogcl84VVrYMCS8Jp4ECgYEAzWC+A+GdaIFqhS7Z\nQxJkc87eoYthGPujYqvALNoz2FlQWNWWwxF2lDa77tvdwIhcZDb2q4tbFk4qOXIe\n7fWfZ8KL6OTkUW2/rYoWUlHfrlh55cmWa1F1TOuJc9v46pO/Y2VM1Qgy1hyqV7nw\nKB43zd0bj3ND5WZcnuq9ftEPBFECgYEA/sL9YgIfIJuw0sp6l1ZjT+PXFYz6Iwhe\nUQeD/GzkX7mevn9KKq6gUlSVeHvBIiHgglKpaqRl2Uv7F+Uvr4sfMGCzotAACC+X\nrSzMbtmu734kkwNB/EDUZhKPkcff7I2MMQD4mIVrnRjsEOYbHuPNHjWflS2tN5g2\npbFH6RcwmisCgYASJpqkfSwMMGPZoWpSIy39jire3BKYwqSN89/oFuC+Hiabs0S/\nuKtiLfQuCABxI5wGv1TNlGNYdVAGA6/4F90ernLvAkurZqeqDqoqXFIIdolPZaGF\nmo1jXu2m76nwEV64yhsgOLlFcwMa/bPb18/WwdPNucImZAWLhfN5YcCSAQKBgQDC\nBNAh7wmztL6Cmk+op9L0iclJEVeCjKH/xeB/wpJeUKgT3i8muF1CtkYrPtyEWRZ5\nSejaXZ9vUM1GknWxlBtJpavJB+2uTkiOS3rZxRDUNdY23BlJujnIDsSmOnlP1zD4\nNQweZCXju5I1AHmRGd4h7qa9Xs73cwXTRGNGojGShwKBgQCaTFwIlej8mfjZzUNk\n1xBA6HAgyQ8Kwq56BIkE/rV+CAtMcqHvrtYvlbEougJnfXr015fNbot9QyhuJNJG\ny2cH4x5aYFW322zg2Vql94i1TN8HIe/Och08FVDErIeHWmkdz2y/NyuOfrfWajCv\n5nsEkw92ui0TfeW22onstWVx2A==\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "7a:50:5e:75:ac:16:e9:b0:b0:b6:38:f4:74:fd:2b:10",
            "public_key_fingerprint_sha256": "SHA256:+guBiHQdtHZdzkM78rmyt9nR1FgjavRfWSm9EQFXDx8",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDMYmsfFVF0ypG3eRajF2VTcghU5Y24+jtvu3SL0B1PE4p1XrnOpQqxbmxcxRVggrGs83Yt1MNd7UjOE7i3Vf2dXt8UMEQxRoN7JUeNZFgR3mo+VkYdSd1fqYhtmwMPT0PDfavrtRYQjC6Kg3sP+Ctu/JuThHt6q+FvejOdWccrliK4CJPP2dbAQO5w2BUceK5yKz7hGD7tuzMJ0iMwqMk8HwfXqab8vfcic7FSX9XyTWrBeO9g4zRPb78EZJOHUnz78+MrDMdhXrv5KjC6cnwdo/JsexDQyQ599iGSPnbqrEvfHpkopq404b0Y4bOJSAkcSwl8GISq2XXaDv08TnOb\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzGJrHxVRdMqRt3kWoxdl\nU3IIVOWNuPo7b7t0i9AdTxOKdV65zqUKsW5sXMUVYIKxrPN2LdTDXe1IzhO4t1X9\nnV7fFDBEMUaDeyVHjWRYEd5qPlZGHUndX6mIbZsDD09Dw32r67UWEIwuioN7D/gr\nbvybk4R7eqvhb3oznVnHK5YiuAiTz9nWwEDucNgVHHiucis+4Rg+7bszCdIjMKjJ\nPB8H16mm/L33InOxUl/V8k1qwXjvYOM0T2+/BGSTh1J8+/PjKwzHYV67+SowunJ8\nHaPybHsQ0MkOffYhkj526qxL3x6ZKKauNOG9GOGziUgJHEsJfBiEqtl12g79PE5z\nmwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "b550eb209b0388a13ff3c25883ee99525c6d914d",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAz6ajCj7KuCGf57TemG8UnRZoCJW4j5W2olQ7fOoR\nPPG7x4J1qvCPU65cWa5xM2lnMNJICnk05VDlfeN9l+NvQGBN1ZHzAYyDQ0RTkwXn\nLqR40+xz4E5rapTz7EsMTLWv3q6FTIRF44TbX6+M6HNgTaIPwaGvwJ442TirOlAj\nWyYaacbHUhOVWRn+nl+ow3zfNwsmZzjmK8M247IlooMnOdF2EVfmgFsP/qsfcYcP\n/WqEoftp2DyPEcONhsrbWh8k0MkJbVMR47HN80MFFlHayi4fpnbgNfnSy5hUCHk7\n4BmL70ewhe2T5xUqENvtdC5LN6rzm+gzLjjiLmQWKqoynQAAA7gKxunQCsbp0AAA\nAAdzc2gtcnNhAAABAQDPpqMKPsq4IZ/ntN6YbxSdFmgIlbiPlbaiVDt86hE88bvH\ngnWq8I9TrlxZrnEzaWcw0kgKeTTlUOV9432X429AYE3VkfMBjINDRFOTBecupHjT\n7HPgTmtqlPPsSwxMta/eroVMhEXjhNtfr4zoc2BNog/Boa/AnjjZOKs6UCNbJhpp\nxsdSE5VZGf6eX6jDfN83CyZnOOYrwzbjsiWigyc50XYRV+aAWw/+qx9xhw/9aoSh\n+2nYPI8Rw42GyttaHyTQyQltUxHjsc3zQwUWUdrKLh+mduA1+dLLmFQIeTvgGYvv\nR7CF7ZPnFSoQ2+10Lks3qvOb6DMuOOIuZBYqqjKdAAAAAwEAAQAAAQAM57VQSLC+\nmtBeTR5caOLmFGNozS1INyy/j+6Wh9GEcR2Te6cmdYbi035H0JCWemGAZkE17Wx9\nJ/brSP0gOHFMle+ga06n9PyfbJqpE3/XpT8hJJva/+SrHhC+ybc8+Tmx5DTCmaHi\nTvp3Sui99ZWxnXXPOeY7WVn9Hgl+OUbJPks0mBcWQbR2ER/51TNAWxC0p29YhldD\nqTAeBFJGKaucE4V+sU8Ck+6IFczO7a9BX7wGK8+4sEEg4i3GTjJXGQsy6IQn11NB\nGwMF38u4wHKp/2LW+F+U3r0uWE5sVdPgm+NpVr/3WazWyDYYDT/u/ywYerV4bUt0\nXmXU+IEzqWL9AAAAgQCteuo4Q1fxmfNgJheP+V0MQrif1RzX4UKx6B54a0VAUkgm\nJPF70IGrrNCkTAE/E683V/2rnqK+agmcKkry3KZkRjLMZSnLOtq8HZoR5ggMmNgD\nlxxIoSa2BwbceDrQsMrsb7uJKYSPgEwjpRFi18cytHoPfMjrSv8+6+JgVUAaRQAA\nAIEA0mC66t+7MBOrBstnxqEQqRh9+rLveIZ3xnSL6vvA51VhROzrf5AG+yNgJx11\nnhfqzBiJo2ywL2fwgNjKYhbpzat87m2j3J8FQPi/OATPGzSaTyqXKlz9NebED0lP\noBVK0B+wq0Q51AoOuN80m+K7iaefNZhRMxJr1YnBx3dAdAsAAACBAPyuhP+vc5DX\nt9/xULByGa6AFyIHBV8wfEo064GU+ZMQDMkbcqSq4S3vEhhGVdE9no5+hLNYINgE\noKm3/00/OXhVxlm0Gt6BDxiVBMz4nD2TkB3FRc/KYn6H1swXdIQRuGtoYBFhhzzZ\nYGR7K3/P+vPd7tVC1awYaovVk0ZUuDT3AAAAAAEC\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAz6ajCj7KuCGf57TemG8UnRZoCJW4j5W2olQ7fOoRPPG7x4J1\nqvCPU65cWa5xM2lnMNJICnk05VDlfeN9l+NvQGBN1ZHzAYyDQ0RTkwXnLqR40+xz\n4E5rapTz7EsMTLWv3q6FTIRF44TbX6+M6HNgTaIPwaGvwJ442TirOlAjWyYaacbH\nUhOVWRn+nl+ow3zfNwsmZzjmK8M247IlooMnOdF2EVfmgFsP/qsfcYcP/WqEoftp\n2DyPEcONhsrbWh8k0MkJbVMR47HN80MFFlHayi4fpnbgNfnSy5hUCHk74BmL70ew\nhe2T5xUqENvtdC5LN6rzm+gzLjjiLmQWKqoynQIDAQABAoIBAAzntVBIsL6a0F5N\nHlxo4uYUY2jNLUg3LL+P7paH0YRxHZN7pyZ1huLTfkfQkJZ6YYBmQTXtbH0n9utI\n/SA4cUyV76BrTqf0/J9smqkTf9elPyEkm9r/5KseEL7Jtzz5ObHkNMKZoeJO+ndK\n6L31lbGddc855jtZWf0eCX45Rsk+SzSYFxZBtHYRH/nVM0BbELSnb1iGV0OpMB4E\nUkYpq5wThX6xTwKT7ogVzM7tr0FfvAYrz7iwQSDiLcZOMlcZCzLohCfXU0EbAwXf\ny7jAcqn/Ytb4X5TevS5YTmxV0+Cb42lWv/dZrNbINhgNP+7/LBh6tXhtS3ReZdT4\ngTOpYv0CgYEA0mC66t+7MBOrBstnxqEQqRh9+rLveIZ3xnSL6vvA51VhROzrf5AG\n+yNgJx11nhfqzBiJo2ywL2fwgNjKYhbpzat87m2j3J8FQPi/OATPGzSaTyqXKlz9\nNebED0lPoBVK0B+wq0Q51AoOuN80m+K7iaefNZhRMxJr1YnBx3dAdAsCgYEA/K6E\n/69zkNe33/FQsHIZroAXIgcFXzB8SjTrgZT5kxAMyRtypKrhLe8SGEZV0T2ejn6E\ns1gg2ASgqbf/TT85eFXGWbQa3oEPGJUEzPicPZOQHcVFz8pifofWzBd0hBG4a2hg\nEWGHPNlgZHsrf8/6893u1ULVrBhqi9WTRlS4NPcCgYBriKwigGfzJCqIl5IdEpks\nhetnKO2FIt64XzxhyXuKA7drftrFYn5fAm8Ur1c+jyUiW+yGz3ijUrK5eZbBWsr5\nqQ175ikbDWGnGz7KyJKAanvxuWh5a/y1/5X55lRAFIIgLgKlGIOiod1ynA0NHXEU\n5MxZndjrjR/3j6mwZoFYjwKBgGaJ37julyQpFhoPkGH5+4f/vON3G+vz/gwTC5rr\nPJg8RCP8OnquSXDdemdVa4/cxJIor2skETf4MMaOv1C2nnjBvhs65khy8RBVsLwJ\nC0ZFso8SNfFLvMqCD12FCyhpFICpu4pyHHJJ+D7uaMmWOc1qu3fZhmIvClWylvBM\ngvAjAoGBAK166jhDV/GZ82AmF4/5XQxCuJ/VHNfhQrHoHnhrRUBSSCYk8XvQgaus\n0KRMAT8TrzdX/aueor5qCZwqSvLcpmRGMsxlKcs62rwdmhHmCAyY2AOXHEihJrYH\nBtx4OtCwyuxvu4kphI+ATCOlEWLXxzK0eg98yOtK/z7r4mBVQBpF\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDPpqMKPsq4IZ/n\ntN6YbxSdFmgIlbiPlbaiVDt86hE88bvHgnWq8I9TrlxZrnEzaWcw0kgKeTTlUOV9\n432X429AYE3VkfMBjINDRFOTBecupHjT7HPgTmtqlPPsSwxMta/eroVMhEXjhNtf\nr4zoc2BNog/Boa/AnjjZOKs6UCNbJhppxsdSE5VZGf6eX6jDfN83CyZnOOYrwzbj\nsiWigyc50XYRV+aAWw/+qx9xhw/9aoSh+2nYPI8Rw42GyttaHyTQyQltUxHjsc3z\nQwUWUdrKLh+mduA1+dLLmFQIeTvgGYvvR7CF7ZPnFSoQ2+10Lks3qvOb6DMuOOIu\nZBYqqjKdAgMBAAECggEADOe1UEiwvprQXk0eXGji5hRjaM0tSDcsv4/ulofRhHEd\nk3unJnWG4tN+R9CQlnphgGZBNe1sfSf260j9IDhxTJXvoGtOp/T8n2yaqRN/16U/\nISSb2v/kqx4Qvsm3PPk5seQ0wpmh4k76d0rovfWVsZ11zznmO1lZ/R4JfjlGyT5L\nNJgXFkG0dhEf+dUzQFsQtKdvWIZXQ6kwHgRSRimrnBOFfrFPApPuiBXMzu2vQV+8\nBivPuLBBIOItxk4yVxkLMuiEJ9dTQRsDBd/LuMByqf9i1vhflN69LlhObFXT4Jvj\naVa/91ms1sg2GA0/7v8sGHq1eG1LdF5l1PiBM6li/QKBgQDSYLrq37swE6sGy2fG\noRCpGH36su94hnfGdIvq+8DnVWFE7Ot/kAb7I2AnHXWeF+rMGImjbLAvZ/CA2Mpi\nFunNq3zubaPcnwVA+L84BM8bNJpPKpcqXP015sQPSU+gFUrQH7CrRDnUCg643zSb\n4ruJp581mFEzEmvVicHHd0B0CwKBgQD8roT/r3OQ17ff8VCwchmugBciBwVfMHxK\nNOuBlPmTEAzJG3KkquEt7xIYRlXRPZ6OfoSzWCDYBKCpt/9NPzl4VcZZtBregQ8Y\nlQTM+Jw9k5AdxUXPymJ+h9bMF3SEEbhraGARYYc82WBkeyt/z/rz3e7VQtWsGGqL\n1ZNGVLg09wKBgGuIrCKAZ/MkKoiXkh0SmSyF62co7YUi3rhfPGHJe4oDt2t+2sVi\nfl8CbxSvVz6PJSJb7IbPeKNSsrl5lsFayvmpDXvmKRsNYacbPsrIkoBqe/G5aHlr\n/LX/lfnmVEAUgiAuAqUYg6Kh3XKcDQ0dcRTkzFmd2OuNH/ePqbBmgViPAoGAZonf\nuO6XJCkWGg+QYfn7h/+843cb6/P+DBMLmus8mDxEI/w6eq5JcN16Z1Vrj9zEkiiv\nayQRN/gwxo6/ULaeeMG+GzrmSHLxEFWwvAkLRkWyjxI18Uu8yoIPXYULKGkUgKm7\ninIcckn4Pu5oyZY5zWq7d9mGYi8KVbKW8EyC8CMCgYEArXrqOENX8ZnzYCYXj/ld\nDEK4n9Uc1+FCsegeeGtFQFJIJiTxe9CBq6zQpEwBPxOvN1f9q56ivmoJnCpK8tym\nZEYyzGUpyzravB2aEeYIDJjYA5ccSKEmtgcG3Hg60LDK7G+7iSmEj4BMI6URYtfH\nMrR6D3zI60r/PuviYFVAGkU=\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "b8:e6:67:20:ca:14:f6:c3:43:47:e1:01:c3:f5:cb:1b",
            "public_key_fingerprint_sha256": "SHA256:qmTbbO/w9DXcywlipwlS32C6Dms16fKAf4u+pkhTyZA",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDPpqMKPsq4IZ/ntN6YbxSdFmgIlbiPlbaiVDt86hE88bvHgnWq8I9TrlxZrnEzaWcw0kgKeTTlUOV9432X429AYE3VkfMBjINDRFOTBecupHjT7HPgTmtqlPPsSwxMta/eroVMhEXjhNtfr4zoc2BNog/Boa/AnjjZOKs6UCNbJhppxsdSE5VZGf6eX6jDfN83CyZnOOYrwzbjsiWigyc50XYRV+aAWw/+qx9xhw/9aoSh+2nYPI8Rw42GyttaHyTQyQltUxHjsc3zQwUWUdrKLh+mduA1+dLLmFQIeTvgGYvvR7CF7ZPnFSoQ2+10Lks3qvOb6DMuOOIuZBYqqjKd\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz6ajCj7KuCGf57TemG8U\nnRZoCJW4j5W2olQ7fOoRPPG7x4J1qvCPU65cWa5xM2lnMNJICnk05VDlfeN9l+Nv\nQGBN1ZHzAYyDQ0RTkwXnLqR40+xz4E5rapTz7EsMTLWv3q6FTIRF44TbX6+M6HNg\nTaIPwaGvwJ442TirOlAjWyYaacbHUhOVWRn+nl+ow3zfNwsmZzjmK8M247IlooMn\nOdF2EVfmgFsP/qsfcYcP/WqEoftp2DyPEcONhsrbWh8k0MkJbVMR47HN80MFFlHa\nyi4fpnbgNfnSy5hUCHk74BmL70ewhe2T5xUqENvtdC5LN6rzm+gzLjjiLmQWKqoy\nnQIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "aae28fd246d9b8ad33200cac2825bcce0cbadb1c",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEA0BdOoVaGaW0RuXj6cpuSMVIJ8ubUDKn5tNlwE2rA\nTzIzCXv2M4uiWWjemhdEkb5us5gsI1OcKlNrPZXceuX73fYugBv+/+tSbv5OMW60\nkAX8gaLHQGsKHyqRQ+e5a79q/Waxj737iaOf3Q2DMmAK4J+6VWTr1bdmVhQcqL/h\nkBHgZejeyLznuHY3y8pTHr/Z7VSX9STK8FuJzV7QoaVE1n28iGvqufT7/Eif3mpK\njhPo75+LeZ5y23MuXRvpaZb4it1+aZJsaQd18zGyjGYgVOOO/nh3SOr8fvzQge4X\nvVwfRb5ulyt0UfHz7i43JWhzhDVf3swwABhsA7WcourozQAAA7i5Df/ZuQ3/2QAA\nAAdzc2gtcnNhAAABAQDQF06hVoZpbRG5ePpym5IxUgny5tQMqfm02XATasBPMjMJ\ne/Yzi6JZaN6aF0SRvm6zmCwjU5wqU2s9ldx65fvd9i6AG/7/61Ju/k4xbrSQBfyB\nosdAawofKpFD57lrv2r9ZrGPvfuJo5/dDYMyYArgn7pVZOvVt2ZWFByov+GQEeBl\n6N7IvOe4djfLylMev9ntVJf1JMrwW4nNXtChpUTWfbyIa+q59Pv8SJ/eakqOE+jv\nn4t5nnLbcy5dG+lplviK3X5pkmxpB3XzMbKMZiBU447+eHdI6vx+/NCB7he9XB9F\nvm6XK3RR8fPuLjclaHOENV/ezDAAGGwDtZyi6ujNAAAAAwEAAQAAAQEAl1j8VZgK\n9s7fX1jAP28rKzgSCFsey38tIP4s59JywKcwO6uva9oZYJJHpSdbNe2dsn3xTFhZ\ncudtTkObMr/nKo8NTxwNobFUKWpJEOcF6OKRvu/Xn+C6YeSh9xOo5tc4R8nTR0rU\nkk0xzqMvUwpLnwhNjCJ07OIRSnYiShIVSqSEc36HkszZCbb/lKXWJ5tJujUyH4IM\nijYt9fNf01g8qmfxH6UBJmVaHJdY0OoUSRpt9pBh9XfIlaXArmlYdll71Xhr6FLo\nagxx4zQLHbKoIShw/LwXt4hwhmuHLWw6N3OOQqPwqgGSB12uYMS99OAELjpxp9Po\n+cbbolEkxaxmgQAAAIEAsAn25ArCOI7FJSYJ1fdRFmW6u2+tBWSjVtabZ7XqrXjJ\nxP5KDU/3CkaAdt2GyL4cE9/hTqdXofyTJjImvH24SXCkcrGN/thtsW5xir5i5/38\nFuzWXrH6DqvKLlCvUa9FmvmJVW3Jo+lY8EaqWn5UsrxDvzxMYfTicrF+EKu3mBAA\nAACBAP8xiTtUDg58v9GzuZLRHhAWDirRkgikzSjK/o7noXVxWEp6K4K+M0Kiqz9R\nkfA+ODuOKyDa9JpjtJ9fnvherEPsq+DJSXqOrhRb4HuL8NbZJ2JwgsAQtPtQI1vy\njanNvhwk6MXM8a4MbaR6rnzMm6ZGmjh6qR+bStbAPaVrk/RdAAAAgQDQv6m0nQlF\nRy8i0ozXpbbrnVd7XhdvxHqlY22eyUywx1SJ1CEO+PuV1BoZTQ7OJtU0iNS13TkJ\n/Ruez7gA/spBN8XqOta0tSsjyXKhMVfxQ+Bs7qXv1CzlRa91ZI3K1xXHzWpufGGl\ne9Zzh3YRR3apIzCJB3Ohi0pZAjibZOt/MQAAAAAB\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA0BdOoVaGaW0RuXj6cpuSMVIJ8ubUDKn5tNlwE2rATzIzCXv2\nM4uiWWjemhdEkb5us5gsI1OcKlNrPZXceuX73fYugBv+/+tSbv5OMW60kAX8gaLH\nQGsKHyqRQ+e5a79q/Waxj737iaOf3Q2DMmAK4J+6VWTr1bdmVhQcqL/hkBHgZeje\nyLznuHY3y8pTHr/Z7VSX9STK8FuJzV7QoaVE1n28iGvqufT7/Eif3mpKjhPo75+L\neZ5y23MuXRvpaZb4it1+aZJsaQd18zGyjGYgVOOO/nh3SOr8fvzQge4XvVwfRb5u\nlyt0UfHz7i43JWhzhDVf3swwABhsA7WcourozQIDAQABAoIBAQCXWPxVmAr2zt9f\nWMA/bysrOBIIWx7Lfy0g/izn0nLApzA7q69r2hlgkkelJ1s17Z2yffFMWFly521O\nQ5syv+cqjw1PHA2hsVQpakkQ5wXo4pG+79ef4Lph5KH3E6jm1zhHydNHStSSTTHO\noy9TCkufCE2MInTs4hFKdiJKEhVKpIRzfoeSzNkJtv+UpdYnm0m6NTIfggyKNi31\n81/TWDyqZ/EfpQEmZVocl1jQ6hRJGm32kGH1d8iVpcCuaVh2WXvVeGvoUuhqDHHj\nNAsdsqghKHD8vBe3iHCGa4ctbDo3c45Co/CqAZIHXa5gxL304AQuOnGn0+j5xtui\nUSTFrGaBAoGBAP8xiTtUDg58v9GzuZLRHhAWDirRkgikzSjK/o7noXVxWEp6K4K+\nM0Kiqz9RkfA+ODuOKyDa9JpjtJ9fnvherEPsq+DJSXqOrhRb4HuL8NbZJ2JwgsAQ\ntPtQI1vyjanNvhwk6MXM8a4MbaR6rnzMm6ZGmjh6qR+bStbAPaVrk/RdAoGBANC/\nqbSdCUVHLyLSjNeltuudV3teF2/EeqVjbZ7JTLDHVInUIQ74+5XUGhlNDs4m1TSI\n1LXdOQn9G57PuAD+ykE3xeo61rS1KyPJcqExV/FD4Gzupe/ULOVFr3VkjcrXFcfN\nam58YaV71nOHdhFHdqkjMIkHc6GLSlkCOJtk638xAoGBAOS2ELgLbU2uoHvhB8B9\niuP/4FKf4LG+geC9jcel8R7AptCZDcXvkSF3iOMGyDT4jo1RrXWUxwRXt9neaStQ\nLjPyOVkNDb25gmrcrSQNF5x2osWm8IgScSGLgSU3DZ/RtUCkE7qzIydKHDn9ecR/\n3D/5pt5XkJuzIi+1u4o2EDRBAoGBALzZyJRHxY1RWwlr5lNp7lS2YeCQPS+2Vyat\nDw0qHCGKE6clrEq5YhIocvwUxKIoa5Y9fAKUAvhQbd59GYB9AUmDRaAkXv3ZMRAN\nPZEq7N6ug6jJNoIEOCGrq5LOx6CMeX3rDrCqAkUOBfM6x8vWFTnrRguSHEA3nals\n4v1ijdLhAoGBALAJ9uQKwjiOxSUmCdX3URZlurtvrQVko1bWm2e16q14ycT+Sg1P\n9wpGgHbdhsi+HBPf4U6nV6H8kyYyJrx9uElwpHKxjf7YbbFucYq+Yuf9/Bbs1l6x\n+g6ryi5Qr1GvRZr5iVVtyaPpWPBGqlp+VLK8Q788TGH04nKxfhCrt5gQ\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDQF06hVoZpbRG5\nePpym5IxUgny5tQMqfm02XATasBPMjMJe/Yzi6JZaN6aF0SRvm6zmCwjU5wqU2s9\nldx65fvd9i6AG/7/61Ju/k4xbrSQBfyBosdAawofKpFD57lrv2r9ZrGPvfuJo5/d\nDYMyYArgn7pVZOvVt2ZWFByov+GQEeBl6N7IvOe4djfLylMev9ntVJf1JMrwW4nN\nXtChpUTWfbyIa+q59Pv8SJ/eakqOE+jvn4t5nnLbcy5dG+lplviK3X5pkmxpB3Xz\nMbKMZiBU447+eHdI6vx+/NCB7he9XB9Fvm6XK3RR8fPuLjclaHOENV/ezDAAGGwD\ntZyi6ujNAgMBAAECggEBAJdY/FWYCvbO319YwD9vKys4EghbHst/LSD+LOfScsCn\nMDurr2vaGWCSR6UnWzXtnbJ98UxYWXLnbU5DmzK/5yqPDU8cDaGxVClqSRDnBeji\nkb7v15/gumHkofcTqObXOEfJ00dK1JJNMc6jL1MKS58ITYwidOziEUp2IkoSFUqk\nhHN+h5LM2Qm2/5Sl1iebSbo1Mh+CDIo2LfXzX9NYPKpn8R+lASZlWhyXWNDqFEka\nbfaQYfV3yJWlwK5pWHZZe9V4a+hS6GoMceM0Cx2yqCEocPy8F7eIcIZrhy1sOjdz\njkKj8KoBkgddrmDEvfTgBC46cafT6PnG26JRJMWsZoECgYEA/zGJO1QODny/0bO5\nktEeEBYOKtGSCKTNKMr+juehdXFYSnorgr4zQqKrP1GR8D44O44rINr0mmO0n1+e\n+F6sQ+yr4MlJeo6uFFvge4vw1tknYnCCwBC0+1AjW/KNqc2+HCToxczxrgxtpHqu\nfMybpkaaOHqpH5tK1sA9pWuT9F0CgYEA0L+ptJ0JRUcvItKM16W2651Xe14Xb8R6\npWNtnslMsMdUidQhDvj7ldQaGU0OzibVNIjUtd05Cf0bns+4AP7KQTfF6jrWtLUr\nI8lyoTFX8UPgbO6l79Qs5UWvdWSNytcVx81qbnxhpXvWc4d2EUd2qSMwiQdzoYtK\nWQI4m2TrfzECgYEA5LYQuAttTa6ge+EHwH2K4//gUp/gsb6B4L2Nx6XxHsCm0JkN\nxe+RIXeI4wbINPiOjVGtdZTHBFe32d5pK1AuM/I5WQ0NvbmCatytJA0XnHaixabw\niBJxIYuBJTcNn9G1QKQTurMjJ0ocOf15xH/cP/mm3leQm7MiL7W7ijYQNEECgYEA\nvNnIlEfFjVFbCWvmU2nuVLZh4JA9L7ZXJq0PDSocIYoTpyWsSrliEihy/BTEoihr\nlj18ApQC+FBt3n0ZgH0BSYNFoCRe/dkxEA09kSrs3q6DqMk2ggQ4Iaurks7HoIx5\nfesOsKoCRQ4F8zrHy9YVOetGC5IcQDedqWzi/WKN0uECgYEAsAn25ArCOI7FJSYJ\n1fdRFmW6u2+tBWSjVtabZ7XqrXjJxP5KDU/3CkaAdt2GyL4cE9/hTqdXofyTJjIm\nvH24SXCkcrGN/thtsW5xir5i5/38FuzWXrH6DqvKLlCvUa9FmvmJVW3Jo+lY8Eaq\nWn5UsrxDvzxMYfTicrF+EKu3mBA=\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "41:ef:b2:e0:3e:00:b3:61:7c:e4:74:e9:d3:13:c4:a4",
            "public_key_fingerprint_sha256": "SHA256:2/up4Bdto2WpMq1TRaO0OLThU70V9dfe5cJmX/eZCAU",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQF06hVoZpbRG5ePpym5IxUgny5tQMqfm02XATasBPMjMJe/Yzi6JZaN6aF0SRvm6zmCwjU5wqU2s9ldx65fvd9i6AG/7/61Ju/k4xbrSQBfyBosdAawofKpFD57lrv2r9ZrGPvfuJo5/dDYMyYArgn7pVZOvVt2ZWFByov+GQEeBl6N7IvOe4djfLylMev9ntVJf1JMrwW4nNXtChpUTWfbyIa+q59Pv8SJ/eakqOE+jvn4t5nnLbcy5dG+lplviK3X5pkmxpB3XzMbKMZiBU447+eHdI6vx+/NCB7he9XB9Fvm6XK3RR8fPuLjclaHOENV/ezDAAGGwDtZyi6ujN\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0BdOoVaGaW0RuXj6cpuS\nMVIJ8ubUDKn5tNlwE2rATzIzCXv2M4uiWWjemhdEkb5us5gsI1OcKlNrPZXceuX7\n3fYugBv+/+tSbv5OMW60kAX8gaLHQGsKHyqRQ+e5a79q/Waxj737iaOf3Q2DMmAK\n4J+6VWTr1bdmVhQcqL/hkBHgZejeyLznuHY3y8pTHr/Z7VSX9STK8FuJzV7QoaVE\n1n28iGvqufT7/Eif3mpKjhPo75+LeZ5y23MuXRvpaZb4it1+aZJsaQd18zGyjGYg\nVOOO/nh3SOr8fvzQge4XvVwfRb5ulyt0UfHz7i43JWhzhDVf3swwABhsA7Wcouro\nzQIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "712b4d8d4fc27237570b92ff6a6a90c240ddf756",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAyw2wgCHTB3WstwC/R8zqGEo7oqeYK9HJA/vLuWaX\nyqzy+kqkJ2M9JYVSX2mGkPDZTUznGTAO9QH+Ho6j+4h9JDJEVIjmzP8UYZwnx2YU\nNl9cVEUpZF10IXp7xN/BGg/lOluroUXrpHBilqvvSMSy4lezV6L0MpunWYHmpheo\nFyUwE1lVyUtLzl4RFq5oJJMkzA+pjOa7AxqtosaHI08Wb1RGGbPzBtCQKc49LhO+\nq0JPILa4y4HyKZPj/eQdH6teudfF4QuXopiORvDijr2Ef+Z4iYlhahaE+DmuH1PB\nWfbL66W6JmuW4E4f4MhVyRFB5P/dA6+bv//bV2Sf7ds9PwAAA7j6HQDH+h0AxwAA\nAAdzc2gtcnNhAAABAQDLDbCAIdMHday3AL9HzOoYSjuip5gr0ckD+8u5ZpfKrPL6\nSqQnYz0lhVJfaYaQ8NlNTOcZMA71Af4ejqP7iH0kMkRUiObM/xRhnCfHZhQ2X1xU\nRSlkXXQhenvE38EaD+U6W6uhReukcGKWq+9IxLLiV7NXovQym6dZgeamF6gXJTAT\nWVXJS0vOXhEWrmgkkyTMD6mM5rsDGq2ixocjTxZvVEYZs/MG0JApzj0uE76rQk8g\ntrjLgfIpk+P95B0fq16518XhC5eimI5G8OKOvYR/5niJiWFqFoT4Oa4fU8FZ9svr\npboma5bgTh/gyFXJEUHk/90Dr5u//9tXZJ/t2z0/AAAAAwEAAQAAAQBy23B+WiOz\nsYWcEskgRTIZwUvQavqxtr39Cd4oJncwRvo+SCBow0LgSXTZ0agzrnlMt3Z1kfCz\n+IeVI1xwuLkI04JBSxs61ALkX99EdGJ0iyZ/6ItMYWyCT3VZXLQvGNSyWQ5RcGql\nnoi179WvlMwXKkKhDOUTB2b3Q3qDcxg61mVCD8ApYfTLHZ+5IzDgnOrXjNWLSTQU\nu8BJZNV1zgBeAHuNGQENrMl7J7r0NSWehotQm4yhHXOL148RVspNASASl63nETyd\nfvoWdVL8X9bpR4va+6T5KRbyBaQ1Zxn44tfn2motG6x2La31258t+WXJS7OezEF1\npFApb98bLdhRAAAAgEXUbwbwt8hEG4uWiMHJw7gs3XKHuHSXTnAk7lHVCTJSkG3s\ni7Ky0wi3YhV62ecC+9pdwY1lkR65PV/C0xDIQ6RfFPJyncvNjojfYEnKxMgpDAsU\ngoNY6H0TD/8+wyiDBolqVbkqjtU6oELoGmA21k3cKkoCfNrWSk9uknAyOlNyAAAA\ngQDp0yuZSI0sRJ92lx40dYpuuhw3+MUV8kLvfNlW3S1sg01hx0A5sjVJsfyxm96k\nC3nYpWmAjcZ6SQDS8MJdMnCH6CPLFQQxoLG0w9jhmnenV/HAo3XGlIE86zW9ggzJ\nHfBUcL2GMXYxn2FhO0ju0p8SdMzY1nuEUZsfvRGj+UYvxwAAAIEA3k9ycHTu48or\n6hg8AEBtaBE/sgWA5iby7iQ72h8QHYJPINUaeyBfiIOlgAZ4dow5nsSs4Be1ieRg\n93PjnzWD8uuWUsUhEaucgZC+URbyjUxRaYXNHLCYj5fAy2R7naqu1dIN6iN554l2\nADSGGbY2YkXkTJfFyRgS/6q0RHp2dskAAAAAAQID\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAyw2wgCHTB3WstwC/R8zqGEo7oqeYK9HJA/vLuWaXyqzy+kqk\nJ2M9JYVSX2mGkPDZTUznGTAO9QH+Ho6j+4h9JDJEVIjmzP8UYZwnx2YUNl9cVEUp\nZF10IXp7xN/BGg/lOluroUXrpHBilqvvSMSy4lezV6L0MpunWYHmpheoFyUwE1lV\nyUtLzl4RFq5oJJMkzA+pjOa7AxqtosaHI08Wb1RGGbPzBtCQKc49LhO+q0JPILa4\ny4HyKZPj/eQdH6teudfF4QuXopiORvDijr2Ef+Z4iYlhahaE+DmuH1PBWfbL66W6\nJmuW4E4f4MhVyRFB5P/dA6+bv//bV2Sf7ds9PwIDAQABAoIBAHLbcH5aI7OxhZwS\nySBFMhnBS9Bq+rG2vf0J3igmdzBG+j5IIGjDQuBJdNnRqDOueUy3dnWR8LP4h5Uj\nXHC4uQjTgkFLGzrUAuRf30R0YnSLJn/oi0xhbIJPdVlctC8Y1LJZDlFwaqWeiLXv\n1a+UzBcqQqEM5RMHZvdDeoNzGDrWZUIPwClh9Msdn7kjMOCc6teM1YtJNBS7wElk\n1XXOAF4Ae40ZAQ2syXsnuvQ1JZ6Gi1CbjKEdc4vXjxFWyk0BIBKXrecRPJ1++hZ1\nUvxf1ulHi9r7pPkpFvIFpDVnGfji1+faai0brHYtrfXbny35ZclLs57MQXWkUClv\n3xst2FECgYEA6dMrmUiNLESfdpceNHWKbrocN/jFFfJC73zZVt0tbINNYcdAObI1\nSbH8sZvepAt52KVpgI3GekkA0vDCXTJwh+gjyxUEMaCxtMPY4Zp3p1fxwKN1xpSB\nPOs1vYIMyR3wVHC9hjF2MZ9hYTtI7tKfEnTM2NZ7hFGbH70Ro/lGL8cCgYEA3k9y\ncHTu48or6hg8AEBtaBE/sgWA5iby7iQ72h8QHYJPINUaeyBfiIOlgAZ4dow5nsSs\n4Be1ieRg93PjnzWD8uuWUsUhEaucgZC+URbyjUxRaYXNHLCYj5fAy2R7naqu1dIN\n6iN554l2ADSGGbY2YkXkTJfFyRgS/6q0RHp2dskCgYA0xnzos/9pJnP3iFRA8uaz\n5z3HRFb3hR6mfz9u460E+P3WO+q7GwX8BDhMvimaTRzLUUpmwZkysJeHBOBZuLC9\nfB/YDn5L1UFG0414Hi0zkB34pOxITex9m3kdtOS94AwGgwvD5hYPTTHliEQF43QT\n7ljt+DsYunKQz1PT9sdosQKBgC/UP/bZ8Zuon5IZ7K7RLbi6HU4byQO7VYDO4uGm\n1TzEEGor7yqWaHdie3Tz727x9GOoRNlhwHkOXZ5fnJVgWiclcI4WQ2sd1Oo7Tfb8\nTOsBhHKDiwGlLO2X5K7dy4q8cikmrD+3qj6aYHzi0AcwILs79kZUUQVW3J+NBoPF\nJT+hAoGARdRvBvC3yEQbi5aIwcnDuCzdcoe4dJdOcCTuUdUJMlKQbeyLsrLTCLdi\nFXrZ5wL72l3BjWWRHrk9X8LTEMhDpF8U8nKdy82OiN9gScrEyCkMCxSCg1jofRMP\n/z7DKIMGiWpVuSqO1TqgQugaYDbWTdwqSgJ82tZKT26ScDI6U3I=\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDLDbCAIdMHday3\nAL9HzOoYSjuip5gr0ckD+8u5ZpfKrPL6SqQnYz0lhVJfaYaQ8NlNTOcZMA71Af4e\njqP7iH0kMkRUiObM/xRhnCfHZhQ2X1xURSlkXXQhenvE38EaD+U6W6uhReukcGKW\nq+9IxLLiV7NXovQym6dZgeamF6gXJTATWVXJS0vOXhEWrmgkkyTMD6mM5rsDGq2i\nxocjTxZvVEYZs/MG0JApzj0uE76rQk8gtrjLgfIpk+P95B0fq16518XhC5eimI5G\n8OKOvYR/5niJiWFqFoT4Oa4fU8FZ9svrpboma5bgTh/gyFXJEUHk/90Dr5u//9tX\nZJ/t2z0/AgMBAAECggEActtwflojs7GFnBLJIEUyGcFL0Gr6sba9/QneKCZ3MEb6\nPkggaMNC4El02dGoM655TLd2dZHws/iHlSNccLi5CNOCQUsbOtQC5F/fRHRidIsm\nf+iLTGFsgk91WVy0LxjUslkOUXBqpZ6Ite/Vr5TMFypCoQzlEwdm90N6g3MYOtZl\nQg/AKWH0yx2fuSMw4Jzq14zVi0k0FLvASWTVdc4AXgB7jRkBDazJeye69DUlnoaL\nUJuMoR1zi9ePEVbKTQEgEpet5xE8nX76FnVS/F/W6UeL2vuk+SkW8gWkNWcZ+OLX\n59pqLRusdi2t9dufLfllyUuznsxBdaRQKW/fGy3YUQKBgQDp0yuZSI0sRJ92lx40\ndYpuuhw3+MUV8kLvfNlW3S1sg01hx0A5sjVJsfyxm96kC3nYpWmAjcZ6SQDS8MJd\nMnCH6CPLFQQxoLG0w9jhmnenV/HAo3XGlIE86zW9ggzJHfBUcL2GMXYxn2FhO0ju\n0p8SdMzY1nuEUZsfvRGj+UYvxwKBgQDeT3JwdO7jyivqGDwAQG1oET+yBYDmJvLu\nJDvaHxAdgk8g1Rp7IF+Ig6WABnh2jDmexKzgF7WJ5GD3c+OfNYPy65ZSxSERq5yB\nkL5RFvKNTFFphc0csJiPl8DLZHudqq7V0g3qI3nniXYANIYZtjZiReRMl8XJGBL/\nqrREenZ2yQKBgDTGfOiz/2kmc/eIVEDy5rPnPcdEVveFHqZ/P27jrQT4/dY76rsb\nBfwEOEy+KZpNHMtRSmbBmTKwl4cE4Fm4sL18H9gOfkvVQUbTjXgeLTOQHfik7EhN\n7H2beR205L3gDAaDC8PmFg9NMeWIRAXjdBPuWO34Oxi6cpDPU9P2x2ixAoGAL9Q/\n9tnxm6ifkhnsrtEtuLodThvJA7tVgM7i4abVPMQQaivvKpZod2J7dPPvbvH0Y6hE\n2WHAeQ5dnl+clWBaJyVwjhZDax3U6jtN9vxM6wGEcoOLAaUs7Zfkrt3LirxyKSas\nP7eqPppgfOLQBzAguzv2RlRRBVbcn40Gg8UlP6ECgYBF1G8G8LfIRBuLlojBycO4\nLN1yh7h0l05wJO5R1QkyUpBt7IuystMIt2IVetnnAvvaXcGNZZEeuT1fwtMQyEOk\nXxTycp3LzY6I32BJysTIKQwLFIKDWOh9Ew//PsMogwaJalW5Ko7VOqBC6BpgNtZN\n3CpKAnza1kpPbpJwMjpTcg==\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "d6:7c:c3:3a:57:2b:e0:3a:10:3b:0f:0b:b1:b4:af:d7",
            "public_key_fingerprint_sha256": "SHA256:dQHVKTCVKFnaODZ9lz7wMW1yO7njRz4h2lAowMgBYBY",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDLDbCAIdMHday3AL9HzOoYSjuip5gr0ckD+8u5ZpfKrPL6SqQnYz0lhVJfaYaQ8NlNTOcZMA71Af4ejqP7iH0kMkRUiObM/xRhnCfHZhQ2X1xURSlkXXQhenvE38EaD+U6W6uhReukcGKWq+9IxLLiV7NXovQym6dZgeamF6gXJTATWVXJS0vOXhEWrmgkkyTMD6mM5rsDGq2ixocjTxZvVEYZs/MG0JApzj0uE76rQk8gtrjLgfIpk+P95B0fq16518XhC5eimI5G8OKOvYR/5niJiWFqFoT4Oa4fU8FZ9svrpboma5bgTh/gyFXJEUHk/90Dr5u//9tXZJ/t2z0/\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyw2wgCHTB3WstwC/R8zq\nGEo7oqeYK9HJA/vLuWaXyqzy+kqkJ2M9JYVSX2mGkPDZTUznGTAO9QH+Ho6j+4h9\nJDJEVIjmzP8UYZwnx2YUNl9cVEUpZF10IXp7xN/BGg/lOluroUXrpHBilqvvSMSy\n4lezV6L0MpunWYHmpheoFyUwE1lVyUtLzl4RFq5oJJMkzA+pjOa7AxqtosaHI08W\nb1RGGbPzBtCQKc49LhO+q0JPILa4y4HyKZPj/eQdH6teudfF4QuXopiORvDijr2E\nf+Z4iYlhahaE+DmuH1PBWfbL66W6JmuW4E4f4MhVyRFB5P/dA6+bv//bV2Sf7ds9\nPwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_self_signed_cert",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "cert_signing",
              "crl_signing"
            ],
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFTCCAf2gAwIBAgIRAN2iz2vRsPMeupzCtU4eg6gwDQYJKoZIhvcNAQELBQAw\nJDELMAkGA1UEChMCd2cxFTATBgNVBAMTDHdnLnFhLnZwbi5jYTAeFw0yNDExMTMy\nMjQ4MTFaFw0zNDExMTEyMjQ4MTFaMCQxCzAJBgNVBAoTAndnMRUwEwYDVQQDEwx3\nZy5xYS52cG4uY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/2NwO\nQ1OGYftFwOU0bdUHZdXPMZO1imJxM3b9kqs7WXGdLd5Ycqc/iFidWvM5VtxLkoPS\nhLeKpcLfdI2FPAajftG8hGveHs53wMEB9HRXRlLh4/m635rSwkucbzcaz+vGWPb8\nt2zh5bhcs2rZ+pSluDYHVZS6Kh4QOgXuNrlXLt+Lepht4xeokhEov/kFEJAKt3Ds\nWR9aKwHdvl/m0H/v72kytCBQiUFKKsONyF6MriZESvDZqPHgzXgvgUXnbdnCcuP7\nfPvkrmaUkAYteJw4Y3cdOBoZDlh62+mqCNg7A0SFDtd2+GuxZ/+HOr0s09VsUJHG\nWSTdlDHiI3tIFgdnAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRRzQDb6sMbzFniMtay+jukKiCkJzANBgkqhkiG9w0B\nAQsFAAOCAQEAh5WcGBdlf58Kn0oa0Rhnsh/6d058i9AZSAs2pfdMGH6ZuD/dhhi/\nQF7GXadOE9AtY0ObGkMN+Lh1qPrrMyk84vZyNNwnsIVI798w3AX+Q+Fb9W1uOkO8\nva8BbpQpVkzOOx1afD5foij46l2XDTVXJ6Cqd+VbWOcOV1kO++Y6MZ6qvIskJ+ag\nXCvJZMVN+IkUS2NR9H1/bsT3Php0+OveDUInpES+pL+vJBoai9HdevqzAsvMSjKh\nyjmk66IQW1q7tMI/jixZ1UYQT0ZFSOWJkA0dSIjHkIHXhU4eJHQ+Mtw+X/+4Db8s\nbhuQ0k98BrGGOlo/SXBpbEuWkC5CXYVmRg==\n-----END CERTIFICATE-----\n",
            "dns_names": null,
            "early_renewal_hours": 0,
            "id": "294604746160646681008442970622186652584",
            "ip_addresses": null,
            "is_ca_certificate": true,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAv9jcDkNThmH7RcDlNG3VB2XVzzGTtYpicTN2/ZKrO1lxnS3e\nWHKnP4hYnVrzOVbcS5KD0oS3iqXC33SNhTwGo37RvIRr3h7Od8DBAfR0V0ZS4eP5\nut+a0sJLnG83Gs/rxlj2/Lds4eW4XLNq2fqUpbg2B1WUuioeEDoF7ja5Vy7fi3qY\nbeMXqJIRKL/5BRCQCrdw7FkfWisB3b5f5tB/7+9pMrQgUIlBSirDjchejK4mRErw\n2ajx4M14L4FF523ZwnLj+3z75K5mlJAGLXicOGN3HTgaGQ5YetvpqgjYOwNEhQ7X\ndvhrsWf/hzq9LNPVbFCRxlkk3ZQx4iN7SBYHZwIDAQABAoIBAFCqOjy1ClWitShr\nJvSYic4Gf5QS4Gygtyup3ApatSzLOv4/3xGJg9Eu3zOqnkIpx47vGAZYT2Q4tmuG\nckrnJlNwa3e8pi5K/b1UitLrmk9n/kmEtehhRJQBphEsohrf+d74YUF5TordMFuq\nBO+KcR4NCoqi7Vopg2KHQx8aW2vQSztKZW9rE6RBSE5LoWRCdKVeXi+rw59gKIV2\nhx8THAkug0hg6bkggujlb5YkraQ7Jknim6vxDAN8o+TEQL7bychXIr2+z+scXJP2\nsZzw9bDoh2RTg8KVO7RRQoPeGDzS21gSYrS1jJ6Z+5wINuNYgc0/e6+RPUeSbcIC\n5Yhi8SECgYEA4vTpb2/jS2PIYy95s+cWacv+3YeEye4b//+HpXIb5d+Lf0ufldEa\ntTI6LNDL7udsGnqkOnkroKN4SrLFXWMwdZED7NoBz9xHpGfCN7sajY11TrRnUxVr\ntaJybsG5d6mV2grSHDRMKBPbUipOzVdLYTSvEjoeanmIhosQ4W85s2sCgYEA2GXC\nijmQI4c4+HweLS/HTh68HDNZtcAnwdy8dth/lO7ihA41aKAcyxrfTftD0uSvFtoa\n5kDb7crorJnUWJB18amjx3uLUkpb6RRI3jTOLw3xY1ad8NZwTJ4/ILU+4Hw3kYsX\nlQfO2S+RHa5Xo3kVNUAz+hzQJLMzWDUjjOv+dvUCgYEAkhvXeE1Qx8UaSXhT4lSf\n4kZY8qb+/rzSu9D2s7UtbqSmerHlsB5pEkOeniFhWJEV0EoqFhbR1l3G4FgMpV1o\n4hcUrtN+nSGT4ayGpThIFN7/qUaMyjkdGVbWUqVW0EmV1kRnFY85hAech14DU0Ci\nn5a6KoLN9//7u5olqOvg+rcCgYANqqeVqTsEM2cSsmwJeIoC0ggZU9jnlKIuKS2x\n58xu8INXybnvyKTo4uKVfzfyWsUAEXg/cHszUmxNck2p5j28rHUOhSvwX4fceY58\nkiMvb5b+KhtBeZmQDTJ5c1jsPowX4gv0OpECwHFOyZL5XQ1M1qgxtJ4kozir6nc7\nUDA6/QKBgFPQYxVKDoVo+CGkLsOzt3lFOjil44G9eoR7ZX82QYvRjoq5EeSBsgJh\noCU8EeSj1Ota/jLi7LZsnIKXkJsYmRbO/jMDhtzjb1793tigjZfet9g7+Hr/IrxP\nZpWAG/Bb7YHfEwgYk9q5+tJOTvV16X9hxtzYxSFfj7bnUlVV1RwT\n-----END RSA PRIVATE KEY-----\n",
            "ready_for_renewal": false,
            "set_authority_key_id": false,
            "set_subject_key_id": false,
            "subject": [
              {
                "common_name": "wg.qa.vpn.ca",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null,
            "validity_end_time": "2034-11-11T17:48:11.191645-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T17:48:11.191645-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca"
          ]
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "module.eks.module.self_managed_node_group.var.platform",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.eks.module.eks_managed_node_group[\"one\"].module.user_data.null_resource.validate_cluster_service_cidr",
          "status": "pass"
        }
      ]
    }
  ]
}

{
  "version": 4,
  "terraform_version": "1.9.8",
  "serial": 1074,
  "lineage": "270121ad-3470-3ca4-80c4-92d2c237161c",
  "outputs": {
    "cluster_endpoint": {
      "value": "https://18506C69A004516C88A4B6DB7F46404F.yl4.us-east-2.eks.amazonaws.com",
      "type": "string"
    },
    "cluster_name": {
      "value": "eks-OBiQM5Gh",
      "type": "string"
    },
    "cluster_security_group_id": {
      "value": "sg-01d7f49649edea1b1",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "us-east-2"
            ],
            "id": "us-east-2",
            "names": [
              "us-east-2a",
              "us-east-2b",
              "us-east-2c"
            ],
            "state": null,
            "timeouts": null,
            "zone_ids": [
              "use2-az1",
              "use2-az2",
              "use2-az3"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "eks",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-OBiQM5Gh",
            "name": "eks-OBiQM5Gh",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBMjNXSFVNVEVPNVc2SVlYSSUyRjIwMjQxMjE3JTJGdXMtZWFzdC0yJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDEyMTdUMTc0OTIyWiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT1jNjExM2QxM2IwZmQ5ZmJiZTY1MDQzYmJjY2IxNDkwOWM3NWFjMmEyZDA1N2NjZWFkMzE4MWNmY2ZkNTU2OTZi"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_sqs_queue",
      "name": "queue_notifications",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sqs:us-east-2:746669237448:paystreme-notifications-stg",
            "content_based_deduplication": false,
            "deduplication_scope": "",
            "delay_seconds": 0,
            "fifo_queue": false,
            "fifo_throughput_limit": "",
            "id": "https://sqs.us-east-2.amazonaws.com/746669237448/paystreme-notifications-stg",
            "kms_data_key_reuse_period_seconds": 300,
            "kms_master_key_id": "",
            "max_message_size": 262144,
            "message_retention_seconds": 60,
            "name": "paystreme-notifications-stg",
            "name_prefix": "",
            "policy": "",
            "receive_wait_time_seconds": 0,
            "redrive_allow_policy": "",
            "redrive_policy": "",
            "sqs_managed_sse_enabled": true,
            "tags": {},
            "tags_all": {},
            "url": "https://sqs.us-east-2.amazonaws.com/746669237448/paystreme-notifications-stg",
            "visibility_timeout_seconds": 30
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "vpn",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:subnet/subnet-0e205e053d4b1c155",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.8.0/22",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0e205e053d4b1c155",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "746669237448",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "VPN subnet for client connections"
            },
            "tags_all": {
              "Name": "VPN subnet for client connections"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "resources_name",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": "0",
          "schema_version": 0,
          "attributes": {
            "id": "stg",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "stg",
                "resource_version": "5903",
                "uid": "8273c379-fefc-4c3b-b99f-3b20bf7cc885"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service_v1",
      "name": "traefik-dashboard",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "traefik/traefik-dashboard",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "traefik-dashboard",
                "namespace": "traefik",
                "resource_version": "32891",
                "uid": "ebda0138-082e-41f1-bfb8-9a1820fe997d"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.209.29",
                "cluster_ips": [
                  "172.20.209.29"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 9000,
                    "protocol": "TCP",
                    "target_port": "9000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/name": "traefik"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "suffix",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "OBiQM5Gh",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "OBiQM5Gh",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.cognito",
      "mode": "managed",
      "type": "aws_cognito_user_pool",
      "name": "user_pool",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_recovery_setting": [
              {
                "recovery_mechanism": [
                  {
                    "name": "verified_email",
                    "priority": 1
                  },
                  {
                    "name": "verified_phone_number",
                    "priority": 2
                  }
                ]
              }
            ],
            "admin_create_user_config": [
              {
                "allow_admin_create_user_only": false,
                "invite_message_template": []
              }
            ],
            "alias_attributes": null,
            "arn": "arn:aws:cognito-idp:us-east-2:746669237448:userpool/us-east-2_upWX6LTtU",
            "auto_verified_attributes": [],
            "creation_date": "2024-09-20T20:54:45Z",
            "custom_domain": "",
            "deletion_protection": "ACTIVE",
            "device_configuration": [],
            "domain": "",
            "email_configuration": [
              {
                "configuration_set": "",
                "email_sending_account": "DEVELOPER",
                "from_email_address": "no-reply@walletguru.co",
                "reply_to_email_address": "",
                "source_arn": "arn:aws:ses:us-east-2:746669237448:identity/walletguru.co"
              }
            ],
            "email_verification_message": "\u003c!DOCTYPE html\u003e  \u003chtml lang='en'\u003e  \u003chead\u003e  \u003cmeta charset='UTF-8'\u003e  \u003cmeta name='viewport' content='width=device-width, initial-scale=1.0'\u003e  \u003ctitle\u003e\u003c/title\u003e  \u003cstyle\u003e        body {            font-family: Arial, sans-serif;            background-color: #f4f4f4;            margin: 0;            padding: 0;        }        .email-container {            margin: 0 auto;            background-color: #ffffff;            padding: 20px;        }        .header {            display: flex;            justify-content: center; /* Center content horizontally */            align-items: center; /* Center content vertically */            padding-bottom: 20px;        }        .header img {          width: 50px;          height: 50px;          margin-right: 10px;        }        .content {            padding: 20px;            text-align: left;        }        .content h1 {            color: #000000;        }        .content p {            color: #333333;            font-size: 16px;            line-height: 1.5;        }        .activation-code {            font-weight: bold;            color: #000000;        }        .footer {            text-align: left;            color: #999999;            font-size: 12px;            padding-top: 20px;            padding-left: 20px;        }  \u003c/style\u003e  \u003c/head\u003e  \u003cbody\u003e  \u003cdiv class='email-container'\u003e  \u003cdiv class='header'\u003e  \u003cimg src='  https://walletguru-dev.s3.us-east-2.amazonaws.com/logo.png'  alt='Wallet Guru Logo'\u003e  \u003ch2\u003eWallet guru\u003c/h2\u003e  \u003c/div\u003e  \u003cdiv class='content'\u003e  \u003ch1\u003eHi,\u003c/h1\u003e  \u003cp\u003eWe received a request to update the password for your account.\u003c/p\u003e  \u003cp\u003eTo proceed, please use the following verification code (OTP): \u003cspan class='activation-code'\u003e{####}\u003c/span\u003e\u003c/p\u003e  \u003cbr\u003e  \u003cp\u003eThis OTP is valid for the next 05:00 minutes.\u003c/p\u003e  \u003c/div\u003e  \u003cdiv class='footer'\u003e  \u003cp\u003eIf you did not request this update, please disregard this email.\u003c/p\u003e  \u003cp\u003eIf you need further assistance, don't hesitate to contact us.\u003c/p\u003e  \u003cp\u003eBest regards, \u003cbr\u003e Wallet Guru Support Team\u003c/p\u003e  \u003c/div\u003e  \u003c/div\u003e  \u003c/body\u003e  \u003c/html\u003e",
            "email_verification_subject": "Verification Code to Update Your Password",
            "endpoint": "cognito-idp.us-east-2.amazonaws.com/us-east-2_upWX6LTtU",
            "estimated_number_of_users": 1,
            "id": "us-east-2_upWX6LTtU",
            "lambda_config": [],
            "last_modified_date": "2024-09-23T14:30:29Z",
            "mfa_configuration": "OFF",
            "name": "user-auth",
            "password_policy": [
              {
                "minimum_length": 8,
                "require_lowercase": true,
                "require_numbers": true,
                "require_symbols": true,
                "require_uppercase": true,
                "temporary_password_validity_days": 7
              }
            ],
            "schema": [
              {
                "attribute_data_type": "String",
                "developer_only_attribute": false,
                "mutable": true,
                "name": "email",
                "number_attribute_constraints": [],
                "required": true,
                "string_attribute_constraints": [
                  {
                    "max_length": "256",
                    "min_length": "1"
                  }
                ]
              },
              {
                "attribute_data_type": "String",
                "developer_only_attribute": false,
                "mutable": true,
                "name": "name",
                "number_attribute_constraints": [],
                "required": true,
                "string_attribute_constraints": [
                  {
                    "max_length": "256",
                    "min_length": "1"
                  }
                ]
              }
            ],
            "sms_authentication_message": "",
            "sms_configuration": [],
            "sms_verification_message": "",
            "software_token_mfa_configuration": [],
            "tags": {},
            "tags_all": {},
            "user_attribute_update_settings": [],
            "user_pool_add_ons": [],
            "username_attributes": [
              "email"
            ],
            "username_configuration": [],
            "verification_message_template": [
              {
                "default_email_option": "CONFIRM_WITH_CODE",
                "email_message": "\u003c!DOCTYPE html\u003e  \u003chtml lang='en'\u003e  \u003chead\u003e  \u003cmeta charset='UTF-8'\u003e  \u003cmeta name='viewport' content='width=device-width, initial-scale=1.0'\u003e  \u003ctitle\u003e\u003c/title\u003e  \u003cstyle\u003e        body {            font-family: Arial, sans-serif;            background-color: #f4f4f4;            margin: 0;            padding: 0;        }        .email-container {            margin: 0 auto;            background-color: #ffffff;            padding: 20px;        }        .header {            display: flex;            justify-content: center; /* Center content horizontally */            align-items: center; /* Center content vertically */            padding-bottom: 20px;        }        .header img {          width: 50px;          height: 50px;          margin-right: 10px;        }        .content {            padding: 20px;            text-align: left;        }        .content h1 {            color: #000000;        }        .content p {            color: #333333;            font-size: 16px;            line-height: 1.5;        }        .activation-code {            font-weight: bold;            color: #000000;        }        .footer {            text-align: left;            color: #999999;            font-size: 12px;            padding-top: 20px;            padding-left: 20px;        }  \u003c/style\u003e  \u003c/head\u003e  \u003cbody\u003e  \u003cdiv class='email-container'\u003e  \u003cdiv class='header'\u003e  \u003cimg src='  https://walletguru-dev.s3.us-east-2.amazonaws.com/logo.png'  alt='Wallet Guru Logo'\u003e  \u003ch2\u003eWallet guru\u003c/h2\u003e  \u003c/div\u003e  \u003cdiv class='content'\u003e  \u003ch1\u003eHi,\u003c/h1\u003e  \u003cp\u003eWe received a request to update the password for your account.\u003c/p\u003e  \u003cp\u003eTo proceed, please use the following verification code (OTP): \u003cspan class='activation-code'\u003e{####}\u003c/span\u003e\u003c/p\u003e  \u003cbr\u003e  \u003cp\u003eThis OTP is valid for the next 05:00 minutes.\u003c/p\u003e  \u003c/div\u003e  \u003cdiv class='footer'\u003e  \u003cp\u003eIf you did not request this update, please disregard this email.\u003c/p\u003e  \u003cp\u003eIf you need further assistance, don't hesitate to contact us.\u003c/p\u003e  \u003cp\u003eBest regards, \u003cbr\u003e Wallet Guru Support Team\u003c/p\u003e  \u003c/div\u003e  \u003c/div\u003e  \u003c/body\u003e  \u003c/html\u003e",
                "email_message_by_link": "",
                "email_subject": "Verification Code to Update Your Password",
                "email_subject_by_link": "",
                "sms_message": ""
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.cognito",
      "mode": "managed",
      "type": "aws_cognito_user_pool_client",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_token_validity": 120,
            "allowed_oauth_flows": [],
            "allowed_oauth_flows_user_pool_client": false,
            "allowed_oauth_scopes": [],
            "analytics_configuration": [],
            "auth_session_validity": 3,
            "callback_urls": [],
            "client_secret": "1ckmruqngm4fh7v1c428okvtjipl0ptlm1npc4pg5uu9utc4lm9p",
            "default_redirect_uri": "",
            "enable_propagate_additional_user_context_data": false,
            "enable_token_revocation": true,
            "explicit_auth_flows": [
              "ALLOW_ADMIN_USER_PASSWORD_AUTH",
              "ALLOW_CUSTOM_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH",
              "ALLOW_USER_PASSWORD_AUTH",
              "ALLOW_USER_SRP_AUTH"
            ],
            "generate_secret": true,
            "id": "31bvj0jvbpgctprvacnb7fio1u",
            "id_token_validity": 60,
            "logout_urls": [],
            "name": "cognito-client",
            "prevent_user_existence_errors": "ENABLED",
            "read_attributes": [],
            "refresh_token_validity": 30,
            "supported_identity_providers": [],
            "token_validity_units": [
              {
                "access_token": "minutes",
                "id_token": "minutes",
                "refresh_token": "days"
              }
            ],
            "user_pool_id": "us-east-2_upWX6LTtU",
            "write_attributes": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_secret"
              }
            ]
          ],
          "dependencies": [
            "module.cognito.aws_cognito_user_pool.user_pool"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Attempts-AlarmHigh-12d59d52-1df6-4fb3-b07e-901b53cca848",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Attempts-AlarmLow-80dd3042-46a3-4c6f-81c1-0348c21e784d",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Attempts-ProvisionedCapacityHigh-31203bd3-75d6-47ad-8a1f-16c52750f9ad",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Attempts-ProvisionedCapacityLow-c067ea2c-0fe3-466c-90fd-c76e7dcd5f79"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:44a91f7f-aae8-48e7-a7b7-ee761022bc82:resource/dynamodb/table/Attempts:policyName/DynamoDBReadCapacityUtilization:table/Attempts",
            "id": "DynamoDBReadCapacityUtilization:table/Attempts",
            "name": "DynamoDBReadCapacityUtilization:table/Attempts",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Attempts",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Attempts-AlarmHigh-4f967063-97e1-43ca-883e-b70912958ccc",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Attempts-AlarmLow-24826d9a-de0d-4c56-8425-df461d384d6b",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Attempts-ProvisionedCapacityHigh-b0c8b21b-516a-4c6d-a9e3-b16329ea96cd",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Attempts-ProvisionedCapacityLow-93452e93-17e0-4576-b3c6-653eb14b0daf"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:ea2550ba-cc80-43c5-a130-cf76ef306b97:resource/dynamodb/table/Attempts:policyName/DynamoDBWriteCapacityUtilization:table/Attempts",
            "id": "DynamoDBWriteCapacityUtilization:table/Attempts",
            "name": "DynamoDBWriteCapacityUtilization:table/Attempts",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Attempts",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2644a91f7faae848e7a7b7ee761022bc82",
            "id": "table/Attempts",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Attempts",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26ea2550bacc8043c5a130cf76ef306b97",
            "id": "table/Attempts",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Attempts",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Attempts\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Attempts",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Attempts",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Attempts",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "Attempts"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "Attempts"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments-AlarmHigh-0902ecf9-bdce-4a6e-a481-248a6c6c79f6",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments-AlarmLow-f9826928-a85b-48de-b36a-c31290462877",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityHigh-d67ca064-7868-4c58-a7eb-0daa580e7b2f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityLow-7959bfa8-79d4-4122-a6a4-1c6f9756884b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:0c250413-b77e-4068-a669-f43b9f7ed0c8:resource/dynamodb/table/ClearPayments:policyName/DynamoDBReadCapacityUtilization:table/ClearPayments",
            "id": "DynamoDBReadCapacityUtilization:table/ClearPayments",
            "name": "DynamoDBReadCapacityUtilization:table/ClearPayments",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmHigh-82d3ba55-4e10-4f71-a00d-feb98515600f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmLow-36719296-6ecd-4551-8f11-f0101a922d28",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-32ef50dc-a0ab-4d66-b1d7-8b2ec5592c94",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityLow-470fc330-fcad-4c44-af5b-3ad3626a0491"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:337a9b9f-f32d-4da1-9ca0-f2805243df33:resource/dynamodb/table/ClearPayments/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments-AlarmHigh-74bf152a-4881-4e94-9ae1-bbac14f09a97",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments-AlarmLow-3ff0f8a6-f0a5-443d-bf2c-265ed795f306",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityHigh-f5b7d804-6cf7-4d71-ae9b-4af0aee28477",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments-ProvisionedCapacityLow-ebbeadd0-781f-4ece-8f6a-36ea64586c66"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:1c71db0b-5924-4299-8aa0-764ce8e01690:resource/dynamodb/table/ClearPayments:policyName/DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "id": "DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "name": "DynamoDBWriteCapacityUtilization:table/ClearPayments",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmHigh-8a7df292-da9b-4d48-a1b7-cdc1bd5f00aa",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-AlarmLow-7ca2cf32-52bb-4c1c-ac0e-f7760bf73754",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-aed6905e-b328-4b32-8837-b41e50ab0af0",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/ClearPayments/index/ServiceProviderIdIndex-ProvisionedCapacityLow-1a6a7198-4cea-4f81-ba16-9c9de2968a48"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:164cb65d-ac9e-42b9-a61e-2fe2b9d51606:resource/dynamodb/table/ClearPayments/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/ClearPayments/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d260c250413b77e4068a669f43b9f7ed0c8",
            "id": "table/ClearPayments",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26337a9b9ff32d4da19ca0f2805243df33",
            "id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d261c71db0b592442998aa0764ce8e01690",
            "id": "table/ClearPayments",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26164cb65dac9e42b9a61e2fe2b9d51606",
            "id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/ClearPayments/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"ClearPayments\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/ClearPayments",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "ClearPayments",
            "import_table": [],
            "local_secondary_index": [],
            "name": "ClearPayments",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "ClearPayments"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "ClearPayments"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations-AlarmHigh-68a031bc-bc32-4bc6-b14b-f234a8a73505",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations-AlarmLow-1c926fb8-b3d8-4851-884b-ace4eefa699c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityHigh-497c6ecb-f54a-4cab-b5f2-e1c77df5a54b",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityLow-d393aab3-5b42-4a3c-8abe-a305d3ebd890"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:6c6ef376-f66e-4102-83e2-ce8f75168108:resource/dynamodb/table/FeeConfigurations:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmHigh-4a677f18-defe-4c97-b017-4989c62d3779",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmLow-c5b528dc-e0b8-420d-aec7-1fba66f803d3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityHigh-48ee6e5d-c945-42f0-8aca-2318020d4732",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityLow-b855ef0d-1cbe-4296-9aab-33d81d440b66"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:6ad90c29-ae94-4820-8440-d07eb34ddf2e:resource/dynamodb/table/FeeConfigurations/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmHigh-588d246d-0a25-49e1-adca-4385e400c29c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmLow-cd44e0f2-e479-4baa-81b2-956127c3d37e",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-0f5e1aaa-0cbe-48d4-8821-a4dd6c9a28a1",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityLow-fe5a97c7-ad29-4032-a547-6ac6d36a084b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:66b70626-aee4-4a6d-b139-3912a56b7004:resource/dynamodb/table/FeeConfigurations/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations-AlarmHigh-d7b56cb5-30d5-4642-bf58-f1938fe839a2",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations-AlarmLow-31feca50-c107-41b7-a491-010b76b1793d",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityHigh-c0d8aecb-306e-464e-b828-efe7386b313b",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations-ProvisionedCapacityLow-51ce2635-eda6-4498-8140-f2f23bcd8a23"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:f218a3a7-7c03-4737-8128-4ebb19eff339:resource/dynamodb/table/FeeConfigurations:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmHigh-5e6c7a23-e31a-489d-8b57-a195d67d9c95",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-AlarmLow-d15e273a-a50d-492f-a6f9-1bb43f741da1",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityHigh-510177d2-e514-4a13-98f4-ff13e72b520f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/IdIndex-ProvisionedCapacityLow-6fe47f64-3aaa-4972-afcc-2699355038fb"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:3e75802b-a406-4c74-9c78-831e3d54c352:resource/dynamodb/table/FeeConfigurations/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmHigh-39ae31cd-bbdb-41f2-83d4-8f3728e68895",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-AlarmLow-fb79a9ea-a025-45df-98fb-2c0846d36873",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-dc9ca2d2-3dcc-49e8-93a3-f44dc70ecd30",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/FeeConfigurations/index/ServiceProviderIdIndex-ProvisionedCapacityLow-67f55d25-b558-4701-9535-abfe99bf92b8"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:8a755d7e-ab83-4ec1-b5cd-f40507a8451c:resource/dynamodb/table/FeeConfigurations/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/FeeConfigurations/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d266c6ef376f66e410283e2ce8f75168108",
            "id": "table/FeeConfigurations",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d266ad90c29ae9448208440d07eb34ddf2e",
            "id": "table/FeeConfigurations/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2666b70626aee44a6db1393912a56b7004",
            "id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26f218a3a77c03473781284ebb19eff339",
            "id": "table/FeeConfigurations",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d263e75802ba4064c749c78831e3d54c352",
            "id": "table/FeeConfigurations/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d268a755d7eab834ec1b5cdf40507a8451c",
            "id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/FeeConfigurations/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"FeeConfigurations\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/FeeConfigurations",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "FeeConfigurations",
            "import_table": [],
            "local_secondary_index": [],
            "name": "FeeConfigurations",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "FeeConfigurations"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "FeeConfigurations"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules-AlarmHigh-afc7262b-b2a2-47bb-a6d5-52bdb66c86a9",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules-AlarmLow-1324262d-69e7-4629-bb2e-3611e7970b41",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules-ProvisionedCapacityHigh-cc682a37-4344-4593-9588-e5d5515a3019",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules-ProvisionedCapacityLow-1b0e7918-a168-4556-82e5-6b856dffdc59"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:15de829c-8a47-437c-9345-10e20f71abb4:resource/dynamodb/table/Modules:policyName/DynamoDBReadCapacityUtilization:table/Modules",
            "id": "DynamoDBReadCapacityUtilization:table/Modules",
            "name": "DynamoDBReadCapacityUtilization:table/Modules",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmHigh-3edd71cf-eaf8-4e28-9901-7b3618a4167c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmLow-6b29ad32-c73f-4cfd-86b3-de540cf3d260",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityHigh-12471178-fefd-4131-a290-23443c9bc81f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityLow-ef781cd5-f11a-4a41-aeba-463a9872a90c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:350dfef5-6353-4625-8a27-308eb1153a9e:resource/dynamodb/table/Modules/index/BelongsIndex:policyName/DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Modules/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules-AlarmHigh-7c9f3d41-b7bb-44bf-9d0b-fb0eea670140",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules-AlarmLow-430ded63-2816-4382-baf6-caf34527d625",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules-ProvisionedCapacityHigh-0a4f6132-ee03-4e23-ba90-0c6012c916c8",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules-ProvisionedCapacityLow-845751e6-1374-45bf-9bab-b08fffa688bd"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:c794619b-a0ec-4321-a41b-f2cc3d4b8b4e:resource/dynamodb/table/Modules:policyName/DynamoDBWriteCapacityUtilization:table/Modules",
            "id": "DynamoDBWriteCapacityUtilization:table/Modules",
            "name": "DynamoDBWriteCapacityUtilization:table/Modules",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmHigh-5e633181-ca86-442a-83df-b3f429d81f3e",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules/index/BelongsIndex-AlarmLow-24305e40-e144-4cbd-a815-7c18c2eb5816",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityHigh-3951e9c1-3da0-4f78-a518-b27acd07f991",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Modules/index/BelongsIndex-ProvisionedCapacityLow-b9793454-b890-4aa3-8d48-165fa57e19ea"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:d827f9c0-a65c-4a78-b27b-e2a321cbe8a4:resource/dynamodb/table/Modules/index/BelongsIndex:policyName/DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Modules/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Modules/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2615de829c8a47437c934510e20f71abb4",
            "id": "table/Modules",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26350dfef5635346258a27308eb1153a9e",
            "id": "table/Modules/index/BelongsIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Modules/index/BelongsIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26c794619ba0ec4321a41bf2cc3d4b8b4e",
            "id": "table/Modules",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Modules",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26d827f9c0a65c4a78b27be2a321cbe8a4",
            "id": "table/Modules/index/BelongsIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Modules/index/BelongsIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Modules\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Modules",
            "attribute": [
              {
                "name": "Belongs",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Belongs",
                "name": "BelongsIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Modules",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Modules",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "Modules"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "Modules"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings-AlarmHigh-5e351176-1aaa-4bc0-93a1-3fffbc78fcad",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings-AlarmLow-d1afce20-9e37-4a92-8263-bb856fe09650",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityHigh-6f9a3bac-d6db-4914-81f8-b8e4d62a27f8",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityLow-97bf3574-194b-446d-a1a7-6e6069e4fea8"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:593acbad-f944-4115-8b77-c76288c7d886:resource/dynamodb/table/NotificationSettings:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmHigh-f7b9f820-e8f2-4ece-82de-e4e7e15d4aae",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmLow-50722edc-21fe-4bb3-94ca-77487e64264f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityHigh-11d4aa82-5655-4ac5-b9c9-69ed7cda3fef",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityLow-a4d57e12-1231-487e-a007-7940d7862a25"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:293cbe60-78f2-4c66-99fd-3c1aeb58dd80:resource/dynamodb/table/NotificationSettings/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmHigh-09f2ca95-958f-4f21-8bfa-5ba655fdbf3d",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmLow-6d0666de-2d04-407d-b6ae-d91dea4dd928",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityHigh-97035132-ce13-4cdb-8f64-93bb09e16de3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityLow-eec619e0-2db6-4a33-b74b-87f0bc9f73d8"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:015115ca-8143-437b-9ba8-36eb4dbf3915:resource/dynamodb/table/NotificationSettings/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings-AlarmHigh-12d3e4bf-4b1b-4bec-b9d5-0eb489afeab5",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings-AlarmLow-28a45c63-11de-4443-bf3c-59dafe857ae9",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityHigh-398c92d7-630f-416e-a287-b8fe907fc31a",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings-ProvisionedCapacityLow-e6567125-705d-4d4c-ba4c-304af26a14e7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:8889dc09-678d-4d52-b545-83ecf257e911:resource/dynamodb/table/NotificationSettings:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmHigh-72bad786-7cb6-41b5-912c-023e6de15717",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-AlarmLow-d5aa231a-dd66-4724-a745-f18a9987e8e0",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityHigh-70d0bb4b-f65d-4f8a-8891-0bccdb2b398c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/IdIndex-ProvisionedCapacityLow-b8dafb3e-f02b-4f28-a0e4-729d87571263"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:b91600e5-2827-4624-862e-c5ae38bb7593:resource/dynamodb/table/NotificationSettings/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmHigh-d53edee6-ee22-4158-82d1-e18602f6feb5",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-AlarmLow-e5a82a43-789d-4068-b41d-37854436738c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityHigh-7258077a-4306-4b43-b112-22eda76ac936",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/NotificationSettings/index/UserIdIndex-ProvisionedCapacityLow-fb0df6ec-2acd-4d99-b7c2-aa2c682a5204"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:671d88fc-230f-45ce-b20a-7d5739d06fcd:resource/dynamodb/table/NotificationSettings/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/NotificationSettings/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26593acbadf94441158b77c76288c7d886",
            "id": "table/NotificationSettings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26293cbe6078f24c6699fd3c1aeb58dd80",
            "id": "table/NotificationSettings/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26015115ca8143437b9ba836eb4dbf3915",
            "id": "table/NotificationSettings/index/UserIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d268889dc09678d4d52b54583ecf257e911",
            "id": "table/NotificationSettings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26b91600e528274624862ec5ae38bb7593",
            "id": "table/NotificationSettings/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26671d88fc230f45ceb20a7d5739d06fcd",
            "id": "table/NotificationSettings/index/UserIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/NotificationSettings/index/UserIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"NotificationSettings\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/NotificationSettings",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "NotificationSettings",
            "import_table": [],
            "local_secondary_index": [],
            "name": "NotificationSettings",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "sth",
              "Name": "NotificationSettings"
            },
            "tags_all": {
              "Environment": "sth",
              "Name": "NotificationSettings"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps-AlarmHigh-929048e8-b9b9-4768-8007-d21a3fdfc286",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps-AlarmLow-49dbb204-9469-434d-a66c-0d866a145f88",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps-ProvisionedCapacityHigh-d65741fa-cdcf-4426-9d3a-874401384838",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps-ProvisionedCapacityLow-29129959-8f4c-46a3-b4f4-24114629fe50"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:761349b7-1a56-4800-8a5c-db4c3d3b9f71:resource/dynamodb/table/Otps:policyName/DynamoDBReadCapacityUtilization:table/Otps",
            "id": "DynamoDBReadCapacityUtilization:table/Otps",
            "name": "DynamoDBReadCapacityUtilization:table/Otps",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmHigh-b69328c8-6e2f-4f5a-bf25-5368a6de616c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmLow-e8e6423c-19a9-45dc-83a5-899907554973",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityHigh-3b5aa438-f07c-4f8c-8086-42fb6a5db720",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityLow-979d343a-f59c-480d-bd54-985956e5ee18"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:901d6db5-1da7-4fb9-84bf-f0025c2219ab:resource/dynamodb/table/Otps/index/EmailIndex:policyName/DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Otps/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmHigh-d8e865be-fee8-4baf-8ba2-fc2ab7442b9c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmLow-478b5577-8e61-40a8-a0d2-10780b16f875",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityHigh-53c3d543-39b1-4334-8b5a-707bee09ccb2",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityLow-708e8c26-979e-42e8-b812-c12b770e2994"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:deabe7fb-bed2-4717-9755-5e55a78aa778:resource/dynamodb/table/Otps/index/OtpIndex:policyName/DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Otps/index/OtpIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/OtpIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps-AlarmHigh-9dfc477f-79f4-4505-b917-d9b9fa6ce2bc",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps-AlarmLow-50d1c9d8-6e5f-449a-85bc-0173241453e6",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps-ProvisionedCapacityHigh-416e4128-f902-47be-85db-d66313d3dc56",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps-ProvisionedCapacityLow-69d2ebc8-37cb-4dfb-8cd4-288a471f28fd"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:a65d343f-de35-41f7-b4f5-5b79b95a9ad7:resource/dynamodb/table/Otps:policyName/DynamoDBWriteCapacityUtilization:table/Otps",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmHigh-cb43dfff-ee49-4f7b-b26d-fbc2be25b541",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/EmailIndex-AlarmLow-85ee37c9-e970-4a8b-8d2d-8c44d86f6dda",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityHigh-9a9a8764-6217-4124-9f04-06ad9a263be8",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/EmailIndex-ProvisionedCapacityLow-38d9b0d7-fbfa-40c7-9fb9-98aa3c0e923e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:edaf5584-b112-421f-812e-ef0d59cdcf04:resource/dynamodb/table/Otps/index/EmailIndex:policyName/DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmHigh-e2aef80b-3de2-4359-adab-ac6f063651f3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/OtpIndex-AlarmLow-32ebb304-a67c-4b59-a899-76da5e248ba6",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityHigh-d659c889-05ff-40c4-8076-86085aa45622",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Otps/index/OtpIndex-ProvisionedCapacityLow-fe3eed22-d9fe-4681-b0a6-4344cf3e1aa3"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:6dc00f30-8238-4188-8031-e6699cc9760d:resource/dynamodb/table/Otps/index/OtpIndex:policyName/DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Otps/index/OtpIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Otps/index/OtpIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26761349b71a5648008a5cdb4c3d3b9f71",
            "id": "table/Otps",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26901d6db51da74fb984bff0025c2219ab",
            "id": "table/Otps/index/EmailIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/EmailIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26deabe7fbbed2471797555e55a78aa778",
            "id": "table/Otps/index/OtpIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/OtpIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26a65d343fde3541f7b4f55b79b95a9ad7",
            "id": "table/Otps",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Otps",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26edaf5584b112421f812eef0d59cdcf04",
            "id": "table/Otps/index/EmailIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/EmailIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d266dc00f30823841888031e6699cc9760d",
            "id": "table/Otps/index/OtpIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Otps/index/OtpIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Otps\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Otps",
            "attribute": [
              {
                "name": "Email",
                "type": "S"
              },
              {
                "name": "Otp",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Email",
                "name": "EmailIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Otp",
                "name": "OtpIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Email",
            "id": "Otps",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Otps",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "Otps"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "Otps"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "Ttl",
                "enabled": true
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters-AlarmHigh-e3bca6b0-c3d0-4442-a9be-782d093bbe5f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters-AlarmLow-57192cb4-4ddb-41aa-9ace-7e7f228ada3b",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityHigh-60cc720f-8304-4640-a5ac-14fcc0ecf965",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityLow-bf8327eb-c2d4-461e-9dd2-aa739b94a770"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:e2fbd69c-c3d9-4d23-8eb4-3df611b60141:resource/dynamodb/table/PaymentParameters:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmHigh-8f13db52-1794-426d-99a1-0a3a1ad997a4",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmLow-7a922ed2-31ac-41fa-9d27-043615595b95",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-c2b9e218-280f-449d-b4a2-dee93de5c84c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityLow-7216aba2-2177-4cae-8a29-f8e5dc2c9a68"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:2cc16343-4183-452f-84d5-14f202c5eaa4:resource/dynamodb/table/PaymentParameters/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmHigh-51a053d6-d153-490b-919f-976f9a0b4ebc",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmLow-5dc4db10-1405-41b4-ae9b-8fc53a8c9343",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityHigh-a935c1b4-27bf-444f-bd79-7e1a23002014",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityLow-fa6f1561-7139-45a6-b63c-d93f5e14bae4"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:d6437209-a62d-4739-978a-311a19b2af19:resource/dynamodb/table/PaymentParameters/index/IntervalIndex:policyName/DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "id": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "name": "DynamoDBReadCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters-AlarmHigh-a66426ea-9db9-4105-a3cf-2e82e2042bcf",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters-AlarmLow-380200b1-405c-42fb-9349-99c4d4d0d987",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityHigh-c4cc5c07-5c67-4586-86a0-74b1de9e81dc",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters-ProvisionedCapacityLow-8f94433f-686f-495a-880a-5b5385e5fcaf"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:4977609c-83a7-4fd1-bcc2-79e3c5e7aca5:resource/dynamodb/table/PaymentParameters:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmHigh-d4cd1a1a-48fb-4ad0-afea-b8d37f3f818b",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-AlarmLow-432e68f8-ad9c-44d4-80f4-fc394147c221",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-0994d7bf-747f-43e4-a54b-d0dce08680f0",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/ServiceProviderIdIndex-ProvisionedCapacityLow-ccf2bece-a7c2-4fa4-be5c-275680ca0c16"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:70c34599-f53c-43c1-8e25-40d4f75695dd:resource/dynamodb/table/PaymentParameters/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmHigh-179137be-76e6-4b0b-9c6b-02fd97035b89",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-AlarmLow-887f7a36-527c-4179-8278-be29700b4c30",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityHigh-f84ae798-1c70-4b39-bc55-7f603ed135c9",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/PaymentParameters/index/IntervalIndex-ProvisionedCapacityLow-85fa3bfc-c8fb-44cd-85bb-54fb51d75521"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:a44892d8-6d5e-4e45-b276-c0d283d019de:resource/dynamodb/table/PaymentParameters/index/IntervalIndex:policyName/DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/PaymentParameters/index/IntervalIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26e2fbd69cc3d94d238eb43df611b60141",
            "id": "table/PaymentParameters",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d262cc163434183452f84d514f202c5eaa4",
            "id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26d6437209a62d4739978a311a19b2af19",
            "id": "table/PaymentParameters/index/IntervalIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d264977609c83a74fd1bcc279e3c5e7aca5",
            "id": "table/PaymentParameters",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2670c34599f53c43c18e2540d4f75695dd",
            "id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26a44892d86d5e4e45b276c0d283d019de",
            "id": "table/PaymentParameters/index/IntervalIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/PaymentParameters/index/IntervalIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"PaymentParameters\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/PaymentParameters",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "Interval",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Interval",
                "name": "IntervalIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "PaymentParameters",
            "import_table": [],
            "local_secondary_index": [],
            "name": "PaymentParameters",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "PaymentParameters"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "PaymentParameters"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Providers-AlarmHigh-9ce11544-3685-42f3-8e6b-2ed1e2e27fa4",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Providers-AlarmLow-b05b3a97-05f4-4592-8c04-b025124a42e3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Providers-ProvisionedCapacityHigh-2f34a573-896d-4c86-85fa-ca6ccb3e5da1",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Providers-ProvisionedCapacityLow-bae7284f-b25f-46c2-b8aa-0b250a854ba4"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:d276440e-0cc2-4e9d-99ae-7d9a5eb22e20:resource/dynamodb/table/Providers:policyName/DynamoDBReadCapacityUtilization:table/Providers",
            "id": "DynamoDBReadCapacityUtilization:table/Providers",
            "name": "DynamoDBReadCapacityUtilization:table/Providers",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Providers",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Providers-AlarmHigh-1a65b250-2963-428d-b981-4a6c3a86bd01",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Providers-AlarmLow-84547df2-f7ca-4881-903b-a5f8037ef38f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Providers-ProvisionedCapacityHigh-829eecf9-76a4-49cd-98f3-1b4123cc71c1",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Providers-ProvisionedCapacityLow-95d6294e-d2c7-47ae-af87-62eed4bd95c7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:49642c47-e1ee-4f55-b76e-0a8c59cb84da:resource/dynamodb/table/Providers:policyName/DynamoDBWriteCapacityUtilization:table/Providers",
            "id": "DynamoDBWriteCapacityUtilization:table/Providers",
            "name": "DynamoDBWriteCapacityUtilization:table/Providers",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Providers",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26d276440e0cc24e9d99ae7d9a5eb22e20",
            "id": "table/Providers",
            "max_capacity": 100,
            "min_capacity": 40,
            "resource_id": "table/Providers",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2649642c47e1ee4f55b76e0a8c59cb84da",
            "id": "table/Providers",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Providers",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Providers\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Providers",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Providers",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Providers",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 40,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "Providers"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "Providers"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Rates-AlarmHigh-968999a0-045e-4113-b82b-8ba96d79ded5",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Rates-AlarmLow-bfdb8bdc-cf69-469b-9346-1d320f494abe",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Rates-ProvisionedCapacityHigh-aff72308-86e4-4ef3-ac85-365e0d12f576",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Rates-ProvisionedCapacityLow-8d2df5b8-12e4-41bb-aa97-6e908146f2c9"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:a09bbe55-096b-4912-9b0b-63de9fa4b274:resource/dynamodb/table/Rates:policyName/DynamoDBReadCapacityUtilization:table/Rates",
            "id": "DynamoDBReadCapacityUtilization:table/Rates",
            "name": "DynamoDBReadCapacityUtilization:table/Rates",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Rates",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Rates-AlarmHigh-d325a313-4810-4d7e-a276-a9049c4140b9",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Rates-AlarmLow-5520af6b-5669-4252-935c-97bef30a864e",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Rates-ProvisionedCapacityHigh-28f1edf4-8c8e-4b9a-845a-d169406fe266",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Rates-ProvisionedCapacityLow-c07c351c-85d1-4c5b-a57a-69c882df9a08"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:f2736e9e-3f58-40f4-9f02-1a3b25a78ae5:resource/dynamodb/table/Rates:policyName/DynamoDBWriteCapacityUtilization:table/Rates",
            "id": "DynamoDBWriteCapacityUtilization:table/Rates",
            "name": "DynamoDBWriteCapacityUtilization:table/Rates",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Rates",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26a09bbe55096b49129b0b63de9fa4b274",
            "id": "table/Rates",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Rates",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26f2736e9e3f5840f49f021a3b25a78ae5",
            "id": "table/Rates",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Rates",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Rates\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Rates",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "Rates",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Rates",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "Rates"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "Rates"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds-AlarmHigh-3ed27021-1e90-4bee-868f-2acb3be83e54",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds-AlarmLow-71fe8c1f-e02d-4df9-9258-8692d2214785",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds-ProvisionedCapacityHigh-2e115a15-00a0-47dc-8e96-e114d46cacf8",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds-ProvisionedCapacityLow-75ca19da-cb6d-42da-9d57-b744e4ea5e3e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:45810141-da0f-4cd3-831f-ba94565a8c29:resource/dynamodb/table/Refunds:policyName/DynamoDBReadCapacityUtilization:table/Refunds",
            "id": "DynamoDBReadCapacityUtilization:table/Refunds",
            "name": "DynamoDBReadCapacityUtilization:table/Refunds",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmHigh-31b94a28-888a-4f24-9dc7-77575604b578",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmLow-0c402602-fa1a-4d98-990a-e6590d25d5a6",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-81efb620-6e23-43d9-847b-bc2fbead16ba",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityLow-45df8122-a4a2-4708-92aa-833a956be9b0"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:f6d08df9-6fc3-411b-ae68-80962594cdc0:resource/dynamodb/table/Refunds/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds-AlarmHigh-04bcfd94-d7d5-4b11-a8ab-66433f27cfd2",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds-AlarmLow-8599834b-f3e3-4987-9055-f40bbb31dff3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds-ProvisionedCapacityHigh-a504d297-ec70-441c-94e1-526d98dc0711",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds-ProvisionedCapacityLow-1e09df3b-1ced-44df-a630-8f9bd027c424"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:7ea31224-ff1d-4a82-97a6-d493748004eb:resource/dynamodb/table/Refunds:policyName/DynamoDBWriteCapacityUtilization:table/Refunds",
            "id": "DynamoDBWriteCapacityUtilization:table/Refunds",
            "name": "DynamoDBWriteCapacityUtilization:table/Refunds",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmHigh-3c3c6b5c-e76d-49e3-9cfd-106c563f8fc7",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-AlarmLow-2e6e8aea-f404-499c-baf6-cc882a439c6a",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-295e8138-2e53-4218-bb62-7521a283edcf",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Refunds/index/ServiceProviderIdIndex-ProvisionedCapacityLow-250fdeea-905a-4ae9-8e6e-279c24451c00"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:dc8d7017-5f01-470b-b233-9ebdb42a6989:resource/dynamodb/table/Refunds/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Refunds/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2645810141da0f4cd3831fba94565a8c29",
            "id": "table/Refunds",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26f6d08df96fc3411bae6880962594cdc0",
            "id": "table/Refunds/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d267ea31224ff1d4a8297a6d493748004eb",
            "id": "table/Refunds",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Refunds",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26dc8d70175f01470bb2339ebdb42a6989",
            "id": "table/Refunds/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Refunds/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Refunds\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Refunds",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Refunds",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Refunds",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "Refunds"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "Refunds"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles-AlarmHigh-3d6c7bee-86cd-4ad7-a89f-a425306190ee",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles-AlarmLow-a32a1a77-3191-4763-a8d7-3423e7290b38",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles-ProvisionedCapacityHigh-98ebc788-6661-42cb-a083-7f66711ada1a",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles-ProvisionedCapacityLow-9a301fae-5d10-48aa-9c6b-fd1cf9e363ae"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:9d148d67-768f-4548-a21c-2a3c9a3dfecf:resource/dynamodb/table/Roles:policyName/DynamoDBReadCapacityUtilization:table/Roles",
            "id": "DynamoDBReadCapacityUtilization:table/Roles",
            "name": "DynamoDBReadCapacityUtilization:table/Roles",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmHigh-2bad8a89-ea01-49ae-8b61-33ef7ce701c6",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmLow-117d3b80-d856-4b28-adb4-5e5ea8b10a7a",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityHigh-84aff813-534f-469b-9036-623eb9e41b3f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityLow-b823a980-7bc4-4cbf-940c-ebfae409533b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:e5019de6-7047-4757-8992-10475e1cd0b1:resource/dynamodb/table/Roles/index/ProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles-AlarmHigh-b492c031-1d81-45a7-86f2-009fc6c49f86",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles-AlarmLow-963b65fe-d59c-47ce-982f-55807a036742",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles-ProvisionedCapacityHigh-a9ee6322-7e17-41e3-9164-1b9eccb3ff15",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles-ProvisionedCapacityLow-93846f9c-7eca-4192-b1ef-b36f1bd2f0e4"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:3b4dc413-c566-49f2-8f23-f295af77be37:resource/dynamodb/table/Roles:policyName/DynamoDBWriteCapacityUtilization:table/Roles",
            "id": "DynamoDBWriteCapacityUtilization:table/Roles",
            "name": "DynamoDBWriteCapacityUtilization:table/Roles",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmHigh-ffee3a3d-4649-41b4-a4aa-dcbba8e0db4a",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-AlarmLow-52bcff67-2983-49d5-b998-2fa9ca4b01a3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityHigh-e924ecfa-2265-4b12-b5a4-462a681cf845",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Roles/index/ProviderIdIndex-ProvisionedCapacityLow-2256310e-9506-4365-ad83-2720123e24a4"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:808c94f9-849d-40af-89b4-da0c15a138f0:resource/dynamodb/table/Roles/index/ProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Roles/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d269d148d67768f4548a21c2a3c9a3dfecf",
            "id": "table/Roles",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26e5019de670474757899210475e1cd0b1",
            "id": "table/Roles/index/ProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d263b4dc413c56649f28f23f295af77be37",
            "id": "table/Roles",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Roles",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26808c94f9849d40af89b4da0c15a138f0",
            "id": "table/Roles/index/ProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Roles/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Roles\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Roles",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ProviderId",
                "name": "ProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Roles",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Roles",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "Roles"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "Roles"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings-AlarmHigh-2828eb6c-8684-4fa6-9b34-728b409865a5",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings-AlarmLow-0a3233e2-eb47-4556-9d71-d5c9864dfc98",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings-ProvisionedCapacityHigh-e0a11652-a50f-4b60-a924-b72ee30e7d88",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings-ProvisionedCapacityLow-a45af71c-d504-4a01-95e2-f0f952b259cf"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:3d3e8dda-b2be-4fe1-9999-3f41aa11a1f4:resource/dynamodb/table/Settings:policyName/DynamoDBReadCapacityUtilization:table/Settings",
            "id": "DynamoDBReadCapacityUtilization:table/Settings",
            "name": "DynamoDBReadCapacityUtilization:table/Settings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmHigh-a467131a-a6c5-4821-961d-c27aa0d84ece",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmLow-e3274eae-04ca-4ddf-ace3-9ae0ab1998a5",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityHigh-8dd44b6c-ea28-441b-9fa7-518c69870df7",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityLow-82718f72-be44-4f26-928b-d0adb4ccffd7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:239d09d6-ffcf-4ae7-9bdd-1130e1588ad7:resource/dynamodb/table/Settings/index/BelongsIndex:policyName/DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Settings/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings-AlarmHigh-95fe1fd4-3f9c-4c68-88f2-07b24a1b4014",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings-AlarmLow-3424a669-bbbd-493a-ab7f-1fa0075b5250",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings-ProvisionedCapacityHigh-65445a16-b05f-4de8-b60c-be959d1989ad",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings-ProvisionedCapacityLow-8c7f429b-8be5-47bb-9244-068c9f5f4c49"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:b3db67f9-21b8-4f1b-b422-2a195cf303b0:resource/dynamodb/table/Settings:policyName/DynamoDBWriteCapacityUtilization:table/Settings",
            "id": "DynamoDBWriteCapacityUtilization:table/Settings",
            "name": "DynamoDBWriteCapacityUtilization:table/Settings",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmHigh-f2957b54-6b7e-4b29-b3aa-b923595681fc",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings/index/BelongsIndex-AlarmLow-cf69de18-805f-435d-a4bd-b0847b7b3b75",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityHigh-623e285f-f3ca-4c60-9aab-9e6090208ed0",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Settings/index/BelongsIndex-ProvisionedCapacityLow-eeeeaa09-dc45-41c5-b13e-7fe1482120e7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:b90cd60b-8e2c-4486-8de6-9baff0833066:resource/dynamodb/table/Settings/index/BelongsIndex:policyName/DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Settings/index/BelongsIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Settings/index/BelongsIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d263d3e8ddab2be4fe199993f41aa11a1f4",
            "id": "table/Settings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26239d09d6ffcf4ae79bdd1130e1588ad7",
            "id": "table/Settings/index/BelongsIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Settings/index/BelongsIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26b3db67f921b84f1bb4222a195cf303b0",
            "id": "table/Settings",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Settings",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26b90cd60b8e2c44868de69baff0833066",
            "id": "table/Settings/index/BelongsIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Settings/index/BelongsIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Settings\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Settings",
            "attribute": [
              {
                "name": "Belongs",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Belongs",
                "name": "BelongsIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Settings",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Settings",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "Settings"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "Settings"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys-AlarmHigh-be7d6aeb-2af3-4f31-8598-d43f4183d368",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys-AlarmLow-8fc1208f-b8b0-4905-b407-d68fb8f72133",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityHigh-5e5003d5-8610-4bef-b619-f45c856022f7",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityLow-423aae1b-1fb7-4dae-974f-ba238926ad42"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:5e126fac-a2fc-4079-9b9d-74141c82bc8e:resource/dynamodb/table/SocketKeys:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmHigh-42e2f739-0bc2-48ae-98a8-385f6fcb3566",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmLow-1b311f13-a3f7-450f-80b6-f834a3a03cef",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityHigh-ceee4ab1-d7fd-433a-a82e-5b840b89c828",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityLow-d5a42f3a-347a-466e-8081-18cc9492f192"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:9194574b-90db-4ef8-b6bf-ae3bc7d752a4:resource/dynamodb/table/SocketKeys/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmHigh-83e971a7-6e35-4be6-8788-9486b96d6e32",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmLow-d3f6184d-dcdb-4bcc-b20d-6ea437efa697",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-cbf5f482-2a46-432a-9d2d-5c2e68c8f8da",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityLow-888c26f7-fe0f-4420-ae8c-5c503c59f504"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:d36a99f3-ec9a-4d79-9bd0-e4295463447d:resource/dynamodb/table/SocketKeys/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmHigh-30ff477b-27f3-4041-a4f3-1574ae1a3671",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmLow-d5846c24-2937-4396-8a09-2d57d8e0a669",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityHigh-5a7e649a-ef36-43e0-a65f-11d941c1fbdc",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityLow-bc6bd81b-efab-40d2-b2af-8edde2bdd141"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:5bf25b14-e92b-4a11-aab6-5ad039faa74a:resource/dynamodb/table/SocketKeys/index/PublicKeyIndex:policyName/DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "id": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "name": "DynamoDBReadCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys-AlarmHigh-6892c9d1-045c-44d9-9397-916beed28dc4",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys-AlarmLow-d12d387f-5a84-4d58-8521-6ba288e6b8e4",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityHigh-ed52ca5b-c7d4-4762-92b5-23ffd6b52032",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys-ProvisionedCapacityLow-ce976be4-ca3f-4026-9d15-04e74663c8c9"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:ae2c4e83-099e-4554-914d-b9bbeaf51c8e:resource/dynamodb/table/SocketKeys:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmHigh-f278dd21-0cc6-411e-b9fb-67f1982a5554",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/IdIndex-AlarmLow-ce4b3771-74f8-46a0-95e2-bf5f01635991",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityHigh-1119482b-ed80-417a-8293-42c41d052b45",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/IdIndex-ProvisionedCapacityLow-600255f0-08cf-484d-911b-9c9dbc32675d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:11afbd9d-1c8c-4383-b480-4d40ba370aad:resource/dynamodb/table/SocketKeys/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmHigh-dee80992-4497-4120-9d31-b3c818d1e086",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-AlarmLow-138ca0ae-c544-4921-9b07-5583df735691",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-7c654ca9-8149-441f-ac2d-1f74c9bf9dcc",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/ServiceProviderIdIndex-ProvisionedCapacityLow-e6031a83-589d-4161-a95c-53d1b74c7e33"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:0b49a268-e044-42af-be50-bc25f3ca3108:resource/dynamodb/table/SocketKeys/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmHigh-7db75910-9953-4135-babc-2dc1ad505bef",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-AlarmLow-c810506a-ad7a-41a1-b235-8bb0b63c6f68",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityHigh-078cefb3-3baf-4882-8c8d-b1c9ed503d27",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/SocketKeys/index/PublicKeyIndex-ProvisionedCapacityLow-c9e3e425-6363-45c1-b710-b74eb75ed23a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:e5c4ad67-32dd-4716-a0d4-7b981b73ccb1:resource/dynamodb/table/SocketKeys/index/PublicKeyIndex:policyName/DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/SocketKeys/index/PublicKeyIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d265e126faca2fc40799b9d74141c82bc8e",
            "id": "table/SocketKeys",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d269194574b90db4ef8b6bfae3bc7d752a4",
            "id": "table/SocketKeys/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26d36a99f3ec9a4d799bd0e4295463447d",
            "id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d265bf25b14e92b4a11aab65ad039faa74a",
            "id": "table/SocketKeys/index/PublicKeyIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26ae2c4e83099e4554914db9bbeaf51c8e",
            "id": "table/SocketKeys",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2611afbd9d1c8c4383b4804d40ba370aad",
            "id": "table/SocketKeys/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d260b49a268e04442afbe50bc25f3ca3108",
            "id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26e5c4ad6732dd4716a0d47b981b73ccb1",
            "id": "table/SocketKeys/index/PublicKeyIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/SocketKeys/index/PublicKeyIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"SocketKeys\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/SocketKeys",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "PublicKey",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "PublicKey",
                "name": "PublicKeyIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "SocketKeys",
            "import_table": [],
            "local_secondary_index": [],
            "name": "SocketKeys",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "SocketKeys"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "SocketKeys"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode-AlarmHigh-cf1e44ad-7894-4a59-a6aa-9c10116ce163",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode-AlarmLow-710f77e4-b036-47ff-a636-ab019670efad",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityHigh-5ce12a46-42aa-4a60-853e-53f1a28ec5b5",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityLow-be166488-4aaf-41a4-814a-3196c20395e0"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:bcda2f67-8b53-4657-8155-31f6d8c10622:resource/dynamodb/table/StatusCode:policyName/DynamoDBReadCapacityUtilization:table/StatusCode",
            "id": "DynamoDBReadCapacityUtilization:table/StatusCode",
            "name": "DynamoDBReadCapacityUtilization:table/StatusCode",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmHigh-18601af1-e4a6-494d-af70-963f590f98ee",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmLow-656aff51-4695-457d-b2eb-2d492f9364d2",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityHigh-ba91edb7-118d-4494-9358-783f97615d1e",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityLow-6bddd701-eec2-47b9-a1c0-926fcda4842e"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:c968595e-1fc7-4388-a669-31eae49b58eb:resource/dynamodb/table/StatusCode/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/StatusCode/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode-AlarmHigh-d2c48f1f-4103-4680-83cc-897c0555921c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode-AlarmLow-b48ab0d9-3e93-4458-b991-a33be2c90049",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityHigh-73cbd9e3-531b-4a4d-a4f5-3f1d0fed67e8",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode-ProvisionedCapacityLow-7e7aaad4-2c3a-41ea-85bf-84ed64a94eb7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:7321a8ed-6112-4cdf-a8f3-14538c725968:resource/dynamodb/table/StatusCode:policyName/DynamoDBWriteCapacityUtilization:table/StatusCode",
            "id": "DynamoDBWriteCapacityUtilization:table/StatusCode",
            "name": "DynamoDBWriteCapacityUtilization:table/StatusCode",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmHigh-d8e7c4de-1447-4033-a297-04916cae0613",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode/index/IdIndex-AlarmLow-1f9cd48b-00ed-4feb-a9d1-c813f829db16",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityHigh-6948a350-56fa-4b1b-8b61-034e33273cf3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/StatusCode/index/IdIndex-ProvisionedCapacityLow-b13b1a35-e80d-4ee9-b920-79b4f214a212"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:c0f4610f-1264-439d-b066-de81914e7d94:resource/dynamodb/table/StatusCode/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/StatusCode/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/StatusCode/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26bcda2f678b534657815531f6d8c10622",
            "id": "table/StatusCode",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26c968595e1fc74388a66931eae49b58eb",
            "id": "table/StatusCode/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/StatusCode/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d267321a8ed61124cdfa8f314538c725968",
            "id": "table/StatusCode",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/StatusCode",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26c0f4610f1264439db066de81914e7d94",
            "id": "table/StatusCode/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/StatusCode/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"StatusCode\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/StatusCode",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "StatusCode",
            "import_table": [],
            "local_secondary_index": [],
            "name": "StatusCode",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "dev",
              "Name": "StatusCode"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "StatusCode"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals-AlarmHigh-6ac9a4ee-fa89-47d3-acba-fecc25eeb127",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals-AlarmLow-7eedcd88-e9f9-4495-919e-583410faf540",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityHigh-dc8be814-2cd7-4bcc-aa1a-d52af64ffd99",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityLow-b62c6a06-cee4-4dbc-aead-756f736148a9"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:d3fe114c-10f7-4795-bee9-6951f47f451a:resource/dynamodb/table/TimeIntervals:policyName/DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "id": "DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "name": "DynamoDBReadCapacityUtilization:table/TimeIntervals",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmHigh-beb0dd87-9eb0-4222-a80b-8fbfdcf2c00c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmLow-2b6f22cf-2e46-4237-9aa5-c5a31fe3630d",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityHigh-d01f84c3-1146-44f9-9f0e-2ff72bce34cf",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityLow-f012c2dc-aaf4-4248-b571-6682dbf7bc58"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:4b58c772-bed5-4fcb-bcb1-17e45fab1c42:resource/dynamodb/table/TimeIntervals/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals-AlarmHigh-00ec5267-2db6-490e-97c1-b97060caa96b",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals-AlarmLow-a8ad01be-3848-4ff7-957b-8060bd83bc07",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityHigh-54e0d56b-b4e0-4f6e-b406-2bbc0ba23e1c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals-ProvisionedCapacityLow-55405b46-b1e8-400d-a86b-984639c8ddb7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:0a3bdb20-2e9c-4d09-96f5-d7c09e82ed57:resource/dynamodb/table/TimeIntervals:policyName/DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "id": "DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "name": "DynamoDBWriteCapacityUtilization:table/TimeIntervals",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmHigh-03801814-cdda-4f06-97fb-764840b2874c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-AlarmLow-3280959c-02b8-4b11-8cdf-ff1a7b398cdb",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityHigh-3362fd0b-c233-4823-b202-c9ce5718c4c9",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/TimeIntervals/index/IdIndex-ProvisionedCapacityLow-fafe15b4-a47b-4cb6-9d7a-5969ceb37e67"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:4892b251-6cfe-4f46-b185-da39f447282e:resource/dynamodb/table/TimeIntervals/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/TimeIntervals/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26d3fe114c10f74795bee96951f47f451a",
            "id": "table/TimeIntervals",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d264b58c772bed54fcbbcb117e45fab1c42",
            "id": "table/TimeIntervals/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d260a3bdb202e9c4d0996f5d7c09e82ed57",
            "id": "table/TimeIntervals",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d264892b2516cfe4f46b185da39f447282e",
            "id": "table/TimeIntervals/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/TimeIntervals/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"TimeIntervals\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/TimeIntervals",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "TimeIntervals",
            "import_table": [],
            "local_secondary_index": [],
            "name": "TimeIntervals",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "qa",
              "Name": "TimeIntervals"
            },
            "tags_all": {
              "Environment": "qa",
              "Name": "TimeIntervals"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions-AlarmHigh-5cc450ae-471e-4b66-a8d9-e2e5c695b1e4",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions-AlarmLow-3d854d24-5687-44c3-ae4d-b33239234110",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions-ProvisionedCapacityHigh-ca606db7-6aaa-40a4-ae7e-017b710d2d5f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions-ProvisionedCapacityLow-bc2587f9-0a50-4ee5-bfde-e48a388f902b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:e787b1db-ef05-4e2e-bf42-bf4558338d42:resource/dynamodb/table/Transactions:policyName/DynamoDBReadCapacityUtilization:table/Transactions",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmHigh-a12962c5-10e9-42c0-96be-9dcff300ec9f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmLow-9b5dae91-f937-4334-b279-85f024d64560",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityHigh-0abc89c8-a988-4a35-8a17-a9d42d835abe",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityLow-5f5563b0-d079-431c-8292-3b8866764e5c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:9b26e48c-c826-446b-8fc6-0982b7a9e9fd:resource/dynamodb/table/Transactions/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmHigh-0c54caee-154e-4ac4-84f1-d39f73c70a38",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmLow-746c763b-19e7-4c50-9372-085b85b634d9",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityHigh-5dd776ba-f20d-4c53-8f1b-78892c22f232",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityLow-d151416a-7a8c-498a-892f-1425eaaf810d"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:d08a89a9-ab90-46c3-8a0e-e9dc88e9e634:resource/dynamodb/table/Transactions/index/OutgoingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmHigh-7d5b7af3-6858-420a-8acc-85498931e28d",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmLow-f9f5c499-a096-4eef-9f87-49f977d15513",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-87d19bd3-9838-4129-9af1-cea709cd4c29",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-993e43cb-5d4e-4597-a145-e88f776640b0"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:ec905820-394a-4d13-a476-32e0ccabfc6f:resource/dynamodb/table/Transactions/index/IncomingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmHigh-942bc0a3-1a21-45a3-956f-a955e11bd175",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmLow-f8e00b44-0015-4613-9794-abf4dc81ccdc",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityHigh-4a11a0c4-b880-4a24-a3a0-fec57d1dc161",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityLow-0f865d51-76ea-40c6-80c0-37b06eac9733"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:a476d44f-1c77-460e-ae52-ec3e45b412cb:resource/dynamodb/table/Transactions/index/WalletAddressIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmHigh-110c7f43-f504-4958-b52c-ff6bcadb32c4",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmLow-33a136c7-81c9-4c71-b1ba-e538fe83fc83",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityHigh-96b44e35-9b66-47fe-8ce7-5cd5a190df38",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityLow-cad3375f-d521-4ca3-bb49-08e1382b3309"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:b6bb18b3-13c0-44cf-ae9e-84a9558fa10e:resource/dynamodb/table/Transactions/index/ReceiverUrlIndex:policyName/DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions-AlarmHigh-d12c3516-dc3e-4088-a262-943690a28d95",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions-AlarmLow-347b40ac-87b4-4cec-bab0-94e1e54d7e50",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions-ProvisionedCapacityHigh-1b052e03-f500-4a21-9e77-fa808777ff19",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions-ProvisionedCapacityLow-75f5bcbd-e157-4553-af17-e2b1ee84f33a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:79c57dc8-ff4e-47cf-b91b-1fdc8368e2e8:resource/dynamodb/table/Transactions:policyName/DynamoDBWriteCapacityUtilization:table/Transactions",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmHigh-c64f2370-9715-4265-8ef0-be7ec6ed1dd5",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IdIndex-AlarmLow-73a3747a-308d-46f6-98df-2e34d7029510",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityHigh-26ec6d77-22d1-4259-917a-77977a224129",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IdIndex-ProvisionedCapacityLow-15874282-ba50-4f78-aca1-e59ba540ee2a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:b0fd1268-4ff3-4ca9-9057-0a801ac1cb26:resource/dynamodb/table/Transactions/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmHigh-994d9bf8-451c-4871-8f6a-85310cbcd2fb",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-AlarmLow-d8c6e8c8-5041-4d5f-ae98-9348aaf216ff",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityHigh-a9ec874e-0a30-4403-8720-e468cedd61ab",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/OutgoingPaymentIdIndex-ProvisionedCapacityLow-97a0f6aa-4cad-4667-842f-f2b1f832f35b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:8eba817b-07ad-440e-a5d1-99bb3bae6234:resource/dynamodb/table/Transactions/index/OutgoingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/OutgoingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmHigh-41bae687-e46f-4c89-822d-51c4e1607a03",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-AlarmLow-b3f5fb04-c079-4c87-a0d4-ebf33ae8427f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-65f1ede3-0df3-4ac4-b22a-c491a876cf29",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-a57fd693-792a-4720-a1c8-8e7277ee17f4"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:1e4107a6-fd23-454c-8ab0-4f947b7f2de0:resource/dynamodb/table/Transactions/index/IncomingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmHigh-9e93c855-e2d1-4fd1-857b-4cf0c8577d7c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-AlarmLow-ced43749-3c79-4b18-9b86-15d63bf70b3a",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityHigh-3a3d01f9-cf18-4113-ac53-33d243281b33",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/WalletAddressIdIndex-ProvisionedCapacityLow-f2821829-89b2-482e-90ed-2fb2bb5291ff"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:801ceefb-1d96-4c98-8668-856e79676904:resource/dynamodb/table/Transactions/index/WalletAddressIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/WalletAddressIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmHigh-97020d1c-d7f1-4009-813c-b81bd0f0c19e",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-AlarmLow-2754a810-1a62-4d46-9d76-941403865407",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityHigh-65cf33cd-351a-4e53-b2d0-329c8e9eadb3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Transactions/index/ReceiverUrlIndex-ProvisionedCapacityLow-9eed98fc-33f5-45ef-96c1-c6816cf822e7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:64c18bed-af03-442e-a020-dfabd20a085e:resource/dynamodb/table/Transactions/index/ReceiverUrlIndex:policyName/DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Transactions/index/ReceiverUrlIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26e787b1dbef054e2ebf42bf4558338d42",
            "id": "table/Transactions",
            "max_capacity": 100,
            "min_capacity": 100,
            "resource_id": "table/Transactions",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d269b26e48cc826446b8fc60982b7a9e9fd",
            "id": "table/Transactions/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 10,
            "resource_id": "table/Transactions/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26d08a89a9ab9046c38a0ee9dc88e9e634",
            "id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "max_capacity": 200,
            "min_capacity": 10,
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26ec905820394a4d13a47632e0ccabfc6f",
            "id": "table/Transactions/index/IncomingPaymentIdIndex",
            "max_capacity": 200,
            "min_capacity": 10,
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26a476d44f1c77460eae52ec3e45b412cb",
            "id": "table/Transactions/index/WalletAddressIdIndex",
            "max_capacity": 200,
            "min_capacity": 50,
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26b6bb18b313c044cfae9e84a9558fa10e",
            "id": "table/Transactions/index/ReceiverUrlIndex",
            "max_capacity": 200,
            "min_capacity": 10,
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2679c57dc8ff4e47cfb91b1fdc8368e2e8",
            "id": "table/Transactions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Transactions",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26b0fd12684ff34ca990570a801ac1cb26",
            "id": "table/Transactions/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d268eba817b07ad440ea5d199bb3bae6234",
            "id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/OutgoingPaymentIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d261e4107a6fd23454c8ab04f947b7f2de0",
            "id": "table/Transactions/index/IncomingPaymentIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26801ceefb1d964c988668856e79676904",
            "id": "table/Transactions/index/WalletAddressIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/WalletAddressIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2664c18bedaf03442ea020dfabd20a085e",
            "id": "table/Transactions/index/ReceiverUrlIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Transactions/index/ReceiverUrlIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Transactions\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Transactions",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "IncomingPaymentId",
                "type": "S"
              },
              {
                "name": "OutgoingPaymentId",
                "type": "S"
              },
              {
                "name": "ReceiverUrl",
                "type": "S"
              },
              {
                "name": "WalletAddressId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 10,
                "write_capacity": 5
              },
              {
                "hash_key": "IncomingPaymentId",
                "name": "IncomingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 10,
                "write_capacity": 5
              },
              {
                "hash_key": "OutgoingPaymentId",
                "name": "OutgoingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 10,
                "write_capacity": 5
              },
              {
                "hash_key": "ReceiverUrl",
                "name": "ReceiverUrlIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 10,
                "write_capacity": 5
              },
              {
                "hash_key": "WalletAddressId",
                "name": "WalletAddressIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 50,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Transactions",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Transactions",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 100,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "UserIncoming"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "UserIncoming"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming-AlarmHigh-75175ca2-678a-4370-92b6-f5f5106a889a",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming-AlarmLow-2c250d7b-b081-4851-9545-eed212546d6f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityHigh-0144bdfb-bebd-44f3-b8b3-200795557765",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityLow-8c2f03a5-6c4c-4684-a4eb-7a7bd8aa5539"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:2d89c9cc-c9a3-4a74-a278-a0c4ae7996c3:resource/dynamodb/table/UserIncoming:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmHigh-eb9d1159-edcc-4187-abf9-9112ab7aa6f6",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmLow-c9efff96-0a76-4edd-a0f1-b3a086be3323",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityHigh-23a0558a-e29f-467b-9ff4-944598208f04",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityLow-aee0ef0f-98bb-4607-a902-85f713f9d7d9"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:41862ef9-52ae-4b66-9c57-7ebd5dd5370a:resource/dynamodb/table/UserIncoming/index/IdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmHigh-533d80f4-7111-4bfb-b1ca-41043455c336",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmLow-ecb4c704-6f53-4fb3-9a34-38271559aecb",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityHigh-0d4b1171-f71f-44d7-b604-3fe4047a8c9d",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityLow-02e6d7df-7369-4075-b0c9-b6d20b858fe8"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:e5c95ece-0f3a-4b65-88ab-2312eb4bb848:resource/dynamodb/table/UserIncoming/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmHigh-b0cbb9ff-d950-4134-8591-1fdaa7b8aad6",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmLow-92422e15-0797-43da-8be9-e898e5c5699c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-0a0f2016-2e80-4deb-bf01-5d1cf1efb664",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityLow-a7b6a4f1-a308-4168-baf1-f6b54fa8b648"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:7e1d4d44-91fb-48a5-90be-d4f801d12fc3:resource/dynamodb/table/UserIncoming/index/ServiceProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmHigh-c6ad90fc-5a8b-4ec9-be62-560864645404",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmLow-c8b43617-abb9-4e71-b7f7-ec37bfe7c1f7",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-84942c57-d7b3-4db9-ac5d-796221c1365c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-4ce28d70-92e4-475b-a51a-81fcedd30b08"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:cff7fe3b-83f4-46c5-951a-97d65e54f86d:resource/dynamodb/table/UserIncoming/index/IncomingPaymentIdIndex:policyName/DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming-AlarmHigh-da601605-65a0-443f-81e7-00261dbd9ec6",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming-AlarmLow-c4da34eb-34be-4901-8311-0588d1929a54",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityHigh-fe3f908d-2567-488c-a041-bd61cb9b81ed",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming-ProvisionedCapacityLow-727443a4-943b-494b-97f2-b6cceab36d00"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:f78c60d7-dce9-472a-89c2-8fda62c29269:resource/dynamodb/table/UserIncoming:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmHigh-d429f52f-9a99-4cd4-83b5-9ae93704d83e",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IdIndex-AlarmLow-34400b11-7f3b-47b6-9d83-1de5a1a20026",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityHigh-2e068488-147a-4120-8a73-fc8a6f737736",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IdIndex-ProvisionedCapacityLow-6d15dec3-f6c8-4127-a8d9-8dc68948c6b7"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:878e2b94-214c-45ca-8af5-3e29215738f1:resource/dynamodb/table/UserIncoming/index/IdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmHigh-86eba45f-fe6d-4505-b2c5-ff8151ebb108",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-AlarmLow-2c217de3-fa9f-40c2-9300-ef3327b8d2ac",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityHigh-11ee8496-ca37-43a6-9fca-9c7a24515f12",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/UserIdIndex-ProvisionedCapacityLow-4715f27f-2ff2-4f9d-87fb-597acb10b31a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:34fd4ed5-7eb2-4156-b32c-5d4783eb21e5:resource/dynamodb/table/UserIncoming/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmHigh-a6c73c05-8b5b-4af9-bf3b-a6c51ace6385",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-AlarmLow-dca2339d-2bce-433d-a35f-d7befccaf192",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityHigh-52e92fbe-83ba-45f5-baeb-52646650a164",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/ServiceProviderIdIndex-ProvisionedCapacityLow-02aca00d-8b7d-44c5-9714-8c257c9dd067"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:34012454-baad-4310-a89e-9017e2f673e9:resource/dynamodb/table/UserIncoming/index/ServiceProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/ServiceProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmHigh-0462af97-f655-46fb-a5a2-e923e134ae27",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-AlarmLow-f305306b-9590-4e98-901b-3fbde1c89b6e",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityHigh-ac7ff3af-8d45-4846-86bd-dc5ad7024ea4",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/UserIncoming/index/IncomingPaymentIdIndex-ProvisionedCapacityLow-3ef06a91-6be5-4bf2-bf41-4507edad213c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:d0ffbdcb-2c7d-4582-b019-d1dd164fa965:resource/dynamodb/table/UserIncoming/index/IncomingPaymentIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/UserIncoming/index/IncomingPaymentIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d262d89c9ccc9a34a74a278a0c4ae7996c3",
            "id": "table/UserIncoming",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2641862ef952ae4b669c577ebd5dd5370a",
            "id": "table/UserIncoming/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26e5c95ece0f3a4b6588ab2312eb4bb848",
            "id": "table/UserIncoming/index/UserIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d267e1d4d4491fb48a590bed4f801d12fc3",
            "id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26cff7fe3b83f446c5951a97d65e54f86d",
            "id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26f78c60d7dce9472a89c28fda62c29269",
            "id": "table/UserIncoming",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26878e2b94214c45ca8af53e29215738f1",
            "id": "table/UserIncoming/index/IdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2634fd4ed57eb24156b32c5d4783eb21e5",
            "id": "table/UserIncoming/index/UserIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/UserIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2634012454baad4310a89e9017e2f673e9",
            "id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/ServiceProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26d0ffbdcb2c7d4582b019d1dd164fa965",
            "id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/UserIncoming/index/IncomingPaymentIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"UserIncoming\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/UserIncoming",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "IncomingPaymentId",
                "type": "S"
              },
              {
                "name": "ServiceProviderId",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Id",
                "name": "IdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "IncomingPaymentId",
                "name": "IncomingPaymentIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "ServiceProviderId",
                "name": "ServiceProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "UserIncoming",
            "import_table": [],
            "local_secondary_index": [],
            "name": "UserIncoming",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "UserIncoming"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "UserIncoming"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users-AlarmHigh-b579f825-7d52-43f3-847d-9053bc79908b",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users-AlarmLow-abfd060c-9cd0-481f-a6a7-0a29aa445f41",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users-ProvisionedCapacityHigh-ecbbd16e-b2a7-406c-8381-1323aeb39b7e",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users-ProvisionedCapacityLow-8332cf9c-62a9-4ece-964b-7ce39586d38a"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:26045b87-af28-4f46-bb9d-144ab4e1931e:resource/dynamodb/table/Users:policyName/DynamoDBReadCapacityUtilization:table/Users",
            "id": "DynamoDBReadCapacityUtilization:table/Users",
            "name": "DynamoDBReadCapacityUtilization:table/Users",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmHigh-b116dd87-35cf-42ee-901e-1c12e8461502",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmLow-81cabef9-0b36-4a97-a998-8b717e6f0775",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityHigh-819a514e-a6cb-499c-9503-0ce92876d02e",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityLow-3deee2b2-ede1-4b5d-b427-6183df48259f"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:d578c9ee-9135-48b6-82a5-82480d24420e:resource/dynamodb/table/Users/index/EmailIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmHigh-78344b49-6cc2-4fdc-99c1-e804998a3ffd",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmLow-31a63af1-daa2-4303-b3d5-9b0a50c34f70",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityHigh-90f53fde-ae29-4159-901e-6ef777e7404b",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityLow-b1ee934b-1840-4c03-a76d-4dcb88d67587"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:224178f4-1cb0-479a-9bd0-e7fff7aef74e:resource/dynamodb/table/Users/index/UserTypeIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/UserTypeIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/UserTypeIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmHigh-43841f3e-38d0-4259-b9ed-b566b9629de2",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmLow-7b76be8a-369c-4ab0-bb11-7c14519404eb",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityHigh-691783c9-ac21-4521-898d-e2709e06f331",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityLow-d1285f88-9463-4f34-8da5-4592387053e2"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:03779513-9ddb-4e71-8d3c-96a94f2259da:resource/dynamodb/table/Users/index/PhoneIndex:policyName/DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Users/index/PhoneIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/PhoneIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users-AlarmHigh-71cb8745-9fb9-48e3-a9b1-eecd09c725e9",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users-AlarmLow-15da5a29-71ff-4d19-ac12-52019aef1320",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users-ProvisionedCapacityHigh-f145e171-3787-49af-8cb6-a658c5a61c1e",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users-ProvisionedCapacityLow-670bed42-fc93-4908-80b3-49ad9b796415"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:fdf853c7-1877-4004-a63f-e6bedf4d1a36:resource/dynamodb/table/Users:policyName/DynamoDBWriteCapacityUtilization:table/Users",
            "id": "DynamoDBWriteCapacityUtilization:table/Users",
            "name": "DynamoDBWriteCapacityUtilization:table/Users",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmHigh-94277cb3-1035-4c2f-adb6-fd51ba874b54",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/EmailIndex-AlarmLow-a12843db-afe7-4548-bf76-31645226a3f9",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityHigh-76d04ca0-3636-4ae2-8845-ac13a0337967",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/EmailIndex-ProvisionedCapacityLow-7eb47a34-31bf-4135-a432-3099d0230204"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:6bcf7655-9e15-4581-aa36-2221541bcb9e:resource/dynamodb/table/Users/index/EmailIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/EmailIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/EmailIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmHigh-d26e1da1-fa24-47b5-b2b2-3629842c2a66",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/UserTypeIndex-AlarmLow-90ff2547-2b20-4a41-a2d2-4e9185182a5a",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityHigh-0c481fd9-c87c-4e1c-a419-a8a11a8c8ffe",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/UserTypeIndex-ProvisionedCapacityLow-19f38ce4-f8b0-4c0d-ab77-f36fc9d4eb79"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:229560f9-7b88-4134-a1d0-59d2e09c04fc:resource/dynamodb/table/Users/index/UserTypeIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/UserTypeIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/UserTypeIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmHigh-8f9e4dc5-7db6-441f-8c59-1a6c31f844e2",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/PhoneIndex-AlarmLow-6017fcfc-c0f0-460a-b125-4a8239b37fe9",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityHigh-3134741c-18c7-4f71-9254-d081b1e5d337",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Users/index/PhoneIndex-ProvisionedCapacityLow-8e210ae1-9a9b-4fe7-8050-5a592b67a0cb"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:61e26b11-034d-4bcc-985b-e61cfea876e5:resource/dynamodb/table/Users/index/PhoneIndex:policyName/DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Users/index/PhoneIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Users/index/PhoneIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2626045b87af284f46bb9d144ab4e1931e",
            "id": "table/Users",
            "max_capacity": 100,
            "min_capacity": 40,
            "resource_id": "table/Users",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26d578c9ee913548b682a582480d24420e",
            "id": "table/Users/index/EmailIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Users/index/EmailIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26224178f41cb0479a9bd0e7fff7aef74e",
            "id": "table/Users/index/UserTypeIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Users/index/UserTypeIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26037795139ddb4e718d3c96a94f2259da",
            "id": "table/Users/index/PhoneIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Users/index/PhoneIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26fdf853c718774004a63fe6bedf4d1a36",
            "id": "table/Users",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Users",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d266bcf76559e154581aa362221541bcb9e",
            "id": "table/Users/index/EmailIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Users/index/EmailIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26229560f97b884134a1d059d2e09c04fc",
            "id": "table/Users/index/UserTypeIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Users/index/UserTypeIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d2661e26b11034d4bcc985be61cfea876e5",
            "id": "table/Users/index/PhoneIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Users/index/PhoneIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Users\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Users",
            "attribute": [
              {
                "name": "Email",
                "type": "S"
              },
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "Phone",
                "type": "S"
              },
              {
                "name": "Type",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "Email",
                "name": "EmailIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Phone",
                "name": "PhoneIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "Type",
                "name": "UserTypeIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Users",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Users",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 40,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "Users"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "Users"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets-AlarmHigh-18206d7e-dac0-48dd-aa0a-1daa2e3a63e4",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets-AlarmLow-7f00e287-62a4-4b09-ab13-03c9e37a22de",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets-ProvisionedCapacityHigh-5fa7b534-010f-47ed-b358-308baf414359",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets-ProvisionedCapacityLow-65c79aa3-6ec4-40a6-b80e-bbe89eeb0984"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:141d44fd-3f3f-4adf-91f8-1d2e5827b0e9:resource/dynamodb/table/Wallets:policyName/DynamoDBReadCapacityUtilization:table/Wallets",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmHigh-a7e838e5-4047-4b41-8ad7-0c313cf72336",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmLow-128881e7-0ccd-4161-bba6-1d15f9028ee1",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityHigh-a460b42b-7a16-4556-8788-4d64f35be7c7",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityLow-cef0ceba-56b1-4cdf-ab5a-f26d035d7cbc"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:9590a0a1-d7b6-49d4-b599-2ab45f5d8175:resource/dynamodb/table/Wallets/index/WalletAddressIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmHigh-f2fd4890-288c-4d60-b039-0de2d4de6434",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmLow-258bd1f1-13d6-48ea-b469-dfde8768de53",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityHigh-cdfcd903-42d8-4b66-b5b1-5e1466296679",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityLow-b2f27b94-8c36-408f-a3bf-60aee1daaf4b"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:f0a0fef9-a0e1-4a79-8a51-cc80678e46f0:resource/dynamodb/table/Wallets/index/RafikiIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmHigh-50a417f6-90c1-4ef0-8093-703a9c347219",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmLow-3f18fa70-1a8e-4343-bc4b-4e042f4e0052",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityHigh-926011bb-75ff-4def-b92f-a8aff9a96938",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityLow-0cc50d3f-1e0b-4e23-93ba-4d40c0402bca"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:0d6bebb4-ef47-4ad6-b2d7-cd86b9f7daf0:resource/dynamodb/table/Wallets/index/ProviderIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmHigh-4e8900dc-0e6f-4c27-bc5b-023c696bd40c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmLow-c91fbf40-7418-4e6f-87cd-68ac68b869e1",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityHigh-e3b5fb1e-777c-4b5f-b672-c3a9239c0348",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityLow-2da02bd6-f05a-43b8-9029-629fe7e2e7c6"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:e41c5c10-5483-40be-8398-1a3a801fb820:resource/dynamodb/table/Wallets/index/UserIdIndex:policyName/DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "id": "DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "name": "DynamoDBReadCapacityUtilization:table/Wallets/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets-AlarmHigh-fd089848-cbc7-455a-a1f2-d1b04aeafdd7",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets-AlarmLow-ae671b74-a348-43ee-8c1d-d1053ca37651",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets-ProvisionedCapacityHigh-1d4e5009-928e-4686-bf7e-af47612b658f",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets-ProvisionedCapacityLow-278fa30a-be2a-4c89-8511-af6b7d0d9052"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:b8b99372-efe9-4350-a39e-c3130bd78a12:resource/dynamodb/table/Wallets:policyName/DynamoDBWriteCapacityUtilization:table/Wallets",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmHigh-57d84b8c-17d0-4c72-b110-86dbd1934e02",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-AlarmLow-4c9cf56e-6ce0-4f8f-850e-9935c9eada7b",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityHigh-98e902ef-8672-45a8-a8f0-69f8d4498f5c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/WalletAddressIndex-ProvisionedCapacityLow-629571bb-eb7f-4fe1-be0a-89b891e5c966"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:de1ae352-cbc9-44bd-9052-690255c7e6de:resource/dynamodb/table/Wallets/index/WalletAddressIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/WalletAddressIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmHigh-e876c1cd-c035-4a85-99d0-7a7635ebef68",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-AlarmLow-0cc33690-492c-46e2-91c0-41f409ced1ab",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityHigh-f02495be-97fc-4877-8c34-770d67d351e3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/RafikiIdIndex-ProvisionedCapacityLow-1e1de2d2-38f0-458c-b695-2206f1cd8c23"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:0910dab5-d26b-4405-9c35-f14ca4eb0d0e:resource/dynamodb/table/Wallets/index/RafikiIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/RafikiIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmHigh-85864321-4a44-4481-aa11-01238a3c4b9c",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-AlarmLow-679a37b8-9be4-4850-b236-845935da11b9",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityHigh-6a8b945d-58b0-46bc-ba40-48b25f2e7709",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/ProviderIdIndex-ProvisionedCapacityLow-73542a92-6833-470c-8531-4f6a0b0b04fa"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:480a3a12-e2f3-463a-a54a-47918013e2b4:resource/dynamodb/table/Wallets/index/ProviderIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/ProviderIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmHigh-43a3ea60-61e7-4302-9c9a-84beb1e4f5e3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/UserIdIndex-AlarmLow-ef0c56a4-94f8-45ab-acab-5c7ced97b9f5",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityHigh-6ee9e798-112b-4b7c-b12d-e35da0288ac3",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/Wallets/index/UserIdIndex-ProvisionedCapacityLow-9646e8dc-835c-44bf-b4f3-587e75b9187c"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:767f0d60-9f93-430d-a963-4bdb8ba0b176:resource/dynamodb/table/Wallets/index/UserIdIndex:policyName/DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "id": "DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "name": "DynamoDBWriteCapacityUtilization:table/Wallets/index/UserIdIndex",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/Wallets/index/UserIdIndex",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target_index"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26141d44fd3f3f4adf91f81d2e5827b0e9",
            "id": "table/Wallets",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d269590a0a1d7b649d4b5992ab45f5d8175",
            "id": "table/Wallets/index/WalletAddressIndex",
            "max_capacity": 200,
            "min_capacity": 200,
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26f0a0fef9a0e14a798a51cc80678e46f0",
            "id": "table/Wallets/index/RafikiIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d260d6bebb4ef474ad6b2d7cd86b9f7daf0",
            "id": "table/Wallets/index/ProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26e41c5c10548340be83981a3a801fb820",
            "id": "table/Wallets/index/UserIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/UserIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26b8b99372efe94350a39ec3130bd78a12",
            "id": "table/Wallets",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/Wallets",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target_index",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26de1ae352cbc944bd9052690255c7e6de",
            "id": "table/Wallets/index/WalletAddressIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/WalletAddressIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d260910dab5d26b44059c35f14ca4eb0d0e",
            "id": "table/Wallets/index/RafikiIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/RafikiIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26480a3a12e2f3463aa54a47918013e2b4",
            "id": "table/Wallets/index/ProviderIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/ProviderIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26767f0d609f93430da9634bdb8ba0b176",
            "id": "table/Wallets/index/UserIdIndex",
            "max_capacity": 200,
            "min_capacity": 5,
            "resource_id": "table/Wallets/index/UserIdIndex",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:index:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"Wallets\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/Wallets",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              },
              {
                "name": "ProviderId",
                "type": "S"
              },
              {
                "name": "RafikiId",
                "type": "S"
              },
              {
                "name": "UserId",
                "type": "S"
              },
              {
                "name": "WalletAddress",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [
              {
                "hash_key": "ProviderId",
                "name": "ProviderIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "RafikiId",
                "name": "RafikiIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "UserId",
                "name": "UserIdIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 5,
                "write_capacity": 5
              },
              {
                "hash_key": "WalletAddress",
                "name": "WalletAddressIndex",
                "non_key_attributes": [],
                "projection_type": "ALL",
                "range_key": "",
                "read_capacity": 200,
                "write_capacity": 5
              }
            ],
            "hash_key": "Id",
            "id": "Wallets",
            "import_table": [],
            "local_secondary_index": [],
            "name": "Wallets",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "Wallets"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "Wallets"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/WebSocketActions-AlarmHigh-e24388fb-e6e3-4ddf-8ecb-20dd0df4cd50",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/WebSocketActions-AlarmLow-6f600ce7-5290-4a5d-af53-78bad53afb52",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityHigh-c2cf747a-982a-4084-8ddf-d5e380c99978",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityLow-9592a675-7d01-4024-9b71-f648e1cac0b1"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:c53d129f-e698-4dd5-a4f4-9f548363e23b:resource/dynamodb/table/WebSocketActions:policyName/DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "id": "DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "name": "DynamoDBReadCapacityUtilization:table/WebSocketActions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/WebSocketActions",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBReadCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_read_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "dynamodb_table_write_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alarm_arns": [
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/WebSocketActions-AlarmHigh-a969f62b-68b2-4a19-92fc-413440e8bbff",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/WebSocketActions-AlarmLow-13c4c193-bcbb-47a4-83e0-1884fef2ba2d",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityHigh-0355cad7-ecf1-4032-9813-a755106b09a4",
              "arn:aws:cloudwatch:us-east-2:746669237448:alarm:TargetTracking-table/WebSocketActions-ProvisionedCapacityLow-3d6d4ecc-fb7b-4a31-b677-993db88d6892"
            ],
            "arn": "arn:aws:autoscaling:us-east-2:746669237448:scalingPolicy:cd8f0448-023c-44a7-8918-9d40fc1f9bda:resource/dynamodb/table/WebSocketActions:policyName/DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "id": "DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "name": "DynamoDBWriteCapacityUtilization:table/WebSocketActions",
            "policy_type": "TargetTrackingScaling",
            "resource_id": "table/WebSocketActions",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "step_scaling_policy_configuration": [],
            "target_tracking_scaling_policy_configuration": [
              {
                "customized_metric_specification": [],
                "disable_scale_in": false,
                "predefined_metric_specification": [
                  {
                    "predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                    "resource_label": ""
                  }
                ],
                "scale_in_cooldown": 0,
                "scale_out_cooldown": 0,
                "target_value": 70
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamo_table.aws_appautoscaling_target.dynamodb_table_write_target"
          ]
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_read_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26c53d129fe6984dd5a4f49f548363e23b",
            "id": "table/WebSocketActions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/WebSocketActions",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "dynamodb_table_write_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:application-autoscaling:us-east-2:746669237448:scalable-target/0d26cd8f0448023c44a789189d40fc1f9bda",
            "id": "table/WebSocketActions",
            "max_capacity": 100,
            "min_capacity": 5,
            "resource_id": "table/WebSocketActions",
            "role_arn": "arn:aws:iam::746669237448:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
            "service_namespace": "dynamodb",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.dynamo_table[\"WebSocketActions\"]",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "basic-dynamodb-table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-2:746669237448:table/WebSocketActions",
            "attribute": [
              {
                "name": "Id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": true,
            "global_secondary_index": [],
            "hash_key": "Id",
            "id": "WebSocketActions",
            "import_table": [],
            "local_secondary_index": [],
            "name": "WebSocketActions",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "Environment": "stg",
              "Name": "WebSocketActions"
            },
            "tags_all": {
              "Environment": "stg",
              "Name": "WebSocketActions"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 31
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrole_dev_k8s_ecr_login_renew_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "name": "k8s-ecr-login-renew-role"
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "namespaces"
                    ],
                    "verbs": [
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "resources": [
                      "secrets",
                      "serviceaccounts",
                      "serviceaccounts/token"
                    ],
                    "verbs": [
                      "delete",
                      "create",
                      "patch",
                      "get",
                      "list"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "rules": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string"
                            ]
                          ]
                        }
                      ],
                      [
                        "object",
                        {
                          "apiGroups": [
                            "tuple",
                            [
                              "string"
                            ]
                          ],
                          "resources": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string"
                            ]
                          ],
                          "verbs": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "aggregationRule": {
                  "clusterRoleSelectors": null
                },
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRole",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-role",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "rules": [
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "namespaces"
                    ],
                    "verbs": [
                      "list"
                    ]
                  },
                  {
                    "apiGroups": [
                      ""
                    ],
                    "nonResourceURLs": null,
                    "resourceNames": null,
                    "resources": [
                      "secrets",
                      "serviceaccounts",
                      "serviceaccounts/token"
                    ],
                    "verbs": [
                      "delete",
                      "create",
                      "patch",
                      "get",
                      "list"
                    ]
                  }
                ]
              },
              "type": [
                "object",
                {
                  "aggregationRule": [
                    "object",
                    {
                      "clusterRoleSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "rules": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroups": [
                          "list",
                          "string"
                        ],
                        "nonResourceURLs": [
                          "list",
                          "string"
                        ],
                        "resourceNames": [
                          "list",
                          "string"
                        ],
                        "resources": [
                          "list",
                          "string"
                        ],
                        "verbs": [
                          "list",
                          "string"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "clusterrolebinding_dev_k8s_ecr_login_renew_binding",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "name": "k8s-ecr-login-renew-binding"
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "k8s-ecr-login-renew-role"
                },
                "subjects": [
                  {
                    "kind": "ServiceAccount",
                    "name": "k8s-ecr-login-renew-account",
                    "namespace": "stg"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "tuple",
                    [
                      [
                        "object",
                        {
                          "kind": "string",
                          "name": "string",
                          "namespace": "string"
                        }
                      ]
                    ]
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "rbac.authorization.k8s.io/v1",
                "kind": "ClusterRoleBinding",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-binding",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "roleRef": {
                  "apiGroup": "rbac.authorization.k8s.io",
                  "kind": "ClusterRole",
                  "name": "k8s-ecr-login-renew-role"
                },
                "subjects": [
                  {
                    "apiGroup": null,
                    "kind": "ServiceAccount",
                    "name": "k8s-ecr-login-renew-account",
                    "namespace": "stg"
                  }
                ]
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "roleRef": [
                    "object",
                    {
                      "apiGroup": "string",
                      "kind": "string",
                      "name": "string"
                    }
                  ],
                  "subjects": [
                    "list",
                    [
                      "object",
                      {
                        "apiGroup": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "cronjob_dev_k8s_ecr_login_renew_cron",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "batch/v1",
                "kind": "CronJob",
                "metadata": {
                  "name": "ecr-cred-helper",
                  "namespace": "stg"
                },
                "spec": {
                  "concurrencyPolicy": "Allow",
                  "failedJobsHistoryLimit": 1,
                  "jobTemplate": {
                    "metadata": {
                      "creationTimestamp": null
                    },
                    "spec": {
                      "template": {
                        "metadata": {
                          "creationTimestamp": null
                        },
                        "spec": {
                          "containers": [
                            {
                              "command": [
                                "/bin/sh",
                                "-c",
                                "                    TOKEN=`aws ecr get-login --region $AWS_REGION --registry-ids $ACCOUNT | cut -d' ' -f6`\n                    echo 'ENV variables setup done.'\n                    kubectl delete secret -n $TARGET_NAMESPACE --ignore-not-found $DOCKER_SECRET_NAME\n                    kubectl create secret -n $TARGET_NAMESPACE docker-registry $DOCKER_SECRET_NAME --docker-server=$ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com --docker-username=AWS --docker-password=$TOKEN --docker-email=none\n                    echo \"Secret created by name $DOCKER_SECRET_NAME\"\n                    kubectl patch serviceaccount k8s-ecr-login-renew-account -p '{\"imagePullSecrets\":[{\"name\":\"'$DOCKER_SECRET_NAME'\"}]}' -n $TARGET_NAMESPACE\n                    echo 'All done.'\n"
                              ],
                              "env": [
                                {
                                  "name": "AWS_ACCESS_KEY_ID",
                                  "value": "AKIA23WHUMTEO5W6IYXI"
                                },
                                {
                                  "name": "AWS_SECRET_ACCESS_KEY",
                                  "value": "htHVqHBto8vVfV2Li9YsAA5Fj0uTflRYbOVR7cr6"
                                },
                                {
                                  "name": "AWS_REGION",
                                  "value": "us-east-2"
                                },
                                {
                                  "name": "DOCKER_SECRET_NAME",
                                  "value": "docker-cfg"
                                },
                                {
                                  "name": "TARGET_NAMESPACE",
                                  "value": "stg"
                                },
                                {
                                  "name": "ACCOUNT",
                                  "value": "746669237448"
                                }
                              ],
                              "image": "odaniait/aws-kubectl:latest",
                              "imagePullPolicy": "IfNotPresent",
                              "name": "k8s-ecr-login-renew",
                              "terminationMessagePath": "/dev/termination-log",
                              "terminationMessagePolicy": "File"
                            }
                          ],
                          "restartPolicy": "Never",
                          "serviceAccountName": "k8s-ecr-login-renew-account",
                          "terminationGracePeriodSeconds": 30
                        }
                      }
                    }
                  },
                  "schedule": "0 */6 * * *",
                  "successfulJobsHistoryLimit": 3,
                  "suspend": false
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "concurrencyPolicy": "string",
                      "failedJobsHistoryLimit": "number",
                      "jobTemplate": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "creationTimestamp": "dynamic"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "template": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "creationTimestamp": "dynamic"
                                    }
                                  ],
                                  "spec": [
                                    "object",
                                    {
                                      "containers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "command": [
                                                "tuple",
                                                [
                                                  "string",
                                                  "string",
                                                  "string"
                                                ]
                                              ],
                                              "env": [
                                                "tuple",
                                                [
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ],
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "value": "string"
                                                    }
                                                  ]
                                                ]
                                              ],
                                              "image": "string",
                                              "imagePullPolicy": "string",
                                              "name": "string",
                                              "terminationMessagePath": "string",
                                              "terminationMessagePolicy": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "restartPolicy": "string",
                                      "serviceAccountName": "string",
                                      "terminationGracePeriodSeconds": "number"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "schedule": "string",
                      "successfulJobsHistoryLimit": "number",
                      "suspend": "bool"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "batch/v1",
                "kind": "CronJob",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ecr-cred-helper",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "concurrencyPolicy": "Allow",
                  "failedJobsHistoryLimit": 1,
                  "jobTemplate": {
                    "metadata": {
                      "annotations": null,
                      "creationTimestamp": null,
                      "deletionGracePeriodSeconds": null,
                      "deletionTimestamp": null,
                      "finalizers": null,
                      "generateName": null,
                      "generation": null,
                      "labels": null,
                      "managedFields": null,
                      "name": null,
                      "namespace": null,
                      "ownerReferences": null,
                      "resourceVersion": null,
                      "selfLink": null,
                      "uid": null
                    },
                    "spec": {
                      "activeDeadlineSeconds": null,
                      "backoffLimit": null,
                      "backoffLimitPerIndex": null,
                      "completionMode": null,
                      "completions": null,
                      "managedBy": null,
                      "manualSelector": null,
                      "maxFailedIndexes": null,
                      "parallelism": null,
                      "podFailurePolicy": {
                        "rules": null
                      },
                      "podReplacementPolicy": null,
                      "selector": {
                        "matchExpressions": null,
                        "matchLabels": null
                      },
                      "successPolicy": {
                        "rules": null
                      },
                      "suspend": null,
                      "template": {
                        "metadata": {
                          "annotations": null,
                          "creationTimestamp": null,
                          "deletionGracePeriodSeconds": null,
                          "deletionTimestamp": null,
                          "finalizers": null,
                          "generateName": null,
                          "generation": null,
                          "labels": null,
                          "managedFields": null,
                          "name": null,
                          "namespace": null,
                          "ownerReferences": null,
                          "resourceVersion": null,
                          "selfLink": null,
                          "uid": null
                        },
                        "spec": {
                          "activeDeadlineSeconds": null,
                          "affinity": {
                            "nodeAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": null
                              }
                            },
                            "podAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": null
                            },
                            "podAntiAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": null
                            }
                          },
                          "automountServiceAccountToken": null,
                          "containers": [
                            {
                              "args": null,
                              "command": [
                                "/bin/sh",
                                "-c",
                                "                    TOKEN=`aws ecr get-login --region $AWS_REGION --registry-ids $ACCOUNT | cut -d' ' -f6`\n                    echo 'ENV variables setup done.'\n                    kubectl delete secret -n $TARGET_NAMESPACE --ignore-not-found $DOCKER_SECRET_NAME\n                    kubectl create secret -n $TARGET_NAMESPACE docker-registry $DOCKER_SECRET_NAME --docker-server=$ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com --docker-username=AWS --docker-password=$TOKEN --docker-email=none\n                    echo \"Secret created by name $DOCKER_SECRET_NAME\"\n                    kubectl patch serviceaccount k8s-ecr-login-renew-account -p '{\"imagePullSecrets\":[{\"name\":\"'$DOCKER_SECRET_NAME'\"}]}' -n $TARGET_NAMESPACE\n                    echo 'All done.'\n"
                              ],
                              "env": [
                                {
                                  "name": "AWS_ACCESS_KEY_ID",
                                  "value": "AKIA23WHUMTEO5W6IYXI",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "AWS_SECRET_ACCESS_KEY",
                                  "value": "htHVqHBto8vVfV2Li9YsAA5Fj0uTflRYbOVR7cr6",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "AWS_REGION",
                                  "value": "us-east-2",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "DOCKER_SECRET_NAME",
                                  "value": "docker-cfg",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "TARGET_NAMESPACE",
                                  "value": "stg",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                },
                                {
                                  "name": "ACCOUNT",
                                  "value": "746669237448",
                                  "valueFrom": {
                                    "configMapKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    },
                                    "fieldRef": {
                                      "apiVersion": null,
                                      "fieldPath": null
                                    },
                                    "resourceFieldRef": {
                                      "containerName": null,
                                      "divisor": null,
                                      "resource": null
                                    },
                                    "secretKeyRef": {
                                      "key": null,
                                      "name": null,
                                      "optional": null
                                    }
                                  }
                                }
                              ],
                              "envFrom": null,
                              "image": "odaniait/aws-kubectl:latest",
                              "imagePullPolicy": "IfNotPresent",
                              "lifecycle": {
                                "postStart": {
                                  "exec": {
                                    "command": null
                                  },
                                  "httpGet": {
                                    "host": null,
                                    "httpHeaders": null,
                                    "path": null,
                                    "port": null,
                                    "scheme": null
                                  },
                                  "sleep": {
                                    "seconds": null
                                  },
                                  "tcpSocket": {
                                    "host": null,
                                    "port": null
                                  }
                                },
                                "preStop": {
                                  "exec": {
                                    "command": null
                                  },
                                  "httpGet": {
                                    "host": null,
                                    "httpHeaders": null,
                                    "path": null,
                                    "port": null,
                                    "scheme": null
                                  },
                                  "sleep": {
                                    "seconds": null
                                  },
                                  "tcpSocket": {
                                    "host": null,
                                    "port": null
                                  }
                                }
                              },
                              "livenessProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "name": "k8s-ecr-login-renew",
                              "ports": null,
                              "readinessProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "resizePolicy": null,
                              "resources": {
                                "claims": null,
                                "limits": null,
                                "requests": null
                              },
                              "restartPolicy": null,
                              "securityContext": {
                                "allowPrivilegeEscalation": null,
                                "appArmorProfile": {
                                  "localhostProfile": null,
                                  "type": null
                                },
                                "capabilities": {
                                  "add": null,
                                  "drop": null
                                },
                                "privileged": null,
                                "procMount": null,
                                "readOnlyRootFilesystem": null,
                                "runAsGroup": null,
                                "runAsNonRoot": null,
                                "runAsUser": null,
                                "seLinuxOptions": {
                                  "level": null,
                                  "role": null,
                                  "type": null,
                                  "user": null
                                },
                                "seccompProfile": {
                                  "localhostProfile": null,
                                  "type": null
                                },
                                "windowsOptions": {
                                  "gmsaCredentialSpec": null,
                                  "gmsaCredentialSpecName": null,
                                  "hostProcess": null,
                                  "runAsUserName": null
                                }
                              },
                              "startupProbe": {
                                "exec": {
                                  "command": null
                                },
                                "failureThreshold": null,
                                "grpc": {
                                  "port": null,
                                  "service": null
                                },
                                "httpGet": {
                                  "host": null,
                                  "httpHeaders": null,
                                  "path": null,
                                  "port": null,
                                  "scheme": null
                                },
                                "initialDelaySeconds": null,
                                "periodSeconds": null,
                                "successThreshold": null,
                                "tcpSocket": {
                                  "host": null,
                                  "port": null
                                },
                                "terminationGracePeriodSeconds": null,
                                "timeoutSeconds": null
                              },
                              "stdin": null,
                              "stdinOnce": null,
                              "terminationMessagePath": "/dev/termination-log",
                              "terminationMessagePolicy": "File",
                              "tty": null,
                              "volumeDevices": null,
                              "volumeMounts": null,
                              "workingDir": null
                            }
                          ],
                          "dnsConfig": {
                            "nameservers": null,
                            "options": null,
                            "searches": null
                          },
                          "dnsPolicy": "ClusterFirst",
                          "enableServiceLinks": null,
                          "ephemeralContainers": null,
                          "hostAliases": null,
                          "hostIPC": null,
                          "hostNetwork": null,
                          "hostPID": null,
                          "hostUsers": null,
                          "hostname": null,
                          "imagePullSecrets": null,
                          "initContainers": null,
                          "nodeName": null,
                          "nodeSelector": null,
                          "os": {
                            "name": null
                          },
                          "overhead": null,
                          "preemptionPolicy": null,
                          "priority": null,
                          "priorityClassName": null,
                          "readinessGates": null,
                          "resourceClaims": null,
                          "restartPolicy": "Never",
                          "runtimeClassName": null,
                          "schedulerName": "default-scheduler",
                          "schedulingGates": null,
                          "securityContext": {
                            "appArmorProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "fsGroup": null,
                            "fsGroupChangePolicy": null,
                            "runAsGroup": null,
                            "runAsNonRoot": null,
                            "runAsUser": null,
                            "seLinuxOptions": {
                              "level": null,
                              "role": null,
                              "type": null,
                              "user": null
                            },
                            "seccompProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "supplementalGroups": null,
                            "supplementalGroupsPolicy": null,
                            "sysctls": null,
                            "windowsOptions": {
                              "gmsaCredentialSpec": null,
                              "gmsaCredentialSpecName": null,
                              "hostProcess": null,
                              "runAsUserName": null
                            }
                          },
                          "serviceAccount": "k8s-ecr-login-renew-account",
                          "serviceAccountName": "k8s-ecr-login-renew-account",
                          "setHostnameAsFQDN": null,
                          "shareProcessNamespace": null,
                          "subdomain": null,
                          "terminationGracePeriodSeconds": 30,
                          "tolerations": null,
                          "topologySpreadConstraints": null,
                          "volumes": null
                        }
                      },
                      "ttlSecondsAfterFinished": null
                    }
                  },
                  "schedule": "0 */6 * * *",
                  "startingDeadlineSeconds": null,
                  "successfulJobsHistoryLimit": 3,
                  "suspend": false,
                  "timeZone": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "concurrencyPolicy": "string",
                      "failedJobsHistoryLimit": "number",
                      "jobTemplate": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "creationTimestamp": "string",
                              "deletionGracePeriodSeconds": "number",
                              "deletionTimestamp": "string",
                              "finalizers": [
                                "list",
                                "string"
                              ],
                              "generateName": "string",
                              "generation": "number",
                              "labels": [
                                "map",
                                "string"
                              ],
                              "managedFields": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "apiVersion": "string",
                                      "fieldsType": "string",
                                      "fieldsV1": "dynamic",
                                      "manager": "string",
                                      "operation": "string",
                                      "subresource": "string",
                                      "time": "string"
                                    }
                                  ]
                                ]
                              ],
                              "name": "string",
                              "namespace": "string",
                              "ownerReferences": [
                                "list",
                                [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "blockOwnerDeletion": "bool",
                                    "controller": "bool",
                                    "kind": "string",
                                    "name": "string",
                                    "uid": "string"
                                  }
                                ]
                              ],
                              "resourceVersion": "string",
                              "selfLink": "string",
                              "uid": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "activeDeadlineSeconds": "number",
                              "backoffLimit": "number",
                              "backoffLimitPerIndex": "number",
                              "completionMode": "string",
                              "completions": "number",
                              "managedBy": "string",
                              "manualSelector": "bool",
                              "maxFailedIndexes": "number",
                              "parallelism": "number",
                              "podFailurePolicy": [
                                "object",
                                {
                                  "rules": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "action": "string",
                                        "onExitCodes": [
                                          "object",
                                          {
                                            "containerName": "string",
                                            "operator": "string",
                                            "values": [
                                              "list",
                                              "number"
                                            ]
                                          }
                                        ],
                                        "onPodConditions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "status": "string",
                                              "type": "string"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "podReplacementPolicy": "string",
                              "selector": [
                                "object",
                                {
                                  "matchExpressions": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "key": "string",
                                        "operator": "string",
                                        "values": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ]
                                  ],
                                  "matchLabels": [
                                    "map",
                                    "string"
                                  ]
                                }
                              ],
                              "successPolicy": [
                                "object",
                                {
                                  "rules": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "succeededCount": "number",
                                        "succeededIndexes": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "suspend": "bool",
                              "template": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": [
                                        "map",
                                        "string"
                                      ],
                                      "creationTimestamp": "string",
                                      "deletionGracePeriodSeconds": "number",
                                      "deletionTimestamp": "string",
                                      "finalizers": [
                                        "list",
                                        "string"
                                      ],
                                      "generateName": "string",
                                      "generation": "number",
                                      "labels": [
                                        "map",
                                        "string"
                                      ],
                                      "managedFields": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "apiVersion": "string",
                                              "fieldsType": "string",
                                              "fieldsV1": "dynamic",
                                              "manager": "string",
                                              "operation": "string",
                                              "subresource": "string",
                                              "time": "string"
                                            }
                                          ]
                                        ]
                                      ],
                                      "name": "string",
                                      "namespace": "string",
                                      "ownerReferences": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "apiVersion": "string",
                                            "blockOwnerDeletion": "bool",
                                            "controller": "bool",
                                            "kind": "string",
                                            "name": "string",
                                            "uid": "string"
                                          }
                                        ]
                                      ],
                                      "resourceVersion": "string",
                                      "selfLink": "string",
                                      "uid": "string"
                                    }
                                  ],
                                  "spec": [
                                    "object",
                                    {
                                      "activeDeadlineSeconds": "number",
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "preference": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchFields": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchFields": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "podAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "podAffinityTerm": [
                                                      "object",
                                                      {
                                                        "labelSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "matchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "mismatchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "namespaceSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "namespaces": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "topologyKey": "string"
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "labelSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "matchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "mismatchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "namespaceSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "namespaces": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "topologyKey": "string"
                                                  }
                                                ]
                                              ]
                                            }
                                          ],
                                          "podAntiAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "podAffinityTerm": [
                                                      "object",
                                                      {
                                                        "labelSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "matchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "mismatchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "namespaceSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "namespaces": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "topologyKey": "string"
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "labelSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "matchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "mismatchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "namespaceSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "namespaces": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "topologyKey": "string"
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "automountServiceAccountToken": "bool",
                                      "containers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "dnsConfig": [
                                        "object",
                                        {
                                          "nameservers": [
                                            "list",
                                            "string"
                                          ],
                                          "options": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "searches": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "dnsPolicy": "string",
                                      "enableServiceLinks": "bool",
                                      "ephemeralContainers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "targetContainerName": "string",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "hostAliases": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "hostnames": [
                                              "list",
                                              "string"
                                            ],
                                            "ip": "string"
                                          }
                                        ]
                                      ],
                                      "hostIPC": "bool",
                                      "hostNetwork": "bool",
                                      "hostPID": "bool",
                                      "hostUsers": "bool",
                                      "hostname": "string",
                                      "imagePullSecrets": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "initContainers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "request": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "appArmorProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "recursiveReadOnly": "string",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "nodeName": "string",
                                      "nodeSelector": [
                                        "map",
                                        "string"
                                      ],
                                      "os": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "overhead": [
                                        "map",
                                        "string"
                                      ],
                                      "preemptionPolicy": "string",
                                      "priority": "number",
                                      "priorityClassName": "string",
                                      "readinessGates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "conditionType": "string"
                                          }
                                        ]
                                      ],
                                      "resourceClaims": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "resourceClaimName": "string",
                                            "resourceClaimTemplateName": "string"
                                          }
                                        ]
                                      ],
                                      "restartPolicy": "string",
                                      "runtimeClassName": "string",
                                      "schedulerName": "string",
                                      "schedulingGates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "securityContext": [
                                        "object",
                                        {
                                          "appArmorProfile": [
                                            "object",
                                            {
                                              "localhostProfile": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "fsGroup": "number",
                                          "fsGroupChangePolicy": "string",
                                          "runAsGroup": "number",
                                          "runAsNonRoot": "bool",
                                          "runAsUser": "number",
                                          "seLinuxOptions": [
                                            "object",
                                            {
                                              "level": "string",
                                              "role": "string",
                                              "type": "string",
                                              "user": "string"
                                            }
                                          ],
                                          "seccompProfile": [
                                            "object",
                                            {
                                              "localhostProfile": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "supplementalGroups": [
                                            "list",
                                            "number"
                                          ],
                                          "supplementalGroupsPolicy": "string",
                                          "sysctls": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "windowsOptions": [
                                            "object",
                                            {
                                              "gmsaCredentialSpec": "string",
                                              "gmsaCredentialSpecName": "string",
                                              "hostProcess": "bool",
                                              "runAsUserName": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "serviceAccount": "string",
                                      "serviceAccountName": "string",
                                      "setHostnameAsFQDN": "bool",
                                      "shareProcessNamespace": "bool",
                                      "subdomain": "string",
                                      "terminationGracePeriodSeconds": "number",
                                      "tolerations": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "effect": "string",
                                            "key": "string",
                                            "operator": "string",
                                            "tolerationSeconds": "number",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "topologySpreadConstraints": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "matchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "maxSkew": "number",
                                            "minDomains": "number",
                                            "nodeAffinityPolicy": "string",
                                            "nodeTaintsPolicy": "string",
                                            "topologyKey": "string",
                                            "whenUnsatisfiable": "string"
                                          }
                                        ]
                                      ],
                                      "volumes": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "awsElasticBlockStore": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "partition": "number",
                                                  "readOnly": "bool",
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "azureDisk": [
                                                "object",
                                                {
                                                  "cachingMode": "string",
                                                  "diskName": "string",
                                                  "diskURI": "string",
                                                  "fsType": "string",
                                                  "kind": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "azureFile": [
                                                "object",
                                                {
                                                  "readOnly": "bool",
                                                  "secretName": "string",
                                                  "shareName": "string"
                                                }
                                              ],
                                              "cephfs": [
                                                "object",
                                                {
                                                  "monitors": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "path": "string",
                                                  "readOnly": "bool",
                                                  "secretFile": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "user": "string"
                                                }
                                              ],
                                              "cinder": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "configMap": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "name": "string",
                                                  "optional": "bool"
                                                }
                                              ],
                                              "csi": [
                                                "object",
                                                {
                                                  "driver": "string",
                                                  "fsType": "string",
                                                  "nodePublishSecretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "readOnly": "bool",
                                                  "volumeAttributes": [
                                                    "map",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "downwardAPI": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "fieldRef": [
                                                          "object",
                                                          {
                                                            "apiVersion": "string",
                                                            "fieldPath": "string"
                                                          }
                                                        ],
                                                        "mode": "number",
                                                        "path": "string",
                                                        "resourceFieldRef": [
                                                          "object",
                                                          {
                                                            "containerName": "string",
                                                            "divisor": "string",
                                                            "resource": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "emptyDir": [
                                                "object",
                                                {
                                                  "medium": "string",
                                                  "sizeLimit": "string"
                                                }
                                              ],
                                              "ephemeral": [
                                                "object",
                                                {
                                                  "volumeClaimTemplate": [
                                                    "object",
                                                    {
                                                      "metadata": [
                                                        "object",
                                                        {
                                                          "annotations": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "creationTimestamp": "string",
                                                          "deletionGracePeriodSeconds": "number",
                                                          "deletionTimestamp": "string",
                                                          "finalizers": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "generateName": "string",
                                                          "generation": "number",
                                                          "labels": [
                                                            "map",
                                                            "string"
                                                          ],
                                                          "managedFields": [
                                                            "tuple",
                                                            [
                                                              [
                                                                "object",
                                                                {
                                                                  "apiVersion": "string",
                                                                  "fieldsType": "string",
                                                                  "fieldsV1": "dynamic",
                                                                  "manager": "string",
                                                                  "operation": "string",
                                                                  "subresource": "string",
                                                                  "time": "string"
                                                                }
                                                              ]
                                                            ]
                                                          ],
                                                          "name": "string",
                                                          "namespace": "string",
                                                          "ownerReferences": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "apiVersion": "string",
                                                                "blockOwnerDeletion": "bool",
                                                                "controller": "bool",
                                                                "kind": "string",
                                                                "name": "string",
                                                                "uid": "string"
                                                              }
                                                            ]
                                                          ],
                                                          "resourceVersion": "string",
                                                          "selfLink": "string",
                                                          "uid": "string"
                                                        }
                                                      ],
                                                      "spec": [
                                                        "object",
                                                        {
                                                          "accessModes": [
                                                            "list",
                                                            "string"
                                                          ],
                                                          "dataSource": [
                                                            "object",
                                                            {
                                                              "apiGroup": "string",
                                                              "kind": "string",
                                                              "name": "string"
                                                            }
                                                          ],
                                                          "dataSourceRef": [
                                                            "object",
                                                            {
                                                              "apiGroup": "string",
                                                              "kind": "string",
                                                              "name": "string",
                                                              "namespace": "string"
                                                            }
                                                          ],
                                                          "resources": [
                                                            "object",
                                                            {
                                                              "limits": [
                                                                "map",
                                                                "string"
                                                              ],
                                                              "requests": [
                                                                "map",
                                                                "string"
                                                              ]
                                                            }
                                                          ],
                                                          "selector": [
                                                            "object",
                                                            {
                                                              "matchExpressions": [
                                                                "list",
                                                                [
                                                                  "object",
                                                                  {
                                                                    "key": "string",
                                                                    "operator": "string",
                                                                    "values": [
                                                                      "list",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ]
                                                              ],
                                                              "matchLabels": [
                                                                "map",
                                                                "string"
                                                              ]
                                                            }
                                                          ],
                                                          "storageClassName": "string",
                                                          "volumeAttributesClassName": "string",
                                                          "volumeMode": "string",
                                                          "volumeName": "string"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "fc": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "lun": "number",
                                                  "readOnly": "bool",
                                                  "targetWWNs": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "wwids": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ],
                                              "flexVolume": [
                                                "object",
                                                {
                                                  "driver": "string",
                                                  "fsType": "string",
                                                  "options": [
                                                    "map",
                                                    "string"
                                                  ],
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "flocker": [
                                                "object",
                                                {
                                                  "datasetName": "string",
                                                  "datasetUUID": "string"
                                                }
                                              ],
                                              "gcePersistentDisk": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "partition": "number",
                                                  "pdName": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "gitRepo": [
                                                "object",
                                                {
                                                  "directory": "string",
                                                  "repository": "string",
                                                  "revision": "string"
                                                }
                                              ],
                                              "glusterfs": [
                                                "object",
                                                {
                                                  "endpoints": "string",
                                                  "path": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "hostPath": [
                                                "object",
                                                {
                                                  "path": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "image": [
                                                "object",
                                                {
                                                  "pullPolicy": "string",
                                                  "reference": "string"
                                                }
                                              ],
                                              "iscsi": [
                                                "object",
                                                {
                                                  "chapAuthDiscovery": "bool",
                                                  "chapAuthSession": "bool",
                                                  "fsType": "string",
                                                  "initiatorName": "string",
                                                  "iqn": "string",
                                                  "iscsiInterface": "string",
                                                  "lun": "number",
                                                  "portals": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "targetPortal": "string"
                                                }
                                              ],
                                              "name": "string",
                                              "nfs": [
                                                "object",
                                                {
                                                  "path": "string",
                                                  "readOnly": "bool",
                                                  "server": "string"
                                                }
                                              ],
                                              "persistentVolumeClaim": [
                                                "object",
                                                {
                                                  "claimName": "string",
                                                  "readOnly": "bool"
                                                }
                                              ],
                                              "photonPersistentDisk": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "pdID": "string"
                                                }
                                              ],
                                              "portworxVolume": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "volumeID": "string"
                                                }
                                              ],
                                              "projected": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "sources": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "clusterTrustBundle": [
                                                          "object",
                                                          {
                                                            "labelSelector": [
                                                              "object",
                                                              {
                                                                "matchExpressions": [
                                                                  "list",
                                                                  [
                                                                    "object",
                                                                    {
                                                                      "key": "string",
                                                                      "operator": "string",
                                                                      "values": [
                                                                        "list",
                                                                        "string"
                                                                      ]
                                                                    }
                                                                  ]
                                                                ],
                                                                "matchLabels": [
                                                                  "map",
                                                                  "string"
                                                                ]
                                                              }
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool",
                                                            "path": "string",
                                                            "signerName": "string"
                                                          }
                                                        ],
                                                        "configMap": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "mode": "number",
                                                                  "path": "string"
                                                                }
                                                              ]
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool"
                                                          }
                                                        ],
                                                        "downwardAPI": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "fieldRef": [
                                                                    "object",
                                                                    {
                                                                      "apiVersion": "string",
                                                                      "fieldPath": "string"
                                                                    }
                                                                  ],
                                                                  "mode": "number",
                                                                  "path": "string",
                                                                  "resourceFieldRef": [
                                                                    "object",
                                                                    {
                                                                      "containerName": "string",
                                                                      "divisor": "string",
                                                                      "resource": "string"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            ]
                                                          }
                                                        ],
                                                        "secret": [
                                                          "object",
                                                          {
                                                            "items": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "mode": "number",
                                                                  "path": "string"
                                                                }
                                                              ]
                                                            ],
                                                            "name": "string",
                                                            "optional": "bool"
                                                          }
                                                        ],
                                                        "serviceAccountToken": [
                                                          "object",
                                                          {
                                                            "audience": "string",
                                                            "expirationSeconds": "number",
                                                            "path": "string"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ],
                                              "quobyte": [
                                                "object",
                                                {
                                                  "group": "string",
                                                  "readOnly": "bool",
                                                  "registry": "string",
                                                  "tenant": "string",
                                                  "user": "string",
                                                  "volume": "string"
                                                }
                                              ],
                                              "rbd": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "image": "string",
                                                  "keyring": "string",
                                                  "monitors": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "pool": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "user": "string"
                                                }
                                              ],
                                              "scaleIO": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "gateway": "string",
                                                  "protectionDomain": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "sslEnabled": "bool",
                                                  "storageMode": "string",
                                                  "storagePool": "string",
                                                  "system": "string",
                                                  "volumeName": "string"
                                                }
                                              ],
                                              "secret": [
                                                "object",
                                                {
                                                  "defaultMode": "number",
                                                  "items": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "key": "string",
                                                        "mode": "number",
                                                        "path": "string"
                                                      }
                                                    ]
                                                  ],
                                                  "optional": "bool",
                                                  "secretName": "string"
                                                }
                                              ],
                                              "storageos": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "readOnly": "bool",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ],
                                                  "volumeName": "string",
                                                  "volumeNamespace": "string"
                                                }
                                              ],
                                              "vsphereVolume": [
                                                "object",
                                                {
                                                  "fsType": "string",
                                                  "storagePolicyID": "string",
                                                  "storagePolicyName": "string",
                                                  "volumePath": "string"
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "ttlSecondsAfterFinished": "number"
                            }
                          ]
                        }
                      ],
                      "schedule": "string",
                      "startingDeadlineSeconds": "number",
                      "successfulJobsHistoryLimit": "number",
                      "suspend": "bool",
                      "timeZone": "string"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.ecr_credentials[\"0\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "serviceaccount_dev_k8s_ecr_login_renew_account",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "v1",
                "kind": "ServiceAccount",
                "metadata": {
                  "name": "k8s-ecr-login-renew-account",
                  "namespace": "stg"
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "v1",
                "automountServiceAccountToken": null,
                "imagePullSecrets": [
                  {
                    "name": "docker-cfg"
                  }
                ],
                "kind": "ServiceAccount",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "k8s-ecr-login-renew-account",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "secrets": null
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "automountServiceAccountToken": "bool",
                  "imagePullSecrets": [
                    "list",
                    [
                      "object",
                      {
                        "name": "string"
                      }
                    ]
                  ],
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "secrets": [
                    "list",
                    [
                      "object",
                      {
                        "apiVersion": "string",
                        "fieldPath": "string",
                        "kind": "string",
                        "name": "string",
                        "namespace": "string",
                        "resourceVersion": "string",
                        "uid": "string"
                      }
                    ]
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "746669237448",
            "arn": "arn:aws:iam::746669237448:user/terraform",
            "id": "746669237448",
            "user_id": "AIDA23WHUMTEFS3WE5U2J"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::746669237448:user/terraform",
            "id": "arn:aws:iam::746669237448:user/terraform",
            "issuer_arn": "arn:aws:iam::746669237448:user/terraform",
            "issuer_id": "",
            "issuer_name": "",
            "session_name": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSTNQG0mfAmRzdKZqfODF5hTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjYwNFoXDTMwMDgyMzIyMjYwNFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALd/pVko\n8vuM475Tf45HV3BbCl/B9Jy89G1CRkFjcPY06WA9lS+7dWbUA7GtWUKoksr69hKM\nwcMsNpxlw7b3jeXFgxB09/nmalcAWtnLzF+LaDKEA5DQmvKzuh1nfIfqEiKCQSmX\nXh09Xs+dO7cm5qbaL2hhNJCSAejciwcvOFgFNgEMR42wm6KIFHsQW28jhA+1u/M0\np6fVwReuEgZfLfdx82Px0LJck3lST3EB/JfbdsdOzzzg5YkY1dfuqf8y5fUeZ7Cz\nWXbTjujwX/TovmeWKA36VLCz75azW6tDNuDn66FOpADZZ9omVaF6BqNJiLMVl6P3\n/c0OiUMC6Z5OfKcCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUVdkYX9IczAHhWLS+q9lVQgHXLgIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAGjeWm2cC+3z2MzSCnte46/7JZvj3iQZDY7EvODNdZF41n71Lrk9kbfNwerK0d\nVNzW36Wefr7j7ZSwBVg50W5ay65jNSN74TTQV1yt4WnSbVvN6KlMs1hiyOZdoHKs\nKDV2UGNxbdoBYCQNa2GYF8FQIWLugNp35aSOpMy6cFlymFQomIrnOQHwK1nvVY4q\nxDSJMU/gNJz17D8ArPN3ngnyZ2TwepJ0uBINz3G5te2rdFUF4i4Y3Bb7FUlHDYm4\nu8aIRGpk2ZpfXmxaoxnbIBZRvGLPSUuPwnwoUOMsJ8jirI5vs2dvchPb7MtI1rle\ni02f2ivH2vxkjDLltSpe2fiC\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:26:04Z",
                "not_before": "2022-08-23T22:26:04Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129356476704345391986644047206454194698629",
                "sha1_fingerprint": "d9fe0a65fa00cabf61f5120d373a8135e1461f15",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF6TCCBNGgAwIBAgIQC1pmj3MJbfdZEwuZaK0yeDANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAzMB4XDTI0MDMyNzAwMDAwMFoXDTI1MDQyNTIzNTk1OVowKDEm\nMCQGA1UEAwwdKi5la3MudXMtZWFzdC0yLmFtYXpvbmF3cy5jb20wggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCyfP2lMr2GZr3NlTFQcpZ1LcOH8Zao627X\ntI4MO+P1IarmDJT7rne8+pjduGWhmddZmN8IcpiDCREoFvyf2jC5Lk0CwRnzLIhZ\nj6vd75gFCWJFzKnfz6F/xtUudATESARr/E8JlsScKY5eoqHPRPqMgzW6HFY46ONu\nBN8pk3iA6S8tN2LvF/aWUc8J546V1Zrruw2h3FvGAQtqDxBgcA/SwXjiIO6+4D8P\ntu0qdTlA7/AS8ph1tJDQ5Xv4wG0ZJ5uMm9S9pS/3SPWMEkTKNp+QpNMGYvX7sure\n0oqX+oJIDC9IbKIscrsmkAwqS7PWFWszpojo8Ur/62RmLQOiJ/PXAgMBAAGjggL5\nMIIC9TAfBgNVHSMEGDAWgBRV2Rhf0hzMAeFYtL6r2VVCAdcuAjAdBgNVHQ4EFgQU\npytkck5Jdaa1DjuIJMpyBxd3ztMwKAYDVR0RBCEwH4IdKi5la3MudXMtZWFzdC0y\nLmFtYXpvbmF3cy5jb20wEwYDVR0gBAwwCjAIBgZngQwBAgEwDgYDVR0PAQH/BAQD\nAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCg\nLqAshipodHRwOi8vY3JsLnIybTAzLmFtYXpvbnRydXN0LmNvbS9yMm0wMy5jcmww\ndQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5yMm0wMy5h\nbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJtMDMuYW1h\nem9udHJ1c3QuY29tL3IybTAzLmNlcjAMBgNVHRMBAf8EAjAAMIIBgQYKKwYBBAHW\neQIEAgSCAXEEggFtAWsAdwBOdaMnXJoQwzhbbNTfP1LrHfDgjhuNacCx+mSxYpo5\n3wAAAY6B4toRAAAEAwBIMEYCIQCL2lZOGqo75PNnFiLldA7Gd39egtnXDTY+HHYO\n++O98gIhALSzX7cp+Y17fzfL5TAFWZm0+/7LFdyrQEEsgntEXCdTAHcAfVkeEuF4\nKnscYWd8Xv340IdcFKBOlZ65Ay/ZDowuebgAAAGOgeLZyAAABAMASDBGAiEA2EeA\nVUmkO2biyHSh0v+5Uo/NRG53wDwMKBRMLB+03oYCIQCBdgI4o8mFSYNASwhYKGWP\nIt5yi7Hmoi1pFefYiBmGbAB3AObSMWNAd4zBEEEG13G5zsHSQPaWhIb7uocyHf0e\nN45QAAABjoHi2dgAAAQDAEgwRgIhAK2MT0pX3Et7hx26gxiJwGj7u3v/9xMJHVhK\nC5fnxlfNAiEAizPUX2b3GrMeYnINHOy98KbPvkCzGHtN6qcdbf7w3T8wDQYJKoZI\nhvcNAQELBQADggEBAKknRf08AG7Hpn2h4HOyZPC0weNsrS/c8VIXRRSFth1nxQsZ\nyscbVOiJ6j7M6VvfjEmvsL7tvj3UlWmxJuadatX9HIX2KT2mq1fJxv/kX0laHtGl\nWbP3+CYHYCnZf8yPV7EaRJB2AtbGwV7rBd6mb9tDy2uAouTeANQi2XNVoCvGNkSQ\n/zIt0K+TA+efYW3wGhFuMHJOnwJ0a4mXwI7rHclijeztb680ga+F+Indpp5pMmsr\neNyO2TImDxtfDd/l8z2qNDzpyXIeSt2JgORnO5AjGC0EWD2p/hIsLCbG+QnB5IYo\nwHAg3LNrgxkdOWoY23z/WYylg4DdPzPT1SuHKYk=\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "not_after": "2025-04-25T23:59:59Z",
                "not_before": "2024-03-27T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "15090894841911196861235261040086561400",
                "sha1_fingerprint": "32f9e66ae934e90332545a9e7494591af3f34938",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=*.eks.us-east-2.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "41c9ad86376859231a2244535dff0f089ba892cb",
            "url": "https://oidc.eks.us-east-2.amazonaws.com/id/18506C69A004516C88A4B6DB7F46404F",
            "verify_chain": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:746669237448:log-group:/aws/eks/eks-OBiQM5Gh/cluster",
            "id": "/aws/eks/eks-OBiQM5Gh/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/eks-OBiQM5Gh/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/eks-OBiQM5Gh/cluster"
            },
            "tags_all": {
              "Name": "/aws/eks/eks-OBiQM5Gh/cluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": false
              }
            ],
            "arn": "arn:aws:eks:us-east-2:746669237448:cluster/eks-OBiQM5Gh",
            "bootstrap_self_managed_addons": true,
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJSDBGRjU1Ukk1c3N3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBNU1qQXlNREExTlRGYUZ3MHpOREE1TVRneU1ERXdOVEZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUREZ2JHeVJMbHFKMDNzWFBpdmVPN2sreFU2NjJuVnMrTGdaUmRaUFBHSWI4bzZGT1BmYnAyakxCWGoKK21VMzZ0VVdQVXgvQ2Z1dVpjK1VYU0V3ekpMM2VKZzJhR1Z1cStjTklIMHBTeHZGOHlMa1E4MEVHSk9RRTM1cAp6K0VsR0pUQjk4YzR2MGZDLzJROGJlRmNPUHIwVWNLdkgwNzdya0traFczYTd4d1I2TVBYWkFXWFQ1QjYvRTJiCjVJZ0J6Tm91Q09aMytlOThsV1N6RnpQWVVuL2RKWDhJeXBuNmdXWUFQMzgxSUxkNWZWWWNGSFFrYVliNUZneGkKMm1USEhjWnNmbURvVDNiYWczNmp4d3ZyQ093MENKbkFDa0NZbEpUa3IvNk1GbGhLMlNET01BL3J6YVlXVFFhbQo1azV2TUI4T3JGOXhJOEJFN05TbkxORmplTHFsQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTWjBCakw1NkxFYXQ0c2JQREFjN29mWG1DSlFUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmMyem83alJPcApuNmlYeDNDRjZyWjA3ZlVUWVZ3bFFVZDVjUG5jWDVKNDE0S0RScXhCM2JVS29UakJ2ZGU2N285UlRWU0ZaY2p1CjJ4UHQvRDBmei9PT2JHT2VITlEzV1k0YVV6ZXpSTUN2OHlMT2hoOHIxVCt3Q3FJalB2YnlyazZ4S1dtK2UyaW8KSXVxN1AwTVR4THMvZEhVaVU2cEtWSXc0dlViOXIyZkRlK0FZVVg0R21raVkvZkExY2pnRmJremhCRU9uWUMrdApUQk5ZQ01kNlN6NExFSzdOUThxL2xEV0M5MWNBNngxZnlmd2lmN3NhYkM0S3FZYlNhV0Y4d1dhUVhQUGhZc3N4CmZZQitKUkVtVjB5Ymw1SXdhZmpPVXZ6U2duTjBVblBMdllHSW96VW85b1J5Y0ZQQVA2SHc0bFJpNGx6RzdqRzUKcDJnUGpSaDVuMWorCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-09-20 20:06:46.906 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:us-east-2:746669237448:key/8e156f35-3cbf-4da3-b3df-50bc88e22bac"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://18506C69A004516C88A4B6DB7F46404F.yl4.us-east-2.eks.amazonaws.com",
            "id": "eks-OBiQM5Gh",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-2.amazonaws.com/id/18506C69A004516C88A4B6DB7F46404F"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "eks-OBiQM5Gh",
            "outpost_config": [],
            "platform_version": "eks.12",
            "role_arn": "arn:aws:iam::746669237448:role/eks-OBiQM5Gh-cluster-20240920200604599500000002",
            "status": "ACTIVE",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.31",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0b6971b019c06821e",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-01d7f49649edea1b1"
                ],
                "subnet_ids": [
                  "subnet-02db037ea6c55d16a",
                  "subnet-040b4752575294d35",
                  "subnet-08793111ca5d1064c"
                ],
                "vpc_id": "vpc-08fe2e12a2ebff367"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::746669237448:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/18506C69A004516C88A4B6DB7F46404F",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::746669237448:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/18506C69A004516C88A4B6DB7F46404F",
            "tags": {
              "Name": "eks-OBiQM5Gh-eks-irsa"
            },
            "tags_all": {
              "Name": "eks-OBiQM5Gh-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-east-2.amazonaws.com/id/18506C69A004516C88A4B6DB7F46404F"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::746669237448:policy/eks-OBiQM5Gh-cluster-ClusterEncryption2024092020064395270000000f",
            "attachment_count": 1,
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::746669237448:policy/eks-OBiQM5Gh-cluster-ClusterEncryption2024092020064395270000000f",
            "name": "eks-OBiQM5Gh-cluster-ClusterEncryption2024092020064395270000000f",
            "name_prefix": "eks-OBiQM5Gh-cluster-ClusterEncryption",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-east-2:746669237448:key/8e156f35-3cbf-4da3-b3df-50bc88e22bac\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA23WHUMTEPVKZQRXFD",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::746669237448:role/eks-OBiQM5Gh-cluster-20240920200604599500000002",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-09-20T20:06:04Z",
            "description": "",
            "force_detach_policies": true,
            "id": "eks-OBiQM5Gh-cluster-20240920200604599500000002",
            "inline_policy": [
              {
                "name": "eks-OBiQM5Gh-cluster",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::746669237448:policy/eks-OBiQM5Gh-cluster-ClusterEncryption2024092020064395270000000f",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "eks-OBiQM5Gh-cluster-20240920200604599500000002",
            "name_prefix": "eks-OBiQM5Gh-cluster-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA23WHUMTEKB26FH7PV"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "eks-OBiQM5Gh-cluster-20240920200604599500000002-20240920200644547400000010",
            "policy_arn": "arn:aws:iam::746669237448:policy/eks-OBiQM5Gh-cluster-ClusterEncryption2024092020064395270000000f",
            "role": "eks-OBiQM5Gh-cluster-20240920200604599500000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "eks-OBiQM5Gh-cluster-20240920200604599500000002-20240920200615080300000007",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "eks-OBiQM5Gh-cluster-20240920200604599500000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "eks-OBiQM5Gh-cluster-20240920200604599500000002-20240920200614755800000006",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "eks-OBiQM5Gh-cluster-20240920200604599500000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:security-group/sg-01d7f49649edea1b1",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-01d7f49649edea1b1",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-08dadb29ba5b11482"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "eks-OBiQM5Gh-cluster-20240920200616976800000009",
            "name_prefix": "eks-OBiQM5Gh-cluster-",
            "owner_id": "746669237448",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-OBiQM5Gh-cluster"
            },
            "tags_all": {
              "Name": "eks-OBiQM5Gh-cluster"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:security-group/sg-08dadb29ba5b11482",
            "description": "EKS node shared security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all egress",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-08dadb29ba5b11482",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [
                  "sg-00c71228b526689f4"
                ],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 4443/tcp webhook",
                "from_port": 4443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-01d7f49649edea1b1"
                ],
                "self": false,
                "to_port": 4443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 6443/tcp webhook",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-01d7f49649edea1b1"
                ],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 8443/tcp webhook",
                "from_port": 8443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-01d7f49649edea1b1"
                ],
                "self": false,
                "to_port": 8443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 9443/tcp webhook",
                "from_port": 9443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-01d7f49649edea1b1"
                ],
                "self": false,
                "to_port": 9443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-01d7f49649edea1b1"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-01d7f49649edea1b1"
                ],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS UDP",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node ingress on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 65535
              }
            ],
            "name": "eks-OBiQM5Gh-node-20240920200615229300000008",
            "name_prefix": "eks-OBiQM5Gh-node-",
            "owner_id": "746669237448",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-OBiQM5Gh-node",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "owned"
            },
            "tags_all": {
              "Name": "eks-OBiQM5Gh-node",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-3543042134",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-01d7f49649edea1b1",
            "security_group_rule_id": "sgr-0a6583d6907d61aea",
            "self": false,
            "source_security_group_id": "sg-08dadb29ba5b11482",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-2613510508",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-08dadb29ba5b11482",
            "security_group_rule_id": "sgr-0f304fb4d88cff7c5",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-2046881707",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08dadb29ba5b11482",
            "security_group_rule_id": "sgr-057e264f22561fa4e",
            "self": false,
            "source_security_group_id": "sg-01d7f49649edea1b1",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-2876983863",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08dadb29ba5b11482",
            "security_group_rule_id": "sgr-012fd6ab7019cb190",
            "self": false,
            "source_security_group_id": "sg-01d7f49649edea1b1",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-1647914401",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08dadb29ba5b11482",
            "security_group_rule_id": "sgr-07db8bf29321dda10",
            "self": false,
            "source_security_group_id": "sg-01d7f49649edea1b1",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-1902449024",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08dadb29ba5b11482",
            "security_group_rule_id": "sgr-01ae6b096cf6699ce",
            "self": false,
            "source_security_group_id": "sg-01d7f49649edea1b1",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-365175371",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08dadb29ba5b11482",
            "security_group_rule_id": "sgr-0cc9fd3760fc2b31d",
            "self": false,
            "source_security_group_id": "sg-01d7f49649edea1b1",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-1800789683",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08dadb29ba5b11482",
            "security_group_rule_id": "sgr-0025c7624589cf1a9",
            "self": false,
            "source_security_group_id": "sg-01d7f49649edea1b1",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-432139166",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08dadb29ba5b11482",
            "security_group_rule_id": "sgr-027afa9f4202bc137",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-561009292",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-08dadb29ba5b11482",
            "security_group_rule_id": "sgr-0e45677f28de1c0a4",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-2234511715",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-08dadb29ba5b11482",
            "security_group_rule_id": "sgr-0dcebe3edb03d9f7e",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2024-11-12T20:24:14Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJSDBGRjU1Ukk1c3N3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBNU1qQXlNREExTlRGYUZ3MHpOREE1TVRneU1ERXdOVEZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUREZ2JHeVJMbHFKMDNzWFBpdmVPN2sreFU2NjJuVnMrTGdaUmRaUFBHSWI4bzZGT1BmYnAyakxCWGoKK21VMzZ0VVdQVXgvQ2Z1dVpjK1VYU0V3ekpMM2VKZzJhR1Z1cStjTklIMHBTeHZGOHlMa1E4MEVHSk9RRTM1cAp6K0VsR0pUQjk4YzR2MGZDLzJROGJlRmNPUHIwVWNLdkgwNzdya0traFczYTd4d1I2TVBYWkFXWFQ1QjYvRTJiCjVJZ0J6Tm91Q09aMytlOThsV1N6RnpQWVVuL2RKWDhJeXBuNmdXWUFQMzgxSUxkNWZWWWNGSFFrYVliNUZneGkKMm1USEhjWnNmbURvVDNiYWczNmp4d3ZyQ093MENKbkFDa0NZbEpUa3IvNk1GbGhLMlNET01BL3J6YVlXVFFhbQo1azV2TUI4T3JGOXhJOEJFN05TbkxORmplTHFsQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTWjBCakw1NkxFYXQ0c2JQREFjN29mWG1DSlFUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmMyem83alJPcApuNmlYeDNDRjZyWjA3ZlVUWVZ3bFFVZDVjUG5jWDVKNDE0S0RScXhCM2JVS29UakJ2ZGU2N285UlRWU0ZaY2p1CjJ4UHQvRDBmei9PT2JHT2VITlEzV1k0YVV6ZXpSTUN2OHlMT2hoOHIxVCt3Q3FJalB2YnlyazZ4S1dtK2UyaW8KSXVxN1AwTVR4THMvZEhVaVU2cEtWSXc0dlViOXIyZkRlK0FZVVg0R21raVkvZkExY2pnRmJremhCRU9uWUMrdApUQk5ZQ01kNlN6NExFSzdOUThxL2xEV0M5MWNBNngxZnlmd2lmN3NhYkM0S3FZYlNhV0Y4d1dhUVhQUGhZc3N4CmZZQitKUkVtVjB5Ymw1SXdhZmpPVXZ6U2duTjBVblBMdllHSW96VW85b1J5Y0ZQQVA2SHc0bFJpNGx6RzdqRzUKcDJnUGpSaDVuMWorCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "cluster_endpoint": "https://18506C69A004516C88A4B6DB7F46404F.yl4.us-east-2.eks.amazonaws.com",
              "cluster_name": "eks-OBiQM5Gh",
              "cluster_service_cidr": "172.20.0.0/16",
              "cluster_version": "1.31"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "746669237448",
            "arn": "arn:aws:iam::746669237448:user/terraform",
            "id": "746669237448",
            "user_id": "AIDA23WHUMTEFS3WE5U2J"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:us-east-2:746669237448:nodegroup/eks-OBiQM5Gh/node-group-1-20240920201503266800000013/9cc90889-71b8-6ef8-1f02-a59c4d1e4e1c",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "eks-OBiQM5Gh",
            "disk_size": 0,
            "force_update_version": null,
            "id": "eks-OBiQM5Gh:node-group-1-20240920201503266800000013",
            "instance_types": [
              "t3.large"
            ],
            "labels": {},
            "launch_template": [
              {
                "id": "lt-0eafb39b851509b4b",
                "name": "one-20240920201502370700000011",
                "version": "1"
              }
            ],
            "node_group_name": "node-group-1-20240920201503266800000013",
            "node_group_name_prefix": "node-group-1-",
            "node_role_arn": "arn:aws:iam::746669237448:role/node-group-1-eks-node-group-20240920200603673700000001",
            "release_version": "1.31.0-20241109",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-node-group-1-20240920201503266800000013-9cc90889-71b8-6ef8-1f02-a59c4d1e4e1c"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 4,
                "max_size": 4,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-02db037ea6c55d16a",
              "subnet-040b4752575294d35",
              "subnet-08793111ca5d1064c"
            ],
            "tags": {
              "Name": "node-group-1"
            },
            "tags_all": {
              "Name": "node-group-1"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.31"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::746669237448:role/node-group-1-eks-node-group-20240920200603673700000001",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-09-20T20:06:04Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "node-group-1-eks-node-group-20240920200603673700000001",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AdministratorAccess",
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "node-group-1-eks-node-group-20240920200603673700000001",
            "name_prefix": "node-group-1-eks-node-group-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA23WHUMTEPIADRT5NW"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240920200603673700000001-20240920200610300000000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "node-group-1-eks-node-group-20240920200603673700000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240920200603673700000001-20240920200609975100000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "node-group-1-eks-node-group-20240920200603673700000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240920200603673700000001-20240920200609650200000003",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "node-group-1-eks-node-group-20240920200603673700000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:launch-template/lt-0eafb39b851509b4b",
            "block_device_mappings": [],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "default_version": 1,
            "description": "Custom launch template for node-group-1 EKS managed node group",
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_optimized": "",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-0eafb39b851509b4b",
            "image_id": "",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_requirements": [],
            "instance_type": "",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "maintenance_options": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": ""
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "one-20240920201502370700000011",
            "name_prefix": "one-",
            "network_interfaces": [],
            "placement": [],
            "private_dns_name_options": [],
            "ram_disk_id": "",
            "security_group_names": [],
            "tag_specifications": [
              {
                "resource_type": "instance",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "network-interface",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "volume",
                "tags": {
                  "Name": "node-group-1"
                }
              }
            ],
            "tags": {},
            "tags_all": {},
            "update_default_version": true,
            "user_data": "",
            "vpc_security_group_ids": [
              "sg-08dadb29ba5b11482"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"].module.user_data",
      "mode": "managed",
      "type": "null_resource",
      "name": "validate_cluster_service_cidr",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2649909141533064985",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "746669237448",
            "arn": "arn:aws:iam::746669237448:user/terraform",
            "id": "746669237448",
            "user_id": "AIDA23WHUMTEFS3WE5U2J"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1760960044",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Default\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::746669237448:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:ReplicateKey\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:ImportKeyMaterial\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::746669237448:user/terraform\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::746669237448:role/eks-OBiQM5Gh-cluster-20240920200604599500000002\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"Default\",\"Effect\":\"Allow\",\"Action\":\"kms:*\",\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::746669237448:root\"}},{\"Sid\":\"KeyAdministration\",\"Effect\":\"Allow\",\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::746669237448:user/terraform\"}},{\"Sid\":\"KeyUsage\",\"Effect\":\"Allow\",\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Resource\":\"*\",\"Principal\":{\"AWS\":\"arn:aws:iam::746669237448:role/eks-OBiQM5Gh-cluster-20240920200604599500000002\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::746669237448:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "Default"
              },
              {
                "actions": [
                  "kms:CancelKeyDeletion",
                  "kms:Create*",
                  "kms:Delete*",
                  "kms:Describe*",
                  "kms:Disable*",
                  "kms:Enable*",
                  "kms:Get*",
                  "kms:ImportKeyMaterial",
                  "kms:List*",
                  "kms:Put*",
                  "kms:ReplicateKey",
                  "kms:Revoke*",
                  "kms:ScheduleKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:Update*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::746669237448:user/terraform"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyAdministration"
              },
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::746669237448:role/eks-OBiQM5Gh-cluster-20240920200604599500000002"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyUsage"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-2:746669237448:alias/eks/eks-OBiQM5Gh",
            "id": "alias/eks/eks-OBiQM5Gh",
            "name": "alias/eks/eks-OBiQM5Gh",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:us-east-2:746669237448:key/8e156f35-3cbf-4da3-b3df-50bc88e22bac",
            "target_key_id": "8e156f35-3cbf-4da3-b3df-50bc88e22bac"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-2:746669237448:key/8e156f35-3cbf-4da3-b3df-50bc88e22bac",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "eks-OBiQM5Gh cluster encryption key",
            "enable_key_rotation": true,
            "id": "8e156f35-3cbf-4da3-b3df-50bc88e22bac",
            "is_enabled": true,
            "key_id": "8e156f35-3cbf-4da3-b3df-50bc88e22bac",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::746669237448:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::746669237448:user/terraform\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::746669237448:role/eks-OBiQM5Gh-cluster-20240920200604599500000002\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
            "rotation_period_in_days": 365,
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": null,
            "xks_key_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "stg",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "stg",
                "resource_version": "5903",
                "uid": "8273c379-fefc-4c3b-b99f-3b20bf7cc885"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "stg/backend-auth",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 49,
                "labels": {},
                "name": "backend-auth",
                "namespace": "stg",
                "resource_version": "19176276",
                "uid": "ff450e1d-9d2f-423e-8563-6163a752a10d"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "3",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-auth"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-auth"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "746669237448.dkr.ecr.us-east-2.amazonaws.com/backend-auth:stg-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-auth",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-auth\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "stg/backend-auth",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-auth",
                "namespace": "stg",
                "resource_version": "9361833",
                "uid": "e13d0445-a161-41f5-860f-e39f4679a8be"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.137.84",
                "cluster_ips": [
                  "172.20.137.84"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-auth"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "stg",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "stg",
                "resource_version": "5903",
                "uid": "8273c379-fefc-4c3b-b99f-3b20bf7cc885"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "stg/backend-notification",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 24,
                "labels": {},
                "name": "backend-notification",
                "namespace": "stg",
                "resource_version": "15927990",
                "uid": "ada56961-b0f2-4a2e-b424-ac691b28b32d"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-notification"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-notification"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "746669237448.dkr.ecr.us-east-2.amazonaws.com/backend-notification:stg-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-notification",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-notification\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "stg/backend-notification",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-notification",
                "namespace": "stg",
                "resource_version": "9361832",
                "uid": "3badf3ea-6c53-4fea-bb08-6770e748d768"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.88.49",
                "cluster_ips": [
                  "172.20.88.49"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-notification"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "stg",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "stg",
                "resource_version": "5903",
                "uid": "8273c379-fefc-4c3b-b99f-3b20bf7cc885"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "stg/backend-wallet",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 169,
                "labels": {},
                "name": "backend-wallet",
                "namespace": "stg",
                "resource_version": "23738195",
                "uid": "1e45a4e9-3b5b-487a-9dd1-edb2d7ad193c"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "4",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-wallet"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-wallet"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "746669237448.dkr.ecr.us-east-2.amazonaws.com/backend-wallet:stg-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-wallet",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-wallet\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "stg/backend-wallet",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-wallet",
                "namespace": "stg",
                "resource_version": "9361831",
                "uid": "d6105414-84db-4e4b-b611-9617c1d60b2b"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.186.45",
                "cluster_ips": [
                  "172.20.186.45"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-wallet"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "stg",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "stg",
                "resource_version": "5903",
                "uid": "8273c379-fefc-4c3b-b99f-3b20bf7cc885"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "stg/backend-ws",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 10,
                "labels": {},
                "name": "backend-ws",
                "namespace": "stg",
                "resource_version": "19236103",
                "uid": "097fe68f-fe9e-4a70-8000-b4dc7b387980"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "backend-ws"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "backend-ws"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "746669237448.dkr.ecr.us-east-2.amazonaws.com/ws:stg-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "backend-ws",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"backend-ws\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "stg/backend-ws",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "backend-ws",
                "namespace": "stg",
                "resource_version": "17541296",
                "uid": "60a63a64-9337-44c5-be9a-2d4299dcf849"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.227.202",
                "cluster_ips": [
                  "172.20.227.202"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "backend-ws"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "data",
      "type": "kubernetes_namespace",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "stg",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "stg",
                "resource_version": "5903",
                "uid": "8273c379-fefc-4c3b-b99f-3b20bf7cc885"
              }
            ],
            "spec": [
              {
                "finalizers": [
                  "kubernetes"
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "stg/frontend-admin",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 81,
                "labels": {},
                "name": "frontend-admin",
                "namespace": "stg",
                "resource_version": "23738226",
                "uid": "25eeb7f9-15d9-4006-ac17-e371e5354414"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "3",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "frontend-admin"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "frontend-admin"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "746669237448.dkr.ecr.us-east-2.amazonaws.com/frontend-admin:stg-latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "frontend-admin",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [
                          {
                            "name": "docker-cfg"
                          }
                        ],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.microservices[\"frontend-admin\"]",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "stg/frontend-admin",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "frontend-admin",
                "namespace": "stg",
                "resource_version": "9361835",
                "uid": "8e9a4fbc-752a-42bb-8bd0-483afffd9714"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "172.20.3.105",
                "cluster_ips": [
                  "172.20.3.105"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "web",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "frontend-admin"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "kubernetes_namespace.resources_name",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.admin.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_stg.admin.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.admin.walletguru.co",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.auth.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_stg.auth.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.auth.walletguru.co",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.graphql.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_stg.graphql.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.graphql.walletguru.co",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.interaction.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_stg.interaction.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.interaction.walletguru.co",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.mock.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_stg.mock.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.mock.walletguru.co",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.notification.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_stg.notification.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.notification.walletguru.co",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.rafiki-auth.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_stg.rafiki-auth.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.rafiki-auth.walletguru.co",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.rafiki.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_stg.rafiki.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.rafiki.walletguru.co",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.wallet.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_stg.wallet.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.wallet.walletguru.co",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.walletguru.me\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.walletguru.me",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z005616523M0XVD03LD0M_stg.walletguru.me_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.walletguru.me",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z005616523M0XVD03LD0M"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.records[\"stg.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "dev-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].shared",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "stg.websocket.walletguru.co",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z00522293EO3PH1CIDJ_stg.websocket.walletguru.co_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "stg.websocket.walletguru.co",
            "records": [
              "a0f5940e5c35f4672a9672546f8e0b66-461892852.us-east-2.elb.amazonaws.com"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z00522293EO3PH1CIDJ"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_route53_zone.walletguru"
          ]
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-auth\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:746669237448:repository/backend-auth",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-auth",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-auth",
            "registry_id": "746669237448",
            "repository_url": "746669237448.dkr.ecr.us-east-2.amazonaws.com/backend-auth",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-codes\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:746669237448:repository/backend-codes",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-codes",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-codes",
            "registry_id": "746669237448",
            "repository_url": "746669237448.dkr.ecr.us-east-2.amazonaws.com/backend-codes",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-notification\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:746669237448:repository/backend-notification",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-notification",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-notification",
            "registry_id": "746669237448",
            "repository_url": "746669237448.dkr.ecr.us-east-2.amazonaws.com/backend-notification",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"backend-wallet\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:746669237448:repository/backend-wallet",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "backend-wallet",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "backend-wallet",
            "registry_id": "746669237448",
            "repository_url": "746669237448.dkr.ecr.us-east-2.amazonaws.com/backend-wallet",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"frontend-admin\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:746669237448:repository/frontend-admin",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "frontend-admin",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "frontend-admin",
            "registry_id": "746669237448",
            "repository_url": "746669237448.dkr.ecr.us-east-2.amazonaws.com/frontend-admin",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.repositories[\"ws\"]",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "backend-auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-east-2:746669237448:repository/ws",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "force_delete": null,
            "id": "ws",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "ws",
            "registry_id": "746669237448",
            "repository_url": "746669237448.dkr.ecr.us-east-2.amazonaws.com/ws",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-stg\"]",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::walletguru-stg",
            "bucket": "walletguru-stg",
            "bucket_domain_name": "walletguru-stg.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "walletguru-stg.s3.us-east-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [
              {
                "id": "",
                "permissions": [
                  "READ"
                ],
                "type": "Group",
                "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
              },
              {
                "id": "4a3bd789b28ea81d92111a0880b587731ff8939ece9d539bcd1914720bd6a062",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z2O1EMRO9K5GLX",
            "id": "walletguru-stg",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "us-east-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-stg\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_acl",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_control_policy": [
              {
                "grant": [
                  {
                    "grantee": [
                      {
                        "display_name": "",
                        "email_address": "",
                        "id": "",
                        "type": "Group",
                        "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
                      }
                    ],
                    "permission": "READ"
                  },
                  {
                    "grantee": [
                      {
                        "display_name": "",
                        "email_address": "",
                        "id": "4a3bd789b28ea81d92111a0880b587731ff8939ece9d539bcd1914720bd6a062",
                        "type": "CanonicalUser",
                        "uri": ""
                      }
                    ],
                    "permission": "FULL_CONTROL"
                  }
                ],
                "owner": [
                  {
                    "display_name": "",
                    "id": "4a3bd789b28ea81d92111a0880b587731ff8939ece9d539bcd1914720bd6a062"
                  }
                ]
              }
            ],
            "acl": "public-read",
            "bucket": "walletguru-stg",
            "expected_bucket_owner": "",
            "id": "walletguru-stg,public-read"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example",
            "module.s3.aws_s3_bucket_ownership_controls.example",
            "module.s3.aws_s3_bucket_public_access_block.example"
          ]
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-stg\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_ownership_controls",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "walletguru-stg",
            "id": "walletguru-stg",
            "rule": [
              {
                "object_ownership": "BucketOwnerPreferred"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example"
          ]
        }
      ]
    },
    {
      "module": "module.s3[\"walletguru-stg\"]",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": false,
            "block_public_policy": false,
            "bucket": "walletguru-stg",
            "id": "walletguru-stg",
            "ignore_public_acls": false,
            "restrict_public_buckets": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.example"
          ]
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "managed",
      "type": "helm_release",
      "name": "traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "traefik",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "traefik",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.9.7",
                "chart": "traefik",
                "first_deployed": 1726866294,
                "last_deployed": 1726866294,
                "name": "traefik",
                "namespace": "traefik",
                "notes": "\n\nTraefik Proxy v2.9.7 has been deployed successfully\non traefik namespace !\n",
                "revision": 1,
                "values": "{\"additionalArguments\":[\"--log.level=DEBUG\",\"--certificatesresolvers.le.acme.email=youremmail@gmail.com\",\"--certificatesresolvers.le.acme.storage=/data/acme.json\",\"--certificatesresolvers.le.acme.tlschallenge=true\",\"--certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory\"],\"dashboard\":{\"domain\":\"traefik.ui.kube\",\"enabled\":true},\"deployment\":{\"replicas\":1},\"rbac\":{\"enabled\":true}}",
                "version": "21.1.0"
              }
            ],
            "name": "traefik",
            "namespace": "traefik",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://traefik.github.io/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "deployment.replicas",
                "type": "",
                "value": "1"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 800,
            "values": [
              "dashboard:\n  enabled: true\n  domain: traefik.ui.kube\nrbac:\n  enabled: true\nadditionalArguments:\n  - \"--log.level=DEBUG\"\n  - \"--certificatesresolvers.le.acme.email=youremmail@gmail.com\"\n  - \"--certificatesresolvers.le.acme.storage=/data/acme.json\"\n  - \"--certificatesresolvers.le.acme.tlschallenge=true\"\n  - \"--certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory\""
            ],
            "verify": false,
            "version": "21.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "admin",
                  "namespace": "stg"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin",
                          "namespace": "stg"
                        },
                        {
                          "name": "admin-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "services": [
                        {
                          "name": "frontend-admin",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin",
                          "namespace": "stg"
                        },
                        {
                          "name": "admin-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "frontend-admin",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "admin-http",
                  "namespace": "stg"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "services": [
                        {
                          "name": "frontend-admin",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin-http",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.admin.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "admin-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "frontend-admin",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "admin",
                  "namespace": "stg"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.admin.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "admin-to-https",
                  "namespace": "stg"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "admin-to-https",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "auth",
                  "namespace": "stg"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth",
                          "namespace": "stg"
                        },
                        {
                          "name": "auth-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-auth",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth",
                          "namespace": "stg"
                        },
                        {
                          "name": "auth-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "auth-http",
                  "namespace": "stg"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-auth",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth-http",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "auth-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "auth",
                  "namespace": "stg"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "auth-to-https",
                  "namespace": "stg"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "auth-to-https",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "graphql-backend",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend",
                          "namespace": "default"
                        },
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "3001"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend",
                          "namespace": "default"
                        },
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3001",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "graphql-backend-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "3001"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.graphql.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "graphql-backend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3001",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "graphql-backend",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.graphql.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "graphql-backend-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "graphql-backend-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-interaction",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3009"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3009",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-interaction-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3009"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.interaction.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-interaction-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3009",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-interaction",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.interaction.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-interaction-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-interaction-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-mock",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-mock",
                          "port": "3030"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-mock",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3030",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-mock-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-mock",
                          "port": "3030"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.mock.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-mock-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-mock",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3030",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-mock",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.mock.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-mock-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-mock-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "notification",
                  "namespace": "stg"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification",
                          "namespace": "stg"
                        },
                        {
                          "name": "notification-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-notification",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification",
                          "namespace": "stg"
                        },
                        {
                          "name": "notification-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-notification",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "notification-http",
                  "namespace": "stg"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-notification",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification-http",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.notification.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "notification-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-notification",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "notification",
                  "namespace": "stg"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.notification.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "notification-to-https",
                  "namespace": "stg"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "notification-to-https",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-auth",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3006"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3006",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-auth-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-auth",
                          "port": "3006"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.rafiki-auth.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-auth-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-auth",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3006",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-auth",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.rafiki-auth.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-auth-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-auth-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-frontend",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-frontend",
                          "port": "3010"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-frontend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3010",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-frontend-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-frontend",
                          "port": "3010"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.rafiki.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "rafiki-frontend-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-frontend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3010",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-frontend",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.rafiki.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-frontend-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-frontend-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "wallet",
                  "namespace": "stg"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet",
                          "namespace": "stg"
                        },
                        {
                          "name": "wallet-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-wallet",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet",
                          "namespace": "stg"
                        },
                        {
                          "name": "wallet-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-wallet",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "wallet-http",
                  "namespace": "stg"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-wallet",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet-http",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.wallet.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "wallet-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-wallet",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "wallet",
                  "namespace": "stg"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.wallet.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "wallet-to-https",
                  "namespace": "stg"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "wallet-to-https",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-open-payments",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "80"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments",
                          "namespace": "default"
                        },
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "80",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "rafiki-open-payments-http",
                  "namespace": "default"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "services": [
                        {
                          "name": "rafiki-rafiki-backend",
                          "port": "80"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments-http",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.walletguru.me`)",
                      "middlewares": [
                        {
                          "name": "rafiki-open-payments-to-https",
                          "namespace": "default"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "rafiki-rafiki-backend",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "80",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-open-payments",
                  "namespace": "default"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.walletguru.me\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "rafiki-open-payments-to-https",
                  "namespace": "default"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "rafiki-open-payments-to-https",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "ws",
                  "namespace": "stg"
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws",
                          "namespace": "stg"
                        },
                        {
                          "name": "ws-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-ws",
                          "port": "3000"
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "websecure"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws",
                          "namespace": "stg"
                        },
                        {
                          "name": "ws-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-ws",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": "le",
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "name": "ws-http",
                  "namespace": "stg"
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "services": [
                        {
                          "name": "backend-ws",
                          "port": "3000"
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "kind": "string",
                              "match": "string",
                              "middlewares": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ]
                                ]
                              ],
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRoute",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws-http",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "web"
                  ],
                  "routes": [
                    {
                      "kind": "Rule",
                      "match": "Host(`stg.websocket.walletguru.co`)",
                      "middlewares": [
                        {
                          "name": "ws-to-https",
                          "namespace": "stg"
                        }
                      ],
                      "priority": null,
                      "services": [
                        {
                          "kind": null,
                          "name": "backend-ws",
                          "namespace": null,
                          "passHostHeader": null,
                          "port": "3000",
                          "responseForwarding": {
                            "flushInterval": null
                          },
                          "scheme": null,
                          "serversTransport": null,
                          "sticky": {
                            "cookie": {
                              "httpOnly": null,
                              "name": null,
                              "sameSite": null,
                              "secure": null
                            }
                          },
                          "strategy": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "kind": "string",
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "kind": "string",
                                  "name": "string",
                                  "namespace": "string",
                                  "passHostHeader": "bool",
                                  "port": "string",
                                  "responseForwarding": [
                                    "object",
                                    {
                                      "flushInterval": "string"
                                    }
                                  ],
                                  "scheme": "string",
                                  "serversTransport": "string",
                                  "sticky": [
                                    "object",
                                    {
                                      "cookie": [
                                        "object",
                                        {
                                          "httpOnly": "bool",
                                          "name": "string",
                                          "sameSite": "string",
                                          "secure": "bool"
                                        }
                                      ]
                                    }
                                  ],
                                  "strategy": "string",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "ws",
                  "namespace": "stg"
                },
                "spec": {
                  "headers": {
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "headers": [
                        "object",
                        {
                          "customRequestHeaders": [
                            "object",
                            {
                              "X-Forwarded-Proto": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": {
                      "X-Forwarded-Proto": "https,wss"
                    },
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": null,
                    "port": null,
                    "scheme": null
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.traefik-ingress[\"stg.websocket.walletguru.co\"]",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "traefik-ingress-middleware-to-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "name": "ws-to-https",
                  "namespace": "stg"
                },
                "spec": {
                  "redirectScheme": {
                    "permanent": "true",
                    "scheme": "https"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "string",
                          "scheme": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "Middleware",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "ws-to-https",
                  "namespace": "stg",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addPrefix": {
                    "prefix": null
                  },
                  "basicAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "buffering": {
                    "maxRequestBodyBytes": null,
                    "maxResponseBodyBytes": null,
                    "memRequestBodyBytes": null,
                    "memResponseBodyBytes": null,
                    "retryExpression": null
                  },
                  "chain": {
                    "middlewares": null
                  },
                  "circuitBreaker": {
                    "checkPeriod": null,
                    "expression": null,
                    "fallbackDuration": null,
                    "recoveryDuration": null
                  },
                  "compress": {
                    "excludedContentTypes": null,
                    "minResponseBodyBytes": null
                  },
                  "contentType": {
                    "autoDetect": null
                  },
                  "digestAuth": {
                    "headerField": null,
                    "realm": null,
                    "removeHeader": null,
                    "secret": null
                  },
                  "errors": {
                    "query": null,
                    "service": {
                      "kind": null,
                      "name": null,
                      "namespace": null,
                      "passHostHeader": null,
                      "port": null,
                      "responseForwarding": {
                        "flushInterval": null
                      },
                      "scheme": null,
                      "serversTransport": null,
                      "sticky": {
                        "cookie": {
                          "httpOnly": null,
                          "name": null,
                          "sameSite": null,
                          "secure": null
                        }
                      },
                      "strategy": null,
                      "weight": null
                    },
                    "status": null
                  },
                  "forwardAuth": {
                    "address": null,
                    "authRequestHeaders": null,
                    "authResponseHeaders": null,
                    "authResponseHeadersRegex": null,
                    "tls": {
                      "caOptional": null,
                      "caSecret": null,
                      "certSecret": null,
                      "insecureSkipVerify": null
                    },
                    "trustForwardHeader": null
                  },
                  "headers": {
                    "accessControlAllowCredentials": null,
                    "accessControlAllowHeaders": null,
                    "accessControlAllowMethods": null,
                    "accessControlAllowOriginList": null,
                    "accessControlAllowOriginListRegex": null,
                    "accessControlExposeHeaders": null,
                    "accessControlMaxAge": null,
                    "addVaryHeader": null,
                    "allowedHosts": null,
                    "browserXssFilter": null,
                    "contentSecurityPolicy": null,
                    "contentTypeNosniff": null,
                    "customBrowserXSSValue": null,
                    "customFrameOptionsValue": null,
                    "customRequestHeaders": null,
                    "customResponseHeaders": null,
                    "featurePolicy": null,
                    "forceSTSHeader": null,
                    "frameDeny": null,
                    "hostsProxyHeaders": null,
                    "isDevelopment": null,
                    "permissionsPolicy": null,
                    "publicKey": null,
                    "referrerPolicy": null,
                    "sslForceHost": null,
                    "sslHost": null,
                    "sslProxyHeaders": null,
                    "sslRedirect": null,
                    "sslTemporaryRedirect": null,
                    "stsIncludeSubdomains": null,
                    "stsPreload": null,
                    "stsSeconds": null
                  },
                  "inFlightReq": {
                    "amount": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "ipWhiteList": {
                    "ipStrategy": {
                      "depth": null,
                      "excludedIPs": null
                    },
                    "sourceRange": null
                  },
                  "passTLSClientCert": {
                    "info": {
                      "issuer": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "province": null,
                        "serialNumber": null
                      },
                      "notAfter": null,
                      "notBefore": null,
                      "sans": null,
                      "serialNumber": null,
                      "subject": {
                        "commonName": null,
                        "country": null,
                        "domainComponent": null,
                        "locality": null,
                        "organization": null,
                        "organizationalUnit": null,
                        "province": null,
                        "serialNumber": null
                      }
                    },
                    "pem": null
                  },
                  "plugin": null,
                  "rateLimit": {
                    "average": null,
                    "burst": null,
                    "period": null,
                    "sourceCriterion": {
                      "ipStrategy": {
                        "depth": null,
                        "excludedIPs": null
                      },
                      "requestHeaderName": null,
                      "requestHost": null
                    }
                  },
                  "redirectRegex": {
                    "permanent": null,
                    "regex": null,
                    "replacement": null
                  },
                  "redirectScheme": {
                    "permanent": true,
                    "port": null,
                    "scheme": "https"
                  },
                  "replacePath": {
                    "path": null
                  },
                  "replacePathRegex": {
                    "regex": null,
                    "replacement": null
                  },
                  "retry": {
                    "attempts": null,
                    "initialInterval": null
                  },
                  "stripPrefix": {
                    "forceSlash": null,
                    "prefixes": null
                  },
                  "stripPrefixRegex": {
                    "regex": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addPrefix": [
                        "object",
                        {
                          "prefix": "string"
                        }
                      ],
                      "basicAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "buffering": [
                        "object",
                        {
                          "maxRequestBodyBytes": "number",
                          "maxResponseBodyBytes": "number",
                          "memRequestBodyBytes": "number",
                          "memResponseBodyBytes": "number",
                          "retryExpression": "string"
                        }
                      ],
                      "chain": [
                        "object",
                        {
                          "middlewares": [
                            "list",
                            [
                              "object",
                              {
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ]
                        }
                      ],
                      "circuitBreaker": [
                        "object",
                        {
                          "checkPeriod": "string",
                          "expression": "string",
                          "fallbackDuration": "string",
                          "recoveryDuration": "string"
                        }
                      ],
                      "compress": [
                        "object",
                        {
                          "excludedContentTypes": [
                            "list",
                            "string"
                          ],
                          "minResponseBodyBytes": "number"
                        }
                      ],
                      "contentType": [
                        "object",
                        {
                          "autoDetect": "bool"
                        }
                      ],
                      "digestAuth": [
                        "object",
                        {
                          "headerField": "string",
                          "realm": "string",
                          "removeHeader": "bool",
                          "secret": "string"
                        }
                      ],
                      "errors": [
                        "object",
                        {
                          "query": "string",
                          "service": [
                            "object",
                            {
                              "kind": "string",
                              "name": "string",
                              "namespace": "string",
                              "passHostHeader": "bool",
                              "port": "string",
                              "responseForwarding": [
                                "object",
                                {
                                  "flushInterval": "string"
                                }
                              ],
                              "scheme": "string",
                              "serversTransport": "string",
                              "sticky": [
                                "object",
                                {
                                  "cookie": [
                                    "object",
                                    {
                                      "httpOnly": "bool",
                                      "name": "string",
                                      "sameSite": "string",
                                      "secure": "bool"
                                    }
                                  ]
                                }
                              ],
                              "strategy": "string",
                              "weight": "number"
                            }
                          ],
                          "status": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "forwardAuth": [
                        "object",
                        {
                          "address": "string",
                          "authRequestHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeaders": [
                            "list",
                            "string"
                          ],
                          "authResponseHeadersRegex": "string",
                          "tls": [
                            "object",
                            {
                              "caOptional": "bool",
                              "caSecret": "string",
                              "certSecret": "string",
                              "insecureSkipVerify": "bool"
                            }
                          ],
                          "trustForwardHeader": "bool"
                        }
                      ],
                      "headers": [
                        "object",
                        {
                          "accessControlAllowCredentials": "bool",
                          "accessControlAllowHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowMethods": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginList": [
                            "list",
                            "string"
                          ],
                          "accessControlAllowOriginListRegex": [
                            "list",
                            "string"
                          ],
                          "accessControlExposeHeaders": [
                            "list",
                            "string"
                          ],
                          "accessControlMaxAge": "number",
                          "addVaryHeader": "bool",
                          "allowedHosts": [
                            "list",
                            "string"
                          ],
                          "browserXssFilter": "bool",
                          "contentSecurityPolicy": "string",
                          "contentTypeNosniff": "bool",
                          "customBrowserXSSValue": "string",
                          "customFrameOptionsValue": "string",
                          "customRequestHeaders": [
                            "map",
                            "string"
                          ],
                          "customResponseHeaders": [
                            "map",
                            "string"
                          ],
                          "featurePolicy": "string",
                          "forceSTSHeader": "bool",
                          "frameDeny": "bool",
                          "hostsProxyHeaders": [
                            "list",
                            "string"
                          ],
                          "isDevelopment": "bool",
                          "permissionsPolicy": "string",
                          "publicKey": "string",
                          "referrerPolicy": "string",
                          "sslForceHost": "bool",
                          "sslHost": "string",
                          "sslProxyHeaders": [
                            "map",
                            "string"
                          ],
                          "sslRedirect": "bool",
                          "sslTemporaryRedirect": "bool",
                          "stsIncludeSubdomains": "bool",
                          "stsPreload": "bool",
                          "stsSeconds": "number"
                        }
                      ],
                      "inFlightReq": [
                        "object",
                        {
                          "amount": "number",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "ipWhiteList": [
                        "object",
                        {
                          "ipStrategy": [
                            "object",
                            {
                              "depth": "number",
                              "excludedIPs": [
                                "list",
                                "string"
                              ]
                            }
                          ],
                          "sourceRange": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "passTLSClientCert": [
                        "object",
                        {
                          "info": [
                            "object",
                            {
                              "issuer": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ],
                              "notAfter": "bool",
                              "notBefore": "bool",
                              "sans": "bool",
                              "serialNumber": "bool",
                              "subject": [
                                "object",
                                {
                                  "commonName": "bool",
                                  "country": "bool",
                                  "domainComponent": "bool",
                                  "locality": "bool",
                                  "organization": "bool",
                                  "organizationalUnit": "bool",
                                  "province": "bool",
                                  "serialNumber": "bool"
                                }
                              ]
                            }
                          ],
                          "pem": "bool"
                        }
                      ],
                      "plugin": [
                        "map",
                        "dynamic"
                      ],
                      "rateLimit": [
                        "object",
                        {
                          "average": "number",
                          "burst": "number",
                          "period": "string",
                          "sourceCriterion": [
                            "object",
                            {
                              "ipStrategy": [
                                "object",
                                {
                                  "depth": "number",
                                  "excludedIPs": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ],
                              "requestHeaderName": "string",
                              "requestHost": "bool"
                            }
                          ]
                        }
                      ],
                      "redirectRegex": [
                        "object",
                        {
                          "permanent": "bool",
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "redirectScheme": [
                        "object",
                        {
                          "permanent": "bool",
                          "port": "string",
                          "scheme": "string"
                        }
                      ],
                      "replacePath": [
                        "object",
                        {
                          "path": "string"
                        }
                      ],
                      "replacePathRegex": [
                        "object",
                        {
                          "regex": "string",
                          "replacement": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "attempts": "number",
                          "initialInterval": "string"
                        }
                      ],
                      "stripPrefix": [
                        "object",
                        {
                          "forceSlash": "bool",
                          "prefixes": [
                            "list",
                            "string"
                          ]
                        }
                      ],
                      "stripPrefixRegex": [
                        "object",
                        {
                          "regex": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.eks",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.role",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.fargate_profile.data.aws_region.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.role",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.self_managed_node_group.data.aws_subnets.placement_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.traefik.helm_release.traefik",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:network-acl/acl-04fbfdf3c85a00717",
            "default_network_acl_id": "acl-04fbfdf3c85a00717",
            "egress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "id": "acl-04fbfdf3c85a00717",
            "ingress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "owner_id": "746669237448",
            "subnet_ids": [
              "subnet-008379ab617f55a17",
              "subnet-02db037ea6c55d16a",
              "subnet-040b4752575294d35",
              "subnet-04b7dc14ae139d648",
              "subnet-08793111ca5d1064c",
              "subnet-0e205e053d4b1c155",
              "subnet-0e25614456f0649ab"
            ],
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:route-table/rtb-0db4f284b1c7b0ea3",
            "default_route_table_id": "rtb-0db4f284b1c7b0ea3",
            "id": "rtb-0db4f284b1c7b0ea3",
            "owner_id": "746669237448",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "timeouts": {
              "create": "5m",
              "update": "5m"
            },
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:security-group/sg-05f2feb4096ac1fb7",
            "description": "default VPC security group",
            "egress": [],
            "id": "sg-05f2feb4096ac1fb7",
            "ingress": [],
            "name": "default",
            "name_prefix": "",
            "owner_id": "746669237448",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "vpc-default"
            },
            "tags_all": {
              "Name": "vpc-default"
            },
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-0fd47997a27825456",
            "arn": "arn:aws:ec2:us-east-2:746669237448:elastic-ip/eipalloc-0fd47997a27825456",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-00ae48ed873894fab",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0fd47997a27825456",
            "instance": "",
            "network_border_group": "us-east-2",
            "network_interface": "eni-0d8be03baab16c285",
            "private_dns": "ip-10-0-4-184.us-east-2.compute.internal",
            "private_ip": "10.0.4.184",
            "ptr_record": "",
            "public_dns": "ec2-3-131-186-224.us-east-2.compute.amazonaws.com",
            "public_ip": "3.131.186.224",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "vpc-us-east-2a"
            },
            "tags_all": {
              "Name": "vpc-us-east-2a"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:internet-gateway/igw-02ed0ccd913faf687",
            "id": "igw-02ed0ccd913faf687",
            "owner_id": "746669237448",
            "tags": {
              "Name": "vpc"
            },
            "tags_all": {
              "Name": "vpc"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0fd47997a27825456",
            "association_id": "eipassoc-00ae48ed873894fab",
            "connectivity_type": "public",
            "id": "nat-00bf4a476c4bb4700",
            "network_interface_id": "eni-0d8be03baab16c285",
            "private_ip": "10.0.4.184",
            "public_ip": "3.131.186.224",
            "secondary_allocation_ids": [],
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-008379ab617f55a17",
            "tags": {
              "Name": "vpc-us-east-2a"
            },
            "tags_all": {
              "Name": "vpc-us-east-2a"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0ffef60d6516bd6311080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-00bf4a476c4bb4700",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0ffef60d6516bd631",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-02ed0ccd913faf687",
            "id": "r-rtb-0b75eaddbe63a0df41080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0b75eaddbe63a0df4",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:route-table/rtb-0ffef60d6516bd631",
            "id": "rtb-0ffef60d6516bd631",
            "owner_id": "746669237448",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-00bf4a476c4bb4700",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "vpc-private"
            },
            "tags_all": {
              "Name": "vpc-private"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:route-table/rtb-0b75eaddbe63a0df4",
            "id": "rtb-0b75eaddbe63a0df4",
            "owner_id": "746669237448",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-02ed0ccd913faf687",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "vpc-public"
            },
            "tags_all": {
              "Name": "vpc-public"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-02b697c1ab5067351",
            "route_table_id": "rtb-0ffef60d6516bd631",
            "subnet_id": "subnet-08793111ca5d1064c",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0375327fb11be82bb",
            "route_table_id": "rtb-0ffef60d6516bd631",
            "subnet_id": "subnet-02db037ea6c55d16a",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0600e06154d33efbb",
            "route_table_id": "rtb-0ffef60d6516bd631",
            "subnet_id": "subnet-040b4752575294d35",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0ddf182bb02793a39",
            "route_table_id": "rtb-0b75eaddbe63a0df4",
            "subnet_id": "subnet-008379ab617f55a17",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0fc2da8ed0c61bceb",
            "route_table_id": "rtb-0b75eaddbe63a0df4",
            "subnet_id": "subnet-04b7dc14ae139d648",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-012baba203e069975",
            "route_table_id": "rtb-0b75eaddbe63a0df4",
            "subnet_id": "subnet-0e25614456f0649ab",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:subnet/subnet-08793111ca5d1064c",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-08793111ca5d1064c",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "746669237448",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2a",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2a",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:subnet/subnet-02db037ea6c55d16a",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-02db037ea6c55d16a",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "746669237448",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2b",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2b",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:subnet/subnet-040b4752575294d35",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-040b4752575294d35",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "746669237448",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-private-us-east-2c",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "vpc-private-us-east-2c",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:subnet/subnet-008379ab617f55a17",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2a",
            "availability_zone_id": "use2-az1",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-008379ab617f55a17",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "746669237448",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2a",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2a",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:subnet/subnet-04b7dc14ae139d648",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2b",
            "availability_zone_id": "use2-az2",
            "cidr_block": "10.0.5.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-04b7dc14ae139d648",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "746669237448",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2b",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2b",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:subnet/subnet-0e25614456f0649ab",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-2c",
            "availability_zone_id": "use2-az3",
            "cidr_block": "10.0.6.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0e25614456f0649ab",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "746669237448",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "vpc-public-us-east-2c",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "vpc-public-us-east-2c",
              "kubernetes.io/cluster/eks-OBiQM5Gh": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:vpc/vpc-08fe2e12a2ebff367",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-04fbfdf3c85a00717",
            "default_route_table_id": "rtb-0db4f284b1c7b0ea3",
            "default_security_group_id": "sg-05f2feb4096ac1fb7",
            "dhcp_options_id": "dopt-054954f6bc2e0538e",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-08fe2e12a2ebff367",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-0db4f284b1c7b0ea3",
            "owner_id": "746669237448",
            "tags": {
              "Name": "vpc"
            },
            "tags_all": {
              "Name": "vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3189784375",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::wg-stg-vpn-config-files/*\",\n        \"arn:aws:s3:::wg-stg-vpn-config-files\"\n      ],\n      \"Principal\": \"*\",\n      \"Condition\": {\n        \"Bool\": {\n          \"aws:SecureTransport\": \"false\"\n        }\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Deny\",\"Action\":\"s3:*\",\"Resource\":[\"arn:aws:s3:::wg-stg-vpn-config-files/*\",\"arn:aws:s3:::wg-stg-vpn-config-files\"],\"Principal\":\"*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:*"
                ],
                "condition": [
                  {
                    "test": "Bool",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:SecureTransport"
                  }
                ],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "*"
                  }
                ],
                "resources": [
                  "arn:aws:s3:::wg-stg-vpn-config-files",
                  "arn:aws:s3:::wg-stg-vpn-config-files/*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (Ohio)",
            "endpoint": "ec2.us-east-2.amazonaws.com",
            "id": "us-east-2",
            "name": "us-east-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:746669237448:certificate/a45c9f32-b356-4cf7-a9d0-b0f22d92f639",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "certificate_chain": null,
            "domain_name": "wg.stg.vpn.ca",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:746669237448:certificate/a45c9f32-b356-4cf7-a9d0-b0f22d92f639",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-12T00:35:01Z",
            "not_before": "2024-11-14T00:35:01Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAt9NpgQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZY\nlEj72hKwasyX88vCaBgBVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q\n60reOoFBvlzvF7MzFvkgudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxW\nUI+pAgUMVMScyPX0QPAu+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdv\nbyc6z14i+Aj5D7+wQuHeU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BO\nbiDKsNlRLc1ccgD3KZ3VhDXlnQ0kd5zHx3DfNwIDAQABAoIBAHgH4qcygMWM4Syb\nHQA/E7jNNVQiphC8MQx4k+TMskCwgrwY7ZP9x/3QIEPMThgR32Iq8owGLi1uvqBd\nU1plbdfjM6gs0jrTnLi50vvnAiUjn7v7TFDRNSSMjAoqErCuAVkp2RWjDJ5Vc2F0\nFAwL6jv7+gVz2WA6uIDDc+91bVPw2MoWLdkpwABjA+PiY19ERoudwKQNCO30F73a\nKLp66I8XdIA2ynXtLBsX1CMQTzeHauipvN3PLXfVIoY1mT+7zr5Ca9QohBteVdkQ\nFcQG8WDtKFpcRYW4hU80f5Ki0Jsavd0CFQ+xVEYLwkBQ3KCbmEqhz0uLbkXfSZ3j\nMg8DK4kCgYEAxR4CJVdFchuUKd8PuEUDo9806fJzK3fh2jnmaZcMnoZpWNWjGRPJ\nzFWPxUBV2Gl7ud0aF/96HfX3Mr90yLnXh9gH6jv6H7UEtYHC+9pK2rcWy5T858Yg\nzpJESfIx8poycnz7yHcsWPQIUX9Ug1b7wW8Gaokg8vf0Sldl1UGFjPsCgYEA7rz7\nQ/izNu3jiJIPnMu8cEq73D98PXRXBEsQ71MA9gP+rNah54RX61xzVOYbNTWWzf+x\n+KZM2yVNP4/grPNatbf2SoJk0BwCWDJ4VkPkrt7v5CDN+ob2yN4xrAaQLUaOPzPb\n/qidTna4xMqcsDOsCdwCB1ZzcGuxlTiHHD4KafUCgYEArazN+TaWkn5oIihOQm5U\nUbtldMdQ4DjFPzCKqfgTf00wXrwE8yBzSd0NSp9vw7jU8aM0zXYkk2dXQVhdPko3\n85HND31+2Rb2KjJFqP/huildJUyFNHVmDHvlPT3u8jEYR7WFZlBSO6Hv/lZxETO/\np+P5xD5EUK9Vh3bP24DaeacCgYAYfoM5IhchF580r+eyKqUW0FQd8NWKaJlU8261\nX0rF8vr6OLs7ybRLjZy3pTQ9bVYfpJBZ9pYEFfuq/dQLapxv8IPweRhm0bjb27HF\nCAo6dt0eBs+bWKWRTlrCT5oTSx3lFikII7ygBEZIypDw8xw/lrcOkaweaK47pSUX\nnLXs0QKBgHsd9hFjy6uk44YHd+ABEZE7zvah65VNmweEBVr95puwJG2IE1ewwNhh\n3gYHLLpQJdbNRKRhNSsNpngOqc3w437LreEaqk4H6jx5t6ceOMIG+d5X2JraXNNX\n126429s5un7PFhAz2Xm7PS8E8V8gNJs7G254q/XBHRwHKLfgXsok\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.stg.vpn.ca"
            ],
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:746669237448:certificate/51e832f7-f9b2-473f-9aec-435afe7032af",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDPDCCAiSgAwIBAgIRAJ32R8KtJWJg/noujjJBh5QwDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAzWhcNMzQxMTEyMDAzNTAzWjA2MQswCQYDVQQKEwJ3ZzEnMCUGA1UEAxMe\nd2cuc3RnLnZwbi5kYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA0r0AqeO1mVyixnXXuysLlFDwimy+jF/zVGkChf9f8Igf\nXVJb8NAB484BHUOoUYZk+KAod6ZilPhnWEH3Jr7zOgZlB5pWclqDohpuVxZhZvCL\njc98u0NIIIXteQ399R67KwIfQkKK3RgPgVWasuLgG8O6KK6c43NpBUFzP6PBXWRW\nUhYPy547optBkhb7C8kDqnsfzhDoHLr3mf5SpJQOu394nRJdbFjQASFCUY4+3MvY\nKiKt2CM7OHa90fUvthAXAx9VmsW11LYX0IkVIWoJi4Bx1d5gwm7DduQOZApNTUZD\n6LFGTNLKDeqtZsfmDbZgCuqqFkZrrBhRJGuLZzvNcwIDAQABo1YwVDAOBgNVHQ8B\nAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNV\nHSMEGDAWgBThVHQIDw2llbtDVUn8APjVWOXZJzANBgkqhkiG9w0BAQsFAAOCAQEA\nrcHZlwp0B8BITsP41tIpSyk1+cc9bTX4ABPK7e6M42DWruzdZIE2OJrKmCJ2AqY6\nd/wD+q6iuChU5Ls2sUDqe06ho/kQB+47Z9hqYyvkcrbuw+bk9RgbCidJ0qsb2yxu\nE4fmH7gqw7hE3ZV4PnikKs+kXqLk+ntvLuQoKZldoZQdD0WXVgjzW1E9nodCk9pK\nHoz7vPy3ZTb6KmTozKLmNXh4AaLy/56xWFdi9Uo3Q1GYr6J8+hPyzG5eRwUjqAgM\nT4dBEh0Dsrp40pX2t8aqZUjHmEGbD6jpRoNHwubklPtSuqJ/cbB6C3pIRiYechI9\nG8TDiJRgnbTpGs7oNogtdA==\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.stg.vpn.daniel.gomez-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:746669237448:certificate/51e832f7-f9b2-473f-9aec-435afe7032af",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-12T00:35:03Z",
            "not_before": "2024-11-14T00:35:03Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA0r0AqeO1mVyixnXXuysLlFDwimy+jF/zVGkChf9f8IgfXVJb\n8NAB484BHUOoUYZk+KAod6ZilPhnWEH3Jr7zOgZlB5pWclqDohpuVxZhZvCLjc98\nu0NIIIXteQ399R67KwIfQkKK3RgPgVWasuLgG8O6KK6c43NpBUFzP6PBXWRWUhYP\ny547optBkhb7C8kDqnsfzhDoHLr3mf5SpJQOu394nRJdbFjQASFCUY4+3MvYKiKt\n2CM7OHa90fUvthAXAx9VmsW11LYX0IkVIWoJi4Bx1d5gwm7DduQOZApNTUZD6LFG\nTNLKDeqtZsfmDbZgCuqqFkZrrBhRJGuLZzvNcwIDAQABAoIBAQDCK/WNk8tCmJE+\nrVvuEBZmPUG1OcdEjjAlKXByyL+8X6AOm5EtTGtBXBG4xhszqtIkJ2XCASO6QTrv\nnjA8mhp/715tZ+6ZBP9egF4EjhGHCMJ9Ep3J6Y9usBgDvzms/fjVAuqMYcWTO9Ul\nhRu6EcMOsgQ38dOK20770bd//sFu6xSlyd+O8AzzS14Kkgi/jAX4EItiYaR/TwAY\nK2MAS0aOI0Cy3WaNMZ8kLdEmYYxW5nZb6tjGtuxM+jk8Cu6p8mEWM0MfHkYIgOmF\nId+DrD2rjKMvmTtiWY/QsOLgii5jN8T7aJrpQ1YLuU4LpZ0cYjzLvk/REyBYkIy+\nwaI1dSr5AoGBAPc6nwrhsrIepM3STarMmS4fjn3rIpV3VKI5Ma56EEdr+YkH8SEo\n7TrLLVypxDgQ7Ti060JNyR+1fk0773xmZpsGzE7AqEYTthchy0twYCTLa6anV2NO\ny5vZvnltgTFabnVbBiTq2J9DkLDrMPezio9Zu0C0OquxOC+vjCdhV4sVAoGBANo2\n91Z6Q0K4HpXx563sfRVeD2cNLmt35lNQEpmlI9tqqkB2Z/B9KTeE+xGhayTw+FJH\n9IF0web1qrvYBpig5gG60rjnU+VjImBKcC+cNPtk6QbN9678OX5v3t+rRsDe2m85\nXCowSzyymtNaCSFpjxXxn+UcLxwIYxp1yn2EzXhnAoGBAIIVCyfbl32XGBnf5NPQ\nsWyOWBgzB1BjqFlvBJAMU9JwoqySTDKpaSE9VJHkFYV2iosCzqJlcUTI5zrWJW1s\nJ+K8EfYB8shkiLPlKSV5bG0Px4W5mQZ8qC9Jw6n6jzaboXEIQtRb6TzrfQ9JwMsk\nYeyJRziFXDWImsqkcHcsBbb9AoGBALM28WvUfekNzhDX2667yv8BgSThbn5UupUx\n7hTBy/EoaSsIE9Uu9erjDFAughCU11y8O9MWUSmeGdqsUL6JZl2FUgsJ8Z0zDciH\nWhu/7sOI3Nj5z7Gm9JEiz6hiwnkkjcFLGqaLgz8WcJGkIFuQljMvfmJsA0TCnqHc\nm7D6oMWBAoGBALXStP9t/1vatqKUM0Ws+7tPKpP5ROrA1+r4HUQIIOUJ2yOl+v3c\n8VrDIh+OoRSv33uSk4dACndVJmRGIiD9TurtDNIlDxFtBI5CPoQIKsylsgXTet7e\nAO03zIIGgb6TeeDKMes9/wdItmdxhtVkzEAfJPQYezu1q+YknRB7zKvp\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.stg.vpn.daniel.gomez-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:746669237448:certificate/3bac51f9-62b2-48c5-9b2f-ff1dc7120918",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDNDCCAhygAwIBAgIRAKQdVowS/hCGelApWp71zvswDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAzWhcNMzQxMTEyMDAzNTAzWjAuMQswCQYDVQQKEwJ3ZzEfMB0GA1UEAxMW\nd2cuc3RnLnZwbi5yb290LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\nAQoCggEBAK0UpLjfcU/4DwgUL7/dbYM3651odL86CpQ7c8esIViTrNDPyE0kaGfQ\ncIYWlajhc1a6E3c/dU44RKbYUgchZGr+8AV52rONIquPlJqTsLd2d9K8YZmZNyxD\nKNCrfLHBdZT/Nb0Gok75Wj0my+pdAz8AYck/yDuGLdlkL8AG8HDzrlNIGizboYFj\nGQD8RgbRrV1SVjLKx/hMSjOKdsHl9WKFae8K0HjAZaLS3+5uIsA88ykqZgMQyV57\n5G1mSs0AWXsHST2U3dfVpAC0vTKkFnnfgYZuBCxhdrgp4tgi9A0DGEsGOeXZHi/y\naADrr+6TQ1NvFnoGK5PSXCWbL3fPjfUCAwEAAaNWMFQwDgYDVR0PAQH/BAQDAgWg\nMBMGA1UdJQQMMAoGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAU\n4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcNAQELBQADggEBAKADL8ZZiCYA\n36UiaMRUIjB6ad30AuBQbET46Wee1hERgJVzA0Zb6E1Tp/1mDLgvHFhzAHh/RhQO\n3rDqUOTJrq7/2evrjnYpk6U601AHehJ0wohFzvsTi0mPDk7R/DUPZScnRZnu+BKB\nezwju8SeFmfj2UhPnBQYj0rmMNXtK8pAUY2gz9NAw2EHJSxaRVADi7OtgWInFIMJ\nA8ItjwkyTJNbIL/DKHwf41N5cRa7vR7+j4hC6G8gyXteW/Z3A7xAFGPzGMsB7ALD\n4YOze6xeMKHQqn026Kw6x6zAupQL7pQkt6Aq828QX7mD2YDND+RSq3hN2HC7yMaM\nUt/fkq/p5jI=\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.stg.vpn.root-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:746669237448:certificate/3bac51f9-62b2-48c5-9b2f-ff1dc7120918",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-12T00:35:03Z",
            "not_before": "2024-11-14T00:35:03Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArRSkuN9xT/gPCBQvv91tgzfrnWh0vzoKlDtzx6whWJOs0M/I\nTSRoZ9BwhhaVqOFzVroTdz91TjhEpthSByFkav7wBXnas40iq4+UmpOwt3Z30rxh\nmZk3LEMo0Kt8scF1lP81vQaiTvlaPSbL6l0DPwBhyT/IO4Yt2WQvwAbwcPOuU0ga\nLNuhgWMZAPxGBtGtXVJWMsrH+ExKM4p2weX1YoVp7wrQeMBlotLf7m4iwDzzKSpm\nAxDJXnvkbWZKzQBZewdJPZTd19WkALS9MqQWed+Bhm4ELGF2uCni2CL0DQMYSwY5\n5dkeL/JoAOuv7pNDU28WegYrk9JcJZsvd8+N9QIDAQABAoIBABcDaauTOjPR3d3L\nIVY3kPojk1aIrw1GIGX5SbnA72YhrJbPKejn8GHtWyjZE+kyoO1lLHVsoKJX5Pjy\nRmXgUMPRRgTUYPoCyBtbqfyrqpGaVPBWT/vmXWmrPGASjS/tcz7ueCy8FxS9HvyG\njhKJb4cO+/GQY4VWn/4JzjeQNKQv6nexXl3hAVgt4lA/UPUhSKj+fnMAF2+jZ1Og\nvA49Pu4rWe/eix5v45mYtuZYPYdTKCQ4sNVQWHthpgXKzPnpwaZjll9z7nnzLbID\nMKtPoPEixqfOyO+7TbQLWTBMWknvAzVIZ5GTAn7iFkznOu6sxDRHdIdrRuGxWIl0\n+5kcbLkCgYEA2ooO0r1jiAM0zdJg1LEW+gam1pRU6m1XgYuSA3A8SlMQ0YaXF8S6\njrf0FDOmMzG2PvtIh2aX0vy2yDdvJwsMz6u0UykvhvSM1YfdCDYxHo94O2KytCiS\nuwkr/Z1Ila6d/trHzCmYXjDVlcb6eXh4rPWSJ8AEQQNltePrTYbvFG8CgYEAyr/E\n0qaKv4Cr10Cn+ynU2mc0iK6pQ5wlo/ZKXZwCeROAV+qzNS2tSwjTnhqUHd6IITCe\nkBzv8wp0ZZ0O2sL8xp4597G8TOcdGjt5rWRSLNUVUMHcT8PBpatRaQewonVjmNAW\nGNViLhvEtg2YYOLPtNSPaNrMjpUeQxyRPVzPndsCgYBpAMaoiSkGlAvODRRLfZ89\nmO6W0YSPcuQFsYsBre66A3lkQxfb6sF8i3RyNHLZzDv1vQUXUbsHPDeSsdftWYjZ\nS3YEMxjL7jqw6mvQY0FsnqC1X/HfUFNYHMsPO4BBsznk1zgCp8W3FB27rnRw4uqQ\nqBmGkeM5XamEILPRd1DubwKBgHhfBD7AK63oeZ1RQKnoOvvzvAfOEqYWRW6j4aDT\n58/0WQVZTU4sMS9ULTc3tmpJXO6/i9QpqffUZCiT52bPzv0ooWfCOPY7XFbfqqzb\n28HMPFx2zBL7OLPgE3RU4XSCV0A5gnT58tFHITGovqf+4KwOapopFLsuIwpbIouY\n15ZzAoGAE8Ztopn7AS5BjvM5TkGy+Z0zjZRD+0ZNkNCDGydDIiYp2rhPVFKeYMMu\nsSfNYsaJcKQ7iy7IcH7MXSdmOoCQbbxsuVyO0HjsZiF+yguH70GvHQBPnw7R+Z0Y\nT9sFyzAfCGIn/ilBjCZlxFhu6kuajzxCLGOE2avfg9KXKgEKCoY=\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.stg.vpn.root-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:746669237448:certificate/e0dfa054-c88a-4950-8769-2e64204de1e1",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDOTCCAiGgAwIBAgIRAI8F508jb7eojfIHXew2NdEwDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAzWhcNMzQxMTEyMDAzNTAzWjAzMQswCQYDVQQKEwJ3ZzEkMCIGA1UEAxMb\nd2cuc3RnLnZwbi50ZXJyYWZvcm0tY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEA2SWHfO5R/dJLMXaUPhxE5ZEDF1THNXy+JtHOMuLNwFIJEX3+\nDQQ4UfUQxKTvFpM6cIh2/A5msnS76/p3juMzo36gs0vQjRly9PFtB/KHcDAJAtUH\nowU3pgI+8BWyS3n2USia7ro7asU+vL0uA3bOTx70Tq8ocUqoZr5hPAHDAeYNi5ej\nkldkbUbiVR6eyaYHo/cUJP6Cndalqen3VDapI1cJEVdXVKh5GDjkVRkUpWZ47cwr\nXVRBur8r9OGt51LC4evyqTd2C3s+7csBaZuNCbmNCLyGfz5eb8xCE+2mUk8rUhxh\n+n9PRCCzc5hGFJA7y3h1ewhjIj8olHgT4m02jwIDAQABo1YwVDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME\nGDAWgBThVHQIDw2llbtDVUn8APjVWOXZJzANBgkqhkiG9w0BAQsFAAOCAQEAOeS/\nmXOEabEocmfzqB2oRpIjbPNeCynMFKSymlePFgtoX2hWOMstW2TIJD/2EJjGnzHH\nqn0D4JxPcWlc3lVCASkqhP/GNQWYP9LH0IPfLwFInxFiDtgt1lgEGk8e9tWmwi0P\nzHhNLG/IHGb2hfYRRuAWhc2g/RL1oK4+eW5enXh2DL51T59UOYeh4AnMXVy9qXXi\nGS8EN1pa4LM4UtlzA/sa57yN8rWaitngwJTYt+rU8tJTxn4T3ZNKMZkmH3RvQ31z\nWhBj1tYFuZB8rDdQIF4xAU1Ge6XUsW/cVrOVk4jWbr3Ff6WMUge2tg7PKJCbkUN0\neBE2LIWTQyW9cKQhBA==\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.stg.vpn.terraform-client",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:746669237448:certificate/e0dfa054-c88a-4950-8769-2e64204de1e1",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-12T00:35:03Z",
            "not_before": "2024-11-14T00:35:03Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA2SWHfO5R/dJLMXaUPhxE5ZEDF1THNXy+JtHOMuLNwFIJEX3+\nDQQ4UfUQxKTvFpM6cIh2/A5msnS76/p3juMzo36gs0vQjRly9PFtB/KHcDAJAtUH\nowU3pgI+8BWyS3n2USia7ro7asU+vL0uA3bOTx70Tq8ocUqoZr5hPAHDAeYNi5ej\nkldkbUbiVR6eyaYHo/cUJP6Cndalqen3VDapI1cJEVdXVKh5GDjkVRkUpWZ47cwr\nXVRBur8r9OGt51LC4evyqTd2C3s+7csBaZuNCbmNCLyGfz5eb8xCE+2mUk8rUhxh\n+n9PRCCzc5hGFJA7y3h1ewhjIj8olHgT4m02jwIDAQABAoIBAQCBo0wuI8HDfUby\n8s4x/oKLY3Wq+iwsHJsRZfRqoMkhZliPnt6LOte85kfqfmVW3vLmuDIA7UAWjmaa\nzV+PaMktdK3QHRUXB/h/j5r+QabmLWdTz4bNppHAhFq6ztkxAlExxsIof/p1FekM\nmQzdeJJW3i4Qw7WrXV0IaeR3BL49ZNdK/EyvkTgvIlro2V7I41cC0R7MhSTtYEVH\nLRh+YH/kIhEbg1OLY+A88KZamQkN6FxhqG2HJchprsF1acGYim2RMhAzC2sqGfx7\n8eve5ZmntSr7X4YJWvG+cpaVg4Y9J122nxtW8DBcr96cKkyjk4FDm5afGkZOjJS+\niY1sZV3BAoGBAPNuLzLm1v6J2OXrVu70BfoGw5OsN7NLaTCpOTAtZWANh5duJ2c2\nng7qwn2BnYFJQR98grIEqsReIrdtqFHp1OWuMJ6qsiN7Fid8w0lMxqxz7QtoVeC+\nMo65ouZUqBV4GFQLYwRTubhNiQ+2FVH3vqrO45k2BhR1WDvWUIiX8aOxAoGBAORb\n6LXlNguejgvVaPJ3YSmyCHpS4U/+FLeTDd+WJWZrceXHHk3mRbJJ7oJJCaAqNr0a\n1gkIWFwdKbXWx08Si/hRjpddzUszJm6sOm2pU1YJL2fAjL6V3obhGCTFwvukaFAq\nBXKaCtT4w1noxIWaTHNnuTYtrxxhe2b/Tq8y9k4/AoGBAIKipM2qN8JNc4qfav29\nEuAEdTxwdUvQslic18XU9sw/Nn67bIXlN5lFvq3fuwjAqSQei3zBKGtNIVBSlruu\nwsOnYQwlCogj69WxDJPvkcbGR3WRvlRnfXY+hP8ae0FaO6QOoEqYK9iOM3ms+3AL\nhdTgRh/YcBbWik1CS+GhuNlhAoGAcXsbEglt6ihI/qh3FscsicPnYqJ9RXtGYFO7\nuTisLVGHsGBbNusQB6Gl3Sjel7Fismb7plF3V49Ggw7QzQKyfBxLd/0tYAlzN9xu\nzMAwobi+zhhp2OwxQWXq0ZtVYig5jlzTiDf02hElQzDhOGONSmxpJftd4gSvhmep\nencg35ECgYBY7B7+JXUtxWziFr7KHV6WMsxDY5IG33VFeefI9LaTK6y8lNgJCf4B\nbMslnrUEq12bS43+mxzoQZJH6cf45r4QHviPjnOWm7ybN85cnQXZm2Ltl0Vvi3v+\nf/x1XTwhkQKw3KMFX2wi22XFWvldtlsOeBaHVUZmqY0K3yADuF7tdg==\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.stg.vpn.terraform-client"
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Terraform": "true",
              "Tier": "Private"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-2:746669237448:certificate/25eb289a-1e03-4023-928b-aa3e55b5e100",
            "certificate_authority_arn": "",
            "certificate_body": "-----BEGIN CERTIFICATE-----\nMIIDLzCCAhegAwIBAgIRAMUoiMwMv9Nw1cqnmK49Xa4wDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAyWhcNMzQxMTEyMDAzNTAyWjApMQswCQYDVQQKEwJ3ZzEaMBgGA1UEAxMR\nd2cuc3RnLnZwbi5zZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQDG0EHH2IqirFQoKnCVDKX8wGIMgwYx35z3seTAsVd6An/q4veVa4i0CScBLz8d\nenGru/82ILc/xlfXegOq8zw/0cn3hamBsrmvSiGZduap9rXkbq4pdOycQOmSFHos\nvp6GCPim3VQpfknlecjy7HNIl3vSIyV95HzEIJAZn6sEAHvUdlB5X7hkbiUXw4Qb\ncZcZbgjn/x5dD4F6cvBR7YhVmu1n7uhE6E/RUMDDp7t1GGGNfED4kfyaK/2HTNhL\nn1oXeAR/TB7y7pJTzksr+2uxpzSv8UwDzrAT0zypEoVajjwzkYmOVlCirpgCLowM\niwaYqTS4mH+o0xWE72h3AKANAgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDATBgNV\nHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFOFUdAgP\nDaWVu0NVSfwA+NVY5dknMA0GCSqGSIb3DQEBCwUAA4IBAQBfBVSY8lcxzJra/BL6\n9l3MYxB9tQzfadyCfbyXbEEt9VL1kqkZA17IU6SxGzcKXe6lVZjZmuNm8qUJ5TG+\nAtoIU8lFHOs3J869n2IQOdskOby5cRJTgwGGDjnwN6gEGk3SCUvl6dbATUXuD1A5\n2fhrP9c5WfLL+ioExHkhsc5V6boxpngiE0ZTK/1Az2lRYgwVdCA+nN6rqQw2Srsi\ninTXCXwIdhruTUk+6eEy5rS/YNHscE9O61kuvbbQvOUxzY1bqEXr/XLOIyGZsQnz\nt92lQmLecn4CDMg2tb5FXLiahmQTqDIj6rLyqjvXjKXVNeoj00XUwiCVrTisnbuI\nP/gu\n-----END CERTIFICATE-----\n",
            "certificate_chain": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "domain_name": "wg.stg.vpn.server",
            "domain_validation_options": [],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-2:746669237448:certificate/25eb289a-1e03-4023-928b-aa3e55b5e100",
            "key_algorithm": "RSA_2048",
            "not_after": "2034-11-12T00:35:02Z",
            "not_before": "2024-11-14T00:35:02Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "DISABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAxtBBx9iKoqxUKCpwlQyl/MBiDIMGMd+c97HkwLFXegJ/6uL3\nlWuItAknAS8/HXpxq7v/NiC3P8ZX13oDqvM8P9HJ94WpgbK5r0ohmXbmqfa15G6u\nKXTsnEDpkhR6LL6ehgj4pt1UKX5J5XnI8uxzSJd70iMlfeR8xCCQGZ+rBAB71HZQ\neV+4ZG4lF8OEG3GXGW4I5/8eXQ+BenLwUe2IVZrtZ+7oROhP0VDAw6e7dRhhjXxA\n+JH8miv9h0zYS59aF3gEf0we8u6SU85LK/trsac0r/FMA86wE9M8qRKFWo48M5GJ\njlZQoq6YAi6MDIsGmKk0uJh/qNMVhO9odwCgDQIDAQABAoIBAHcHlmqU3aO5MwV9\nKzxBf1tMvycohtvzOiId8ovfYTUeLAGv83UVFZpcZGrUI6B9f3LHMmvwuGXJVSwf\n0/RUfjzjWF0GPE73dy5YXrdntYAKwinKjiEp7MM8JdscwWzqjzRGSMB2gH37Kzjl\nagbuw7KxZyOPgVHXK0+tAzkkHBpfNJFAYdtASFLiXa+WKxBBQuxShKtkaQrUws1V\nL3tv/qnZrumbjE5kIlfwMbfOKjgKgQHzuMX8Js04vUTHBHXUxHoDurX2RZ0d+v0W\nus4/0/t2YkKI31VKVwNczi3g97jWE2vjlpqjohhHAFAgjLzG4uRo+DpEIUix22i6\nMQmN6Y0CgYEAzn3Z7ObSmDYm/YCSiDSwdOTsneplfGC61HgL2YHJhGme9w9ZLRGa\nTNkRTe/bDK2/dpCkrsN3jeAuzYQr0cE5K+1PGPzaZzg2TB2YWJkNxLcqNFD2vr6x\n7wqcxRH4EQlj1unIF57AJju6HtJzgJduA99DwTDBHVrfPOQWNcGT3n8CgYEA9nsi\nlvl5P5ukkxgl67l4/CuVb1zS8n7wRfzWYMAowFyyzHGwH4wCIklgPHWFnkOTIqNm\nbQNwiYHIqZk8OXVc4YelvAvRE0qAefhE97ByhXDdl13ybgRLQ9Bn0IieOzq3XiuX\ndutJEWGoD8h2ZTSqzwrFKtprRSyIia9k4AhP03MCgYAWyhsAI2WAuRFKjyMc9zu2\nWwGmWBVFSeO0yV79bW6RN5r8x2vfJn8yFg7r3Bn/5zknW8VhKF+Mf/6KXhj7+GhX\n6cP+DQIJvFF5yxZiSNoVKOX2ii0BVkiLCk/NDDOlpbSoJnsX6ERqs9LRzgZDXfMd\naEmxC7F0jO/wZ3fwDOJF/wKBgAkuMu6eoiZ9XJbh+l+aS+hQk0NPmMfRdI+WyEFY\nRuxLR5mXznCOXXH7e6sk0XJAoBVVMrZyv1lPzTKL85NMTMZVsBWd9w6Z4skoNyFm\noA1aU9aUeDgizs7az1MUE5ivKi9GvmB+iP0tvv2/gLFqUcZeZ1OeSQqNixRdxQsX\nJCoDAoGAAuX1yPD1NtAccDr5HnxG66soPX9xDp8/dlCAZuFcqAf064UgBseViG+x\nK71fokp0CNOcvOl+FBeihzO7YeH8gU5Y5b3w/1lc05t2/ogdS36Gnfj55yYfwoAB\njAd4M/Hqj3PGWQw9MqimzRqvhdw4KwJ5ntr0WWqklHblNmcUGxU=\n-----END RSA PRIVATE KEY-----\n",
            "renewal_eligibility": "INELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "wg.stg.vpn.server"
            ],
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "type": "IMPORTED",
            "validation_emails": [],
            "validation_method": "NONE",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "vpn-logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:746669237448:log-group:wg/stg/vpn/logs/",
            "id": "wg/stg/vpn/logs/",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "wg/stg/vpn/logs/",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_cloudwatch_log_stream",
      "name": "vpn-logs-stream",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-2:746669237448:log-group:wg/stg/vpn/logs/:log-stream:connection_logs",
            "id": "connection_logs",
            "log_group_name": "wg/stg/vpn/logs/",
            "name": "connection_logs"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_authorization_rule",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_group_id": "",
            "authorize_all_groups": true,
            "client_vpn_endpoint_id": "cvpn-endpoint-098a9226434b34f6d",
            "description": "",
            "id": "cvpn-endpoint-098a9226434b34f6d,0.0.0.0/0",
            "target_network_cidr": "0.0.0.0/0",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_ec2_client_vpn_network_association.vpn-client",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_endpoint",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:client-vpn-endpoint/cvpn-endpoint-098a9226434b34f6d",
            "authentication_options": [
              {
                "active_directory_id": "",
                "root_certificate_chain_arn": "arn:aws:acm:us-east-2:746669237448:certificate/3bac51f9-62b2-48c5-9b2f-ff1dc7120918",
                "saml_provider_arn": "",
                "self_service_saml_provider_arn": "",
                "type": "certificate-authentication"
              }
            ],
            "client_cidr_block": "10.0.0.0/22",
            "client_connect_options": [
              {
                "enabled": false,
                "lambda_function_arn": ""
              }
            ],
            "client_login_banner_options": [
              {
                "banner_text": "",
                "enabled": false
              }
            ],
            "connection_log_options": [
              {
                "cloudwatch_log_group": "wg/stg/vpn/logs/",
                "cloudwatch_log_stream": "connection_logs",
                "enabled": true
              }
            ],
            "description": "wg-stg-vpn-client",
            "dns_name": "*.cvpn-endpoint-098a9226434b34f6d.prod.clientvpn.us-east-2.amazonaws.com",
            "dns_servers": [],
            "id": "cvpn-endpoint-098a9226434b34f6d",
            "security_group_ids": [
              "sg-0d7558157f399e61b"
            ],
            "self_service_portal": "disabled",
            "self_service_portal_url": "",
            "server_certificate_arn": "arn:aws:acm:us-east-2:746669237448:certificate/25eb289a-1e03-4023-928b-aa3e55b5e100",
            "session_timeout_hours": 8,
            "split_tunnel": true,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "transport_protocol": "udp",
            "vpc_id": "vpc-08fe2e12a2ebff367",
            "vpn_port": 443
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ec2_client_vpn_network_association",
      "name": "vpn-client",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "association_id": "cvpn-assoc-0f917f8a9831c443b",
            "client_vpn_endpoint_id": "cvpn-endpoint-098a9226434b34f6d",
            "id": "cvpn-assoc-0f917f8a9831c443b",
            "subnet_id": "subnet-0e205e053d4b1c155",
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::wg-stg-vpn-config-files",
            "bucket": "wg-stg-vpn-config-files",
            "bucket_domain_name": "wg-stg-vpn-config-files.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "wg-stg-vpn-config-files.s3.us-east-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": true,
            "grant": [
              {
                "id": "4a3bd789b28ea81d92111a0880b587731ff8939ece9d539bcd1914720bd6a062",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z2O1EMRO9K5GLX",
            "id": "wg-stg-vpn-config-files",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "{\"Statement\":[{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::wg-stg-vpn-config-files/*\",\"arn:aws:s3:::wg-stg-vpn-config-files\"]}],\"Version\":\"2012-10-17\"}",
            "region": "us-east-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "wg-stg-vpn-config-files",
              "Terraform": "true"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "wg-stg-vpn-config-files",
              "Terraform": "true"
            },
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "wg-stg-vpn-config-files",
            "id": "wg-stg-vpn-config-files",
            "policy": "{\"Statement\":[{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::wg-stg-vpn-config-files/*\",\"arn:aws:s3:::wg-stg-vpn-config-files\"]}],\"Version\":\"2012-10-17\"}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.data.aws_iam_policy_document.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": true,
            "block_public_policy": true,
            "bucket": "wg-stg-vpn-config-files",
            "id": "wg-stg-vpn-config-files",
            "ignore_public_acls": true,
            "restrict_public_buckets": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_bucket_server_side_encryption_configuration",
      "name": "vpn-config-files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "wg-stg-vpn-config-files",
            "expected_bucket_owner": "",
            "id": "wg-stg-vpn-config-files",
            "rule": [
              {
                "apply_server_side_encryption_by_default": [
                  {
                    "kms_master_key_id": "",
                    "sse_algorithm": "AES256"
                  }
                ],
                "bucket_key_enabled": false
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_s3_bucket.vpn-config-files"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_s3_object",
      "name": "vpn-config-file",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-stg-vpn-config-files/daniel.gomez-wg-stg-vpn.ovpn",
            "bucket": "wg-stg-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTA5OGE5MjI2NDM0YjM0ZjZkLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZqQ0NBZjZnQXdJQkFnSVFOZjhaQzRCdk51UktleFI4ZXdwTE56QU5CZ2txaGtpRzl3MEJBUXNGQURBbApNUXN3Q1FZRFZRUUtFd0ozWnpFV01CUUdBMVVFQXhNTmQyY3VjM1JuTG5ad2JpNWpZVEFlRncweU5ERXhNVFF3Ck1ETTFNREZhRncwek5ERXhNVEl3TURNMU1ERmFNQ1V4Q3pBSkJnTlZCQW9UQW5kbk1SWXdGQVlEVlFRREV3MTMKWnk1emRHY3VkbkJ1TG1OaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdDlOcApnUTBDNDhlTEk1RUFscUpyUE4wRnVKdDA5OHpCSXRnMnlEVHM5R2VvV2VaWWxFajcyaEt3YXN5WDg4dkNhQmdCClZYa3BFL3I1cU5CWmNndUYrQjhoREdSbHJEODk5ZWU0M25VUHljTmhkNC9xNjByZU9vRkJ2bHp2RjdNekZ2a2cKdWR2RjFpWDVUaVMwVG84bFZiaXc4TTlwTE5CYS85eTFiSjNYWTNPRkdueFdVSStwQWdVTVZNU2N5UFgwUVBBdQorVUJIUGczUm9KTG9mN3ZTRC84eXRpcCtMRGlWQVhOVXl6dDd4enF5eXJkdmJ5YzZ6MTRpK0FqNUQ3K3dRdUhlClU3VnZybVNMeHZHa1U4RmROV3BYU2Y3VlhnMWNyZnpKekorUStQdXBTOUJPYmlES3NObFJMYzFjY2dEM0taM1YKaERYbG5RMGtkNXpIeDNEZk53SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU0VlIwQ0E4TnBaVzdRMVZKL0FENDFWamwyU2N3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFJM2xrMFBza2VsV3JmNkV3ZDFRYktsTXNHTjZHcXpYdlNIaEE4VnNkS1grTENCb2dGeGoKN21BY0Y3cFVDMEttWGFabG5QdklBSFRwRDN4YlkxRDVIcS9OcWlaaWtiVDhpZTJWakRBbjlmdDNwcWNzVmdvQgppeHkzYlJyVFgzbk9xN2wyMVMza1JZZTE4eHZLbkczU1BkNGpSNDc5bkV5czE3TklmbTdBRWZrTGZ5NU0wbGtXCno3ZTNZMGlOYm4rb0V0L09IT2FYcWxTY0kyaC81NEQzQTZRTXM2cFd6T0V2a1RuVE5uWEE3VGdCMStiaU5SS2QKRlk0OGw1MGZqU0kyU05raHkxVlFHVkw1d0l3NllGdXFaQXpETkJGeTVZSHF3YnBrUGIwa1lJdEVxekNQWHhrcgpEOXpDbmFObjhBangwWWdFZGtZditML1pnSWVQSGxaMEZqND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQUozMlI4S3RKV0pnL25vdWpqSkJoNVF3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFTE1Ba0dBMVVFQ2hNQ2QyY3hGakFVQmdOVkJBTVREWGRuTG5OMFp5NTJjRzR1WTJFd0hoY05NalF4TVRFMApNREF6TlRBeldoY05NelF4TVRFeU1EQXpOVEF6V2pBMk1Rc3dDUVlEVlFRS0V3SjNaekVuTUNVR0ExVUVBeE1lCmQyY3VjM1JuTG5ad2JpNWtZVzVwWld3dVoyOXRaWG90WTJ4cFpXNTBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwcjBBcWVPMW1WeWl4blhYdXlzTGxGRHdpbXkrakYvelZHa0NoZjlmOElnZgpYVkpiOE5BQjQ4NEJIVU9vVVlaaytLQW9kNlppbFBobldFSDNKcjd6T2dabEI1cFdjbHFEb2hwdVZ4WmhadkNMCmpjOTh1ME5JSUlYdGVRMzk5UjY3S3dJZlFrS0szUmdQZ1ZXYXN1TGdHOE82S0s2YzQzTnBCVUZ6UDZQQlhXUlcKVWhZUHk1NDdvcHRCa2hiN0M4a0RxbnNmemhEb0hMcjNtZjVTcEpRT3UzOTRuUkpkYkZqUUFTRkNVWTQrM012WQpLaUt0MkNNN09IYTkwZlV2dGhBWEF4OVZtc1cxMUxZWDBJa1ZJV29KaTRCeDFkNWd3bTdEZHVRT1pBcE5UVVpECjZMRkdUTkxLRGVxdFpzZm1EYlpnQ3VxcUZrWnJyQmhSSkd1TFp6dk5jd0lEQVFBQm8xWXdWREFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVgpIU01FR0RBV2dCVGhWSFFJRHcybGxidERWVW44QVBqVldPWFpKekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCnJjSFpsd3AwQjhCSVRzUDQxdElwU3lrMStjYzliVFg0QUJQSzdlNk00MkRXcnV6ZFpJRTJPSnJLbUNKMkFxWTYKZC93RCtxNml1Q2hVNUxzMnNVRHFlMDZoby9rUUIrNDdaOWhxWXl2a2NyYnV3K2JrOVJnYkNpZEowcXNiMnl4dQpFNGZtSDdncXc3aEUzWlY0UG5pa0tzK2tYcUxrK250dkx1UW9LWmxkb1pRZEQwV1hWZ2p6VzFFOW5vZENrOXBLCkhvejd2UHkzWlRiNkttVG96S0xtTlhoNEFhTHkvNTZ4V0ZkaTlVbzNRMUdZcjZKOCtoUHl6RzVlUndVanFBZ00KVDRkQkVoMERzcnA0MHBYMnQ4YXFaVWpIbUVHYkQ2anBSb05Id3Via2xQdFN1cUovY2JCNkMzcElSaVllY2hJOQpHOFREaUpSZ25iVHBHczdvTm9ndGRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jZXJ0PgoKPGtleT4KLS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMHIwQXFlTzFtVnlpeG5YWHV5c0xsRkR3aW15K2pGL3pWR2tDaGY5ZjhJZ2ZYVkpiCjhOQUI0ODRCSFVPb1VZWmsrS0FvZDZaaWxQaG5XRUgzSnI3ek9nWmxCNXBXY2xxRG9ocHVWeFpoWnZDTGpjOTgKdTBOSUlJWHRlUTM5OVI2N0t3SWZRa0tLM1JnUGdWV2FzdUxnRzhPNktLNmM0M05wQlVGelA2UEJYV1JXVWhZUAp5NTQ3b3B0QmtoYjdDOGtEcW5zZnpoRG9ITHIzbWY1U3BKUU91Mzk0blJKZGJGalFBU0ZDVVk0KzNNdllLaUt0CjJDTTdPSGE5MGZVdnRoQVhBeDlWbXNXMTFMWVgwSWtWSVdvSmk0QngxZDVnd203RGR1UU9aQXBOVFVaRDZMRkcKVE5MS0RlcXRac2ZtRGJaZ0N1cXFGa1pyckJoUkpHdUxaenZOY3dJREFRQUJBb0lCQVFEQ0svV05rOHRDbUpFKwpyVnZ1RUJabVBVRzFPY2RFampBbEtYQnl5TCs4WDZBT201RXRUR3RCWEJHNHhoc3pxdElrSjJYQ0FTTzZRVHJ2Cm5qQThtaHAvNzE1dForNlpCUDllZ0Y0RWpoR0hDTUo5RXAzSjZZOXVzQmdEdnptcy9malZBdXFNWWNXVE85VWwKaFJ1NkVjTU9zZ1EzOGRPSzIwNzcwYmQvL3NGdTZ4U2x5ZCtPOEF6elMxNEtrZ2kvakFYNEVJdGlZYVIvVHdBWQpLMk1BUzBhT0kwQ3kzV2FOTVo4a0xkRW1ZWXhXNW5aYjZ0akd0dXhNK2prOEN1NnA4bUVXTTBNZkhrWUlnT21GCklkK0RyRDJyaktNdm1UdGlXWS9Rc09MZ2lpNWpOOFQ3YUpycFExWUx1VTRMcFowY1lqekx2ay9SRXlCWWtJeSsKd2FJMWRTcjVBb0dCQVBjNm53cmhzckllcE0zU1Rhck1tUzRmam4zcklwVjNWS0k1TWE1NkVFZHIrWWtIOFNFbwo3VHJMTFZ5cHhEZ1E3VGkwNjBKTnlSKzFmazA3NzN4bVpwc0d6RTdBcUVZVHRoY2h5MHR3WUNUTGE2YW5WMk5PCnk1dlp2bmx0Z1RGYWJuVmJCaVRxMko5RGtMRHJNUGV6aW85WnUwQzBPcXV4T0MrdmpDZGhWNHNWQW9HQkFObzIKOTFaNlEwSzRIcFh4NTYzc2ZSVmVEMmNOTG10MzVsTlFFcG1sSTl0cXFrQjJaL0I5S1RlRSt4R2hheVR3K0ZKSAo5SUYwd2ViMXFydllCcGlnNWdHNjByam5VK1ZqSW1CS2NDK2NOUHRrNlFiTjk2NzhPWDV2M3QrclJzRGUybTg1ClhDb3dTenl5bXROYUNTRnBqeFh4bitVY0x4d0lZeHAxeW4yRXpYaG5Bb0dCQUlJVkN5ZmJsMzJYR0JuZjVOUFEKc1d5T1dCZ3pCMUJqcUZsdkJKQU1VOUp3b3F5U1RES3BhU0U5VkpIa0ZZVjJpb3NDenFKbGNVVEk1enJXSlcxcwpKK0s4RWZZQjhzaGtpTFBsS1NWNWJHMFB4NFc1bVFaOHFDOUp3Nm42anphYm9YRUlRdFJiNlR6cmZROUp3TXNrCllleUpSemlGWERXSW1zcWtjSGNzQmJiOUFvR0JBTE0yOFd2VWZla056aERYMjY2N3l2OEJnU1RoYm41VXVwVXgKN2hUQnkvRW9hU3NJRTlVdTllcmpERkF1Z2hDVTExeThPOU1XVVNtZUdkcXNVTDZKWmwyRlVnc0o4WjB6RGNpSApXaHUvN3NPSTNOajV6N0dtOUpFaXo2aGl3bmtramNGTEdxYUxnejhXY0pHa0lGdVFsak12Zm1Kc0EwVENucUhjCm03RDZvTVdCQW9HQkFMWFN0UDl0LzF2YXRxS1VNMFdzKzd0UEtwUDVST3JBMStyNEhVUUlJT1VKMnlPbCt2M2MKOFZyREloK09vUlN2MzN1U2s0ZEFDbmRWSm1SR0lpRDlUdXJ0RE5JbER4RnRCSTVDUG9RSUtzeWxzZ1hUZXQ3ZQpBTzAzeklJR2diNlRlZURLTWVzOS93ZEl0bWR4aHRWa3pFQWZKUFFZZXp1MXErWWtuUkI3ekt2cAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQoKPC9rZXk+Cg==",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "1e4b3f9e02f3497e94b15848fa1da997",
            "force_destroy": false,
            "id": "daniel.gomez-wg-stg-vpn.ovpn",
            "key": "daniel.gomez-wg-stg-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-stg-vpn-config-files/root-wg-stg-vpn.ovpn",
            "bucket": "wg-stg-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTA5OGE5MjI2NDM0YjM0ZjZkLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZqQ0NBZjZnQXdJQkFnSVFOZjhaQzRCdk51UktleFI4ZXdwTE56QU5CZ2txaGtpRzl3MEJBUXNGQURBbApNUXN3Q1FZRFZRUUtFd0ozWnpFV01CUUdBMVVFQXhNTmQyY3VjM1JuTG5ad2JpNWpZVEFlRncweU5ERXhNVFF3Ck1ETTFNREZhRncwek5ERXhNVEl3TURNMU1ERmFNQ1V4Q3pBSkJnTlZCQW9UQW5kbk1SWXdGQVlEVlFRREV3MTMKWnk1emRHY3VkbkJ1TG1OaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdDlOcApnUTBDNDhlTEk1RUFscUpyUE4wRnVKdDA5OHpCSXRnMnlEVHM5R2VvV2VaWWxFajcyaEt3YXN5WDg4dkNhQmdCClZYa3BFL3I1cU5CWmNndUYrQjhoREdSbHJEODk5ZWU0M25VUHljTmhkNC9xNjByZU9vRkJ2bHp2RjdNekZ2a2cKdWR2RjFpWDVUaVMwVG84bFZiaXc4TTlwTE5CYS85eTFiSjNYWTNPRkdueFdVSStwQWdVTVZNU2N5UFgwUVBBdQorVUJIUGczUm9KTG9mN3ZTRC84eXRpcCtMRGlWQVhOVXl6dDd4enF5eXJkdmJ5YzZ6MTRpK0FqNUQ3K3dRdUhlClU3VnZybVNMeHZHa1U4RmROV3BYU2Y3VlhnMWNyZnpKekorUStQdXBTOUJPYmlES3NObFJMYzFjY2dEM0taM1YKaERYbG5RMGtkNXpIeDNEZk53SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU0VlIwQ0E4TnBaVzdRMVZKL0FENDFWamwyU2N3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFJM2xrMFBza2VsV3JmNkV3ZDFRYktsTXNHTjZHcXpYdlNIaEE4VnNkS1grTENCb2dGeGoKN21BY0Y3cFVDMEttWGFabG5QdklBSFRwRDN4YlkxRDVIcS9OcWlaaWtiVDhpZTJWakRBbjlmdDNwcWNzVmdvQgppeHkzYlJyVFgzbk9xN2wyMVMza1JZZTE4eHZLbkczU1BkNGpSNDc5bkV5czE3TklmbTdBRWZrTGZ5NU0wbGtXCno3ZTNZMGlOYm4rb0V0L09IT2FYcWxTY0kyaC81NEQzQTZRTXM2cFd6T0V2a1RuVE5uWEE3VGdCMStiaU5SS2QKRlk0OGw1MGZqU0kyU05raHkxVlFHVkw1d0l3NllGdXFaQXpETkJGeTVZSHF3YnBrUGIwa1lJdEVxekNQWHhrcgpEOXpDbmFObjhBangwWWdFZGtZditML1pnSWVQSGxaMEZqND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lSQUtRZFZvd1MvaENHZWxBcFdwNzF6dnN3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFTE1Ba0dBMVVFQ2hNQ2QyY3hGakFVQmdOVkJBTVREWGRuTG5OMFp5NTJjRzR1WTJFd0hoY05NalF4TVRFMApNREF6TlRBeldoY05NelF4TVRFeU1EQXpOVEF6V2pBdU1Rc3dDUVlEVlFRS0V3SjNaekVmTUIwR0ExVUVBeE1XCmQyY3VjM1JuTG5ad2JpNXliMjkwTFdOc2FXVnVkRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBSzBVcExqZmNVLzREd2dVTDcvZGJZTTM2NTFvZEw4NkNwUTdjOGVzSVZpVHJORFB5RTBrYUdmUQpjSVlXbGFqaGMxYTZFM2MvZFU0NFJLYllVZ2NoWkdyKzhBVjUyck9OSXF1UGxKcVRzTGQyZDlLOFlabVpOeXhECktOQ3JmTEhCZFpUL05iMEdvazc1V2owbXkrcGRBejhBWWNrL3lEdUdMZGxrTDhBRzhIRHpybE5JR2l6Ym9ZRmoKR1FEOFJnYlJyVjFTVmpMS3gvaE1Tak9LZHNIbDlXS0ZhZThLMEhqQVphTFMzKzV1SXNBODh5a3FaZ01ReVY1Nwo1RzFtU3MwQVdYc0hTVDJVM2RmVnBBQzB2VEtrRm5uZmdZWnVCQ3hoZHJncDR0Z2k5QTBER0VzR09lWFpIaS95CmFBRHJyKzZUUTFOdkZub0dLNVBTWENXYkwzZlBqZlVDQXdFQUFhTldNRlF3RGdZRFZSMFBBUUgvQkFRREFnV2cKTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVQo0VlIwQ0E4TnBaVzdRMVZKL0FENDFWamwyU2N3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUtBREw4WlppQ1lBCjM2VWlhTVJVSWpCNmFkMzBBdUJRYkVUNDZXZWUxaEVSZ0pWekEwWmI2RTFUcC8xbURMZ3ZIRmh6QUhoL1JoUU8KM3JEcVVPVEpycTcvMmV2cmpuWXBrNlU2MDFBSGVoSjB3b2hGenZzVGkwbVBEazdSL0RVUFpTY25SWm51K0JLQgplendqdThTZUZtZmoyVWhQbkJRWWowcm1NTlh0SzhwQVVZMmd6OU5BdzJFSEpTeGFSVkFEaTdPdGdXSW5GSU1KCkE4SXRqd2t5VEpOYklML0RLSHdmNDFONWNSYTd2UjcrajRoQzZHOGd5WHRlVy9aM0E3eEFGR1B6R01zQjdBTEQKNFlPemU2eGVNS0hRcW4wMjZLdzZ4NnpBdXBRTDdwUWt0NkFxODI4UVg3bUQyWURORCtSU3EzaE4ySEM3eU1hTQpVdC9ma3EvcDVqST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jZXJ0PgoKPGtleT4KLS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBclJTa3VOOXhUL2dQQ0JRdnY5MXRnemZybldoMHZ6b0tsRHR6eDZ3aFdKT3MwTS9JClRTUm9aOUJ3aGhhVnFPRnpWcm9UZHo5MVRqaEVwdGhTQnlGa2F2N3dCWG5hczQwaXE0K1VtcE93dDNaMzByeGgKbVprM0xFTW8wS3Q4c2NGMWxQODF2UWFpVHZsYVBTYkw2bDBEUHdCaHlUL0lPNFl0MldRdndBYndjUE91VTBnYQpMTnVoZ1dNWkFQeEdCdEd0WFZKV01zckgrRXhLTTRwMndlWDFZb1ZwN3dyUWVNQmxvdExmN200aXdEenpLU3BtCkF4REpYbnZrYldaS3pRQlpld2RKUFpUZDE5V2tBTFM5TXFRV2VkK0JobTRFTEdGMnVDbmkyQ0wwRFFNWVN3WTUKNWRrZUwvSm9BT3V2N3BORFUyOFdlZ1lyazlKY0pac3ZkOCtOOVFJREFRQUJBb0lCQUJjRGFhdVRPalBSM2QzTApJVlkza1BvamsxYUlydzFHSUdYNVNibkE3MllockpiUEtlam44R0h0V3lqWkUra3lvTzFsTEhWc29LSlg1UGp5ClJtWGdVTVBSUmdUVVlQb0N5QnRicWZ5cnFwR2FWUEJXVC92bVhXbXJQR0FTalMvdGN6N3VlQ3k4RnhTOUh2eUcKamhLSmI0Y08rL0dRWTRWV24vNEp6amVRTktRdjZuZXhYbDNoQVZndDRsQS9VUFVoU0tqK2ZuTUFGMitqWjFPZwp2QTQ5UHU0cldlL2VpeDV2NDVtWXR1WllQWWRUS0NRNHNOVlFXSHRocGdYS3pQbnB3YVpqbGw5ejdubnpMYklECk1LdFBvUEVpeHFmT3lPKzdUYlFMV1RCTVdrbnZBelZJWjVHVEFuN2lGa3puT3U2c3hEUkhkSWRyUnVHeFdJbDAKKzVrY2JMa0NnWUVBMm9vTzByMWppQU0wemRKZzFMRVcrZ2FtMXBSVTZtMVhnWXVTQTNBOFNsTVEwWWFYRjhTNgpqcmYwRkRPbU16RzJQdnRJaDJhWDB2eTJ5RGR2SndzTXo2dTBVeWt2aHZTTTFZZmRDRFl4SG85NE8yS3l0Q2lTCnV3a3IvWjFJbGE2ZC90ckh6Q21ZWGpEVmxjYjZlWGg0clBXU0o4QUVRUU5sdGVQclRZYnZGRzhDZ1lFQXlyL0UKMHFhS3Y0Q3IxMENuK3luVTJtYzBpSzZwUTV3bG8vWktYWndDZVJPQVYrcXpOUzJ0U3dqVG5ocVVIZDZJSVRDZQprQnp2OHdwMFpaME8yc0w4eHA0NTk3RzhUT2NkR2p0NXJXUlNMTlVWVU1IY1Q4UEJwYXRSYVFld29uVmptTkFXCkdOVmlMaHZFdGcyWVlPTFB0TlNQYU5yTWpwVWVReHlSUFZ6UG5kc0NnWUJwQU1hb2lTa0dsQXZPRFJSTGZaODkKbU82VzBZU1BjdVFGc1lzQnJlNjZBM2xrUXhmYjZzRjhpM1J5TkhMWnpEdjF2UVVYVWJzSFBEZVNzZGZ0V1lqWgpTM1lFTXhqTDdqcXc2bXZRWTBGc25xQzFYL0hmVUZOWUhNc1BPNEJCc3puazF6Z0NwOFczRkIyN3JuUnc0dXFRCnFCbUdrZU01WGFtRUlMUFJkMUR1YndLQmdIaGZCRDdBSzYzb2VaMVJRS25vT3Z2enZBZk9FcVlXUlc2ajRhRFQKNTgvMFdRVlpUVTRzTVM5VUxUYzN0bXBKWE82L2k5UXBxZmZVWkNpVDUyYlB6djBvb1dmQ09QWTdYRmJmcXF6YgoyOEhNUEZ4MnpCTDdPTFBnRTNSVTRYU0NWMEE1Z25UNTh0RkhJVEdvdnFmKzRLd09hcG9wRkxzdUl3cGJJb3VZCjE1WnpBb0dBRThadG9wbjdBUzVCanZNNVRrR3krWjB6alpSRCswWk5rTkNER3lkRElpWXAycmhQVkZLZVlNTXUKc1NmTllzYUpjS1E3aXk3SWNIN01YU2RtT29DUWJieHN1VnlPMEhqc1ppRit5Z3VINzBHdkhRQlBudzdSK1owWQpUOXNGeXpBZkNHSW4vaWxCakNabHhGaHU2a3Vhanp4Q0xHT0UyYXZmZzlLWEtnRUtDb1k9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCgo8L2tleT4K",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "825a18f6e6f5b71cfad117852d312dc2",
            "force_destroy": false,
            "id": "root-wg-stg-vpn.ovpn",
            "key": "root-wg-stg-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::wg-stg-vpn-config-files/terraform-wg-stg-vpn.ovpn",
            "bucket": "wg-stg-vpn-config-files",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSBjdnBuLWVuZHBvaW50LTA5OGE5MjI2NDM0YjM0ZjZkLnByb2QuY2xpZW50dnBuLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIDQ0MwpyZW1vdGUtcmFuZG9tLWhvc3RuYW1lCnJlc29sdi1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcmVtb3RlLWNlcnQtdGxzIHNlcnZlcgpjaXBoZXIgQUVTLTI1Ni1HQ00KLS1pbmFjdGl2ZSAzMDAgMTAwCnZlcmIgMwoKPGNhPgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREZqQ0NBZjZnQXdJQkFnSVFOZjhaQzRCdk51UktleFI4ZXdwTE56QU5CZ2txaGtpRzl3MEJBUXNGQURBbApNUXN3Q1FZRFZRUUtFd0ozWnpFV01CUUdBMVVFQXhNTmQyY3VjM1JuTG5ad2JpNWpZVEFlRncweU5ERXhNVFF3Ck1ETTFNREZhRncwek5ERXhNVEl3TURNMU1ERmFNQ1V4Q3pBSkJnTlZCQW9UQW5kbk1SWXdGQVlEVlFRREV3MTMKWnk1emRHY3VkbkJ1TG1OaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdDlOcApnUTBDNDhlTEk1RUFscUpyUE4wRnVKdDA5OHpCSXRnMnlEVHM5R2VvV2VaWWxFajcyaEt3YXN5WDg4dkNhQmdCClZYa3BFL3I1cU5CWmNndUYrQjhoREdSbHJEODk5ZWU0M25VUHljTmhkNC9xNjByZU9vRkJ2bHp2RjdNekZ2a2cKdWR2RjFpWDVUaVMwVG84bFZiaXc4TTlwTE5CYS85eTFiSjNYWTNPRkdueFdVSStwQWdVTVZNU2N5UFgwUVBBdQorVUJIUGczUm9KTG9mN3ZTRC84eXRpcCtMRGlWQVhOVXl6dDd4enF5eXJkdmJ5YzZ6MTRpK0FqNUQ3K3dRdUhlClU3VnZybVNMeHZHa1U4RmROV3BYU2Y3VlhnMWNyZnpKekorUStQdXBTOUJPYmlES3NObFJMYzFjY2dEM0taM1YKaERYbG5RMGtkNXpIeDNEZk53SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU0VlIwQ0E4TnBaVzdRMVZKL0FENDFWamwyU2N3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFJM2xrMFBza2VsV3JmNkV3ZDFRYktsTXNHTjZHcXpYdlNIaEE4VnNkS1grTENCb2dGeGoKN21BY0Y3cFVDMEttWGFabG5QdklBSFRwRDN4YlkxRDVIcS9OcWlaaWtiVDhpZTJWakRBbjlmdDNwcWNzVmdvQgppeHkzYlJyVFgzbk9xN2wyMVMza1JZZTE4eHZLbkczU1BkNGpSNDc5bkV5czE3TklmbTdBRWZrTGZ5NU0wbGtXCno3ZTNZMGlOYm4rb0V0L09IT2FYcWxTY0kyaC81NEQzQTZRTXM2cFd6T0V2a1RuVE5uWEE3VGdCMStiaU5SS2QKRlk0OGw1MGZqU0kyU05raHkxVlFHVkw1d0l3NllGdXFaQXpETkJGeTVZSHF3YnBrUGIwa1lJdEVxekNQWHhrcgpEOXpDbmFObjhBangwWWdFZGtZditML1pnSWVQSGxaMEZqND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKPC9jYT4KCnJlbmVnLXNlYyAwCgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPVENDQWlHZ0F3SUJBZ0lSQUk4RjUwOGpiN2VvamZJSFhldzJOZEV3RFFZSktvWklodmNOQVFFTEJRQXcKSlRFTE1Ba0dBMVVFQ2hNQ2QyY3hGakFVQmdOVkJBTVREWGRuTG5OMFp5NTJjRzR1WTJFd0hoY05NalF4TVRFMApNREF6TlRBeldoY05NelF4TVRFeU1EQXpOVEF6V2pBek1Rc3dDUVlEVlFRS0V3SjNaekVrTUNJR0ExVUVBeE1iCmQyY3VjM1JuTG5ad2JpNTBaWEp5WVdadmNtMHRZMnhwWlc1ME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0MKQVE4QU1JSUJDZ0tDQVFFQTJTV0hmTzVSL2RKTE1YYVVQaHhFNVpFREYxVEhOWHkrSnRIT011TE53RklKRVgzKwpEUVE0VWZVUXhLVHZGcE02Y0loMi9BNW1zblM3Ni9wM2p1TXpvMzZnczB2UWpSbHk5UEZ0Qi9LSGNEQUpBdFVICm93VTNwZ0krOEJXeVMzbjJVU2lhN3JvN2FzVSt2TDB1QTNiT1R4NzBUcThvY1Vxb1pyNWhQQUhEQWVZTmk1ZWoKa2xka2JVYmlWUjZleWFZSG8vY1VKUDZDbmRhbHFlbjNWRGFwSTFjSkVWZFhWS2g1R0Rqa1ZSa1VwV1o0N2N3cgpYVlJCdXI4cjlPR3Q1MUxDNGV2eXFUZDJDM3MrN2NzQmFadU5DYm1OQ0x5R2Z6NWViOHhDRSsybVVrOHJVaHhoCituOVBSQ0N6YzVoR0ZKQTd5M2gxZXdoaklqOG9sSGdUNG0wMmp3SURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEUKQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRQpHREFXZ0JUaFZIUUlEdzJsbGJ0RFZVbjhBUGpWV09YWkp6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFPZVMvCm1YT0VhYkVvY21menFCMm9ScElqYlBOZUN5bk1GS1N5bWxlUEZndG9YMmhXT01zdFcyVElKRC8yRUpqR256SEgKcW4wRDRKeFBjV2xjM2xWQ0FTa3FoUC9HTlFXWVA5TEgwSVBmTHdGSW54RmlEdGd0MWxnRUdrOGU5dFdtd2kwUAp6SGhOTEcvSUhHYjJoZllSUnVBV2hjMmcvUkwxb0s0K2VXNWVuWGgyREw1MVQ1OVVPWWVoNEFuTVhWeTlxWFhpCkdTOEVOMXBhNExNNFV0bHpBL3NhNTd5TjhyV2FpdG5nd0pUWXQrclU4dEpUeG40VDNaTktNWmttSDNSdlEzMXoKV2hCajF0WUZ1WkI4ckRkUUlGNHhBVTFHZTZYVXNXL2NWck9WazRqV2JyM0ZmNldNVWdlMnRnN1BLSkNia1VOMAplQkUyTElXVFF5VzljS1FoQkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgo8L2NlcnQ+Cgo8a2V5PgotLS0tLUJFR0lOIFJTQSBQUklWQVRFIEtFWS0tLS0tCk1JSUVwQUlCQUFLQ0FRRUEyU1dIZk81Ui9kSkxNWGFVUGh4RTVaRURGMVRITlh5K0p0SE9NdUxOd0ZJSkVYMysKRFFRNFVmVVF4S1R2RnBNNmNJaDIvQTVtc25TNzYvcDNqdU16bzM2Z3MwdlFqUmx5OVBGdEIvS0hjREFKQXRVSApvd1UzcGdJKzhCV3lTM24yVVNpYTdybzdhc1UrdkwwdUEzYk9UeDcwVHE4b2NVcW9acjVoUEFIREFlWU5pNWVqCmtsZGtiVWJpVlI2ZXlhWUhvL2NVSlA2Q25kYWxxZW4zVkRhcEkxY0pFVmRYVktoNUdEamtWUmtVcFdaNDdjd3IKWFZSQnVyOHI5T0d0NTFMQzRldnlxVGQyQzNzKzdjc0JhWnVOQ2JtTkNMeUdmejVlYjh4Q0UrMm1VazhyVWh4aAorbjlQUkNDemM1aEdGSkE3eTNoMWV3aGpJajhvbEhnVDRtMDJqd0lEQVFBQkFvSUJBUUNCbzB3dUk4SERmVWJ5CjhzNHgvb0tMWTNXcStpd3NISnNSWmZScW9Na2habGlQbnQ2TE90ZTg1a2ZxZm1WVzN2TG11RElBN1VBV2ptYWEKelYrUGFNa3RkSzNRSFJVWEIvaC9qNXIrUWFibUxXZFR6NGJOcHBIQWhGcTZ6dGt4QWxFeHhzSW9mL3AxRmVrTQptUXpkZUpKVzNpNFF3N1dyWFYwSWFlUjNCTDQ5Wk5kSy9FeXZrVGd2SWxybzJWN0k0MWNDMFI3TWhTVHRZRVZICkxSaCtZSC9rSWhFYmcxT0xZK0E4OEtaYW1Ra042RnhocUcySEpjaHByc0YxYWNHWWltMlJNaEF6QzJzcUdmeDcKOGV2ZTVabW50U3I3WDRZSld2RytjcGFWZzRZOUoxMjJueHRXOERCY3I5NmNLa3lqazRGRG01YWZHa1pPakpTKwppWTFzWlYzQkFvR0JBUE51THpMbTF2NkoyT1hyVnU3MEJmb0d3NU9zTjdOTGFUQ3BPVEF0WldBTmg1ZHVKMmMyCm5nN3F3bjJCbllGSlFSOThncklFcXNSZUlyZHRxRkhwMU9XdU1KNnFzaU43RmlkOHcwbE14cXh6N1F0b1ZlQysKTW82NW91WlVxQlY0R0ZRTFl3UlR1YmhOaVErMkZWSDN2cXJPNDVrMkJoUjFXRHZXVUlpWDhhT3hBb0dCQU9SYgo2TFhsTmd1ZWpndlZhUEozWVNteUNIcFM0VS8rRkxlVERkK1dKV1pyY2VYSEhrM21SYkpKN29KSkNhQXFOcjBhCjFna0lXRndkS2JYV3gwOFNpL2hSanBkZHpVc3pKbTZzT20ycFUxWUpMMmZBakw2VjNvYmhHQ1RGd3Z1a2FGQXEKQlhLYUN0VDR3MW5veElXYVRITm51VFl0cnh4aGUyYi9UcTh5OWs0L0FvR0JBSUtpcE0ycU44Sk5jNHFmYXYyOQpFdUFFZFR4d2RVdlFzbGljMThYVTlzdy9ObjY3YklYbE41bEZ2cTNmdXdqQXFTUWVpM3pCS0d0TklWQlNscnV1CndzT25ZUXdsQ29najY5V3hESlB2a2NiR1IzV1J2bFJuZlhZK2hQOGFlMEZhTzZRT29FcVlLOWlPTTNtcyszQUwKaGRUZ1JoL1ljQmJXaWsxQ1MrR2h1TmxoQW9HQWNYc2JFZ2x0NmloSS9xaDNGc2NzaWNQbllxSjlSWHRHWUZPNwp1VGlzTFZHSHNHQmJOdXNRQjZHbDNTamVsN0Zpc21iN3BsRjNWNDlHZ3c3UXpRS3lmQnhMZC8wdFlBbHpOOXh1CnpNQXdvYmkremhocDJPd3hRV1hxMFp0VllpZzVqbHpUaURmMDJoRWxRekRoT0dPTlNteHBKZnRkNGdTdmhtZXAKZW5jZzM1RUNnWUJZN0I3K0pYVXR4V3ppRnI3S0hWNldNc3hEWTVJRzMzVkZlZWZJOUxhVEs2eThsTmdKQ2Y0QgpiTXNsbnJVRXExMmJTNDMrbXh6b1FaSkg2Y2Y0NXI0UUh2aVBqbk9XbTd5Yk44NWNuUVhabTJMdGwwVnZpM3YrCmYveDFYVHdoa1FLdzNLTUZYMndpMjJYRld2bGR0bHNPZUJhSFZVWm1xWTBLM3lBRHVGN3RkZz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCgo8L2tleT4K",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "8069badd0921dc205c294eec4321512a",
            "force_destroy": false,
            "id": "terraform-wg-stg-vpn.ovpn",
            "key": "terraform-wg-stg-vpn.ovpn",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "aws:kms",
            "source": null,
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content_base64"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.aws_acm_certificate.client",
            "module.vpn-client.aws_acm_certificate.server",
            "module.vpn-client.aws_cloudwatch_log_group.vpn-logs",
            "module.vpn-client.aws_cloudwatch_log_stream.vpn-logs-stream",
            "module.vpn-client.aws_ec2_client_vpn_endpoint.vpn-client",
            "module.vpn-client.aws_s3_bucket.vpn-config-files",
            "module.vpn-client.aws_security_group.vpn",
            "module.vpn-client.aws_ssm_parameter.vpn_ca_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_cert",
            "module.vpn-client.aws_ssm_parameter.vpn_client_key",
            "module.vpn-client.data.aws_region.current",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "vpn",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:746669237448:security-group/sg-0d7558157f399e61b",
            "description": "wg-stg-vpn-security-group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0d7558157f399e61b",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "wg-stg-vpn-security-group",
            "name_prefix": "",
            "owner_id": "746669237448",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "production",
              "Name": "wg-stg-vpn-security-group",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Name": "wg-stg-vpn-security-group",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-08fe2e12a2ebff367"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_ca_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:746669237448:parameter/wg/stg/acm/vpn/ca_cert",
            "data_type": "text",
            "description": "VPN CA cert",
            "id": "/wg/stg/acm/vpn/ca_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/stg/acm/vpn/ca_cert",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_ca_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:746669237448:parameter/wg/stg/acm/vpn/ca_key",
            "data_type": "text",
            "description": "VPN CA key",
            "id": "/wg/stg/acm/vpn/ca_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/stg/acm/vpn/ca_key",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAt9NpgQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZY\nlEj72hKwasyX88vCaBgBVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q\n60reOoFBvlzvF7MzFvkgudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxW\nUI+pAgUMVMScyPX0QPAu+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdv\nbyc6z14i+Aj5D7+wQuHeU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BO\nbiDKsNlRLc1ccgD3KZ3VhDXlnQ0kd5zHx3DfNwIDAQABAoIBAHgH4qcygMWM4Syb\nHQA/E7jNNVQiphC8MQx4k+TMskCwgrwY7ZP9x/3QIEPMThgR32Iq8owGLi1uvqBd\nU1plbdfjM6gs0jrTnLi50vvnAiUjn7v7TFDRNSSMjAoqErCuAVkp2RWjDJ5Vc2F0\nFAwL6jv7+gVz2WA6uIDDc+91bVPw2MoWLdkpwABjA+PiY19ERoudwKQNCO30F73a\nKLp66I8XdIA2ynXtLBsX1CMQTzeHauipvN3PLXfVIoY1mT+7zr5Ca9QohBteVdkQ\nFcQG8WDtKFpcRYW4hU80f5Ki0Jsavd0CFQ+xVEYLwkBQ3KCbmEqhz0uLbkXfSZ3j\nMg8DK4kCgYEAxR4CJVdFchuUKd8PuEUDo9806fJzK3fh2jnmaZcMnoZpWNWjGRPJ\nzFWPxUBV2Gl7ud0aF/96HfX3Mr90yLnXh9gH6jv6H7UEtYHC+9pK2rcWy5T858Yg\nzpJESfIx8poycnz7yHcsWPQIUX9Ug1b7wW8Gaokg8vf0Sldl1UGFjPsCgYEA7rz7\nQ/izNu3jiJIPnMu8cEq73D98PXRXBEsQ71MA9gP+rNah54RX61xzVOYbNTWWzf+x\n+KZM2yVNP4/grPNatbf2SoJk0BwCWDJ4VkPkrt7v5CDN+ob2yN4xrAaQLUaOPzPb\n/qidTna4xMqcsDOsCdwCB1ZzcGuxlTiHHD4KafUCgYEArazN+TaWkn5oIihOQm5U\nUbtldMdQ4DjFPzCKqfgTf00wXrwE8yBzSd0NSp9vw7jU8aM0zXYkk2dXQVhdPko3\n85HND31+2Rb2KjJFqP/huildJUyFNHVmDHvlPT3u8jEYR7WFZlBSO6Hv/lZxETO/\np+P5xD5EUK9Vh3bP24DaeacCgYAYfoM5IhchF580r+eyKqUW0FQd8NWKaJlU8261\nX0rF8vr6OLs7ybRLjZy3pTQ9bVYfpJBZ9pYEFfuq/dQLapxv8IPweRhm0bjb27HF\nCAo6dt0eBs+bWKWRTlrCT5oTSx3lFikII7ygBEZIypDw8xw/lrcOkaweaK47pSUX\nnLXs0QKBgHsd9hFjy6uk44YHd+ABEZE7zvah65VNmweEBVr95puwJG2IE1ewwNhh\n3gYHLLpQJdbNRKRhNSsNpngOqc3w437LreEaqk4H6jx5t6ceOMIG+d5X2JraXNNX\n126429s5un7PFhAz2Xm7PS8E8V8gNJs7G254q/XBHRwHKLfgXsok\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_client_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:746669237448:parameter/wg/stg/acm/vpn/daniel.gomez_client_cert",
            "data_type": "text",
            "description": "VPN daniel.gomez client cert",
            "id": "/wg/stg/acm/vpn/daniel.gomez_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/stg/acm/vpn/daniel.gomez_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDPDCCAiSgAwIBAgIRAJ32R8KtJWJg/noujjJBh5QwDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAzWhcNMzQxMTEyMDAzNTAzWjA2MQswCQYDVQQKEwJ3ZzEnMCUGA1UEAxMe\nd2cuc3RnLnZwbi5kYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA0r0AqeO1mVyixnXXuysLlFDwimy+jF/zVGkChf9f8Igf\nXVJb8NAB484BHUOoUYZk+KAod6ZilPhnWEH3Jr7zOgZlB5pWclqDohpuVxZhZvCL\njc98u0NIIIXteQ399R67KwIfQkKK3RgPgVWasuLgG8O6KK6c43NpBUFzP6PBXWRW\nUhYPy547optBkhb7C8kDqnsfzhDoHLr3mf5SpJQOu394nRJdbFjQASFCUY4+3MvY\nKiKt2CM7OHa90fUvthAXAx9VmsW11LYX0IkVIWoJi4Bx1d5gwm7DduQOZApNTUZD\n6LFGTNLKDeqtZsfmDbZgCuqqFkZrrBhRJGuLZzvNcwIDAQABo1YwVDAOBgNVHQ8B\nAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNV\nHSMEGDAWgBThVHQIDw2llbtDVUn8APjVWOXZJzANBgkqhkiG9w0BAQsFAAOCAQEA\nrcHZlwp0B8BITsP41tIpSyk1+cc9bTX4ABPK7e6M42DWruzdZIE2OJrKmCJ2AqY6\nd/wD+q6iuChU5Ls2sUDqe06ho/kQB+47Z9hqYyvkcrbuw+bk9RgbCidJ0qsb2yxu\nE4fmH7gqw7hE3ZV4PnikKs+kXqLk+ntvLuQoKZldoZQdD0WXVgjzW1E9nodCk9pK\nHoz7vPy3ZTb6KmTozKLmNXh4AaLy/56xWFdi9Uo3Q1GYr6J8+hPyzG5eRwUjqAgM\nT4dBEh0Dsrp40pX2t8aqZUjHmEGbD6jpRoNHwubklPtSuqJ/cbB6C3pIRiYechI9\nG8TDiJRgnbTpGs7oNogtdA==\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:746669237448:parameter/wg/stg/acm/vpn/root_client_cert",
            "data_type": "text",
            "description": "VPN root client cert",
            "id": "/wg/stg/acm/vpn/root_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/stg/acm/vpn/root_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDNDCCAhygAwIBAgIRAKQdVowS/hCGelApWp71zvswDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAzWhcNMzQxMTEyMDAzNTAzWjAuMQswCQYDVQQKEwJ3ZzEfMB0GA1UEAxMW\nd2cuc3RnLnZwbi5yb290LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\nAQoCggEBAK0UpLjfcU/4DwgUL7/dbYM3651odL86CpQ7c8esIViTrNDPyE0kaGfQ\ncIYWlajhc1a6E3c/dU44RKbYUgchZGr+8AV52rONIquPlJqTsLd2d9K8YZmZNyxD\nKNCrfLHBdZT/Nb0Gok75Wj0my+pdAz8AYck/yDuGLdlkL8AG8HDzrlNIGizboYFj\nGQD8RgbRrV1SVjLKx/hMSjOKdsHl9WKFae8K0HjAZaLS3+5uIsA88ykqZgMQyV57\n5G1mSs0AWXsHST2U3dfVpAC0vTKkFnnfgYZuBCxhdrgp4tgi9A0DGEsGOeXZHi/y\naADrr+6TQ1NvFnoGK5PSXCWbL3fPjfUCAwEAAaNWMFQwDgYDVR0PAQH/BAQDAgWg\nMBMGA1UdJQQMMAoGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAU\n4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcNAQELBQADggEBAKADL8ZZiCYA\n36UiaMRUIjB6ad30AuBQbET46Wee1hERgJVzA0Zb6E1Tp/1mDLgvHFhzAHh/RhQO\n3rDqUOTJrq7/2evrjnYpk6U601AHehJ0wohFzvsTi0mPDk7R/DUPZScnRZnu+BKB\nezwju8SeFmfj2UhPnBQYj0rmMNXtK8pAUY2gz9NAw2EHJSxaRVADi7OtgWInFIMJ\nA8ItjwkyTJNbIL/DKHwf41N5cRa7vR7+j4hC6G8gyXteW/Z3A7xAFGPzGMsB7ALD\n4YOze6xeMKHQqn026Kw6x6zAupQL7pQkt6Aq828QX7mD2YDND+RSq3hN2HC7yMaM\nUt/fkq/p5jI=\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:746669237448:parameter/wg/stg/acm/vpn/terraform_client_cert",
            "data_type": "text",
            "description": "VPN terraform client cert",
            "id": "/wg/stg/acm/vpn/terraform_client_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/stg/acm/vpn/terraform_client_cert",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client cert imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDOTCCAiGgAwIBAgIRAI8F508jb7eojfIHXew2NdEwDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAzWhcNMzQxMTEyMDAzNTAzWjAzMQswCQYDVQQKEwJ3ZzEkMCIGA1UEAxMb\nd2cuc3RnLnZwbi50ZXJyYWZvcm0tY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEA2SWHfO5R/dJLMXaUPhxE5ZEDF1THNXy+JtHOMuLNwFIJEX3+\nDQQ4UfUQxKTvFpM6cIh2/A5msnS76/p3juMzo36gs0vQjRly9PFtB/KHcDAJAtUH\nowU3pgI+8BWyS3n2USia7ro7asU+vL0uA3bOTx70Tq8ocUqoZr5hPAHDAeYNi5ej\nkldkbUbiVR6eyaYHo/cUJP6Cndalqen3VDapI1cJEVdXVKh5GDjkVRkUpWZ47cwr\nXVRBur8r9OGt51LC4evyqTd2C3s+7csBaZuNCbmNCLyGfz5eb8xCE+2mUk8rUhxh\n+n9PRCCzc5hGFJA7y3h1ewhjIj8olHgT4m02jwIDAQABo1YwVDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME\nGDAWgBThVHQIDw2llbtDVUn8APjVWOXZJzANBgkqhkiG9w0BAQsFAAOCAQEAOeS/\nmXOEabEocmfzqB2oRpIjbPNeCynMFKSymlePFgtoX2hWOMstW2TIJD/2EJjGnzHH\nqn0D4JxPcWlc3lVCASkqhP/GNQWYP9LH0IPfLwFInxFiDtgt1lgEGk8e9tWmwi0P\nzHhNLG/IHGb2hfYRRuAWhc2g/RL1oK4+eW5enXh2DL51T59UOYeh4AnMXVy9qXXi\nGS8EN1pa4LM4UtlzA/sa57yN8rWaitngwJTYt+rU8tJTxn4T3ZNKMZkmH3RvQ31z\nWhBj1tYFuZB8rDdQIF4xAU1Ge6XUsW/cVrOVk4jWbr3Ff6WMUge2tg7PKJCbkUN0\neBE2LIWTQyW9cKQhBA==\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_locally_signed_cert.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_client_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:746669237448:parameter/wg/stg/acm/vpn/daniel.gomez_client_key",
            "data_type": "text",
            "description": "VPN daniel.gomez client key",
            "id": "/wg/stg/acm/vpn/daniel.gomez_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/stg/acm/vpn/daniel.gomez_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN daniel.gomez client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA0r0AqeO1mVyixnXXuysLlFDwimy+jF/zVGkChf9f8IgfXVJb\n8NAB484BHUOoUYZk+KAod6ZilPhnWEH3Jr7zOgZlB5pWclqDohpuVxZhZvCLjc98\nu0NIIIXteQ399R67KwIfQkKK3RgPgVWasuLgG8O6KK6c43NpBUFzP6PBXWRWUhYP\ny547optBkhb7C8kDqnsfzhDoHLr3mf5SpJQOu394nRJdbFjQASFCUY4+3MvYKiKt\n2CM7OHa90fUvthAXAx9VmsW11LYX0IkVIWoJi4Bx1d5gwm7DduQOZApNTUZD6LFG\nTNLKDeqtZsfmDbZgCuqqFkZrrBhRJGuLZzvNcwIDAQABAoIBAQDCK/WNk8tCmJE+\nrVvuEBZmPUG1OcdEjjAlKXByyL+8X6AOm5EtTGtBXBG4xhszqtIkJ2XCASO6QTrv\nnjA8mhp/715tZ+6ZBP9egF4EjhGHCMJ9Ep3J6Y9usBgDvzms/fjVAuqMYcWTO9Ul\nhRu6EcMOsgQ38dOK20770bd//sFu6xSlyd+O8AzzS14Kkgi/jAX4EItiYaR/TwAY\nK2MAS0aOI0Cy3WaNMZ8kLdEmYYxW5nZb6tjGtuxM+jk8Cu6p8mEWM0MfHkYIgOmF\nId+DrD2rjKMvmTtiWY/QsOLgii5jN8T7aJrpQ1YLuU4LpZ0cYjzLvk/REyBYkIy+\nwaI1dSr5AoGBAPc6nwrhsrIepM3STarMmS4fjn3rIpV3VKI5Ma56EEdr+YkH8SEo\n7TrLLVypxDgQ7Ti060JNyR+1fk0773xmZpsGzE7AqEYTthchy0twYCTLa6anV2NO\ny5vZvnltgTFabnVbBiTq2J9DkLDrMPezio9Zu0C0OquxOC+vjCdhV4sVAoGBANo2\n91Z6Q0K4HpXx563sfRVeD2cNLmt35lNQEpmlI9tqqkB2Z/B9KTeE+xGhayTw+FJH\n9IF0web1qrvYBpig5gG60rjnU+VjImBKcC+cNPtk6QbN9678OX5v3t+rRsDe2m85\nXCowSzyymtNaCSFpjxXxn+UcLxwIYxp1yn2EzXhnAoGBAIIVCyfbl32XGBnf5NPQ\nsWyOWBgzB1BjqFlvBJAMU9JwoqySTDKpaSE9VJHkFYV2iosCzqJlcUTI5zrWJW1s\nJ+K8EfYB8shkiLPlKSV5bG0Px4W5mQZ8qC9Jw6n6jzaboXEIQtRb6TzrfQ9JwMsk\nYeyJRziFXDWImsqkcHcsBbb9AoGBALM28WvUfekNzhDX2667yv8BgSThbn5UupUx\n7hTBy/EoaSsIE9Uu9erjDFAughCU11y8O9MWUSmeGdqsUL6JZl2FUgsJ8Z0zDciH\nWhu/7sOI3Nj5z7Gm9JEiz6hiwnkkjcFLGqaLgz8WcJGkIFuQljMvfmJsA0TCnqHc\nm7D6oMWBAoGBALXStP9t/1vatqKUM0Ws+7tPKpP5ROrA1+r4HUQIIOUJ2yOl+v3c\n8VrDIh+OoRSv33uSk4dACndVJmRGIiD9TurtDNIlDxFtBI5CPoQIKsylsgXTet7e\nAO03zIIGgb6TeeDKMes9/wdItmdxhtVkzEAfJPQYezu1q+YknRB7zKvp\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:746669237448:parameter/wg/stg/acm/vpn/root_client_key",
            "data_type": "text",
            "description": "VPN root client key",
            "id": "/wg/stg/acm/vpn/root_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/stg/acm/vpn/root_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN root client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArRSkuN9xT/gPCBQvv91tgzfrnWh0vzoKlDtzx6whWJOs0M/I\nTSRoZ9BwhhaVqOFzVroTdz91TjhEpthSByFkav7wBXnas40iq4+UmpOwt3Z30rxh\nmZk3LEMo0Kt8scF1lP81vQaiTvlaPSbL6l0DPwBhyT/IO4Yt2WQvwAbwcPOuU0ga\nLNuhgWMZAPxGBtGtXVJWMsrH+ExKM4p2weX1YoVp7wrQeMBlotLf7m4iwDzzKSpm\nAxDJXnvkbWZKzQBZewdJPZTd19WkALS9MqQWed+Bhm4ELGF2uCni2CL0DQMYSwY5\n5dkeL/JoAOuv7pNDU28WegYrk9JcJZsvd8+N9QIDAQABAoIBABcDaauTOjPR3d3L\nIVY3kPojk1aIrw1GIGX5SbnA72YhrJbPKejn8GHtWyjZE+kyoO1lLHVsoKJX5Pjy\nRmXgUMPRRgTUYPoCyBtbqfyrqpGaVPBWT/vmXWmrPGASjS/tcz7ueCy8FxS9HvyG\njhKJb4cO+/GQY4VWn/4JzjeQNKQv6nexXl3hAVgt4lA/UPUhSKj+fnMAF2+jZ1Og\nvA49Pu4rWe/eix5v45mYtuZYPYdTKCQ4sNVQWHthpgXKzPnpwaZjll9z7nnzLbID\nMKtPoPEixqfOyO+7TbQLWTBMWknvAzVIZ5GTAn7iFkznOu6sxDRHdIdrRuGxWIl0\n+5kcbLkCgYEA2ooO0r1jiAM0zdJg1LEW+gam1pRU6m1XgYuSA3A8SlMQ0YaXF8S6\njrf0FDOmMzG2PvtIh2aX0vy2yDdvJwsMz6u0UykvhvSM1YfdCDYxHo94O2KytCiS\nuwkr/Z1Ila6d/trHzCmYXjDVlcb6eXh4rPWSJ8AEQQNltePrTYbvFG8CgYEAyr/E\n0qaKv4Cr10Cn+ynU2mc0iK6pQ5wlo/ZKXZwCeROAV+qzNS2tSwjTnhqUHd6IITCe\nkBzv8wp0ZZ0O2sL8xp4597G8TOcdGjt5rWRSLNUVUMHcT8PBpatRaQewonVjmNAW\nGNViLhvEtg2YYOLPtNSPaNrMjpUeQxyRPVzPndsCgYBpAMaoiSkGlAvODRRLfZ89\nmO6W0YSPcuQFsYsBre66A3lkQxfb6sF8i3RyNHLZzDv1vQUXUbsHPDeSsdftWYjZ\nS3YEMxjL7jqw6mvQY0FsnqC1X/HfUFNYHMsPO4BBsznk1zgCp8W3FB27rnRw4uqQ\nqBmGkeM5XamEILPRd1DubwKBgHhfBD7AK63oeZ1RQKnoOvvzvAfOEqYWRW6j4aDT\n58/0WQVZTU4sMS9ULTc3tmpJXO6/i9QpqffUZCiT52bPzv0ooWfCOPY7XFbfqqzb\n28HMPFx2zBL7OLPgE3RU4XSCV0A5gnT58tFHITGovqf+4KwOapopFLsuIwpbIouY\n15ZzAoGAE8Ztopn7AS5BjvM5TkGy+Z0zjZRD+0ZNkNCDGydDIiYp2rhPVFKeYMMu\nsSfNYsaJcKQ7iy7IcH7MXSdmOoCQbbxsuVyO0HjsZiF+yguH70GvHQBPnw7R+Z0Y\nT9sFyzAfCGIn/ilBjCZlxFhu6kuajzxCLGOE2avfg9KXKgEKCoY=\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:746669237448:parameter/wg/stg/acm/vpn/terraform_client_key",
            "data_type": "text",
            "description": "VPN terraform client key",
            "id": "/wg/stg/acm/vpn/terraform_client_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/stg/acm/vpn/terraform_client_key",
            "overwrite": null,
            "tags": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tags_all": {
              "BackupPolicy": "n/a",
              "CostType": "AlwaysCreated",
              "Environment": "production",
              "Name": "VPN terraform client key imported in AWS ACM",
              "Terraform": "true",
              "Tier": "Private"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA2SWHfO5R/dJLMXaUPhxE5ZEDF1THNXy+JtHOMuLNwFIJEX3+\nDQQ4UfUQxKTvFpM6cIh2/A5msnS76/p3juMzo36gs0vQjRly9PFtB/KHcDAJAtUH\nowU3pgI+8BWyS3n2USia7ro7asU+vL0uA3bOTx70Tq8ocUqoZr5hPAHDAeYNi5ej\nkldkbUbiVR6eyaYHo/cUJP6Cndalqen3VDapI1cJEVdXVKh5GDjkVRkUpWZ47cwr\nXVRBur8r9OGt51LC4evyqTd2C3s+7csBaZuNCbmNCLyGfz5eb8xCE+2mUk8rUhxh\n+n9PRCCzc5hGFJA7y3h1ewhjIj8olHgT4m02jwIDAQABAoIBAQCBo0wuI8HDfUby\n8s4x/oKLY3Wq+iwsHJsRZfRqoMkhZliPnt6LOte85kfqfmVW3vLmuDIA7UAWjmaa\nzV+PaMktdK3QHRUXB/h/j5r+QabmLWdTz4bNppHAhFq6ztkxAlExxsIof/p1FekM\nmQzdeJJW3i4Qw7WrXV0IaeR3BL49ZNdK/EyvkTgvIlro2V7I41cC0R7MhSTtYEVH\nLRh+YH/kIhEbg1OLY+A88KZamQkN6FxhqG2HJchprsF1acGYim2RMhAzC2sqGfx7\n8eve5ZmntSr7X4YJWvG+cpaVg4Y9J122nxtW8DBcr96cKkyjk4FDm5afGkZOjJS+\niY1sZV3BAoGBAPNuLzLm1v6J2OXrVu70BfoGw5OsN7NLaTCpOTAtZWANh5duJ2c2\nng7qwn2BnYFJQR98grIEqsReIrdtqFHp1OWuMJ6qsiN7Fid8w0lMxqxz7QtoVeC+\nMo65ouZUqBV4GFQLYwRTubhNiQ+2FVH3vqrO45k2BhR1WDvWUIiX8aOxAoGBAORb\n6LXlNguejgvVaPJ3YSmyCHpS4U/+FLeTDd+WJWZrceXHHk3mRbJJ7oJJCaAqNr0a\n1gkIWFwdKbXWx08Si/hRjpddzUszJm6sOm2pU1YJL2fAjL6V3obhGCTFwvukaFAq\nBXKaCtT4w1noxIWaTHNnuTYtrxxhe2b/Tq8y9k4/AoGBAIKipM2qN8JNc4qfav29\nEuAEdTxwdUvQslic18XU9sw/Nn67bIXlN5lFvq3fuwjAqSQei3zBKGtNIVBSlruu\nwsOnYQwlCogj69WxDJPvkcbGR3WRvlRnfXY+hP8ae0FaO6QOoEqYK9iOM3ms+3AL\nhdTgRh/YcBbWik1CS+GhuNlhAoGAcXsbEglt6ihI/qh3FscsicPnYqJ9RXtGYFO7\nuTisLVGHsGBbNusQB6Gl3Sjel7Fismb7plF3V49Ggw7QzQKyfBxLd/0tYAlzN9xu\nzMAwobi+zhhp2OwxQWXq0ZtVYig5jlzTiDf02hElQzDhOGONSmxpJftd4gSvhmep\nencg35ECgYBY7B7+JXUtxWziFr7KHV6WMsxDY5IG33VFeefI9LaTK6y8lNgJCf4B\nbMslnrUEq12bS43+mxzoQZJH6cf45r4QHviPjnOWm7ybN85cnQXZm2Ltl0Vvi3v+\nf/x1XTwhkQKw3KMFX2wi22XFWvldtlsOeBaHVUZmqY0K3yADuF7tdg==\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_server_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:746669237448:parameter/wg/stg/acm/vpn/server_cert",
            "data_type": "text",
            "description": "VPN server cert",
            "id": "/wg/stg/acm/vpn/server_cert",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/stg/acm/vpn/server_cert",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN CERTIFICATE-----\nMIIDLzCCAhegAwIBAgIRAMUoiMwMv9Nw1cqnmK49Xa4wDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAyWhcNMzQxMTEyMDAzNTAyWjApMQswCQYDVQQKEwJ3ZzEaMBgGA1UEAxMR\nd2cuc3RnLnZwbi5zZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQDG0EHH2IqirFQoKnCVDKX8wGIMgwYx35z3seTAsVd6An/q4veVa4i0CScBLz8d\nenGru/82ILc/xlfXegOq8zw/0cn3hamBsrmvSiGZduap9rXkbq4pdOycQOmSFHos\nvp6GCPim3VQpfknlecjy7HNIl3vSIyV95HzEIJAZn6sEAHvUdlB5X7hkbiUXw4Qb\ncZcZbgjn/x5dD4F6cvBR7YhVmu1n7uhE6E/RUMDDp7t1GGGNfED4kfyaK/2HTNhL\nn1oXeAR/TB7y7pJTzksr+2uxpzSv8UwDzrAT0zypEoVajjwzkYmOVlCirpgCLowM\niwaYqTS4mH+o0xWE72h3AKANAgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDATBgNV\nHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFOFUdAgP\nDaWVu0NVSfwA+NVY5dknMA0GCSqGSIb3DQEBCwUAA4IBAQBfBVSY8lcxzJra/BL6\n9l3MYxB9tQzfadyCfbyXbEEt9VL1kqkZA17IU6SxGzcKXe6lVZjZmuNm8qUJ5TG+\nAtoIU8lFHOs3J869n2IQOdskOby5cRJTgwGGDjnwN6gEGk3SCUvl6dbATUXuD1A5\n2fhrP9c5WfLL+ioExHkhsc5V6boxpngiE0ZTK/1Az2lRYgwVdCA+nN6rqQw2Srsi\ninTXCXwIdhruTUk+6eEy5rS/YNHscE9O61kuvbbQvOUxzY1bqEXr/XLOIyGZsQnz\nt92lQmLecn4CDMg2tb5FXLiahmQTqDIj6rLyqjvXjKXVNeoj00XUwiCVrTisnbuI\nP/gu\n-----END CERTIFICATE-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_locally_signed_cert.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "vpn_server_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-east-2:746669237448:parameter/wg/stg/acm/vpn/server_key",
            "data_type": "text",
            "description": "VPN server key",
            "id": "/wg/stg/acm/vpn/server_key",
            "insecure_value": null,
            "key_id": "alias/aws/ssm",
            "name": "/wg/stg/acm/vpn/server_key",
            "overwrite": null,
            "tags": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "production",
              "Terraform": "true"
            },
            "tier": "Standard",
            "type": "SecureString",
            "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAxtBBx9iKoqxUKCpwlQyl/MBiDIMGMd+c97HkwLFXegJ/6uL3\nlWuItAknAS8/HXpxq7v/NiC3P8ZX13oDqvM8P9HJ94WpgbK5r0ohmXbmqfa15G6u\nKXTsnEDpkhR6LL6ehgj4pt1UKX5J5XnI8uxzSJd70iMlfeR8xCCQGZ+rBAB71HZQ\neV+4ZG4lF8OEG3GXGW4I5/8eXQ+BenLwUe2IVZrtZ+7oROhP0VDAw6e7dRhhjXxA\n+JH8miv9h0zYS59aF3gEf0we8u6SU85LK/trsac0r/FMA86wE9M8qRKFWo48M5GJ\njlZQoq6YAi6MDIsGmKk0uJh/qNMVhO9odwCgDQIDAQABAoIBAHcHlmqU3aO5MwV9\nKzxBf1tMvycohtvzOiId8ovfYTUeLAGv83UVFZpcZGrUI6B9f3LHMmvwuGXJVSwf\n0/RUfjzjWF0GPE73dy5YXrdntYAKwinKjiEp7MM8JdscwWzqjzRGSMB2gH37Kzjl\nagbuw7KxZyOPgVHXK0+tAzkkHBpfNJFAYdtASFLiXa+WKxBBQuxShKtkaQrUws1V\nL3tv/qnZrumbjE5kIlfwMbfOKjgKgQHzuMX8Js04vUTHBHXUxHoDurX2RZ0d+v0W\nus4/0/t2YkKI31VKVwNczi3g97jWE2vjlpqjohhHAFAgjLzG4uRo+DpEIUix22i6\nMQmN6Y0CgYEAzn3Z7ObSmDYm/YCSiDSwdOTsneplfGC61HgL2YHJhGme9w9ZLRGa\nTNkRTe/bDK2/dpCkrsN3jeAuzYQr0cE5K+1PGPzaZzg2TB2YWJkNxLcqNFD2vr6x\n7wqcxRH4EQlj1unIF57AJju6HtJzgJduA99DwTDBHVrfPOQWNcGT3n8CgYEA9nsi\nlvl5P5ukkxgl67l4/CuVb1zS8n7wRfzWYMAowFyyzHGwH4wCIklgPHWFnkOTIqNm\nbQNwiYHIqZk8OXVc4YelvAvRE0qAefhE97ByhXDdl13ybgRLQ9Bn0IieOzq3XiuX\ndutJEWGoD8h2ZTSqzwrFKtprRSyIia9k4AhP03MCgYAWyhsAI2WAuRFKjyMc9zu2\nWwGmWBVFSeO0yV79bW6RN5r8x2vfJn8yFg7r3Bn/5zknW8VhKF+Mf/6KXhj7+GhX\n6cP+DQIJvFF5yxZiSNoVKOX2ii0BVkiLCk/NDDOlpbSoJnsX6ERqs9LRzgZDXfMd\naEmxC7F0jO/wZ3fwDOJF/wKBgAkuMu6eoiZ9XJbh+l+aS+hQk0NPmMfRdI+WyEFY\nRuxLR5mXznCOXXH7e6sk0XJAoBVVMrZyv1lPzTKL85NMTMZVsBWd9w6Z4skoNyFm\noA1aU9aUeDgizs7az1MUE5ivKi9GvmB+iP0tvv2/gLFqUcZeZ1OeSQqNixRdxQsX\nJCoDAoGAAuX1yPD1NtAccDr5HnxG66soPX9xDp8/dlCAZuFcqAf064UgBseViG+x\nK71fokp0CNOcvOl+FBeihzO7YeH8gU5Y5b3w/1lc05t2/ogdS36Gnfj55yYfwoAB\njAd4M/Hqj3PGWQw9MqimzRqvhdw4KwJ5ntr0WWqklHblNmcUGxU=\n-----END RSA PRIVATE KEY-----\n",
            "version": 1
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.server"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_cert_request",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICezCCAWMCAQAwNjELMAkGA1UEChMCd2cxJzAlBgNVBAMTHndnLnN0Zy52cG4u\nZGFuaWVsLmdvbWV6LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBANK9AKnjtZlcosZ117srC5RQ8Ipsvoxf81RpAoX/X/CIH11SW/DQAePOAR1D\nqFGGZPigKHemYpT4Z1hB9ya+8zoGZQeaVnJag6IablcWYWbwi43PfLtDSCCF7XkN\n/fUeuysCH0JCit0YD4FVmrLi4BvDuiiunONzaQVBcz+jwV1kVlIWD8ueO6KbQZIW\n+wvJA6p7H84Q6By695n+UqSUDrt/eJ0SXWxY0AEhQlGOPtzL2CoirdgjOzh2vdH1\nL7YQFwMfVZrFtdS2F9CJFSFqCYuAcdXeYMJuw3bkDmQKTU1GQ+ixRkzSyg3qrWbH\n5g22YArqqhZGa6wYUSRri2c7zXMCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQCp\noQ4XmekiEKchZhghcARExBKxwLIQTV/uHgg2/EMOJoLRwWRqadUl1XF+Wbgq5wYh\nqUy/enM6t8wzJZOwYXC+fNc790t1KS9QLrYkxZ2oPC/39IzKADaPsXJK1qwTUamw\nxLV2dA6WsJx46AELne9yIVdPLs/D7GkTW4MfnjKLkomQ2wkmfbCeB9OaaHUu0KBU\nmKpfha3SLm+70IwuuliN0IcDiyZhlktlBWkiHJELfya1H+gp+RK+jZE9qbs1S/Sn\nXshKy1p2kmxrdJ2ozKE0ACAdRGIZC5FWrYtoB7hKAPS2qq7LVUg+ZUqjEIVJD/FQ\na/W/HG8UZ290YemzuhsZ\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "d4c5f72aee6f97085fc4a498d935e60c6870847f",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA0r0AqeO1mVyixnXXuysLlFDwimy+jF/zVGkChf9f8IgfXVJb\n8NAB484BHUOoUYZk+KAod6ZilPhnWEH3Jr7zOgZlB5pWclqDohpuVxZhZvCLjc98\nu0NIIIXteQ399R67KwIfQkKK3RgPgVWasuLgG8O6KK6c43NpBUFzP6PBXWRWUhYP\ny547optBkhb7C8kDqnsfzhDoHLr3mf5SpJQOu394nRJdbFjQASFCUY4+3MvYKiKt\n2CM7OHa90fUvthAXAx9VmsW11LYX0IkVIWoJi4Bx1d5gwm7DduQOZApNTUZD6LFG\nTNLKDeqtZsfmDbZgCuqqFkZrrBhRJGuLZzvNcwIDAQABAoIBAQDCK/WNk8tCmJE+\nrVvuEBZmPUG1OcdEjjAlKXByyL+8X6AOm5EtTGtBXBG4xhszqtIkJ2XCASO6QTrv\nnjA8mhp/715tZ+6ZBP9egF4EjhGHCMJ9Ep3J6Y9usBgDvzms/fjVAuqMYcWTO9Ul\nhRu6EcMOsgQ38dOK20770bd//sFu6xSlyd+O8AzzS14Kkgi/jAX4EItiYaR/TwAY\nK2MAS0aOI0Cy3WaNMZ8kLdEmYYxW5nZb6tjGtuxM+jk8Cu6p8mEWM0MfHkYIgOmF\nId+DrD2rjKMvmTtiWY/QsOLgii5jN8T7aJrpQ1YLuU4LpZ0cYjzLvk/REyBYkIy+\nwaI1dSr5AoGBAPc6nwrhsrIepM3STarMmS4fjn3rIpV3VKI5Ma56EEdr+YkH8SEo\n7TrLLVypxDgQ7Ti060JNyR+1fk0773xmZpsGzE7AqEYTthchy0twYCTLa6anV2NO\ny5vZvnltgTFabnVbBiTq2J9DkLDrMPezio9Zu0C0OquxOC+vjCdhV4sVAoGBANo2\n91Z6Q0K4HpXx563sfRVeD2cNLmt35lNQEpmlI9tqqkB2Z/B9KTeE+xGhayTw+FJH\n9IF0web1qrvYBpig5gG60rjnU+VjImBKcC+cNPtk6QbN9678OX5v3t+rRsDe2m85\nXCowSzyymtNaCSFpjxXxn+UcLxwIYxp1yn2EzXhnAoGBAIIVCyfbl32XGBnf5NPQ\nsWyOWBgzB1BjqFlvBJAMU9JwoqySTDKpaSE9VJHkFYV2iosCzqJlcUTI5zrWJW1s\nJ+K8EfYB8shkiLPlKSV5bG0Px4W5mQZ8qC9Jw6n6jzaboXEIQtRb6TzrfQ9JwMsk\nYeyJRziFXDWImsqkcHcsBbb9AoGBALM28WvUfekNzhDX2667yv8BgSThbn5UupUx\n7hTBy/EoaSsIE9Uu9erjDFAughCU11y8O9MWUSmeGdqsUL6JZl2FUgsJ8Z0zDciH\nWhu/7sOI3Nj5z7Gm9JEiz6hiwnkkjcFLGqaLgz8WcJGkIFuQljMvfmJsA0TCnqHc\nm7D6oMWBAoGBALXStP9t/1vatqKUM0Ws+7tPKpP5ROrA1+r4HUQIIOUJ2yOl+v3c\n8VrDIh+OoRSv33uSk4dACndVJmRGIiD9TurtDNIlDxFtBI5CPoQIKsylsgXTet7e\nAO03zIIGgb6TeeDKMes9/wdItmdxhtVkzEAfJPQYezu1q+YknRB7zKvp\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.stg.vpn.daniel.gomez-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICczCCAVsCAQAwLjELMAkGA1UEChMCd2cxHzAdBgNVBAMTFndnLnN0Zy52cG4u\ncm9vdC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtFKS4\n33FP+A8IFC+/3W2DN+udaHS/OgqUO3PHrCFYk6zQz8hNJGhn0HCGFpWo4XNWuhN3\nP3VOOESm2FIHIWRq/vAFedqzjSKrj5Sak7C3dnfSvGGZmTcsQyjQq3yxwXWU/zW9\nBqJO+Vo9JsvqXQM/AGHJP8g7hi3ZZC/ABvBw865TSBos26GBYxkA/EYG0a1dUlYy\nysf4TEozinbB5fVihWnvCtB4wGWi0t/ubiLAPPMpKmYDEMlee+RtZkrNAFl7B0k9\nlN3X1aQAtL0ypBZ534GGbgQsYXa4KeLYIvQNAxhLBjnl2R4v8mgA66/uk0NTbxZ6\nBiuT0lwlmy93z431AgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEAIGpu9zsK1XkV\nSY/iZeVRpk8p1G+CaW7b4FTRafqTHOvrjMpIh33b9tGAqdSci80T04BAbQGJAJw7\n7Sr5eDWHGKfNIIbQxuKUnQBvkMXny+vLvor4uttSkEAGwzjs3RBj295qX/JaND+n\nAPZrt8HJwyfjD4ci8/U7byamcCpAxqSZvUe5GocBnUmXVQwEkStOT9qHzYKelEsv\n/OVIudfQquZQ8eH+e10oww1602iJ4/W14e7KUocimPLcST4BJU6a9z5u+aEqv8ci\netSmVXED+LFopHGlcp9Y5Y0x9gwLJL9WigTsb1WtHPqiDrMCjDesr/wLrz7LGXge\nZYZ+N+4K9Q==\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "30e4387095f966d15ee2a1934cc07f0283ef476a",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArRSkuN9xT/gPCBQvv91tgzfrnWh0vzoKlDtzx6whWJOs0M/I\nTSRoZ9BwhhaVqOFzVroTdz91TjhEpthSByFkav7wBXnas40iq4+UmpOwt3Z30rxh\nmZk3LEMo0Kt8scF1lP81vQaiTvlaPSbL6l0DPwBhyT/IO4Yt2WQvwAbwcPOuU0ga\nLNuhgWMZAPxGBtGtXVJWMsrH+ExKM4p2weX1YoVp7wrQeMBlotLf7m4iwDzzKSpm\nAxDJXnvkbWZKzQBZewdJPZTd19WkALS9MqQWed+Bhm4ELGF2uCni2CL0DQMYSwY5\n5dkeL/JoAOuv7pNDU28WegYrk9JcJZsvd8+N9QIDAQABAoIBABcDaauTOjPR3d3L\nIVY3kPojk1aIrw1GIGX5SbnA72YhrJbPKejn8GHtWyjZE+kyoO1lLHVsoKJX5Pjy\nRmXgUMPRRgTUYPoCyBtbqfyrqpGaVPBWT/vmXWmrPGASjS/tcz7ueCy8FxS9HvyG\njhKJb4cO+/GQY4VWn/4JzjeQNKQv6nexXl3hAVgt4lA/UPUhSKj+fnMAF2+jZ1Og\nvA49Pu4rWe/eix5v45mYtuZYPYdTKCQ4sNVQWHthpgXKzPnpwaZjll9z7nnzLbID\nMKtPoPEixqfOyO+7TbQLWTBMWknvAzVIZ5GTAn7iFkznOu6sxDRHdIdrRuGxWIl0\n+5kcbLkCgYEA2ooO0r1jiAM0zdJg1LEW+gam1pRU6m1XgYuSA3A8SlMQ0YaXF8S6\njrf0FDOmMzG2PvtIh2aX0vy2yDdvJwsMz6u0UykvhvSM1YfdCDYxHo94O2KytCiS\nuwkr/Z1Ila6d/trHzCmYXjDVlcb6eXh4rPWSJ8AEQQNltePrTYbvFG8CgYEAyr/E\n0qaKv4Cr10Cn+ynU2mc0iK6pQ5wlo/ZKXZwCeROAV+qzNS2tSwjTnhqUHd6IITCe\nkBzv8wp0ZZ0O2sL8xp4597G8TOcdGjt5rWRSLNUVUMHcT8PBpatRaQewonVjmNAW\nGNViLhvEtg2YYOLPtNSPaNrMjpUeQxyRPVzPndsCgYBpAMaoiSkGlAvODRRLfZ89\nmO6W0YSPcuQFsYsBre66A3lkQxfb6sF8i3RyNHLZzDv1vQUXUbsHPDeSsdftWYjZ\nS3YEMxjL7jqw6mvQY0FsnqC1X/HfUFNYHMsPO4BBsznk1zgCp8W3FB27rnRw4uqQ\nqBmGkeM5XamEILPRd1DubwKBgHhfBD7AK63oeZ1RQKnoOvvzvAfOEqYWRW6j4aDT\n58/0WQVZTU4sMS9ULTc3tmpJXO6/i9QpqffUZCiT52bPzv0ooWfCOPY7XFbfqqzb\n28HMPFx2zBL7OLPgE3RU4XSCV0A5gnT58tFHITGovqf+4KwOapopFLsuIwpbIouY\n15ZzAoGAE8Ztopn7AS5BjvM5TkGy+Z0zjZRD+0ZNkNCDGydDIiYp2rhPVFKeYMMu\nsSfNYsaJcKQ7iy7IcH7MXSdmOoCQbbxsuVyO0HjsZiF+yguH70GvHQBPnw7R+Z0Y\nT9sFyzAfCGIn/ilBjCZlxFhu6kuajzxCLGOE2avfg9KXKgEKCoY=\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.stg.vpn.root-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICeDCCAWACAQAwMzELMAkGA1UEChMCd2cxJDAiBgNVBAMTG3dnLnN0Zy52cG4u\ndGVycmFmb3JtLWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nANklh3zuUf3SSzF2lD4cROWRAxdUxzV8vibRzjLizcBSCRF9/g0EOFH1EMSk7xaT\nOnCIdvwOZrJ0u+v6d47jM6N+oLNL0I0ZcvTxbQfyh3AwCQLVB6MFN6YCPvAVskt5\n9lEomu66O2rFPry9LgN2zk8e9E6vKHFKqGa+YTwBwwHmDYuXo5JXZG1G4lUensmm\nB6P3FCT+gp3Wpanp91Q2qSNXCRFXV1SoeRg45FUZFKVmeO3MK11UQbq/K/ThredS\nwuHr8qk3dgt7Pu3LAWmbjQm5jQi8hn8+Xm/MQhPtplJPK1IcYfp/T0Qgs3OYRhSQ\nO8t4dXsIYyI/KJR4E+JtNo8CAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQAHCCC/\n3Yk2bhBc3AQaDPfNQYAF/GOJAwO3mW1CaLzAQ/xWLvwcrZYBlHfTxLtzjRDXcg8h\nPMhA2QzP+IBQFLGvbEU76MaIJ3Skk5yi5nqIAILnlhlitchYz7cRk8cboqOA+ndw\nefeqfiPBqqS4iYL7LpXAJ3/T7iE9ZgvRzxdTe5mrIyZB/BWdQcW9D+ikitkWocCA\njplwhDFFKq2oJyXLjhrsQsGwxNItJdxTXt0wCzIbJgK14IUlESPwFjPJkc11u5KF\ntzZZv7H66IDUG6tk6nXbi/vbGuAF8c1ARSggYNQEJ/U8UR3DJZcQqrb3KkK7vv0G\nCqg4TKMxL/PuEE5G\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "b29c3a0f22e4cdf51de585ae19cfc1e06a3da7f1",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA2SWHfO5R/dJLMXaUPhxE5ZEDF1THNXy+JtHOMuLNwFIJEX3+\nDQQ4UfUQxKTvFpM6cIh2/A5msnS76/p3juMzo36gs0vQjRly9PFtB/KHcDAJAtUH\nowU3pgI+8BWyS3n2USia7ro7asU+vL0uA3bOTx70Tq8ocUqoZr5hPAHDAeYNi5ej\nkldkbUbiVR6eyaYHo/cUJP6Cndalqen3VDapI1cJEVdXVKh5GDjkVRkUpWZ47cwr\nXVRBur8r9OGt51LC4evyqTd2C3s+7csBaZuNCbmNCLyGfz5eb8xCE+2mUk8rUhxh\n+n9PRCCzc5hGFJA7y3h1ewhjIj8olHgT4m02jwIDAQABAoIBAQCBo0wuI8HDfUby\n8s4x/oKLY3Wq+iwsHJsRZfRqoMkhZliPnt6LOte85kfqfmVW3vLmuDIA7UAWjmaa\nzV+PaMktdK3QHRUXB/h/j5r+QabmLWdTz4bNppHAhFq6ztkxAlExxsIof/p1FekM\nmQzdeJJW3i4Qw7WrXV0IaeR3BL49ZNdK/EyvkTgvIlro2V7I41cC0R7MhSTtYEVH\nLRh+YH/kIhEbg1OLY+A88KZamQkN6FxhqG2HJchprsF1acGYim2RMhAzC2sqGfx7\n8eve5ZmntSr7X4YJWvG+cpaVg4Y9J122nxtW8DBcr96cKkyjk4FDm5afGkZOjJS+\niY1sZV3BAoGBAPNuLzLm1v6J2OXrVu70BfoGw5OsN7NLaTCpOTAtZWANh5duJ2c2\nng7qwn2BnYFJQR98grIEqsReIrdtqFHp1OWuMJ6qsiN7Fid8w0lMxqxz7QtoVeC+\nMo65ouZUqBV4GFQLYwRTubhNiQ+2FVH3vqrO45k2BhR1WDvWUIiX8aOxAoGBAORb\n6LXlNguejgvVaPJ3YSmyCHpS4U/+FLeTDd+WJWZrceXHHk3mRbJJ7oJJCaAqNr0a\n1gkIWFwdKbXWx08Si/hRjpddzUszJm6sOm2pU1YJL2fAjL6V3obhGCTFwvukaFAq\nBXKaCtT4w1noxIWaTHNnuTYtrxxhe2b/Tq8y9k4/AoGBAIKipM2qN8JNc4qfav29\nEuAEdTxwdUvQslic18XU9sw/Nn67bIXlN5lFvq3fuwjAqSQei3zBKGtNIVBSlruu\nwsOnYQwlCogj69WxDJPvkcbGR3WRvlRnfXY+hP8ae0FaO6QOoEqYK9iOM3ms+3AL\nhdTgRh/YcBbWik1CS+GhuNlhAoGAcXsbEglt6ihI/qh3FscsicPnYqJ9RXtGYFO7\nuTisLVGHsGBbNusQB6Gl3Sjel7Fismb7plF3V49Ggw7QzQKyfBxLd/0tYAlzN9xu\nzMAwobi+zhhp2OwxQWXq0ZtVYig5jlzTiDf02hElQzDhOGONSmxpJftd4gSvhmep\nencg35ECgYBY7B7+JXUtxWziFr7KHV6WMsxDY5IG33VFeefI9LaTK6y8lNgJCf4B\nbMslnrUEq12bS43+mxzoQZJH6cf45r4QHviPjnOWm7ybN85cnQXZm2Ltl0Vvi3v+\nf/x1XTwhkQKw3KMFX2wi22XFWvldtlsOeBaHVUZmqY0K3yADuF7tdg==\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.stg.vpn.terraform-client",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.client"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_cert_request",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICbjCCAVYCAQAwKTELMAkGA1UEChMCd2cxGjAYBgNVBAMTEXdnLnN0Zy52cG4u\nc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxtBBx9iKoqxU\nKCpwlQyl/MBiDIMGMd+c97HkwLFXegJ/6uL3lWuItAknAS8/HXpxq7v/NiC3P8ZX\n13oDqvM8P9HJ94WpgbK5r0ohmXbmqfa15G6uKXTsnEDpkhR6LL6ehgj4pt1UKX5J\n5XnI8uxzSJd70iMlfeR8xCCQGZ+rBAB71HZQeV+4ZG4lF8OEG3GXGW4I5/8eXQ+B\nenLwUe2IVZrtZ+7oROhP0VDAw6e7dRhhjXxA+JH8miv9h0zYS59aF3gEf0we8u6S\nU85LK/trsac0r/FMA86wE9M8qRKFWo48M5GJjlZQoq6YAi6MDIsGmKk0uJh/qNMV\nhO9odwCgDQIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAMM1JyXbd7l+oS6BGMJn\nOP1a5mfsx8NAfKtM3zHYCz6e3y2biJPg3ewlJA4QYgXJ8Whqm6ncO9uNGljpIWk5\ntsFhPW+j3a9IviqwgCKRkC1B8xs/xxZIIssCZKcAl/+uCvs75U42bEjPZM/qD9Jj\ncBrCv1XZ657eHb2+P0QeByrAl14k7v5iYUnn15Vqr0VCEP3rvfQBiKmm0cXJE8ZX\nIbMxqXI3bvz5/xlwH71TIxJo5Reb9tSuRkpvALwYicx7RLnnVrNH3VDizrDi7irr\nrNCK8gfQWtdAhl7eOi+2EPfGzYSqLBAC/kTHgrdTOEskFRk4yxwCfun+ZsflzsjB\nM4Y=\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": null,
            "id": "8cff99cc9ece58de30d572050cbd940dc432d5b4",
            "ip_addresses": null,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAxtBBx9iKoqxUKCpwlQyl/MBiDIMGMd+c97HkwLFXegJ/6uL3\nlWuItAknAS8/HXpxq7v/NiC3P8ZX13oDqvM8P9HJ94WpgbK5r0ohmXbmqfa15G6u\nKXTsnEDpkhR6LL6ehgj4pt1UKX5J5XnI8uxzSJd70iMlfeR8xCCQGZ+rBAB71HZQ\neV+4ZG4lF8OEG3GXGW4I5/8eXQ+BenLwUe2IVZrtZ+7oROhP0VDAw6e7dRhhjXxA\n+JH8miv9h0zYS59aF3gEf0we8u6SU85LK/trsac0r/FMA86wE9M8qRKFWo48M5GJ\njlZQoq6YAi6MDIsGmKk0uJh/qNMVhO9odwCgDQIDAQABAoIBAHcHlmqU3aO5MwV9\nKzxBf1tMvycohtvzOiId8ovfYTUeLAGv83UVFZpcZGrUI6B9f3LHMmvwuGXJVSwf\n0/RUfjzjWF0GPE73dy5YXrdntYAKwinKjiEp7MM8JdscwWzqjzRGSMB2gH37Kzjl\nagbuw7KxZyOPgVHXK0+tAzkkHBpfNJFAYdtASFLiXa+WKxBBQuxShKtkaQrUws1V\nL3tv/qnZrumbjE5kIlfwMbfOKjgKgQHzuMX8Js04vUTHBHXUxHoDurX2RZ0d+v0W\nus4/0/t2YkKI31VKVwNczi3g97jWE2vjlpqjohhHAFAgjLzG4uRo+DpEIUix22i6\nMQmN6Y0CgYEAzn3Z7ObSmDYm/YCSiDSwdOTsneplfGC61HgL2YHJhGme9w9ZLRGa\nTNkRTe/bDK2/dpCkrsN3jeAuzYQr0cE5K+1PGPzaZzg2TB2YWJkNxLcqNFD2vr6x\n7wqcxRH4EQlj1unIF57AJju6HtJzgJduA99DwTDBHVrfPOQWNcGT3n8CgYEA9nsi\nlvl5P5ukkxgl67l4/CuVb1zS8n7wRfzWYMAowFyyzHGwH4wCIklgPHWFnkOTIqNm\nbQNwiYHIqZk8OXVc4YelvAvRE0qAefhE97ByhXDdl13ybgRLQ9Bn0IieOzq3XiuX\ndutJEWGoD8h2ZTSqzwrFKtprRSyIia9k4AhP03MCgYAWyhsAI2WAuRFKjyMc9zu2\nWwGmWBVFSeO0yV79bW6RN5r8x2vfJn8yFg7r3Bn/5zknW8VhKF+Mf/6KXhj7+GhX\n6cP+DQIJvFF5yxZiSNoVKOX2ii0BVkiLCk/NDDOlpbSoJnsX6ERqs9LRzgZDXfMd\naEmxC7F0jO/wZ3fwDOJF/wKBgAkuMu6eoiZ9XJbh+l+aS+hQk0NPmMfRdI+WyEFY\nRuxLR5mXznCOXXH7e6sk0XJAoBVVMrZyv1lPzTKL85NMTMZVsBWd9w6Z4skoNyFm\noA1aU9aUeDgizs7az1MUE5ivKi9GvmB+iP0tvv2/gLFqUcZeZ1OeSQqNixRdxQsX\nJCoDAoGAAuX1yPD1NtAccDr5HnxG66soPX9xDp8/dlCAZuFcqAf064UgBseViG+x\nK71fokp0CNOcvOl+FBeihzO7YeH8gU5Y5b3w/1lc05t2/ogdS36Gnfj55yYfwoAB\njAd4M/Hqj3PGWQw9MqimzRqvhdw4KwJ5ntr0WWqklHblNmcUGxU=\n-----END RSA PRIVATE KEY-----\n",
            "subject": [
              {
                "common_name": "wg.stg.vpn.server",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.server"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_locally_signed_cert",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAt9NpgQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZY\nlEj72hKwasyX88vCaBgBVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q\n60reOoFBvlzvF7MzFvkgudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxW\nUI+pAgUMVMScyPX0QPAu+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdv\nbyc6z14i+Aj5D7+wQuHeU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BO\nbiDKsNlRLc1ccgD3KZ3VhDXlnQ0kd5zHx3DfNwIDAQABAoIBAHgH4qcygMWM4Syb\nHQA/E7jNNVQiphC8MQx4k+TMskCwgrwY7ZP9x/3QIEPMThgR32Iq8owGLi1uvqBd\nU1plbdfjM6gs0jrTnLi50vvnAiUjn7v7TFDRNSSMjAoqErCuAVkp2RWjDJ5Vc2F0\nFAwL6jv7+gVz2WA6uIDDc+91bVPw2MoWLdkpwABjA+PiY19ERoudwKQNCO30F73a\nKLp66I8XdIA2ynXtLBsX1CMQTzeHauipvN3PLXfVIoY1mT+7zr5Ca9QohBteVdkQ\nFcQG8WDtKFpcRYW4hU80f5Ki0Jsavd0CFQ+xVEYLwkBQ3KCbmEqhz0uLbkXfSZ3j\nMg8DK4kCgYEAxR4CJVdFchuUKd8PuEUDo9806fJzK3fh2jnmaZcMnoZpWNWjGRPJ\nzFWPxUBV2Gl7ud0aF/96HfX3Mr90yLnXh9gH6jv6H7UEtYHC+9pK2rcWy5T858Yg\nzpJESfIx8poycnz7yHcsWPQIUX9Ug1b7wW8Gaokg8vf0Sldl1UGFjPsCgYEA7rz7\nQ/izNu3jiJIPnMu8cEq73D98PXRXBEsQ71MA9gP+rNah54RX61xzVOYbNTWWzf+x\n+KZM2yVNP4/grPNatbf2SoJk0BwCWDJ4VkPkrt7v5CDN+ob2yN4xrAaQLUaOPzPb\n/qidTna4xMqcsDOsCdwCB1ZzcGuxlTiHHD4KafUCgYEArazN+TaWkn5oIihOQm5U\nUbtldMdQ4DjFPzCKqfgTf00wXrwE8yBzSd0NSp9vw7jU8aM0zXYkk2dXQVhdPko3\n85HND31+2Rb2KjJFqP/huildJUyFNHVmDHvlPT3u8jEYR7WFZlBSO6Hv/lZxETO/\np+P5xD5EUK9Vh3bP24DaeacCgYAYfoM5IhchF580r+eyKqUW0FQd8NWKaJlU8261\nX0rF8vr6OLs7ybRLjZy3pTQ9bVYfpJBZ9pYEFfuq/dQLapxv8IPweRhm0bjb27HF\nCAo6dt0eBs+bWKWRTlrCT5oTSx3lFikII7ygBEZIypDw8xw/lrcOkaweaK47pSUX\nnLXs0QKBgHsd9hFjy6uk44YHd+ABEZE7zvah65VNmweEBVr95puwJG2IE1ewwNhh\n3gYHLLpQJdbNRKRhNSsNpngOqc3w437LreEaqk4H6jx5t6ceOMIG+d5X2JraXNNX\n126429s5un7PFhAz2Xm7PS8E8V8gNJs7G254q/XBHRwHKLfgXsok\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDPDCCAiSgAwIBAgIRAJ32R8KtJWJg/noujjJBh5QwDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAzWhcNMzQxMTEyMDAzNTAzWjA2MQswCQYDVQQKEwJ3ZzEnMCUGA1UEAxMe\nd2cuc3RnLnZwbi5kYW5pZWwuZ29tZXotY2xpZW50MIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA0r0AqeO1mVyixnXXuysLlFDwimy+jF/zVGkChf9f8Igf\nXVJb8NAB484BHUOoUYZk+KAod6ZilPhnWEH3Jr7zOgZlB5pWclqDohpuVxZhZvCL\njc98u0NIIIXteQ399R67KwIfQkKK3RgPgVWasuLgG8O6KK6c43NpBUFzP6PBXWRW\nUhYPy547optBkhb7C8kDqnsfzhDoHLr3mf5SpJQOu394nRJdbFjQASFCUY4+3MvY\nKiKt2CM7OHa90fUvthAXAx9VmsW11LYX0IkVIWoJi4Bx1d5gwm7DduQOZApNTUZD\n6LFGTNLKDeqtZsfmDbZgCuqqFkZrrBhRJGuLZzvNcwIDAQABo1YwVDAOBgNVHQ8B\nAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNV\nHSMEGDAWgBThVHQIDw2llbtDVUn8APjVWOXZJzANBgkqhkiG9w0BAQsFAAOCAQEA\nrcHZlwp0B8BITsP41tIpSyk1+cc9bTX4ABPK7e6M42DWruzdZIE2OJrKmCJ2AqY6\nd/wD+q6iuChU5Ls2sUDqe06ho/kQB+47Z9hqYyvkcrbuw+bk9RgbCidJ0qsb2yxu\nE4fmH7gqw7hE3ZV4PnikKs+kXqLk+ntvLuQoKZldoZQdD0WXVgjzW1E9nodCk9pK\nHoz7vPy3ZTb6KmTozKLmNXh4AaLy/56xWFdi9Uo3Q1GYr6J8+hPyzG5eRwUjqAgM\nT4dBEh0Dsrp40pX2t8aqZUjHmEGbD6jpRoNHwubklPtSuqJ/cbB6C3pIRiYechI9\nG8TDiJRgnbTpGs7oNogtdA==\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICezCCAWMCAQAwNjELMAkGA1UEChMCd2cxJzAlBgNVBAMTHndnLnN0Zy52cG4u\nZGFuaWVsLmdvbWV6LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBANK9AKnjtZlcosZ117srC5RQ8Ipsvoxf81RpAoX/X/CIH11SW/DQAePOAR1D\nqFGGZPigKHemYpT4Z1hB9ya+8zoGZQeaVnJag6IablcWYWbwi43PfLtDSCCF7XkN\n/fUeuysCH0JCit0YD4FVmrLi4BvDuiiunONzaQVBcz+jwV1kVlIWD8ueO6KbQZIW\n+wvJA6p7H84Q6By695n+UqSUDrt/eJ0SXWxY0AEhQlGOPtzL2CoirdgjOzh2vdH1\nL7YQFwMfVZrFtdS2F9CJFSFqCYuAcdXeYMJuw3bkDmQKTU1GQ+ixRkzSyg3qrWbH\n5g22YArqqhZGa6wYUSRri2c7zXMCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQCp\noQ4XmekiEKchZhghcARExBKxwLIQTV/uHgg2/EMOJoLRwWRqadUl1XF+Wbgq5wYh\nqUy/enM6t8wzJZOwYXC+fNc790t1KS9QLrYkxZ2oPC/39IzKADaPsXJK1qwTUamw\nxLV2dA6WsJx46AELne9yIVdPLs/D7GkTW4MfnjKLkomQ2wkmfbCeB9OaaHUu0KBU\nmKpfha3SLm+70IwuuliN0IcDiyZhlktlBWkiHJELfya1H+gp+RK+jZE9qbs1S/Sn\nXshKy1p2kmxrdJ2ozKE0ACAdRGIZC5FWrYtoB7hKAPS2qq7LVUg+ZUqjEIVJD/FQ\na/W/HG8UZ290YemzuhsZ\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "209967555840362848213956014454624847764",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T19:35:03.222714-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T19:35:03.222714-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAt9NpgQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZY\nlEj72hKwasyX88vCaBgBVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q\n60reOoFBvlzvF7MzFvkgudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxW\nUI+pAgUMVMScyPX0QPAu+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdv\nbyc6z14i+Aj5D7+wQuHeU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BO\nbiDKsNlRLc1ccgD3KZ3VhDXlnQ0kd5zHx3DfNwIDAQABAoIBAHgH4qcygMWM4Syb\nHQA/E7jNNVQiphC8MQx4k+TMskCwgrwY7ZP9x/3QIEPMThgR32Iq8owGLi1uvqBd\nU1plbdfjM6gs0jrTnLi50vvnAiUjn7v7TFDRNSSMjAoqErCuAVkp2RWjDJ5Vc2F0\nFAwL6jv7+gVz2WA6uIDDc+91bVPw2MoWLdkpwABjA+PiY19ERoudwKQNCO30F73a\nKLp66I8XdIA2ynXtLBsX1CMQTzeHauipvN3PLXfVIoY1mT+7zr5Ca9QohBteVdkQ\nFcQG8WDtKFpcRYW4hU80f5Ki0Jsavd0CFQ+xVEYLwkBQ3KCbmEqhz0uLbkXfSZ3j\nMg8DK4kCgYEAxR4CJVdFchuUKd8PuEUDo9806fJzK3fh2jnmaZcMnoZpWNWjGRPJ\nzFWPxUBV2Gl7ud0aF/96HfX3Mr90yLnXh9gH6jv6H7UEtYHC+9pK2rcWy5T858Yg\nzpJESfIx8poycnz7yHcsWPQIUX9Ug1b7wW8Gaokg8vf0Sldl1UGFjPsCgYEA7rz7\nQ/izNu3jiJIPnMu8cEq73D98PXRXBEsQ71MA9gP+rNah54RX61xzVOYbNTWWzf+x\n+KZM2yVNP4/grPNatbf2SoJk0BwCWDJ4VkPkrt7v5CDN+ob2yN4xrAaQLUaOPzPb\n/qidTna4xMqcsDOsCdwCB1ZzcGuxlTiHHD4KafUCgYEArazN+TaWkn5oIihOQm5U\nUbtldMdQ4DjFPzCKqfgTf00wXrwE8yBzSd0NSp9vw7jU8aM0zXYkk2dXQVhdPko3\n85HND31+2Rb2KjJFqP/huildJUyFNHVmDHvlPT3u8jEYR7WFZlBSO6Hv/lZxETO/\np+P5xD5EUK9Vh3bP24DaeacCgYAYfoM5IhchF580r+eyKqUW0FQd8NWKaJlU8261\nX0rF8vr6OLs7ybRLjZy3pTQ9bVYfpJBZ9pYEFfuq/dQLapxv8IPweRhm0bjb27HF\nCAo6dt0eBs+bWKWRTlrCT5oTSx3lFikII7ygBEZIypDw8xw/lrcOkaweaK47pSUX\nnLXs0QKBgHsd9hFjy6uk44YHd+ABEZE7zvah65VNmweEBVr95puwJG2IE1ewwNhh\n3gYHLLpQJdbNRKRhNSsNpngOqc3w437LreEaqk4H6jx5t6ceOMIG+d5X2JraXNNX\n126429s5un7PFhAz2Xm7PS8E8V8gNJs7G254q/XBHRwHKLfgXsok\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDNDCCAhygAwIBAgIRAKQdVowS/hCGelApWp71zvswDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAzWhcNMzQxMTEyMDAzNTAzWjAuMQswCQYDVQQKEwJ3ZzEfMB0GA1UEAxMW\nd2cuc3RnLnZwbi5yb290LWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\nAQoCggEBAK0UpLjfcU/4DwgUL7/dbYM3651odL86CpQ7c8esIViTrNDPyE0kaGfQ\ncIYWlajhc1a6E3c/dU44RKbYUgchZGr+8AV52rONIquPlJqTsLd2d9K8YZmZNyxD\nKNCrfLHBdZT/Nb0Gok75Wj0my+pdAz8AYck/yDuGLdlkL8AG8HDzrlNIGizboYFj\nGQD8RgbRrV1SVjLKx/hMSjOKdsHl9WKFae8K0HjAZaLS3+5uIsA88ykqZgMQyV57\n5G1mSs0AWXsHST2U3dfVpAC0vTKkFnnfgYZuBCxhdrgp4tgi9A0DGEsGOeXZHi/y\naADrr+6TQ1NvFnoGK5PSXCWbL3fPjfUCAwEAAaNWMFQwDgYDVR0PAQH/BAQDAgWg\nMBMGA1UdJQQMMAoGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAU\n4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcNAQELBQADggEBAKADL8ZZiCYA\n36UiaMRUIjB6ad30AuBQbET46Wee1hERgJVzA0Zb6E1Tp/1mDLgvHFhzAHh/RhQO\n3rDqUOTJrq7/2evrjnYpk6U601AHehJ0wohFzvsTi0mPDk7R/DUPZScnRZnu+BKB\nezwju8SeFmfj2UhPnBQYj0rmMNXtK8pAUY2gz9NAw2EHJSxaRVADi7OtgWInFIMJ\nA8ItjwkyTJNbIL/DKHwf41N5cRa7vR7+j4hC6G8gyXteW/Z3A7xAFGPzGMsB7ALD\n4YOze6xeMKHQqn026Kw6x6zAupQL7pQkt6Aq828QX7mD2YDND+RSq3hN2HC7yMaM\nUt/fkq/p5jI=\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICczCCAVsCAQAwLjELMAkGA1UEChMCd2cxHzAdBgNVBAMTFndnLnN0Zy52cG4u\ncm9vdC1jbGllbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtFKS4\n33FP+A8IFC+/3W2DN+udaHS/OgqUO3PHrCFYk6zQz8hNJGhn0HCGFpWo4XNWuhN3\nP3VOOESm2FIHIWRq/vAFedqzjSKrj5Sak7C3dnfSvGGZmTcsQyjQq3yxwXWU/zW9\nBqJO+Vo9JsvqXQM/AGHJP8g7hi3ZZC/ABvBw865TSBos26GBYxkA/EYG0a1dUlYy\nysf4TEozinbB5fVihWnvCtB4wGWi0t/ubiLAPPMpKmYDEMlee+RtZkrNAFl7B0k9\nlN3X1aQAtL0ypBZ534GGbgQsYXa4KeLYIvQNAxhLBjnl2R4v8mgA66/uk0NTbxZ6\nBiuT0lwlmy93z431AgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEAIGpu9zsK1XkV\nSY/iZeVRpk8p1G+CaW7b4FTRafqTHOvrjMpIh33b9tGAqdSci80T04BAbQGJAJw7\n7Sr5eDWHGKfNIIbQxuKUnQBvkMXny+vLvor4uttSkEAGwzjs3RBj295qX/JaND+n\nAPZrt8HJwyfjD4ci8/U7byamcCpAxqSZvUe5GocBnUmXVQwEkStOT9qHzYKelEsv\n/OVIudfQquZQ8eH+e10oww1602iJ4/W14e7KUocimPLcST4BJU6a9z5u+aEqv8ci\netSmVXED+LFopHGlcp9Y5Y0x9gwLJL9WigTsb1WtHPqiDrMCjDesr/wLrz7LGXge\nZYZ+N+4K9Q==\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "218145723302670254571622813618067066619",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T19:35:03.22722-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T19:35:03.22722-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "client_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAt9NpgQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZY\nlEj72hKwasyX88vCaBgBVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q\n60reOoFBvlzvF7MzFvkgudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxW\nUI+pAgUMVMScyPX0QPAu+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdv\nbyc6z14i+Aj5D7+wQuHeU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BO\nbiDKsNlRLc1ccgD3KZ3VhDXlnQ0kd5zHx3DfNwIDAQABAoIBAHgH4qcygMWM4Syb\nHQA/E7jNNVQiphC8MQx4k+TMskCwgrwY7ZP9x/3QIEPMThgR32Iq8owGLi1uvqBd\nU1plbdfjM6gs0jrTnLi50vvnAiUjn7v7TFDRNSSMjAoqErCuAVkp2RWjDJ5Vc2F0\nFAwL6jv7+gVz2WA6uIDDc+91bVPw2MoWLdkpwABjA+PiY19ERoudwKQNCO30F73a\nKLp66I8XdIA2ynXtLBsX1CMQTzeHauipvN3PLXfVIoY1mT+7zr5Ca9QohBteVdkQ\nFcQG8WDtKFpcRYW4hU80f5Ki0Jsavd0CFQ+xVEYLwkBQ3KCbmEqhz0uLbkXfSZ3j\nMg8DK4kCgYEAxR4CJVdFchuUKd8PuEUDo9806fJzK3fh2jnmaZcMnoZpWNWjGRPJ\nzFWPxUBV2Gl7ud0aF/96HfX3Mr90yLnXh9gH6jv6H7UEtYHC+9pK2rcWy5T858Yg\nzpJESfIx8poycnz7yHcsWPQIUX9Ug1b7wW8Gaokg8vf0Sldl1UGFjPsCgYEA7rz7\nQ/izNu3jiJIPnMu8cEq73D98PXRXBEsQ71MA9gP+rNah54RX61xzVOYbNTWWzf+x\n+KZM2yVNP4/grPNatbf2SoJk0BwCWDJ4VkPkrt7v5CDN+ob2yN4xrAaQLUaOPzPb\n/qidTna4xMqcsDOsCdwCB1ZzcGuxlTiHHD4KafUCgYEArazN+TaWkn5oIihOQm5U\nUbtldMdQ4DjFPzCKqfgTf00wXrwE8yBzSd0NSp9vw7jU8aM0zXYkk2dXQVhdPko3\n85HND31+2Rb2KjJFqP/huildJUyFNHVmDHvlPT3u8jEYR7WFZlBSO6Hv/lZxETO/\np+P5xD5EUK9Vh3bP24DaeacCgYAYfoM5IhchF580r+eyKqUW0FQd8NWKaJlU8261\nX0rF8vr6OLs7ybRLjZy3pTQ9bVYfpJBZ9pYEFfuq/dQLapxv8IPweRhm0bjb27HF\nCAo6dt0eBs+bWKWRTlrCT5oTSx3lFikII7ygBEZIypDw8xw/lrcOkaweaK47pSUX\nnLXs0QKBgHsd9hFjy6uk44YHd+ABEZE7zvah65VNmweEBVr95puwJG2IE1ewwNhh\n3gYHLLpQJdbNRKRhNSsNpngOqc3w437LreEaqk4H6jx5t6ceOMIG+d5X2JraXNNX\n126429s5un7PFhAz2Xm7PS8E8V8gNJs7G254q/XBHRwHKLfgXsok\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDOTCCAiGgAwIBAgIRAI8F508jb7eojfIHXew2NdEwDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAzWhcNMzQxMTEyMDAzNTAzWjAzMQswCQYDVQQKEwJ3ZzEkMCIGA1UEAxMb\nd2cuc3RnLnZwbi50ZXJyYWZvcm0tY2xpZW50MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEA2SWHfO5R/dJLMXaUPhxE5ZEDF1THNXy+JtHOMuLNwFIJEX3+\nDQQ4UfUQxKTvFpM6cIh2/A5msnS76/p3juMzo36gs0vQjRly9PFtB/KHcDAJAtUH\nowU3pgI+8BWyS3n2USia7ro7asU+vL0uA3bOTx70Tq8ocUqoZr5hPAHDAeYNi5ej\nkldkbUbiVR6eyaYHo/cUJP6Cndalqen3VDapI1cJEVdXVKh5GDjkVRkUpWZ47cwr\nXVRBur8r9OGt51LC4evyqTd2C3s+7csBaZuNCbmNCLyGfz5eb8xCE+2mUk8rUhxh\n+n9PRCCzc5hGFJA7y3h1ewhjIj8olHgT4m02jwIDAQABo1YwVDAOBgNVHQ8BAf8E\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME\nGDAWgBThVHQIDw2llbtDVUn8APjVWOXZJzANBgkqhkiG9w0BAQsFAAOCAQEAOeS/\nmXOEabEocmfzqB2oRpIjbPNeCynMFKSymlePFgtoX2hWOMstW2TIJD/2EJjGnzHH\nqn0D4JxPcWlc3lVCASkqhP/GNQWYP9LH0IPfLwFInxFiDtgt1lgEGk8e9tWmwi0P\nzHhNLG/IHGb2hfYRRuAWhc2g/RL1oK4+eW5enXh2DL51T59UOYeh4AnMXVy9qXXi\nGS8EN1pa4LM4UtlzA/sa57yN8rWaitngwJTYt+rU8tJTxn4T3ZNKMZkmH3RvQ31z\nWhBj1tYFuZB8rDdQIF4xAU1Ge6XUsW/cVrOVk4jWbr3Ff6WMUge2tg7PKJCbkUN0\neBE2LIWTQyW9cKQhBA==\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICeDCCAWACAQAwMzELMAkGA1UEChMCd2cxJDAiBgNVBAMTG3dnLnN0Zy52cG4u\ndGVycmFmb3JtLWNsaWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nANklh3zuUf3SSzF2lD4cROWRAxdUxzV8vibRzjLizcBSCRF9/g0EOFH1EMSk7xaT\nOnCIdvwOZrJ0u+v6d47jM6N+oLNL0I0ZcvTxbQfyh3AwCQLVB6MFN6YCPvAVskt5\n9lEomu66O2rFPry9LgN2zk8e9E6vKHFKqGa+YTwBwwHmDYuXo5JXZG1G4lUensmm\nB6P3FCT+gp3Wpanp91Q2qSNXCRFXV1SoeRg45FUZFKVmeO3MK11UQbq/K/ThredS\nwuHr8qk3dgt7Pu3LAWmbjQm5jQi8hn8+Xm/MQhPtplJPK1IcYfp/T0Qgs3OYRhSQ\nO8t4dXsIYyI/KJR4E+JtNo8CAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQAHCCC/\n3Yk2bhBc3AQaDPfNQYAF/GOJAwO3mW1CaLzAQ/xWLvwcrZYBlHfTxLtzjRDXcg8h\nPMhA2QzP+IBQFLGvbEU76MaIJ3Skk5yi5nqIAILnlhlitchYz7cRk8cboqOA+ndw\nefeqfiPBqqS4iYL7LpXAJ3/T7iE9ZgvRzxdTe5mrIyZB/BWdQcW9D+ikitkWocCA\njplwhDFFKq2oJyXLjhrsQsGwxNItJdxTXt0wCzIbJgK14IUlESPwFjPJkc11u5KF\ntzZZv7H66IDUG6tk6nXbi/vbGuAF8c1ARSggYNQEJ/U8UR3DJZcQqrb3KkK7vv0G\nCqg4TKMxL/PuEE5G\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "190110256388145959538209580382481167825",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T19:35:03.227437-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T19:35:03.227437-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.client",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.client",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_locally_signed_cert",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "key_encipherment",
              "digital_signature",
              "server_auth"
            ],
            "ca_cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAt9NpgQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZY\nlEj72hKwasyX88vCaBgBVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q\n60reOoFBvlzvF7MzFvkgudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxW\nUI+pAgUMVMScyPX0QPAu+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdv\nbyc6z14i+Aj5D7+wQuHeU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BO\nbiDKsNlRLc1ccgD3KZ3VhDXlnQ0kd5zHx3DfNwIDAQABAoIBAHgH4qcygMWM4Syb\nHQA/E7jNNVQiphC8MQx4k+TMskCwgrwY7ZP9x/3QIEPMThgR32Iq8owGLi1uvqBd\nU1plbdfjM6gs0jrTnLi50vvnAiUjn7v7TFDRNSSMjAoqErCuAVkp2RWjDJ5Vc2F0\nFAwL6jv7+gVz2WA6uIDDc+91bVPw2MoWLdkpwABjA+PiY19ERoudwKQNCO30F73a\nKLp66I8XdIA2ynXtLBsX1CMQTzeHauipvN3PLXfVIoY1mT+7zr5Ca9QohBteVdkQ\nFcQG8WDtKFpcRYW4hU80f5Ki0Jsavd0CFQ+xVEYLwkBQ3KCbmEqhz0uLbkXfSZ3j\nMg8DK4kCgYEAxR4CJVdFchuUKd8PuEUDo9806fJzK3fh2jnmaZcMnoZpWNWjGRPJ\nzFWPxUBV2Gl7ud0aF/96HfX3Mr90yLnXh9gH6jv6H7UEtYHC+9pK2rcWy5T858Yg\nzpJESfIx8poycnz7yHcsWPQIUX9Ug1b7wW8Gaokg8vf0Sldl1UGFjPsCgYEA7rz7\nQ/izNu3jiJIPnMu8cEq73D98PXRXBEsQ71MA9gP+rNah54RX61xzVOYbNTWWzf+x\n+KZM2yVNP4/grPNatbf2SoJk0BwCWDJ4VkPkrt7v5CDN+ob2yN4xrAaQLUaOPzPb\n/qidTna4xMqcsDOsCdwCB1ZzcGuxlTiHHD4KafUCgYEArazN+TaWkn5oIihOQm5U\nUbtldMdQ4DjFPzCKqfgTf00wXrwE8yBzSd0NSp9vw7jU8aM0zXYkk2dXQVhdPko3\n85HND31+2Rb2KjJFqP/huildJUyFNHVmDHvlPT3u8jEYR7WFZlBSO6Hv/lZxETO/\np+P5xD5EUK9Vh3bP24DaeacCgYAYfoM5IhchF580r+eyKqUW0FQd8NWKaJlU8261\nX0rF8vr6OLs7ybRLjZy3pTQ9bVYfpJBZ9pYEFfuq/dQLapxv8IPweRhm0bjb27HF\nCAo6dt0eBs+bWKWRTlrCT5oTSx3lFikII7ygBEZIypDw8xw/lrcOkaweaK47pSUX\nnLXs0QKBgHsd9hFjy6uk44YHd+ABEZE7zvah65VNmweEBVr95puwJG2IE1ewwNhh\n3gYHLLpQJdbNRKRhNSsNpngOqc3w437LreEaqk4H6jx5t6ceOMIG+d5X2JraXNNX\n126429s5un7PFhAz2Xm7PS8E8V8gNJs7G254q/XBHRwHKLfgXsok\n-----END RSA PRIVATE KEY-----\n",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDLzCCAhegAwIBAgIRAMUoiMwMv9Nw1cqnmK49Xa4wDQYJKoZIhvcNAQELBQAw\nJTELMAkGA1UEChMCd2cxFjAUBgNVBAMTDXdnLnN0Zy52cG4uY2EwHhcNMjQxMTE0\nMDAzNTAyWhcNMzQxMTEyMDAzNTAyWjApMQswCQYDVQQKEwJ3ZzEaMBgGA1UEAxMR\nd2cuc3RnLnZwbi5zZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQDG0EHH2IqirFQoKnCVDKX8wGIMgwYx35z3seTAsVd6An/q4veVa4i0CScBLz8d\nenGru/82ILc/xlfXegOq8zw/0cn3hamBsrmvSiGZduap9rXkbq4pdOycQOmSFHos\nvp6GCPim3VQpfknlecjy7HNIl3vSIyV95HzEIJAZn6sEAHvUdlB5X7hkbiUXw4Qb\ncZcZbgjn/x5dD4F6cvBR7YhVmu1n7uhE6E/RUMDDp7t1GGGNfED4kfyaK/2HTNhL\nn1oXeAR/TB7y7pJTzksr+2uxpzSv8UwDzrAT0zypEoVajjwzkYmOVlCirpgCLowM\niwaYqTS4mH+o0xWE72h3AKANAgMBAAGjVjBUMA4GA1UdDwEB/wQEAwIFoDATBgNV\nHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFOFUdAgP\nDaWVu0NVSfwA+NVY5dknMA0GCSqGSIb3DQEBCwUAA4IBAQBfBVSY8lcxzJra/BL6\n9l3MYxB9tQzfadyCfbyXbEEt9VL1kqkZA17IU6SxGzcKXe6lVZjZmuNm8qUJ5TG+\nAtoIU8lFHOs3J869n2IQOdskOby5cRJTgwGGDjnwN6gEGk3SCUvl6dbATUXuD1A5\n2fhrP9c5WfLL+ioExHkhsc5V6boxpngiE0ZTK/1Az2lRYgwVdCA+nN6rqQw2Srsi\ninTXCXwIdhruTUk+6eEy5rS/YNHscE9O61kuvbbQvOUxzY1bqEXr/XLOIyGZsQnz\nt92lQmLecn4CDMg2tb5FXLiahmQTqDIj6rLyqjvXjKXVNeoj00XUwiCVrTisnbuI\nP/gu\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICbjCCAVYCAQAwKTELMAkGA1UEChMCd2cxGjAYBgNVBAMTEXdnLnN0Zy52cG4u\nc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxtBBx9iKoqxU\nKCpwlQyl/MBiDIMGMd+c97HkwLFXegJ/6uL3lWuItAknAS8/HXpxq7v/NiC3P8ZX\n13oDqvM8P9HJ94WpgbK5r0ohmXbmqfa15G6uKXTsnEDpkhR6LL6ehgj4pt1UKX5J\n5XnI8uxzSJd70iMlfeR8xCCQGZ+rBAB71HZQeV+4ZG4lF8OEG3GXGW4I5/8eXQ+B\nenLwUe2IVZrtZ+7oROhP0VDAw6e7dRhhjXxA+JH8miv9h0zYS59aF3gEf0we8u6S\nU85LK/trsac0r/FMA86wE9M8qRKFWo48M5GJjlZQoq6YAi6MDIsGmKk0uJh/qNMV\nhO9odwCgDQIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAMM1JyXbd7l+oS6BGMJn\nOP1a5mfsx8NAfKtM3zHYCz6e3y2biJPg3ewlJA4QYgXJ8Whqm6ncO9uNGljpIWk5\ntsFhPW+j3a9IviqwgCKRkC1B8xs/xxZIIssCZKcAl/+uCvs75U42bEjPZM/qD9Jj\ncBrCv1XZ657eHb2+P0QeByrAl14k7v5iYUnn15Vqr0VCEP3rvfQBiKmm0cXJE8ZX\nIbMxqXI3bvz5/xlwH71TIxJo5Reb9tSuRkpvALwYicx7RLnnVrNH3VDizrDi7irr\nrNCK8gfQWtdAhl7eOi+2EPfGzYSqLBAC/kTHgrdTOEskFRk4yxwCfun+ZsflzsjB\nM4Y=\n-----END CERTIFICATE REQUEST-----\n",
            "early_renewal_hours": 0,
            "id": "262068381618166793054464803134787902894",
            "is_ca_certificate": false,
            "ready_for_renewal": false,
            "set_subject_key_id": false,
            "validity_end_time": "2034-11-11T19:35:02.044218-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T19:35:02.044218-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_cert_request.server",
            "module.vpn-client.tls_private_key.ca",
            "module.vpn-client.tls_private_key.server",
            "module.vpn-client.tls_self_signed_cert.ca"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "6d42b0349896d18f2a88cb876924191b1fdefd68",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAt9NpgQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs\n9GeoWeZYlEj72hKwasyX88vCaBgBVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUP\nycNhd4/q60reOoFBvlzvF7MzFvkgudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3X\nY3OFGnxWUI+pAgUMVMScyPX0QPAu+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7\nxzqyyrdvbyc6z14i+Aj5D7+wQuHeU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q\n+PupS9BObiDKsNlRLc1ccgD3KZ3VhDXlnQ0kd5zHx3DfNwAAA7jX5Qkc1+UJHAAA\nAAdzc2gtcnNhAAABAQC302mBDQLjx4sjkQCWoms83QW4m3T3zMEi2DbINOz0Z6hZ\n5liUSPvaErBqzJfzy8JoGAFVeSkT+vmo0FlyC4X4HyEMZGWsPz3157jedQ/Jw2F3\nj+rrSt46gUG+XO8XszMW+SC528XWJflOJLROjyVVuLDwz2ks0Fr/3LVsnddjc4Ua\nfFZQj6kCBQxUxJzI9fRA8C75QEc+DdGgkuh/u9IP/zK2Kn4sOJUBc1TLO3vHOrLK\nt29vJzrPXiL4CPkPv7BC4d5TtW+uZIvG8aRTwV01aldJ/tVeDVyt/MnMn5D4+6lL\n0E5uIMqw2VEtzVxyAPcpndWENeWdDSR3nMfHcN83AAAAAwEAAQAAAQB4B+KnMoDF\njOEsmx0APxO4zTVUIqYQvDEMeJPkzLJAsIK8GO2T/cf90CBDzE4YEd9iKvKMBi4t\nbr6gXVNaZW3X4zOoLNI605y4udL75wIlI5+7+0xQ0TUkjIwKKhKwrgFZKdkVowye\nVXNhdBQMC+o7+/oFc9lgOriAw3PvdW1T8NjKFi3ZKcAAYwPj4mNfREaLncCkDQjt\n9Be92ii6euiPF3SANsp17SwbF9QjEE83h2roqbzdzy131SKGNZk/u86+QmvUKIQb\nXlXZEBXEBvFg7ShaXEWFuIVPNH+SotCbGr3dAhUPsVRGC8JAUNygm5hKoc9Li25F\n30md4zIPAyuJAAAAgHsd9hFjy6uk44YHd+ABEZE7zvah65VNmweEBVr95puwJG2I\nE1ewwNhh3gYHLLpQJdbNRKRhNSsNpngOqc3w437LreEaqk4H6jx5t6ceOMIG+d5X\n2JraXNNX126429s5un7PFhAz2Xm7PS8E8V8gNJs7G254q/XBHRwHKLfgXsokAAAA\ngQDFHgIlV0VyG5Qp3w+4RQOj3zTp8nMrd+HaOeZplwyehmlY1aMZE8nMVY/FQFXY\naXu53RoX/3od9fcyv3TIudeH2AfqO/oftQS1gcL72kratxbLlPznxiDOkkRJ8jHy\nmjJyfPvIdyxY9AhRf1SDVvvBbwZqiSDy9/RKV2XVQYWM+wAAAIEA7rz7Q/izNu3j\niJIPnMu8cEq73D98PXRXBEsQ71MA9gP+rNah54RX61xzVOYbNTWWzf+x+KZM2yVN\nP4/grPNatbf2SoJk0BwCWDJ4VkPkrt7v5CDN+ob2yN4xrAaQLUaOPzPb/qidTna4\nxMqcsDOsCdwCB1ZzcGuxlTiHHD4KafUAAAAAAQID\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAt9NpgQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZY\nlEj72hKwasyX88vCaBgBVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q\n60reOoFBvlzvF7MzFvkgudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxW\nUI+pAgUMVMScyPX0QPAu+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdv\nbyc6z14i+Aj5D7+wQuHeU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BO\nbiDKsNlRLc1ccgD3KZ3VhDXlnQ0kd5zHx3DfNwIDAQABAoIBAHgH4qcygMWM4Syb\nHQA/E7jNNVQiphC8MQx4k+TMskCwgrwY7ZP9x/3QIEPMThgR32Iq8owGLi1uvqBd\nU1plbdfjM6gs0jrTnLi50vvnAiUjn7v7TFDRNSSMjAoqErCuAVkp2RWjDJ5Vc2F0\nFAwL6jv7+gVz2WA6uIDDc+91bVPw2MoWLdkpwABjA+PiY19ERoudwKQNCO30F73a\nKLp66I8XdIA2ynXtLBsX1CMQTzeHauipvN3PLXfVIoY1mT+7zr5Ca9QohBteVdkQ\nFcQG8WDtKFpcRYW4hU80f5Ki0Jsavd0CFQ+xVEYLwkBQ3KCbmEqhz0uLbkXfSZ3j\nMg8DK4kCgYEAxR4CJVdFchuUKd8PuEUDo9806fJzK3fh2jnmaZcMnoZpWNWjGRPJ\nzFWPxUBV2Gl7ud0aF/96HfX3Mr90yLnXh9gH6jv6H7UEtYHC+9pK2rcWy5T858Yg\nzpJESfIx8poycnz7yHcsWPQIUX9Ug1b7wW8Gaokg8vf0Sldl1UGFjPsCgYEA7rz7\nQ/izNu3jiJIPnMu8cEq73D98PXRXBEsQ71MA9gP+rNah54RX61xzVOYbNTWWzf+x\n+KZM2yVNP4/grPNatbf2SoJk0BwCWDJ4VkPkrt7v5CDN+ob2yN4xrAaQLUaOPzPb\n/qidTna4xMqcsDOsCdwCB1ZzcGuxlTiHHD4KafUCgYEArazN+TaWkn5oIihOQm5U\nUbtldMdQ4DjFPzCKqfgTf00wXrwE8yBzSd0NSp9vw7jU8aM0zXYkk2dXQVhdPko3\n85HND31+2Rb2KjJFqP/huildJUyFNHVmDHvlPT3u8jEYR7WFZlBSO6Hv/lZxETO/\np+P5xD5EUK9Vh3bP24DaeacCgYAYfoM5IhchF580r+eyKqUW0FQd8NWKaJlU8261\nX0rF8vr6OLs7ybRLjZy3pTQ9bVYfpJBZ9pYEFfuq/dQLapxv8IPweRhm0bjb27HF\nCAo6dt0eBs+bWKWRTlrCT5oTSx3lFikII7ygBEZIypDw8xw/lrcOkaweaK47pSUX\nnLXs0QKBgHsd9hFjy6uk44YHd+ABEZE7zvah65VNmweEBVr95puwJG2IE1ewwNhh\n3gYHLLpQJdbNRKRhNSsNpngOqc3w437LreEaqk4H6jx5t6ceOMIG+d5X2JraXNNX\n126429s5un7PFhAz2Xm7PS8E8V8gNJs7G254q/XBHRwHKLfgXsok\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC302mBDQLjx4sj\nkQCWoms83QW4m3T3zMEi2DbINOz0Z6hZ5liUSPvaErBqzJfzy8JoGAFVeSkT+vmo\n0FlyC4X4HyEMZGWsPz3157jedQ/Jw2F3j+rrSt46gUG+XO8XszMW+SC528XWJflO\nJLROjyVVuLDwz2ks0Fr/3LVsnddjc4UafFZQj6kCBQxUxJzI9fRA8C75QEc+DdGg\nkuh/u9IP/zK2Kn4sOJUBc1TLO3vHOrLKt29vJzrPXiL4CPkPv7BC4d5TtW+uZIvG\n8aRTwV01aldJ/tVeDVyt/MnMn5D4+6lL0E5uIMqw2VEtzVxyAPcpndWENeWdDSR3\nnMfHcN83AgMBAAECggEAeAfipzKAxYzhLJsdAD8TuM01VCKmELwxDHiT5MyyQLCC\nvBjtk/3H/dAgQ8xOGBHfYiryjAYuLW6+oF1TWmVt1+MzqCzSOtOcuLnS++cCJSOf\nu/tMUNE1JIyMCioSsK4BWSnZFaMMnlVzYXQUDAvqO/v6BXPZYDq4gMNz73VtU/DY\nyhYt2SnAAGMD4+JjX0RGi53ApA0I7fQXvdoounrojxd0gDbKde0sGxfUIxBPN4dq\n6Km83c8td9UihjWZP7vOvkJr1CiEG15V2RAVxAbxYO0oWlxFhbiFTzR/kqLQmxq9\n3QIVD7FURgvCQFDcoJuYSqHPS4tuRd9JneMyDwMriQKBgQDFHgIlV0VyG5Qp3w+4\nRQOj3zTp8nMrd+HaOeZplwyehmlY1aMZE8nMVY/FQFXYaXu53RoX/3od9fcyv3TI\nudeH2AfqO/oftQS1gcL72kratxbLlPznxiDOkkRJ8jHymjJyfPvIdyxY9AhRf1SD\nVvvBbwZqiSDy9/RKV2XVQYWM+wKBgQDuvPtD+LM27eOIkg+cy7xwSrvcP3w9dFcE\nSxDvUwD2A/6s1qHnhFfrXHNU5hs1NZbN/7H4pkzbJU0/j+Cs81q1t/ZKgmTQHAJY\nMnhWQ+Su3u/kIM36hvbI3jGsBpAtRo4/M9v+qJ1OdrjEypywM6wJ3AIHVnNwa7GV\nOIccPgpp9QKBgQCtrM35NpaSfmgiKE5CblRRu2V0x1DgOMU/MIqp+BN/TTBevATz\nIHNJ3Q1Kn2/DuNTxozTNdiSTZ1dBWF0+Sjfzkc0PfX7ZFvYqMkWo/+G6KV0lTIU0\ndWYMe+U9Pe7yMRhHtYVmUFI7oe/+VnERM7+n4/nEPkRQr1WHds/bgNp5pwKBgBh+\ngzkiFyEXnzSv57IqpRbQVB3w1YpomVTzbrVfSsXy+vo4uzvJtEuNnLelND1tVh+k\nkFn2lgQV+6r91AtqnG/wg/B5GGbRuNvbscUICjp23R4Gz5tYpZFOWsJPmhNLHeUW\nKQgjvKAERkjKkPDzHD+Wtw6RrB5orjulJRectezRAoGAex32EWPLq6Tjhgd34AER\nkTvO9qHrlU2bB4QFWv3mm7AkbYgTV7DA2GHeBgcsulAl1s1EpGE1Kw2meA6pzfDj\nfsut4RqqTgfqPHm3px44wgb53lfYmtpc01fXbrjb2zm6fs8WEDPZebs9LwTxXyA0\nmzsbbnir9cEdHAcot+BeyiQ=\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "3c:7e:a6:cb:13:2c:f1:48:b7:6a:e5:da:70:37:e7:a2",
            "public_key_fingerprint_sha256": "SHA256:Kc9d3i04WMcTMZwXMlUVrPHUffEs9ycKKIm/Fa/jyFk",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC302mBDQLjx4sjkQCWoms83QW4m3T3zMEi2DbINOz0Z6hZ5liUSPvaErBqzJfzy8JoGAFVeSkT+vmo0FlyC4X4HyEMZGWsPz3157jedQ/Jw2F3j+rrSt46gUG+XO8XszMW+SC528XWJflOJLROjyVVuLDwz2ks0Fr/3LVsnddjc4UafFZQj6kCBQxUxJzI9fRA8C75QEc+DdGgkuh/u9IP/zK2Kn4sOJUBc1TLO3vHOrLKt29vJzrPXiL4CPkPv7BC4d5TtW+uZIvG8aRTwV01aldJ/tVeDVyt/MnMn5D4+6lL0E5uIMqw2VEtzVxyAPcpndWENeWdDSR3nMfHcN83\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9NpgQ0C48eLI5EAlqJr\nPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgBVXkpE/r5qNBZcguF\n+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkgudvF1iX5TiS0To8l\nVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu+UBHPg3RoJLof7vS\nD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHeU7VvrmSLxvGkU8Fd\nNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3VhDXlnQ0kd5zHx3Df\nNwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "client",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": "daniel.gomez",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "b8cf27db8c4ea7d77f106324d9ce51d10809f736",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEA0r0AqeO1mVyixnXXuysLlFDwimy+jF/zVGkChf9f\n8IgfXVJb8NAB484BHUOoUYZk+KAod6ZilPhnWEH3Jr7zOgZlB5pWclqDohpuVxZh\nZvCLjc98u0NIIIXteQ399R67KwIfQkKK3RgPgVWasuLgG8O6KK6c43NpBUFzP6PB\nXWRWUhYPy547optBkhb7C8kDqnsfzhDoHLr3mf5SpJQOu394nRJdbFjQASFCUY4+\n3MvYKiKt2CM7OHa90fUvthAXAx9VmsW11LYX0IkVIWoJi4Bx1d5gwm7DduQOZApN\nTUZD6LFGTNLKDeqtZsfmDbZgCuqqFkZrrBhRJGuLZzvNcwAAA7hezBUGXswVBgAA\nAAdzc2gtcnNhAAABAQDSvQCp47WZXKLGdde7KwuUUPCKbL6MX/NUaQKF/1/wiB9d\nUlvw0AHjzgEdQ6hRhmT4oCh3pmKU+GdYQfcmvvM6BmUHmlZyWoOiGm5XFmFm8IuN\nz3y7Q0gghe15Df31HrsrAh9CQordGA+BVZqy4uAbw7oorpzjc2kFQXM/o8FdZFZS\nFg/Lnjuim0GSFvsLyQOqex/OEOgcuveZ/lKklA67f3idEl1sWNABIUJRjj7cy9gq\nIq3YIzs4dr3R9S+2EBcDH1WaxbXUthfQiRUhagmLgHHV3mDCbsN25A5kCk1NRkPo\nsUZM0soN6q1mx+YNtmAK6qoWRmusGFEka4tnO81zAAAAAwEAAQAAAQEAwiv1jZPL\nQpiRPq1b7hAWZj1BtTnHRI4wJSlwcsi/vF+gDpuRLUxrQVwRuMYbM6rSJCdlwgEj\nukE6754wPJoaf+9ebWfumQT/XoBeBI4RhwjCfRKdyemPbrAYA785rP341QLqjGHF\nkzvVJYUbuhHDDrIEN/HTittO+9G3f/7BbusUpcnfjvAM80teCpIIv4wF+BCLYmGk\nf08AGCtjAEtGjiNAst1mjTGfJC3RJmGMVuZ2W+rYxrbsTPo5PAruqfJhFjNDHx5G\nCIDphSHfg6w9q4yjL5k7YlmP0LDi4IouYzfE+2ia6UNWC7lOC6WdHGI8y75P0RMg\nWJCMvsGiNXUq+QAAAIEAtdK0/23/W9q2opQzRaz7u08qk/lE6sDX6vgdRAgg5Qnb\nI6X6/dzxWsMiH46hFK/fe5KTh0AKd1UmZEYiIP1O6u0M0iUPEW0EjkI+hAgqzKWy\nBdN63t4A7TfMggaBvpN54Mox6z3/B0i2Z3GG1WTMQB8k9Bh7O7Wr5iSdEHvMq+kA\nAACBAPc6nwrhsrIepM3STarMmS4fjn3rIpV3VKI5Ma56EEdr+YkH8SEo7TrLLVyp\nxDgQ7Ti060JNyR+1fk0773xmZpsGzE7AqEYTthchy0twYCTLa6anV2NOy5vZvnlt\ngTFabnVbBiTq2J9DkLDrMPezio9Zu0C0OquxOC+vjCdhV4sVAAAAgQDaNvdWekNC\nuB6V8eet7H0VXg9nDS5rd+ZTUBKZpSPbaqpAdmfwfSk3hPsRoWsk8PhSR/SBdMHm\n9aq72AaYoOYButK451PlYyJgSnAvnDT7ZOkGzfeu/Dl+b97fq0bA3tpvOVwqMEs8\nsprTWgkhaY8V8Z/lHC8cCGMadcp9hM14ZwAAAAAB\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpgIBAAKCAQEA0r0AqeO1mVyixnXXuysLlFDwimy+jF/zVGkChf9f8IgfXVJb\n8NAB484BHUOoUYZk+KAod6ZilPhnWEH3Jr7zOgZlB5pWclqDohpuVxZhZvCLjc98\nu0NIIIXteQ399R67KwIfQkKK3RgPgVWasuLgG8O6KK6c43NpBUFzP6PBXWRWUhYP\ny547optBkhb7C8kDqnsfzhDoHLr3mf5SpJQOu394nRJdbFjQASFCUY4+3MvYKiKt\n2CM7OHa90fUvthAXAx9VmsW11LYX0IkVIWoJi4Bx1d5gwm7DduQOZApNTUZD6LFG\nTNLKDeqtZsfmDbZgCuqqFkZrrBhRJGuLZzvNcwIDAQABAoIBAQDCK/WNk8tCmJE+\nrVvuEBZmPUG1OcdEjjAlKXByyL+8X6AOm5EtTGtBXBG4xhszqtIkJ2XCASO6QTrv\nnjA8mhp/715tZ+6ZBP9egF4EjhGHCMJ9Ep3J6Y9usBgDvzms/fjVAuqMYcWTO9Ul\nhRu6EcMOsgQ38dOK20770bd//sFu6xSlyd+O8AzzS14Kkgi/jAX4EItiYaR/TwAY\nK2MAS0aOI0Cy3WaNMZ8kLdEmYYxW5nZb6tjGtuxM+jk8Cu6p8mEWM0MfHkYIgOmF\nId+DrD2rjKMvmTtiWY/QsOLgii5jN8T7aJrpQ1YLuU4LpZ0cYjzLvk/REyBYkIy+\nwaI1dSr5AoGBAPc6nwrhsrIepM3STarMmS4fjn3rIpV3VKI5Ma56EEdr+YkH8SEo\n7TrLLVypxDgQ7Ti060JNyR+1fk0773xmZpsGzE7AqEYTthchy0twYCTLa6anV2NO\ny5vZvnltgTFabnVbBiTq2J9DkLDrMPezio9Zu0C0OquxOC+vjCdhV4sVAoGBANo2\n91Z6Q0K4HpXx563sfRVeD2cNLmt35lNQEpmlI9tqqkB2Z/B9KTeE+xGhayTw+FJH\n9IF0web1qrvYBpig5gG60rjnU+VjImBKcC+cNPtk6QbN9678OX5v3t+rRsDe2m85\nXCowSzyymtNaCSFpjxXxn+UcLxwIYxp1yn2EzXhnAoGBAIIVCyfbl32XGBnf5NPQ\nsWyOWBgzB1BjqFlvBJAMU9JwoqySTDKpaSE9VJHkFYV2iosCzqJlcUTI5zrWJW1s\nJ+K8EfYB8shkiLPlKSV5bG0Px4W5mQZ8qC9Jw6n6jzaboXEIQtRb6TzrfQ9JwMsk\nYeyJRziFXDWImsqkcHcsBbb9AoGBALM28WvUfekNzhDX2667yv8BgSThbn5UupUx\n7hTBy/EoaSsIE9Uu9erjDFAughCU11y8O9MWUSmeGdqsUL6JZl2FUgsJ8Z0zDciH\nWhu/7sOI3Nj5z7Gm9JEiz6hiwnkkjcFLGqaLgz8WcJGkIFuQljMvfmJsA0TCnqHc\nm7D6oMWBAoGBALXStP9t/1vatqKUM0Ws+7tPKpP5ROrA1+r4HUQIIOUJ2yOl+v3c\n8VrDIh+OoRSv33uSk4dACndVJmRGIiD9TurtDNIlDxFtBI5CPoQIKsylsgXTet7e\nAO03zIIGgb6TeeDKMes9/wdItmdxhtVkzEAfJPQYezu1q+YknRB7zKvp\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDSvQCp47WZXKLG\ndde7KwuUUPCKbL6MX/NUaQKF/1/wiB9dUlvw0AHjzgEdQ6hRhmT4oCh3pmKU+GdY\nQfcmvvM6BmUHmlZyWoOiGm5XFmFm8IuNz3y7Q0gghe15Df31HrsrAh9CQordGA+B\nVZqy4uAbw7oorpzjc2kFQXM/o8FdZFZSFg/Lnjuim0GSFvsLyQOqex/OEOgcuveZ\n/lKklA67f3idEl1sWNABIUJRjj7cy9gqIq3YIzs4dr3R9S+2EBcDH1WaxbXUthfQ\niRUhagmLgHHV3mDCbsN25A5kCk1NRkPosUZM0soN6q1mx+YNtmAK6qoWRmusGFEk\na4tnO81zAgMBAAECggEBAMIr9Y2Ty0KYkT6tW+4QFmY9QbU5x0SOMCUpcHLIv7xf\noA6bkS1Ma0FcEbjGGzOq0iQnZcIBI7pBOu+eMDyaGn/vXm1n7pkE/16AXgSOEYcI\nwn0Sncnpj26wGAO/Oaz9+NUC6oxhxZM71SWFG7oRww6yBDfx04rbTvvRt3/+wW7r\nFKXJ347wDPNLXgqSCL+MBfgQi2JhpH9PABgrYwBLRo4jQLLdZo0xnyQt0SZhjFbm\ndlvq2Ma27Ez6OTwK7qnyYRYzQx8eRgiA6YUh34OsPauMoy+ZO2JZj9Cw4uCKLmM3\nxPtomulDVgu5TgulnRxiPMu+T9ETIFiQjL7BojV1KvkCgYEA9zqfCuGysh6kzdJN\nqsyZLh+OfesilXdUojkxrnoQR2v5iQfxISjtOsstXKnEOBDtOLTrQk3JH7V+TTvv\nfGZmmwbMTsCoRhO2FyHLS3BgJMtrpqdXY07Lm9m+eW2BMVpudVsGJOrYn0OQsOsw\n97OKj1m7QLQ6q7E4L6+MJ2FXixUCgYEA2jb3VnpDQrgelfHnrex9FV4PZw0ua3fm\nU1ASmaUj22qqQHZn8H0pN4T7EaFrJPD4Ukf0gXTB5vWqu9gGmKDmAbrSuOdT5WMi\nYEpwL5w0+2TpBs33rvw5fm/e36tGwN7abzlcKjBLPLKa01oJIWmPFfGf5RwvHAhj\nGnXKfYTNeGcCgYEAghULJ9uXfZcYGd/k09CxbI5YGDMHUGOoWW8EkAxT0nCirJJM\nMqlpIT1UkeQVhXaKiwLOomVxRMjnOtYlbWwn4rwR9gHyyGSIs+UpJXlsbQ/HhbmZ\nBnyoL0nDqfqPNpuhcQhC1FvpPOt9D0nAyyRh7IlHOIVcNYiayqRwdywFtv0CgYEA\nszbxa9R96Q3OENfbrrvK/wGBJOFuflS6lTHuFMHL8ShpKwgT1S716uMMUC6CEJTX\nXLw70xZRKZ4Z2qxQvolmXYVSCwnxnTMNyIdaG7/uw4jc2PnPsab0kSLPqGLCeSSN\nwUsapouDPxZwkaQgW5CWMy9+YmwDRMKeodybsPqgxYECgYEAtdK0/23/W9q2opQz\nRaz7u08qk/lE6sDX6vgdRAgg5QnbI6X6/dzxWsMiH46hFK/fe5KTh0AKd1UmZEYi\nIP1O6u0M0iUPEW0EjkI+hAgqzKWyBdN63t4A7TfMggaBvpN54Mox6z3/B0i2Z3GG\n1WTMQB8k9Bh7O7Wr5iSdEHvMq+k=\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "85:72:0b:7b:bd:7d:56:fd:75:ed:cb:73:4f:51:a5:8f",
            "public_key_fingerprint_sha256": "SHA256:nUarSteNe19fYVAbKYV2B5FtvQrJkNDx4CdhPCTbnCo",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSvQCp47WZXKLGdde7KwuUUPCKbL6MX/NUaQKF/1/wiB9dUlvw0AHjzgEdQ6hRhmT4oCh3pmKU+GdYQfcmvvM6BmUHmlZyWoOiGm5XFmFm8IuNz3y7Q0gghe15Df31HrsrAh9CQordGA+BVZqy4uAbw7oorpzjc2kFQXM/o8FdZFZSFg/Lnjuim0GSFvsLyQOqex/OEOgcuveZ/lKklA67f3idEl1sWNABIUJRjj7cy9gqIq3YIzs4dr3R9S+2EBcDH1WaxbXUthfQiRUhagmLgHHV3mDCbsN25A5kCk1NRkPosUZM0soN6q1mx+YNtmAK6qoWRmusGFEka4tnO81z\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0r0AqeO1mVyixnXXuysL\nlFDwimy+jF/zVGkChf9f8IgfXVJb8NAB484BHUOoUYZk+KAod6ZilPhnWEH3Jr7z\nOgZlB5pWclqDohpuVxZhZvCLjc98u0NIIIXteQ399R67KwIfQkKK3RgPgVWasuLg\nG8O6KK6c43NpBUFzP6PBXWRWUhYPy547optBkhb7C8kDqnsfzhDoHLr3mf5SpJQO\nu394nRJdbFjQASFCUY4+3MvYKiKt2CM7OHa90fUvthAXAx9VmsW11LYX0IkVIWoJ\ni4Bx1d5gwm7DduQOZApNTUZD6LFGTNLKDeqtZsfmDbZgCuqqFkZrrBhRJGuLZzvN\ncwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": "root",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "d01561a5c91933f7593c2568c8abe1cc3c930ec0",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEArRSkuN9xT/gPCBQvv91tgzfrnWh0vzoKlDtzx6wh\nWJOs0M/ITSRoZ9BwhhaVqOFzVroTdz91TjhEpthSByFkav7wBXnas40iq4+UmpOw\nt3Z30rxhmZk3LEMo0Kt8scF1lP81vQaiTvlaPSbL6l0DPwBhyT/IO4Yt2WQvwAbw\ncPOuU0gaLNuhgWMZAPxGBtGtXVJWMsrH+ExKM4p2weX1YoVp7wrQeMBlotLf7m4i\nwDzzKSpmAxDJXnvkbWZKzQBZewdJPZTd19WkALS9MqQWed+Bhm4ELGF2uCni2CL0\nDQMYSwY55dkeL/JoAOuv7pNDU28WegYrk9JcJZsvd8+N9QAAA7jv1nh+79Z4fgAA\nAAdzc2gtcnNhAAABAQCtFKS433FP+A8IFC+/3W2DN+udaHS/OgqUO3PHrCFYk6zQ\nz8hNJGhn0HCGFpWo4XNWuhN3P3VOOESm2FIHIWRq/vAFedqzjSKrj5Sak7C3dnfS\nvGGZmTcsQyjQq3yxwXWU/zW9BqJO+Vo9JsvqXQM/AGHJP8g7hi3ZZC/ABvBw865T\nSBos26GBYxkA/EYG0a1dUlYyysf4TEozinbB5fVihWnvCtB4wGWi0t/ubiLAPPMp\nKmYDEMlee+RtZkrNAFl7B0k9lN3X1aQAtL0ypBZ534GGbgQsYXa4KeLYIvQNAxhL\nBjnl2R4v8mgA66/uk0NTbxZ6BiuT0lwlmy93z431AAAAAwEAAQAAAQAXA2mrkzoz\n0d3dyyFWN5D6I5NWiK8NRiBl+Um5wO9mIayWzyno5/Bh7Vso2RPpMqDtZSx1bKCi\nV+T48kZl4FDD0UYE1GD6AsgbW6n8q6qRmlTwVk/75l1pqzxgEo0v7XM+7ngsvBcU\nvR78ho4SiW+HDvvxkGOFVp/+Cc43kDSkL+p3sV5d4QFYLeJQP1D1IUio/n5zABdv\no2dToLwOPT7uK1nv3oseb+OZmLbmWD2HUygkOLDVUFh7YaYFysz56cGmY5Zfc+55\n8y2yAzCrT6DxIsanzsjvu020C1kwTFpJ7wM1SGeRkwJ+4hZM5zrurMQ0R3SHa0bh\nsViJdPuZHGy5AAAAgBPGbaKZ+wEuQY7zOU5BsvmdM42UQ/tGTZDQgxsnQyImKdq4\nT1RSnmDDLrEnzWLGiXCkO4suyHB+zF0nZjqAkG28bLlcjtB47GYhfsoLh+9Brx0A\nT58O0fmdGE/bBcswHwhiJ/4pQYwmZcRYbupLmo88QixjhNmr34PSlyoBCgqGAAAA\ngQDaig7SvWOIAzTN0mDUsRb6BqbWlFTqbVeBi5IDcDxKUxDRhpcXxLqOt/QUM6Yz\nMbY++0iHZpfS/LbIN28nCwzPq7RTKS+G9IzVh90INjEej3g7YrK0KJK7CSv9nUiV\nrp3+2sfMKZheMNWVxvp5eHis9ZInwARBA2W14+tNhu8UbwAAAIEAyr/E0qaKv4Cr\n10Cn+ynU2mc0iK6pQ5wlo/ZKXZwCeROAV+qzNS2tSwjTnhqUHd6IITCekBzv8wp0\nZZ0O2sL8xp4597G8TOcdGjt5rWRSLNUVUMHcT8PBpatRaQewonVjmNAWGNViLhvE\ntg2YYOLPtNSPaNrMjpUeQxyRPVzPndsAAAAAAQID\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArRSkuN9xT/gPCBQvv91tgzfrnWh0vzoKlDtzx6whWJOs0M/I\nTSRoZ9BwhhaVqOFzVroTdz91TjhEpthSByFkav7wBXnas40iq4+UmpOwt3Z30rxh\nmZk3LEMo0Kt8scF1lP81vQaiTvlaPSbL6l0DPwBhyT/IO4Yt2WQvwAbwcPOuU0ga\nLNuhgWMZAPxGBtGtXVJWMsrH+ExKM4p2weX1YoVp7wrQeMBlotLf7m4iwDzzKSpm\nAxDJXnvkbWZKzQBZewdJPZTd19WkALS9MqQWed+Bhm4ELGF2uCni2CL0DQMYSwY5\n5dkeL/JoAOuv7pNDU28WegYrk9JcJZsvd8+N9QIDAQABAoIBABcDaauTOjPR3d3L\nIVY3kPojk1aIrw1GIGX5SbnA72YhrJbPKejn8GHtWyjZE+kyoO1lLHVsoKJX5Pjy\nRmXgUMPRRgTUYPoCyBtbqfyrqpGaVPBWT/vmXWmrPGASjS/tcz7ueCy8FxS9HvyG\njhKJb4cO+/GQY4VWn/4JzjeQNKQv6nexXl3hAVgt4lA/UPUhSKj+fnMAF2+jZ1Og\nvA49Pu4rWe/eix5v45mYtuZYPYdTKCQ4sNVQWHthpgXKzPnpwaZjll9z7nnzLbID\nMKtPoPEixqfOyO+7TbQLWTBMWknvAzVIZ5GTAn7iFkznOu6sxDRHdIdrRuGxWIl0\n+5kcbLkCgYEA2ooO0r1jiAM0zdJg1LEW+gam1pRU6m1XgYuSA3A8SlMQ0YaXF8S6\njrf0FDOmMzG2PvtIh2aX0vy2yDdvJwsMz6u0UykvhvSM1YfdCDYxHo94O2KytCiS\nuwkr/Z1Ila6d/trHzCmYXjDVlcb6eXh4rPWSJ8AEQQNltePrTYbvFG8CgYEAyr/E\n0qaKv4Cr10Cn+ynU2mc0iK6pQ5wlo/ZKXZwCeROAV+qzNS2tSwjTnhqUHd6IITCe\nkBzv8wp0ZZ0O2sL8xp4597G8TOcdGjt5rWRSLNUVUMHcT8PBpatRaQewonVjmNAW\nGNViLhvEtg2YYOLPtNSPaNrMjpUeQxyRPVzPndsCgYBpAMaoiSkGlAvODRRLfZ89\nmO6W0YSPcuQFsYsBre66A3lkQxfb6sF8i3RyNHLZzDv1vQUXUbsHPDeSsdftWYjZ\nS3YEMxjL7jqw6mvQY0FsnqC1X/HfUFNYHMsPO4BBsznk1zgCp8W3FB27rnRw4uqQ\nqBmGkeM5XamEILPRd1DubwKBgHhfBD7AK63oeZ1RQKnoOvvzvAfOEqYWRW6j4aDT\n58/0WQVZTU4sMS9ULTc3tmpJXO6/i9QpqffUZCiT52bPzv0ooWfCOPY7XFbfqqzb\n28HMPFx2zBL7OLPgE3RU4XSCV0A5gnT58tFHITGovqf+4KwOapopFLsuIwpbIouY\n15ZzAoGAE8Ztopn7AS5BjvM5TkGy+Z0zjZRD+0ZNkNCDGydDIiYp2rhPVFKeYMMu\nsSfNYsaJcKQ7iy7IcH7MXSdmOoCQbbxsuVyO0HjsZiF+yguH70GvHQBPnw7R+Z0Y\nT9sFyzAfCGIn/ilBjCZlxFhu6kuajzxCLGOE2avfg9KXKgEKCoY=\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCtFKS433FP+A8I\nFC+/3W2DN+udaHS/OgqUO3PHrCFYk6zQz8hNJGhn0HCGFpWo4XNWuhN3P3VOOESm\n2FIHIWRq/vAFedqzjSKrj5Sak7C3dnfSvGGZmTcsQyjQq3yxwXWU/zW9BqJO+Vo9\nJsvqXQM/AGHJP8g7hi3ZZC/ABvBw865TSBos26GBYxkA/EYG0a1dUlYyysf4TEoz\ninbB5fVihWnvCtB4wGWi0t/ubiLAPPMpKmYDEMlee+RtZkrNAFl7B0k9lN3X1aQA\ntL0ypBZ534GGbgQsYXa4KeLYIvQNAxhLBjnl2R4v8mgA66/uk0NTbxZ6BiuT0lwl\nmy93z431AgMBAAECggEAFwNpq5M6M9Hd3cshVjeQ+iOTVoivDUYgZflJucDvZiGs\nls8p6OfwYe1bKNkT6TKg7WUsdWygolfk+PJGZeBQw9FGBNRg+gLIG1up/KuqkZpU\n8FZP++Zdaas8YBKNL+1zPu54LLwXFL0e/IaOEolvhw778ZBjhVaf/gnON5A0pC/q\nd7FeXeEBWC3iUD9Q9SFIqP5+cwAXb6NnU6C8Dj0+7itZ796LHm/jmZi25lg9h1Mo\nJDiw1VBYe2GmBcrM+enBpmOWX3PuefMtsgMwq0+g8SLGp87I77tNtAtZMExaSe8D\nNUhnkZMCfuIWTOc67qzENEd0h2tG4bFYiXT7mRxsuQKBgQDaig7SvWOIAzTN0mDU\nsRb6BqbWlFTqbVeBi5IDcDxKUxDRhpcXxLqOt/QUM6YzMbY++0iHZpfS/LbIN28n\nCwzPq7RTKS+G9IzVh90INjEej3g7YrK0KJK7CSv9nUiVrp3+2sfMKZheMNWVxvp5\neHis9ZInwARBA2W14+tNhu8UbwKBgQDKv8TSpoq/gKvXQKf7KdTaZzSIrqlDnCWj\n9kpdnAJ5E4BX6rM1La1LCNOeGpQd3oghMJ6QHO/zCnRlnQ7awvzGnjn3sbxM5x0a\nO3mtZFIs1RVQwdxPw8Glq1FpB7CidWOY0BYY1WIuG8S2DZhg4s+01I9o2syOlR5D\nHJE9XM+d2wKBgGkAxqiJKQaUC84NFEt9nz2Y7pbRhI9y5AWxiwGt7roDeWRDF9vq\nwXyLdHI0ctnMO/W9BRdRuwc8N5Kx1+1ZiNlLdgQzGMvuOrDqa9BjQWyeoLVf8d9Q\nU1gcyw87gEGzOeTXOAKnxbcUHbuudHDi6pCoGYaR4zldqYQgs9F3UO5vAoGAeF8E\nPsArreh5nVFAqeg6+/O8B84SphZFbqPhoNPnz/RZBVlNTiwxL1QtNze2aklc7r+L\n1Cmp99RkKJPnZs/O/SihZ8I49jtcVt+qrNvbwcw8XHbMEvs4s+ATdFThdIJXQDmC\ndPny0UchMai+p/7grA5qmikUuy4jClsii5jXlnMCgYATxm2imfsBLkGO8zlOQbL5\nnTONlEP7Rk2Q0IMbJ0MiJinauE9UUp5gwy6xJ81ixolwpDuLLshwfsxdJ2Y6gJBt\nvGy5XI7QeOxmIX7KC4fvQa8dAE+fDtH5nRhP2wXLMB8IYif+KUGMJmXEWG7qS5qP\nPEIsY4TZq9+D0pcqAQoKhg==\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "cf:d8:ea:71:6f:19:90:74:1a:85:77:9c:2a:75:91:b1",
            "public_key_fingerprint_sha256": "SHA256:v1WvtXOxL4inIVDqhnQgQAFzCJ+nA5uex3KiMhTXYeI",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCtFKS433FP+A8IFC+/3W2DN+udaHS/OgqUO3PHrCFYk6zQz8hNJGhn0HCGFpWo4XNWuhN3P3VOOESm2FIHIWRq/vAFedqzjSKrj5Sak7C3dnfSvGGZmTcsQyjQq3yxwXWU/zW9BqJO+Vo9JsvqXQM/AGHJP8g7hi3ZZC/ABvBw865TSBos26GBYxkA/EYG0a1dUlYyysf4TEozinbB5fVihWnvCtB4wGWi0t/ubiLAPPMpKmYDEMlee+RtZkrNAFl7B0k9lN3X1aQAtL0ypBZ534GGbgQsYXa4KeLYIvQNAxhLBjnl2R4v8mgA66/uk0NTbxZ6BiuT0lwlmy93z431\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArRSkuN9xT/gPCBQvv91t\ngzfrnWh0vzoKlDtzx6whWJOs0M/ITSRoZ9BwhhaVqOFzVroTdz91TjhEpthSByFk\nav7wBXnas40iq4+UmpOwt3Z30rxhmZk3LEMo0Kt8scF1lP81vQaiTvlaPSbL6l0D\nPwBhyT/IO4Yt2WQvwAbwcPOuU0gaLNuhgWMZAPxGBtGtXVJWMsrH+ExKM4p2weX1\nYoVp7wrQeMBlotLf7m4iwDzzKSpmAxDJXnvkbWZKzQBZewdJPZTd19WkALS9MqQW\ned+Bhm4ELGF2uCni2CL0DQMYSwY55dkeL/JoAOuv7pNDU28WegYrk9JcJZsvd8+N\n9QIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": "terraform",
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "00306c56d4a816360f5136207f9c1f7dcb0ffcf4",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEA2SWHfO5R/dJLMXaUPhxE5ZEDF1THNXy+JtHOMuLN\nwFIJEX3+DQQ4UfUQxKTvFpM6cIh2/A5msnS76/p3juMzo36gs0vQjRly9PFtB/KH\ncDAJAtUHowU3pgI+8BWyS3n2USia7ro7asU+vL0uA3bOTx70Tq8ocUqoZr5hPAHD\nAeYNi5ejkldkbUbiVR6eyaYHo/cUJP6Cndalqen3VDapI1cJEVdXVKh5GDjkVRkU\npWZ47cwrXVRBur8r9OGt51LC4evyqTd2C3s+7csBaZuNCbmNCLyGfz5eb8xCE+2m\nUk8rUhxh+n9PRCCzc5hGFJA7y3h1ewhjIj8olHgT4m02jwAAA7jxOlVQ8TpVUAAA\nAAdzc2gtcnNhAAABAQDZJYd87lH90ksxdpQ+HETlkQMXVMc1fL4m0c4y4s3AUgkR\nff4NBDhR9RDEpO8WkzpwiHb8DmaydLvr+neO4zOjfqCzS9CNGXL08W0H8odwMAkC\n1QejBTemAj7wFbJLefZRKJruujtqxT68vS4Dds5PHvROryhxSqhmvmE8AcMB5g2L\nl6OSV2RtRuJVHp7Jpgej9xQk/oKd1qWp6fdUNqkjVwkRV1dUqHkYOORVGRSlZnjt\nzCtdVEG6vyv04a3nUsLh6/KpN3YLez7tywFpm40JuY0IvIZ/Pl5vzEIT7aZSTytS\nHGH6f09EILNzmEYUkDvLeHV7CGMiPyiUeBPibTaPAAAAAwEAAQAAAQEAgaNMLiPB\nw31G8vLOMf6Ci2N1qvosLBybEWX0aqDJIWZYj57eizrXvOZH6n5lVt7y5rgyAO1A\nFo5mms1fj2jJLXSt0B0VFwf4f4+a/kGm5i1nU8+GzaaRwIRaus7ZMQJRMcbCKH/6\ndRXpDJkM3XiSVt4uEMO1q11dCGnkdwS+PWTXSvxMr5E4LyJa6NleyONXAtEezIUk\n7WBFRy0YfmB/5CIRG4NTi2PgPPCmWpkJDehcYahthyXIaa7BdWnBmIptkTIQMwtr\nKhn8e/Hr3uWZp7Uq+1+GCVrxvnKWlYOGPSddtp8bVvAwXK/enCpMo5OBQ5uWnxpG\nToyUvomNbGVdwQAAAIBY7B7+JXUtxWziFr7KHV6WMsxDY5IG33VFeefI9LaTK6y8\nlNgJCf4BbMslnrUEq12bS43+mxzoQZJH6cf45r4QHviPjnOWm7ybN85cnQXZm2Lt\nl0Vvi3v+f/x1XTwhkQKw3KMFX2wi22XFWvldtlsOeBaHVUZmqY0K3yADuF7tdgAA\nAIEA824vMubW/onY5etW7vQF+gbDk6w3s0tpMKk5MC1lYA2Hl24nZzaeDurCfYGd\ngUlBH3yCsgSqxF4it22oUenU5a4wnqqyI3sWJ3zDSUzGrHPtC2hV4L4yjrmi5lSo\nFXgYVAtjBFO5uE2JD7YVUfe+qs7jmTYGFHVYO9ZQiJfxo7EAAACBAORb6LXlNgue\njgvVaPJ3YSmyCHpS4U/+FLeTDd+WJWZrceXHHk3mRbJJ7oJJCaAqNr0a1gkIWFwd\nKbXWx08Si/hRjpddzUszJm6sOm2pU1YJL2fAjL6V3obhGCTFwvukaFAqBXKaCtT4\nw1noxIWaTHNnuTYtrxxhe2b/Tq8y9k4/AAAAAAEC\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA2SWHfO5R/dJLMXaUPhxE5ZEDF1THNXy+JtHOMuLNwFIJEX3+\nDQQ4UfUQxKTvFpM6cIh2/A5msnS76/p3juMzo36gs0vQjRly9PFtB/KHcDAJAtUH\nowU3pgI+8BWyS3n2USia7ro7asU+vL0uA3bOTx70Tq8ocUqoZr5hPAHDAeYNi5ej\nkldkbUbiVR6eyaYHo/cUJP6Cndalqen3VDapI1cJEVdXVKh5GDjkVRkUpWZ47cwr\nXVRBur8r9OGt51LC4evyqTd2C3s+7csBaZuNCbmNCLyGfz5eb8xCE+2mUk8rUhxh\n+n9PRCCzc5hGFJA7y3h1ewhjIj8olHgT4m02jwIDAQABAoIBAQCBo0wuI8HDfUby\n8s4x/oKLY3Wq+iwsHJsRZfRqoMkhZliPnt6LOte85kfqfmVW3vLmuDIA7UAWjmaa\nzV+PaMktdK3QHRUXB/h/j5r+QabmLWdTz4bNppHAhFq6ztkxAlExxsIof/p1FekM\nmQzdeJJW3i4Qw7WrXV0IaeR3BL49ZNdK/EyvkTgvIlro2V7I41cC0R7MhSTtYEVH\nLRh+YH/kIhEbg1OLY+A88KZamQkN6FxhqG2HJchprsF1acGYim2RMhAzC2sqGfx7\n8eve5ZmntSr7X4YJWvG+cpaVg4Y9J122nxtW8DBcr96cKkyjk4FDm5afGkZOjJS+\niY1sZV3BAoGBAPNuLzLm1v6J2OXrVu70BfoGw5OsN7NLaTCpOTAtZWANh5duJ2c2\nng7qwn2BnYFJQR98grIEqsReIrdtqFHp1OWuMJ6qsiN7Fid8w0lMxqxz7QtoVeC+\nMo65ouZUqBV4GFQLYwRTubhNiQ+2FVH3vqrO45k2BhR1WDvWUIiX8aOxAoGBAORb\n6LXlNguejgvVaPJ3YSmyCHpS4U/+FLeTDd+WJWZrceXHHk3mRbJJ7oJJCaAqNr0a\n1gkIWFwdKbXWx08Si/hRjpddzUszJm6sOm2pU1YJL2fAjL6V3obhGCTFwvukaFAq\nBXKaCtT4w1noxIWaTHNnuTYtrxxhe2b/Tq8y9k4/AoGBAIKipM2qN8JNc4qfav29\nEuAEdTxwdUvQslic18XU9sw/Nn67bIXlN5lFvq3fuwjAqSQei3zBKGtNIVBSlruu\nwsOnYQwlCogj69WxDJPvkcbGR3WRvlRnfXY+hP8ae0FaO6QOoEqYK9iOM3ms+3AL\nhdTgRh/YcBbWik1CS+GhuNlhAoGAcXsbEglt6ihI/qh3FscsicPnYqJ9RXtGYFO7\nuTisLVGHsGBbNusQB6Gl3Sjel7Fismb7plF3V49Ggw7QzQKyfBxLd/0tYAlzN9xu\nzMAwobi+zhhp2OwxQWXq0ZtVYig5jlzTiDf02hElQzDhOGONSmxpJftd4gSvhmep\nencg35ECgYBY7B7+JXUtxWziFr7KHV6WMsxDY5IG33VFeefI9LaTK6y8lNgJCf4B\nbMslnrUEq12bS43+mxzoQZJH6cf45r4QHviPjnOWm7ybN85cnQXZm2Ltl0Vvi3v+\nf/x1XTwhkQKw3KMFX2wi22XFWvldtlsOeBaHVUZmqY0K3yADuF7tdg==\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDZJYd87lH90ksx\ndpQ+HETlkQMXVMc1fL4m0c4y4s3AUgkRff4NBDhR9RDEpO8WkzpwiHb8DmaydLvr\n+neO4zOjfqCzS9CNGXL08W0H8odwMAkC1QejBTemAj7wFbJLefZRKJruujtqxT68\nvS4Dds5PHvROryhxSqhmvmE8AcMB5g2Ll6OSV2RtRuJVHp7Jpgej9xQk/oKd1qWp\n6fdUNqkjVwkRV1dUqHkYOORVGRSlZnjtzCtdVEG6vyv04a3nUsLh6/KpN3YLez7t\nywFpm40JuY0IvIZ/Pl5vzEIT7aZSTytSHGH6f09EILNzmEYUkDvLeHV7CGMiPyiU\neBPibTaPAgMBAAECggEBAIGjTC4jwcN9RvLyzjH+gotjdar6LCwcmxFl9GqgySFm\nWI+e3os617zmR+p+ZVbe8ua4MgDtQBaOZprNX49oyS10rdAdFRcH+H+Pmv5BpuYt\nZ1PPhs2mkcCEWrrO2TECUTHGwih/+nUV6QyZDN14klbeLhDDtatdXQhp5HcEvj1k\n10r8TK+ROC8iWujZXsjjVwLRHsyFJO1gRUctGH5gf+QiERuDU4tj4DzwplqZCQ3o\nXGGobYclyGmuwXVpwZiKbZEyEDMLayoZ/Hvx697lmae1Kvtfhgla8b5ylpWDhj0n\nXbafG1bwMFyv3pwqTKOTgUOblp8aRk6MlL6JjWxlXcECgYEA824vMubW/onY5etW\n7vQF+gbDk6w3s0tpMKk5MC1lYA2Hl24nZzaeDurCfYGdgUlBH3yCsgSqxF4it22o\nUenU5a4wnqqyI3sWJ3zDSUzGrHPtC2hV4L4yjrmi5lSoFXgYVAtjBFO5uE2JD7YV\nUfe+qs7jmTYGFHVYO9ZQiJfxo7ECgYEA5FvoteU2C56OC9Vo8ndhKbIIelLhT/4U\nt5MN35YlZmtx5cceTeZFsknugkkJoCo2vRrWCQhYXB0ptdbHTxKL+FGOl13NSzMm\nbqw6balTVgkvZ8CMvpXehuEYJMXC+6RoUCoFcpoK1PjDWejEhZpMc2e5Ni2vHGF7\nZv9OrzL2Tj8CgYEAgqKkzao3wk1zip9q/b0S4AR1PHB1S9CyWJzXxdT2zD82frts\nheU3mUW+rd+7CMCpJB6LfMEoa00hUFKWu67Cw6dhDCUKiCPr1bEMk++RxsZHdZG+\nVGd9dj6E/xp7QVo7pA6gSpgr2I4zeaz7cAuF1OBGH9hwFtaKTUJL4aG42WECgYBx\nexsSCW3qKEj+qHcWxyyJw+dion1Fe0ZgU7u5OKwtUYewYFs26xAHoaXdKN6XsWKy\nZvumUXdXj0aDDtDNArJ8HEt3/S1gCXM33G7MwDChuL7OGGnY7DFBZerRm1ViKDmO\nXNOIN/TaESVDMOE4Y41KbGkl+13iBK+GZ6l6dyDfkQKBgFjsHv4ldS3FbOIWvsod\nXpYyzENjkgbfdUV558j0tpMrrLyU2AkJ/gFsyyWetQSrXZtLjf6bHOhBkkfpx/jm\nvhAe+I+Oc5abvJs3zlydBdmbYu2XRW+Le/5//HVdPCGRArDcowVfbCLbZcVa+V22\nWw54FodVRmapjQrfIAO4Xu12\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "dc:96:c2:72:13:bd:90:5c:ad:e9:40:69:9a:99:53:31",
            "public_key_fingerprint_sha256": "SHA256:0fYu4u+gSIBrXZk27p/CnnJ0BM6GO1/5gt5aWYdCopQ",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDZJYd87lH90ksxdpQ+HETlkQMXVMc1fL4m0c4y4s3AUgkRff4NBDhR9RDEpO8WkzpwiHb8DmaydLvr+neO4zOjfqCzS9CNGXL08W0H8odwMAkC1QejBTemAj7wFbJLefZRKJruujtqxT68vS4Dds5PHvROryhxSqhmvmE8AcMB5g2Ll6OSV2RtRuJVHp7Jpgej9xQk/oKd1qWp6fdUNqkjVwkRV1dUqHkYOORVGRSlZnjtzCtdVEG6vyv04a3nUsLh6/KpN3YLez7tywFpm40JuY0IvIZ/Pl5vzEIT7aZSTytSHGH6f09EILNzmEYUkDvLeHV7CGMiPyiUeBPibTaP\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2SWHfO5R/dJLMXaUPhxE\n5ZEDF1THNXy+JtHOMuLNwFIJEX3+DQQ4UfUQxKTvFpM6cIh2/A5msnS76/p3juMz\no36gs0vQjRly9PFtB/KHcDAJAtUHowU3pgI+8BWyS3n2USia7ro7asU+vL0uA3bO\nTx70Tq8ocUqoZr5hPAHDAeYNi5ejkldkbUbiVR6eyaYHo/cUJP6Cndalqen3VDap\nI1cJEVdXVKh5GDjkVRkUpWZ47cwrXVRBur8r9OGt51LC4evyqTd2C3s+7csBaZuN\nCbmNCLyGfz5eb8xCE+2mUk8rUhxh+n9PRCCzc5hGFJA7y3h1ewhjIj8olHgT4m02\njwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "b265b692e68fe9934fffa83a337e2ad0ac9f3baf",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdz\nc2gtcnNhAAAAAwEAAQAAAQEAxtBBx9iKoqxUKCpwlQyl/MBiDIMGMd+c97HkwLFX\negJ/6uL3lWuItAknAS8/HXpxq7v/NiC3P8ZX13oDqvM8P9HJ94WpgbK5r0ohmXbm\nqfa15G6uKXTsnEDpkhR6LL6ehgj4pt1UKX5J5XnI8uxzSJd70iMlfeR8xCCQGZ+r\nBAB71HZQeV+4ZG4lF8OEG3GXGW4I5/8eXQ+BenLwUe2IVZrtZ+7oROhP0VDAw6e7\ndRhhjXxA+JH8miv9h0zYS59aF3gEf0we8u6SU85LK/trsac0r/FMA86wE9M8qRKF\nWo48M5GJjlZQoq6YAi6MDIsGmKk0uJh/qNMVhO9odwCgDQAAA7i1WUsStVlLEgAA\nAAdzc2gtcnNhAAABAQDG0EHH2IqirFQoKnCVDKX8wGIMgwYx35z3seTAsVd6An/q\n4veVa4i0CScBLz8denGru/82ILc/xlfXegOq8zw/0cn3hamBsrmvSiGZduap9rXk\nbq4pdOycQOmSFHosvp6GCPim3VQpfknlecjy7HNIl3vSIyV95HzEIJAZn6sEAHvU\ndlB5X7hkbiUXw4QbcZcZbgjn/x5dD4F6cvBR7YhVmu1n7uhE6E/RUMDDp7t1GGGN\nfED4kfyaK/2HTNhLn1oXeAR/TB7y7pJTzksr+2uxpzSv8UwDzrAT0zypEoVajjwz\nkYmOVlCirpgCLowMiwaYqTS4mH+o0xWE72h3AKANAAAAAwEAAQAAAQB3B5ZqlN2j\nuTMFfSs8QX9bTL8nKIbb8zoiHfKL32E1HiwBr/N1FRWaXGRq1COgfX9yxzJr8Lhl\nyVUsH9P0VH4841hdBjxO93cuWF63Z7WACsIpyo4hKezDPCXbHMFs6o80RkjAdoB9\n+ys45WoG7sOysWcjj4FR1ytPrQM5JBwaXzSRQGHbQEhS4l2vlisQQULsUoSrZGkK\n1MLNVS97b/6p2a7pm4xOZCJX8DG3zio4CoEB87jF/CbNOL1ExwR11MR6A7q19kWd\nHfr9FrrOP9P7dmJCiN9VSlcDXM4t4Pe41hNr45aao6IYRwBQIIy8xuLkaPg6RCFI\nsdtoujEJjemNAAAAgALl9cjw9TbQHHA6+R58RuurKD1/cQ6fP3ZQgGbhXKgH9OuF\nIAbHlYhvsSu9X6JKdAjTnLzpfhQXooczu2Hh/IFOWOW98P9ZXNObdv6IHUt+hp34\n+ecmH8KAAYwHeDPx6o9zxlkMPTKops0ar4XcOCsCeZ7a9FlqpJR25TZnFBsVAAAA\ngQDOfdns5tKYNib9gJKINLB05Oyd6mV8YLrUeAvZgcmEaZ73D1ktEZpM2RFN79sM\nrb92kKSuw3eN4C7NhCvRwTkr7U8Y/NpnODZMHZhYmQ3Etyo0UPa+vrHvCpzFEfgR\nCWPW6cgXnsAmO7oe0nOAl24D30PBMMEdWt885BY1wZPefwAAAIEA9nsilvl5P5uk\nkxgl67l4/CuVb1zS8n7wRfzWYMAowFyyzHGwH4wCIklgPHWFnkOTIqNmbQNwiYHI\nqZk8OXVc4YelvAvRE0qAefhE97ByhXDdl13ybgRLQ9Bn0IieOzq3XiuXdutJEWGo\nD8h2ZTSqzwrFKtprRSyIia9k4AhP03MAAAAAAQID\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAxtBBx9iKoqxUKCpwlQyl/MBiDIMGMd+c97HkwLFXegJ/6uL3\nlWuItAknAS8/HXpxq7v/NiC3P8ZX13oDqvM8P9HJ94WpgbK5r0ohmXbmqfa15G6u\nKXTsnEDpkhR6LL6ehgj4pt1UKX5J5XnI8uxzSJd70iMlfeR8xCCQGZ+rBAB71HZQ\neV+4ZG4lF8OEG3GXGW4I5/8eXQ+BenLwUe2IVZrtZ+7oROhP0VDAw6e7dRhhjXxA\n+JH8miv9h0zYS59aF3gEf0we8u6SU85LK/trsac0r/FMA86wE9M8qRKFWo48M5GJ\njlZQoq6YAi6MDIsGmKk0uJh/qNMVhO9odwCgDQIDAQABAoIBAHcHlmqU3aO5MwV9\nKzxBf1tMvycohtvzOiId8ovfYTUeLAGv83UVFZpcZGrUI6B9f3LHMmvwuGXJVSwf\n0/RUfjzjWF0GPE73dy5YXrdntYAKwinKjiEp7MM8JdscwWzqjzRGSMB2gH37Kzjl\nagbuw7KxZyOPgVHXK0+tAzkkHBpfNJFAYdtASFLiXa+WKxBBQuxShKtkaQrUws1V\nL3tv/qnZrumbjE5kIlfwMbfOKjgKgQHzuMX8Js04vUTHBHXUxHoDurX2RZ0d+v0W\nus4/0/t2YkKI31VKVwNczi3g97jWE2vjlpqjohhHAFAgjLzG4uRo+DpEIUix22i6\nMQmN6Y0CgYEAzn3Z7ObSmDYm/YCSiDSwdOTsneplfGC61HgL2YHJhGme9w9ZLRGa\nTNkRTe/bDK2/dpCkrsN3jeAuzYQr0cE5K+1PGPzaZzg2TB2YWJkNxLcqNFD2vr6x\n7wqcxRH4EQlj1unIF57AJju6HtJzgJduA99DwTDBHVrfPOQWNcGT3n8CgYEA9nsi\nlvl5P5ukkxgl67l4/CuVb1zS8n7wRfzWYMAowFyyzHGwH4wCIklgPHWFnkOTIqNm\nbQNwiYHIqZk8OXVc4YelvAvRE0qAefhE97ByhXDdl13ybgRLQ9Bn0IieOzq3XiuX\ndutJEWGoD8h2ZTSqzwrFKtprRSyIia9k4AhP03MCgYAWyhsAI2WAuRFKjyMc9zu2\nWwGmWBVFSeO0yV79bW6RN5r8x2vfJn8yFg7r3Bn/5zknW8VhKF+Mf/6KXhj7+GhX\n6cP+DQIJvFF5yxZiSNoVKOX2ii0BVkiLCk/NDDOlpbSoJnsX6ERqs9LRzgZDXfMd\naEmxC7F0jO/wZ3fwDOJF/wKBgAkuMu6eoiZ9XJbh+l+aS+hQk0NPmMfRdI+WyEFY\nRuxLR5mXznCOXXH7e6sk0XJAoBVVMrZyv1lPzTKL85NMTMZVsBWd9w6Z4skoNyFm\noA1aU9aUeDgizs7az1MUE5ivKi9GvmB+iP0tvv2/gLFqUcZeZ1OeSQqNixRdxQsX\nJCoDAoGAAuX1yPD1NtAccDr5HnxG66soPX9xDp8/dlCAZuFcqAf064UgBseViG+x\nK71fokp0CNOcvOl+FBeihzO7YeH8gU5Y5b3w/1lc05t2/ogdS36Gnfj55yYfwoAB\njAd4M/Hqj3PGWQw9MqimzRqvhdw4KwJ5ntr0WWqklHblNmcUGxU=\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDG0EHH2IqirFQo\nKnCVDKX8wGIMgwYx35z3seTAsVd6An/q4veVa4i0CScBLz8denGru/82ILc/xlfX\negOq8zw/0cn3hamBsrmvSiGZduap9rXkbq4pdOycQOmSFHosvp6GCPim3VQpfknl\necjy7HNIl3vSIyV95HzEIJAZn6sEAHvUdlB5X7hkbiUXw4QbcZcZbgjn/x5dD4F6\ncvBR7YhVmu1n7uhE6E/RUMDDp7t1GGGNfED4kfyaK/2HTNhLn1oXeAR/TB7y7pJT\nzksr+2uxpzSv8UwDzrAT0zypEoVajjwzkYmOVlCirpgCLowMiwaYqTS4mH+o0xWE\n72h3AKANAgMBAAECggEAdweWapTdo7kzBX0rPEF/W0y/JyiG2/M6Ih3yi99hNR4s\nAa/zdRUVmlxkatQjoH1/cscya/C4ZclVLB/T9FR+PONYXQY8Tvd3Llhet2e1gArC\nKcqOISnswzwl2xzBbOqPNEZIwHaAffsrOOVqBu7DsrFnI4+BUdcrT60DOSQcGl80\nkUBh20BIUuJdr5YrEEFC7FKEq2RpCtTCzVUve2/+qdmu6ZuMTmQiV/Axt84qOAqB\nAfO4xfwmzTi9RMcEddTEegO6tfZFnR36/Ra6zj/T+3ZiQojfVUpXA1zOLeD3uNYT\na+OWmqOiGEcAUCCMvMbi5Gj4OkQhSLHbaLoxCY3pjQKBgQDOfdns5tKYNib9gJKI\nNLB05Oyd6mV8YLrUeAvZgcmEaZ73D1ktEZpM2RFN79sMrb92kKSuw3eN4C7NhCvR\nwTkr7U8Y/NpnODZMHZhYmQ3Etyo0UPa+vrHvCpzFEfgRCWPW6cgXnsAmO7oe0nOA\nl24D30PBMMEdWt885BY1wZPefwKBgQD2eyKW+Xk/m6STGCXruXj8K5VvXNLyfvBF\n/NZgwCjAXLLMcbAfjAIiSWA8dYWeQ5Mio2ZtA3CJgcipmTw5dVzhh6W8C9ETSoB5\n+ET3sHKFcN2XXfJuBEtD0GfQiJ47OrdeK5d260kRYagPyHZlNKrPCsUq2mtFLIiJ\nr2TgCE/TcwKBgBbKGwAjZYC5EUqPIxz3O7ZbAaZYFUVJ47TJXv1tbpE3mvzHa98m\nfzIWDuvcGf/nOSdbxWEoX4x//opeGPv4aFfpw/4NAgm8UXnLFmJI2hUo5faKLQFW\nSIsKT80MM6WltKgmexfoRGqz0tHOBkNd8x1oSbELsXSM7/Bnd/AM4kX/AoGACS4y\n7p6iJn1cluH6X5pL6FCTQ0+Yx9F0j5bIQVhG7EtHmZfOcI5dcft7qyTRckCgFVUy\ntnK/WU/NMovzk0xMxlWwFZ33DpniySg3IWagDVpT1pR4OCLOztrPUxQTmK8qL0a+\nYH6I/S2+/b+AsWpRxl5nU55JCo2LFF3FCxckKgMCgYAC5fXI8PU20BxwOvkefEbr\nqyg9f3EOnz92UIBm4VyoB/TrhSAGx5WIb7ErvV+iSnQI05y86X4UF6KHM7th4fyB\nTljlvfD/WVzTm3b+iB1Lfoad+PnnJh/CgAGMB3gz8eqPc8ZZDD0yqKbNGq+F3Dgr\nAnme2vRZaqSUduU2ZxQbFQ==\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "92:59:4b:3b:10:bd:35:0e:04:e7:98:90:84:3b:3e:5f",
            "public_key_fingerprint_sha256": "SHA256:qbkplOYENVIowdT4k3wd2WpIkRGtX9/wXgpwhuABAY0",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDG0EHH2IqirFQoKnCVDKX8wGIMgwYx35z3seTAsVd6An/q4veVa4i0CScBLz8denGru/82ILc/xlfXegOq8zw/0cn3hamBsrmvSiGZduap9rXkbq4pdOycQOmSFHosvp6GCPim3VQpfknlecjy7HNIl3vSIyV95HzEIJAZn6sEAHvUdlB5X7hkbiUXw4QbcZcZbgjn/x5dD4F6cvBR7YhVmu1n7uhE6E/RUMDDp7t1GGGNfED4kfyaK/2HTNhLn1oXeAR/TB7y7pJTzksr+2uxpzSv8UwDzrAT0zypEoVajjwzkYmOVlCirpgCLowMiwaYqTS4mH+o0xWE72h3AKAN\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxtBBx9iKoqxUKCpwlQyl\n/MBiDIMGMd+c97HkwLFXegJ/6uL3lWuItAknAS8/HXpxq7v/NiC3P8ZX13oDqvM8\nP9HJ94WpgbK5r0ohmXbmqfa15G6uKXTsnEDpkhR6LL6ehgj4pt1UKX5J5XnI8uxz\nSJd70iMlfeR8xCCQGZ+rBAB71HZQeV+4ZG4lF8OEG3GXGW4I5/8eXQ+BenLwUe2I\nVZrtZ+7oROhP0VDAw6e7dRhhjXxA+JH8miv9h0zYS59aF3gEf0we8u6SU85LK/tr\nsac0r/FMA86wE9M8qRKFWo48M5GJjlZQoq6YAi6MDIsGmKk0uJh/qNMVhO9odwCg\nDQIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_openssh"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem_pkcs8"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpn-client",
      "mode": "managed",
      "type": "tls_self_signed_cert",
      "name": "ca",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "cert_signing",
              "crl_signing"
            ],
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIDFjCCAf6gAwIBAgIQNf8ZC4BvNuRKexR8ewpLNzANBgkqhkiG9w0BAQsFADAl\nMQswCQYDVQQKEwJ3ZzEWMBQGA1UEAxMNd2cuc3RnLnZwbi5jYTAeFw0yNDExMTQw\nMDM1MDFaFw0zNDExMTIwMDM1MDFaMCUxCzAJBgNVBAoTAndnMRYwFAYDVQQDEw13\nZy5zdGcudnBuLmNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt9Np\ngQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZYlEj72hKwasyX88vCaBgB\nVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q60reOoFBvlzvF7MzFvkg\nudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxWUI+pAgUMVMScyPX0QPAu\n+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdvbyc6z14i+Aj5D7+wQuHe\nU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BObiDKsNlRLc1ccgD3KZ3V\nhDXlnQ0kd5zHx3DfNwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/\nBAUwAwEB/zAdBgNVHQ4EFgQU4VR0CA8NpZW7Q1VJ/AD41Vjl2ScwDQYJKoZIhvcN\nAQELBQADggEBAI3lk0PskelWrf6Ewd1QbKlMsGN6GqzXvSHhA8VsdKX+LCBogFxj\n7mAcF7pUC0KmXaZlnPvIAHTpD3xbY1D5Hq/NqiZikbT8ie2VjDAn9ft3pqcsVgoB\nixy3bRrTX3nOq7l21S3kRYe18xvKnG3SPd4jR479nEys17NIfm7AEfkLfy5M0lkW\nz7e3Y0iNbn+oEt/OHOaXqlScI2h/54D3A6QMs6pWzOEvkTnTNnXA7TgB1+biNRKd\nFY48l50fjSI2SNkhy1VQGVL5wIw6YFuqZAzDNBFy5YHqwbpkPb0kYItEqzCPXxkr\nD9zCnaNn8Ajx0YgEdkYv+L/ZgIePHlZ0Fj4=\n-----END CERTIFICATE-----\n",
            "dns_names": null,
            "early_renewal_hours": 0,
            "id": "71773627447025332499969385276673510199",
            "ip_addresses": null,
            "is_ca_certificate": true,
            "key_algorithm": "RSA",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAt9NpgQ0C48eLI5EAlqJrPN0FuJt098zBItg2yDTs9GeoWeZY\nlEj72hKwasyX88vCaBgBVXkpE/r5qNBZcguF+B8hDGRlrD899ee43nUPycNhd4/q\n60reOoFBvlzvF7MzFvkgudvF1iX5TiS0To8lVbiw8M9pLNBa/9y1bJ3XY3OFGnxW\nUI+pAgUMVMScyPX0QPAu+UBHPg3RoJLof7vSD/8ytip+LDiVAXNUyzt7xzqyyrdv\nbyc6z14i+Aj5D7+wQuHeU7VvrmSLxvGkU8FdNWpXSf7VXg1crfzJzJ+Q+PupS9BO\nbiDKsNlRLc1ccgD3KZ3VhDXlnQ0kd5zHx3DfNwIDAQABAoIBAHgH4qcygMWM4Syb\nHQA/E7jNNVQiphC8MQx4k+TMskCwgrwY7ZP9x/3QIEPMThgR32Iq8owGLi1uvqBd\nU1plbdfjM6gs0jrTnLi50vvnAiUjn7v7TFDRNSSMjAoqErCuAVkp2RWjDJ5Vc2F0\nFAwL6jv7+gVz2WA6uIDDc+91bVPw2MoWLdkpwABjA+PiY19ERoudwKQNCO30F73a\nKLp66I8XdIA2ynXtLBsX1CMQTzeHauipvN3PLXfVIoY1mT+7zr5Ca9QohBteVdkQ\nFcQG8WDtKFpcRYW4hU80f5Ki0Jsavd0CFQ+xVEYLwkBQ3KCbmEqhz0uLbkXfSZ3j\nMg8DK4kCgYEAxR4CJVdFchuUKd8PuEUDo9806fJzK3fh2jnmaZcMnoZpWNWjGRPJ\nzFWPxUBV2Gl7ud0aF/96HfX3Mr90yLnXh9gH6jv6H7UEtYHC+9pK2rcWy5T858Yg\nzpJESfIx8poycnz7yHcsWPQIUX9Ug1b7wW8Gaokg8vf0Sldl1UGFjPsCgYEA7rz7\nQ/izNu3jiJIPnMu8cEq73D98PXRXBEsQ71MA9gP+rNah54RX61xzVOYbNTWWzf+x\n+KZM2yVNP4/grPNatbf2SoJk0BwCWDJ4VkPkrt7v5CDN+ob2yN4xrAaQLUaOPzPb\n/qidTna4xMqcsDOsCdwCB1ZzcGuxlTiHHD4KafUCgYEArazN+TaWkn5oIihOQm5U\nUbtldMdQ4DjFPzCKqfgTf00wXrwE8yBzSd0NSp9vw7jU8aM0zXYkk2dXQVhdPko3\n85HND31+2Rb2KjJFqP/huildJUyFNHVmDHvlPT3u8jEYR7WFZlBSO6Hv/lZxETO/\np+P5xD5EUK9Vh3bP24DaeacCgYAYfoM5IhchF580r+eyKqUW0FQd8NWKaJlU8261\nX0rF8vr6OLs7ybRLjZy3pTQ9bVYfpJBZ9pYEFfuq/dQLapxv8IPweRhm0bjb27HF\nCAo6dt0eBs+bWKWRTlrCT5oTSx3lFikII7ygBEZIypDw8xw/lrcOkaweaK47pSUX\nnLXs0QKBgHsd9hFjy6uk44YHd+ABEZE7zvah65VNmweEBVr95puwJG2IE1ewwNhh\n3gYHLLpQJdbNRKRhNSsNpngOqc3w437LreEaqk4H6jx5t6ceOMIG+d5X2JraXNNX\n126429s5un7PFhAz2Xm7PS8E8V8gNJs7G254q/XBHRwHKLfgXsok\n-----END RSA PRIVATE KEY-----\n",
            "ready_for_renewal": false,
            "set_authority_key_id": false,
            "set_subject_key_id": false,
            "subject": [
              {
                "common_name": "wg.stg.vpn.ca",
                "country": null,
                "locality": null,
                "organization": "wg",
                "organizational_unit": null,
                "postal_code": null,
                "province": null,
                "serial_number": null,
                "street_address": null
              }
            ],
            "uris": null,
            "validity_end_time": "2034-11-11T19:35:01.839005-05:00",
            "validity_period_hours": 87600,
            "validity_start_time": "2024-11-13T19:35:01.839005-05:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "dependencies": [
            "aws_subnet.vpn",
            "module.vpc.aws_vpc.this",
            "module.vpn-client.tls_private_key.ca"
          ]
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "module.eks.module.self_managed_node_group.var.platform",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.eks.module.eks_managed_node_group[\"one\"].module.user_data.null_resource.validate_cluster_service_cidr",
          "status": "pass"
        }
      ]
    }
  ]
}
